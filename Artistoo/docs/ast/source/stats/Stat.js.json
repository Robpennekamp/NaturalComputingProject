{"type":"File","start":0,"end":1409,"loc":{"start":{"line":1,"column":0},"end":{"line":42,"column":0}},"program":{"type":"Program","start":0,"end":1409,"loc":{"start":{"line":1,"column":0},"end":{"line":42,"column":0}},"sourceType":"module","body":[{"type":"Identifier","start":173,"end":1385,"loc":{"start":{"line":4,"column":0},"end":{"line":37,"column":1}},"id":{"type":"Identifier","start":179,"end":183,"loc":{"start":{"line":4,"column":6},"end":{"line":4,"column":10},"identifierName":"Stat"},"name":"Stat","leadingComments":null},"superClass":null,"body":{"type":"ClassBody","start":184,"end":1385,"loc":{"start":{"line":4,"column":11},"end":{"line":37,"column":1}},"body":[{"type":"ClassMethod","start":702,"end":897,"loc":{"start":{"line":14,"column":1},"end":{"line":19,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":702,"end":713,"loc":{"start":{"line":14,"column":1},"end":{"line":14,"column":12},"identifierName":"constructor"},"name":"constructor","leadingComments":null},"kind":"constructor","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":715,"end":719,"loc":{"start":{"line":14,"column":14},"end":{"line":14,"column":18},"identifierName":"conf"},"name":"conf"}],"body":{"type":"BlockStatement","start":721,"end":897,"loc":{"start":{"line":14,"column":20},"end":{"line":19,"column":2}},"body":[{"type":"ExpressionStatement","start":872,"end":894,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":24}},"expression":{"type":"AssignmentExpression","start":872,"end":894,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":24}},"operator":"=","left":{"type":"MemberExpression","start":872,"end":881,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":11}},"object":{"type":"ThisExpression","start":872,"end":876,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":877,"end":881,"loc":{"start":{"line":18,"column":7},"end":{"line":18,"column":11},"identifierName":"conf"},"name":"conf"},"computed":false,"leadingComments":null},"right":{"type":"LogicalExpression","start":884,"end":894,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":24}},"left":{"type":"Identifier","start":884,"end":888,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":18},"identifierName":"conf"},"name":"conf"},"operator":"||","right":{"type":"ObjectExpression","start":892,"end":894,"loc":{"start":{"line":18,"column":22},"end":{"line":18,"column":24}},"properties":[]}},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Configuration object for the stat, which should not change its value but\n\t\tmay be used for logging and debugging options.\n\t\t@type {object}","start":725,"end":869,"loc":{"start":{"line":15,"column":2},"end":{"line":17,"column":18}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The constructor of class Stat takes a 'conf' object as argument.\n\tHowever, Stats should not really be configurable in the sense that they should always\n\tprovide an expected output. The 'conf' object is mainly intended\n\tto provide an option to configure logging / debugging output. That\n\tis not implemented yet.\t\n\t@param {object} conf configuration options for the Stat, which should change nothing\n\tabout the return value produced by the compute() method but may be used for logging\n\tand debugging options.","start":188,"end":700,"loc":{"start":{"line":6,"column":1},"end":{"line":13,"column":25}}}],"trailingComments":[{"type":"CommentBlock","value":"* Every stat is linked to a specific model.\n\t@param {GridBasedModel} M the model to compute the stat on.","start":901,"end":1009,"loc":{"start":{"line":21,"column":1},"end":{"line":22,"column":62}}}]},{"type":"ClassMethod","start":1011,"end":1112,"loc":{"start":{"line":23,"column":1},"end":{"line":28,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":1015,"end":1020,"loc":{"start":{"line":23,"column":5},"end":{"line":23,"column":10},"identifierName":"model"},"name":"model"},"kind":"set","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":1022,"end":1023,"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":13},"identifierName":"M"},"name":"M"}],"body":{"type":"BlockStatement","start":1025,"end":1112,"loc":{"start":{"line":23,"column":15},"end":{"line":28,"column":2}},"body":[{"type":"ExpressionStatement","start":1099,"end":1109,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":12}},"expression":{"type":"AssignmentExpression","start":1099,"end":1109,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":12}},"operator":"=","left":{"type":"MemberExpression","start":1099,"end":1105,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":8}},"object":{"type":"ThisExpression","start":1099,"end":1103,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":1104,"end":1105,"loc":{"start":{"line":27,"column":7},"end":{"line":27,"column":8},"identifierName":"M"},"name":"M"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":1108,"end":1109,"loc":{"start":{"line":27,"column":11},"end":{"line":27,"column":12},"identifierName":"M"},"name":"M"},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The model to compute the stat on.\n\t\t@type {GridBasedModel} ","start":1031,"end":1096,"loc":{"start":{"line":25,"column":2},"end":{"line":26,"column":27}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Every stat is linked to a specific model.\n\t@param {GridBasedModel} M the model to compute the stat on.","start":901,"end":1009,"loc":{"start":{"line":21,"column":1},"end":{"line":22,"column":62}}}],"trailingComments":[{"type":"CommentBlock","value":"* The compute method of the base Stat class throws an error, \n\tenforcing that you have to implement this method when you build a new \n\tstat class extending this base class. \n\t@abstract ","start":1116,"end":1305,"loc":{"start":{"line":30,"column":1},"end":{"line":33,"column":13}}}]},{"type":"ClassMethod","start":1307,"end":1383,"loc":{"start":{"line":34,"column":1},"end":{"line":36,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":1307,"end":1314,"loc":{"start":{"line":34,"column":1},"end":{"line":34,"column":8},"identifierName":"compute"},"name":"compute","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1316,"end":1383,"loc":{"start":{"line":34,"column":10},"end":{"line":36,"column":2}},"body":[{"type":"ThrowStatement","start":1320,"end":1380,"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":62}},"argument":{"type":"StringLiteral","start":1326,"end":1379,"loc":{"start":{"line":35,"column":8},"end":{"line":35,"column":61}},"extra":{"rawValue":"compute method not implemented for subclass of Stat","raw":"\"compute method not implemented for subclass of Stat\"","parenthesized":true,"parenStart":1325},"value":"compute method not implemented for subclass of Stat"}}],"directives":[]},"leadingComments":[{"type":"CommentBlock","value":"* The compute method of the base Stat class throws an error, \n\tenforcing that you have to implement this method when you build a new \n\tstat class extending this base class. \n\t@abstract ","start":1116,"end":1305,"loc":{"start":{"line":30,"column":1},"end":{"line":33,"column":13}}}]}]},"leadingComments":[],"name":"_","trailingComments":[]},{"type":"Identifier","start":1387,"end":1406,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":19}},"declaration":{"type":"Identifier","start":1402,"end":1406,"loc":{"start":{"line":39,"column":15},"end":{"line":39,"column":19},"identifierName":"Stat"},"name":"Stat"},"name":"_","leadingComments":[],"trailingComments":[]},{"type":"ExportDefaultDeclaration","start":1387,"end":1406,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":19}},"declaration":{"type":"ClassDeclaration","start":173,"end":1385,"loc":{"start":{"line":4,"column":0},"end":{"line":37,"column":1}},"id":{"type":"Identifier","start":179,"end":183,"loc":{"start":{"line":4,"column":6},"end":{"line":4,"column":10},"identifierName":"Stat"},"name":"Stat","leadingComments":null},"superClass":null,"body":{"type":"ClassBody","start":184,"end":1385,"loc":{"start":{"line":4,"column":11},"end":{"line":37,"column":1}},"body":[{"type":"ClassMethod","start":702,"end":897,"loc":{"start":{"line":14,"column":1},"end":{"line":19,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":702,"end":713,"loc":{"start":{"line":14,"column":1},"end":{"line":14,"column":12},"identifierName":"constructor"},"name":"constructor","leadingComments":null},"kind":"constructor","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":715,"end":719,"loc":{"start":{"line":14,"column":14},"end":{"line":14,"column":18},"identifierName":"conf"},"name":"conf"}],"body":{"type":"BlockStatement","start":721,"end":897,"loc":{"start":{"line":14,"column":20},"end":{"line":19,"column":2}},"body":[{"type":"ExpressionStatement","start":872,"end":894,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":24}},"expression":{"type":"AssignmentExpression","start":872,"end":894,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":24}},"operator":"=","left":{"type":"MemberExpression","start":872,"end":881,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":11}},"object":{"type":"ThisExpression","start":872,"end":876,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":877,"end":881,"loc":{"start":{"line":18,"column":7},"end":{"line":18,"column":11},"identifierName":"conf"},"name":"conf"},"computed":false,"leadingComments":null},"right":{"type":"LogicalExpression","start":884,"end":894,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":24}},"left":{"type":"Identifier","start":884,"end":888,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":18},"identifierName":"conf"},"name":"conf"},"operator":"||","right":{"type":"ObjectExpression","start":892,"end":894,"loc":{"start":{"line":18,"column":22},"end":{"line":18,"column":24}},"properties":[]}},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Configuration object for the stat, which should not change its value but\n\t\tmay be used for logging and debugging options.\n\t\t@type {object}","start":725,"end":869,"loc":{"start":{"line":15,"column":2},"end":{"line":17,"column":18}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The constructor of class Stat takes a 'conf' object as argument.\n\tHowever, Stats should not really be configurable in the sense that they should always\n\tprovide an expected output. The 'conf' object is mainly intended\n\tto provide an option to configure logging / debugging output. That\n\tis not implemented yet.\t\n\t@param {object} conf configuration options for the Stat, which should change nothing\n\tabout the return value produced by the compute() method but may be used for logging\n\tand debugging options.","start":188,"end":700,"loc":{"start":{"line":6,"column":1},"end":{"line":13,"column":25}}}],"trailingComments":[{"type":"CommentBlock","value":"* Every stat is linked to a specific model.\n\t@param {GridBasedModel} M the model to compute the stat on.","start":901,"end":1009,"loc":{"start":{"line":21,"column":1},"end":{"line":22,"column":62}}}]},{"type":"ClassMethod","start":1011,"end":1112,"loc":{"start":{"line":23,"column":1},"end":{"line":28,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":1015,"end":1020,"loc":{"start":{"line":23,"column":5},"end":{"line":23,"column":10},"identifierName":"model"},"name":"model"},"kind":"set","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":1022,"end":1023,"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":13},"identifierName":"M"},"name":"M"}],"body":{"type":"BlockStatement","start":1025,"end":1112,"loc":{"start":{"line":23,"column":15},"end":{"line":28,"column":2}},"body":[{"type":"ExpressionStatement","start":1099,"end":1109,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":12}},"expression":{"type":"AssignmentExpression","start":1099,"end":1109,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":12}},"operator":"=","left":{"type":"MemberExpression","start":1099,"end":1105,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":8}},"object":{"type":"ThisExpression","start":1099,"end":1103,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":1104,"end":1105,"loc":{"start":{"line":27,"column":7},"end":{"line":27,"column":8},"identifierName":"M"},"name":"M"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":1108,"end":1109,"loc":{"start":{"line":27,"column":11},"end":{"line":27,"column":12},"identifierName":"M"},"name":"M"},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The model to compute the stat on.\n\t\t@type {GridBasedModel} ","start":1031,"end":1096,"loc":{"start":{"line":25,"column":2},"end":{"line":26,"column":27}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Every stat is linked to a specific model.\n\t@param {GridBasedModel} M the model to compute the stat on.","start":901,"end":1009,"loc":{"start":{"line":21,"column":1},"end":{"line":22,"column":62}}}],"trailingComments":[{"type":"CommentBlock","value":"* The compute method of the base Stat class throws an error, \n\tenforcing that you have to implement this method when you build a new \n\tstat class extending this base class. \n\t@abstract ","start":1116,"end":1305,"loc":{"start":{"line":30,"column":1},"end":{"line":33,"column":13}}}]},{"type":"ClassMethod","start":1307,"end":1383,"loc":{"start":{"line":34,"column":1},"end":{"line":36,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":1307,"end":1314,"loc":{"start":{"line":34,"column":1},"end":{"line":34,"column":8},"identifierName":"compute"},"name":"compute","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":1316,"end":1383,"loc":{"start":{"line":34,"column":10},"end":{"line":36,"column":2}},"body":[{"type":"ThrowStatement","start":1320,"end":1380,"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":62}},"argument":{"type":"StringLiteral","start":1326,"end":1379,"loc":{"start":{"line":35,"column":8},"end":{"line":35,"column":61}},"extra":{"rawValue":"compute method not implemented for subclass of Stat","raw":"\"compute method not implemented for subclass of Stat\"","parenthesized":true,"parenStart":1325},"value":"compute method not implemented for subclass of Stat"}}],"directives":[]},"leadingComments":[{"type":"CommentBlock","value":"* The compute method of the base Stat class throws an error, \n\tenforcing that you have to implement this method when you build a new \n\tstat class extending this base class. \n\t@abstract ","start":1116,"end":1305,"loc":{"start":{"line":30,"column":1},"end":{"line":33,"column":13}}}]}]},"leadingComments":[{"type":"CommentBlock","value":"* Base class for a statistic that can be computed on a GridBasedModel. \nThis class by itself is not usable; see its subclasses for stats that are \ncurrently supported. ","start":0,"end":172,"loc":{"start":{"line":1,"column":0},"end":{"line":3,"column":23}}}],"__PseudoExport__":false,"trailingComments":[]},"leadingComments":null}],"directives":[]},"comments":[{"type":"CommentBlock","value":"* Base class for a statistic that can be computed on a GridBasedModel. \nThis class by itself is not usable; see its subclasses for stats that are \ncurrently supported. ","start":0,"end":172,"loc":{"start":{"line":1,"column":0},"end":{"line":3,"column":23}}},{"type":"CommentBlock","value":"* The constructor of class Stat takes a 'conf' object as argument.\n\tHowever, Stats should not really be configurable in the sense that they should always\n\tprovide an expected output. The 'conf' object is mainly intended\n\tto provide an option to configure logging / debugging output. That\n\tis not implemented yet.\t\n\t@param {object} conf configuration options for the Stat, which should change nothing\n\tabout the return value produced by the compute() method but may be used for logging\n\tand debugging options.","start":188,"end":700,"loc":{"start":{"line":6,"column":1},"end":{"line":13,"column":25}}},{"type":"CommentBlock","value":"* Configuration object for the stat, which should not change its value but\n\t\tmay be used for logging and debugging options.\n\t\t@type {object}","start":725,"end":869,"loc":{"start":{"line":15,"column":2},"end":{"line":17,"column":18}}},{"type":"CommentBlock","value":"* Every stat is linked to a specific model.\n\t@param {GridBasedModel} M the model to compute the stat on.","start":901,"end":1009,"loc":{"start":{"line":21,"column":1},"end":{"line":22,"column":62}}},{"type":"CommentBlock","value":"* The model to compute the stat on.\n\t\t@type {GridBasedModel} ","start":1031,"end":1096,"loc":{"start":{"line":25,"column":2},"end":{"line":26,"column":27}}},{"type":"CommentBlock","value":"* The compute method of the base Stat class throws an error, \n\tenforcing that you have to implement this method when you build a new \n\tstat class extending this base class. \n\t@abstract ","start":1116,"end":1305,"loc":{"start":{"line":30,"column":1},"end":{"line":33,"column":13}}}],"tokens":[{"type":"CommentBlock","value":"* Base class for a statistic that can be computed on a GridBasedModel. \nThis class by itself is not usable; see its subclasses for stats that are \ncurrently supported. ","start":0,"end":172,"loc":{"start":{"line":1,"column":0},"end":{"line":3,"column":23}}},{"type":{"label":"class","keyword":"class","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"class","start":173,"end":178,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Stat","start":179,"end":183,"loc":{"start":{"line":4,"column":6},"end":{"line":4,"column":10}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":184,"end":185,"loc":{"start":{"line":4,"column":11},"end":{"line":4,"column":12}}},{"type":"CommentBlock","value":"* The constructor of class Stat takes a 'conf' object as argument.\n\tHowever, Stats should not really be configurable in the sense that they should always\n\tprovide an expected output. The 'conf' object is mainly intended\n\tto provide an option to configure logging / debugging output. That\n\tis not implemented yet.\t\n\t@param {object} conf configuration options for the Stat, which should change nothing\n\tabout the return value produced by the compute() method but may be used for logging\n\tand debugging options.","start":188,"end":700,"loc":{"start":{"line":6,"column":1},"end":{"line":13,"column":25}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"constructor","start":702,"end":713,"loc":{"start":{"line":14,"column":1},"end":{"line":14,"column":12}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":713,"end":714,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"conf","start":715,"end":719,"loc":{"start":{"line":14,"column":14},"end":{"line":14,"column":18}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":720,"end":721,"loc":{"start":{"line":14,"column":19},"end":{"line":14,"column":20}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":721,"end":722,"loc":{"start":{"line":14,"column":20},"end":{"line":14,"column":21}}},{"type":"CommentBlock","value":"* Configuration object for the stat, which should not change its value but\n\t\tmay be used for logging and debugging options.\n\t\t@type {object}","start":725,"end":869,"loc":{"start":{"line":15,"column":2},"end":{"line":17,"column":18}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":872,"end":876,"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":876,"end":877,"loc":{"start":{"line":18,"column":6},"end":{"line":18,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"conf","start":877,"end":881,"loc":{"start":{"line":18,"column":7},"end":{"line":18,"column":11}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":882,"end":883,"loc":{"start":{"line":18,"column":12},"end":{"line":18,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"conf","start":884,"end":888,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":18}}},{"type":{"label":"||","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":1,"updateContext":null},"value":"||","start":889,"end":891,"loc":{"start":{"line":18,"column":19},"end":{"line":18,"column":21}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":892,"end":893,"loc":{"start":{"line":18,"column":22},"end":{"line":18,"column":23}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":893,"end":894,"loc":{"start":{"line":18,"column":23},"end":{"line":18,"column":24}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":896,"end":897,"loc":{"start":{"line":19,"column":1},"end":{"line":19,"column":2}}},{"type":"CommentBlock","value":"* Every stat is linked to a specific model.\n\t@param {GridBasedModel} M the model to compute the stat on.","start":901,"end":1009,"loc":{"start":{"line":21,"column":1},"end":{"line":22,"column":62}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"set","start":1011,"end":1014,"loc":{"start":{"line":23,"column":1},"end":{"line":23,"column":4}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"model","start":1015,"end":1020,"loc":{"start":{"line":23,"column":5},"end":{"line":23,"column":10}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1020,"end":1021,"loc":{"start":{"line":23,"column":10},"end":{"line":23,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"M","start":1022,"end":1023,"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":13}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1024,"end":1025,"loc":{"start":{"line":23,"column":14},"end":{"line":23,"column":15}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1025,"end":1026,"loc":{"start":{"line":23,"column":15},"end":{"line":23,"column":16}}},{"type":"CommentBlock","value":"* The model to compute the stat on.\n\t\t@type {GridBasedModel} ","start":1031,"end":1096,"loc":{"start":{"line":25,"column":2},"end":{"line":26,"column":27}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":1099,"end":1103,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1103,"end":1104,"loc":{"start":{"line":27,"column":6},"end":{"line":27,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"M","start":1104,"end":1105,"loc":{"start":{"line":27,"column":7},"end":{"line":27,"column":8}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":1106,"end":1107,"loc":{"start":{"line":27,"column":9},"end":{"line":27,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"M","start":1108,"end":1109,"loc":{"start":{"line":27,"column":11},"end":{"line":27,"column":12}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1111,"end":1112,"loc":{"start":{"line":28,"column":1},"end":{"line":28,"column":2}}},{"type":"CommentBlock","value":"* The compute method of the base Stat class throws an error, \n\tenforcing that you have to implement this method when you build a new \n\tstat class extending this base class. \n\t@abstract ","start":1116,"end":1305,"loc":{"start":{"line":30,"column":1},"end":{"line":33,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"compute","start":1307,"end":1314,"loc":{"start":{"line":34,"column":1},"end":{"line":34,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1314,"end":1315,"loc":{"start":{"line":34,"column":8},"end":{"line":34,"column":9}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1315,"end":1316,"loc":{"start":{"line":34,"column":9},"end":{"line":34,"column":10}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1316,"end":1317,"loc":{"start":{"line":34,"column":10},"end":{"line":34,"column":11}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":1320,"end":1325,"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1325,"end":1326,"loc":{"start":{"line":35,"column":7},"end":{"line":35,"column":8}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"compute method not implemented for subclass of Stat","start":1326,"end":1379,"loc":{"start":{"line":35,"column":8},"end":{"line":35,"column":61}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1379,"end":1380,"loc":{"start":{"line":35,"column":61},"end":{"line":35,"column":62}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1382,"end":1383,"loc":{"start":{"line":36,"column":1},"end":{"line":36,"column":2}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1384,"end":1385,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":1}}},{"type":{"label":"export","keyword":"export","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"export","start":1387,"end":1393,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":6}}},{"type":{"label":"default","keyword":"default","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"default","start":1394,"end":1401,"loc":{"start":{"line":39,"column":7},"end":{"line":39,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Stat","start":1402,"end":1406,"loc":{"start":{"line":39,"column":15},"end":{"line":39,"column":19}}},{"type":{"label":"eof","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1409,"end":1409,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":0}}}]}