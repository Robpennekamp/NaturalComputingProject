{"type":"File","start":0,"end":16365,"loc":{"start":{"line":1,"column":0},"end":{"line":460,"column":31}},"program":{"type":"Program","start":0,"end":16365,"loc":{"start":{"line":1,"column":0},"end":{"line":460,"column":31}},"sourceType":"module","body":[{"type":"Identifier","start":1001,"end":16332,"loc":{"start":{"line":23,"column":0},"end":{"line":458,"column":1}},"id":{"type":"Identifier","start":1007,"end":1023,"loc":{"start":{"line":23,"column":6},"end":{"line":23,"column":22},"identifierName":"ParameterChecker"},"name":"ParameterChecker","leadingComments":null},"superClass":null,"body":{"type":"ClassBody","start":1024,"end":16332,"loc":{"start":{"line":23,"column":23},"end":{"line":458,"column":1}},"body":[{"type":"ClassMethod","start":1256,"end":1514,"loc":{"start":{"line":30,"column":1},"end":{"line":40,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":1256,"end":1267,"loc":{"start":{"line":30,"column":1},"end":{"line":30,"column":12},"identifierName":"constructor"},"name":"constructor","leadingComments":null},"kind":"constructor","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":1269,"end":1273,"loc":{"start":{"line":30,"column":14},"end":{"line":30,"column":18},"identifierName":"conf"},"name":"conf"},{"type":"Identifier","start":1275,"end":1276,"loc":{"start":{"line":30,"column":20},"end":{"line":30,"column":21},"identifierName":"C"},"name":"C"}],"body":{"type":"BlockStatement","start":1278,"end":1514,"loc":{"start":{"line":30,"column":23},"end":{"line":40,"column":2}},"body":[{"type":"ExpressionStatement","start":1358,"end":1374,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":18}},"expression":{"type":"AssignmentExpression","start":1358,"end":1374,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":18}},"operator":"=","left":{"type":"MemberExpression","start":1358,"end":1367,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":11}},"object":{"type":"ThisExpression","start":1358,"end":1362,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":1363,"end":1367,"loc":{"start":{"line":34,"column":7},"end":{"line":34,"column":11},"identifierName":"conf"},"name":"conf"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":1370,"end":1374,"loc":{"start":{"line":34,"column":14},"end":{"line":34,"column":18},"identifierName":"conf"},"name":"conf","leadingComments":null,"trailingComments":null},"leadingComments":null,"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The configuration object to check parameters in \n\t\t@type {object}","start":1284,"end":1355,"loc":{"start":{"line":32,"column":2},"end":{"line":33,"column":18}}}],"trailingComments":[{"type":"CommentBlock","value":"* The attached CPM. This is used to check if parameter array lengths match\n\t\tthe number of cellkinds\n\t\t@type {CPM}","start":1380,"end":1498,"loc":{"start":{"line":36,"column":2},"end":{"line":38,"column":15}}}]},{"type":"ExpressionStatement","start":1501,"end":1511,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":12}},"expression":{"type":"AssignmentExpression","start":1501,"end":1511,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":12}},"operator":"=","left":{"type":"MemberExpression","start":1501,"end":1507,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":8}},"object":{"type":"ThisExpression","start":1501,"end":1505,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":1506,"end":1507,"loc":{"start":{"line":39,"column":7},"end":{"line":39,"column":8},"identifierName":"C"},"name":"C"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":1510,"end":1511,"loc":{"start":{"line":39,"column":11},"end":{"line":39,"column":12},"identifierName":"C"},"name":"C"},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The attached CPM. This is used to check if parameter array lengths match\n\t\tthe number of cellkinds\n\t\t@type {CPM}","start":1380,"end":1498,"loc":{"start":{"line":36,"column":2},"end":{"line":38,"column":15}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The constructor of the ParameterChecker takes a configuration object.\n\t@param {object} conf - configuration settings as supplied to a constraint, containing the\n\trelevant parameters.\n\t@param {CPM} C - the attached CPM.\n\t","start":1028,"end":1254,"loc":{"start":{"line":25,"column":1},"end":{"line":29,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":" ========= CHECKING PARAMETER PRESENCE ======== ","start":1518,"end":1570,"loc":{"start":{"line":42,"column":1},"end":{"line":42,"column":53}}},{"type":"CommentBlock","value":"* Method to check if a parameter of a given name is present in the conf object \n\tsupplied to the constraint, and if it is defined. Throws an error if this is not the case.\n\t@param {string} name - the name of the parameter, which should be present as a key\n\tin the object.\n\t\n\t@example\n\t* let conf = { MY_PARAMETER : \"something\" }\n\t* // This works, because  MY_PARAMETER is present in conf\n\t* let checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t* \n\t* // There will be an error if MY_PARAMETER is absent/undefined:\n\t* conf = {}\n\t* checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t* conf = { MY_PARAMETER : \"undefined\" }\n\t* checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t","start":1573,"end":2388,"loc":{"start":{"line":44,"column":1},"end":{"line":62,"column":3}}}]},{"type":"ClassMethod","start":2390,"end":2632,"loc":{"start":{"line":63,"column":1},"end":{"line":70,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":2390,"end":2409,"loc":{"start":{"line":63,"column":1},"end":{"line":63,"column":20},"identifierName":"confCheckPresenceOf"},"name":"confCheckPresenceOf","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":2411,"end":2415,"loc":{"start":{"line":63,"column":22},"end":{"line":63,"column":26},"identifierName":"name"},"name":"name"}],"body":{"type":"BlockStatement","start":2417,"end":2632,"loc":{"start":{"line":63,"column":28},"end":{"line":70,"column":2}},"body":[{"type":"IfStatement","start":2421,"end":2534,"loc":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"test":{"type":"UnaryExpression","start":2425,"end":2458,"loc":{"start":{"line":64,"column":6},"end":{"line":64,"column":39}},"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":2426,"end":2458,"loc":{"start":{"line":64,"column":7},"end":{"line":64,"column":39}},"callee":{"type":"MemberExpression","start":2426,"end":2450,"loc":{"start":{"line":64,"column":7},"end":{"line":64,"column":31}},"object":{"type":"MemberExpression","start":2426,"end":2435,"loc":{"start":{"line":64,"column":7},"end":{"line":64,"column":16}},"object":{"type":"ThisExpression","start":2426,"end":2430,"loc":{"start":{"line":64,"column":7},"end":{"line":64,"column":11}}},"property":{"type":"Identifier","start":2431,"end":2435,"loc":{"start":{"line":64,"column":12},"end":{"line":64,"column":16},"identifierName":"conf"},"name":"conf"},"computed":false},"property":{"type":"Identifier","start":2436,"end":2450,"loc":{"start":{"line":64,"column":17},"end":{"line":64,"column":31},"identifierName":"hasOwnProperty"},"name":"hasOwnProperty"},"computed":false},"arguments":[{"type":"Identifier","start":2452,"end":2456,"loc":{"start":{"line":64,"column":33},"end":{"line":64,"column":37},"identifierName":"name"},"name":"name"}]},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":2460,"end":2534,"loc":{"start":{"line":64,"column":41},"end":{"line":66,"column":3}},"body":[{"type":"ThrowStatement","start":2465,"end":2530,"loc":{"start":{"line":65,"column":3},"end":{"line":65,"column":68}},"argument":{"type":"BinaryExpression","start":2472,"end":2528,"loc":{"start":{"line":65,"column":10},"end":{"line":65,"column":66}},"left":{"type":"BinaryExpression","start":2472,"end":2503,"loc":{"start":{"line":65,"column":10},"end":{"line":65,"column":41}},"left":{"type":"StringLiteral","start":2472,"end":2496,"loc":{"start":{"line":65,"column":10},"end":{"line":65,"column":34}},"extra":{"rawValue":"Cannot find parameter ","raw":"\"Cannot find parameter \""},"value":"Cannot find parameter "},"operator":"+","right":{"type":"Identifier","start":2499,"end":2503,"loc":{"start":{"line":65,"column":37},"end":{"line":65,"column":41},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":2506,"end":2528,"loc":{"start":{"line":65,"column":44},"end":{"line":65,"column":66}},"extra":{"rawValue":" in the conf object!","raw":"\" in the conf object!\""},"value":" in the conf object!"},"extra":{"parenthesized":true,"parenStart":2470}}}],"directives":[]},"alternate":null},{"type":"IfStatement","start":2537,"end":2629,"loc":{"start":{"line":67,"column":2},"end":{"line":69,"column":3}},"test":{"type":"BinaryExpression","start":2541,"end":2571,"loc":{"start":{"line":67,"column":6},"end":{"line":67,"column":36}},"left":{"type":"MemberExpression","start":2541,"end":2556,"loc":{"start":{"line":67,"column":6},"end":{"line":67,"column":21}},"object":{"type":"MemberExpression","start":2541,"end":2550,"loc":{"start":{"line":67,"column":6},"end":{"line":67,"column":15}},"object":{"type":"ThisExpression","start":2541,"end":2545,"loc":{"start":{"line":67,"column":6},"end":{"line":67,"column":10}}},"property":{"type":"Identifier","start":2546,"end":2550,"loc":{"start":{"line":67,"column":11},"end":{"line":67,"column":15},"identifierName":"conf"},"name":"conf"},"computed":false},"property":{"type":"Identifier","start":2551,"end":2555,"loc":{"start":{"line":67,"column":16},"end":{"line":67,"column":20},"identifierName":"name"},"name":"name"},"computed":true},"operator":"==","right":{"type":"StringLiteral","start":2560,"end":2571,"loc":{"start":{"line":67,"column":25},"end":{"line":67,"column":36}},"extra":{"rawValue":"undefined","raw":"\"undefined\""},"value":"undefined"}},"consequent":{"type":"BlockStatement","start":2573,"end":2629,"loc":{"start":{"line":67,"column":38},"end":{"line":69,"column":3}},"body":[{"type":"ThrowStatement","start":2578,"end":2625,"loc":{"start":{"line":68,"column":3},"end":{"line":68,"column":50}},"argument":{"type":"BinaryExpression","start":2585,"end":2623,"loc":{"start":{"line":68,"column":10},"end":{"line":68,"column":48}},"left":{"type":"BinaryExpression","start":2585,"end":2604,"loc":{"start":{"line":68,"column":10},"end":{"line":68,"column":29}},"left":{"type":"StringLiteral","start":2585,"end":2597,"loc":{"start":{"line":68,"column":10},"end":{"line":68,"column":22}},"extra":{"rawValue":"Parameter ","raw":"\"Parameter \""},"value":"Parameter "},"operator":"+","right":{"type":"Identifier","start":2600,"end":2604,"loc":{"start":{"line":68,"column":25},"end":{"line":68,"column":29},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":2607,"end":2623,"loc":{"start":{"line":68,"column":32},"end":{"line":68,"column":48}},"extra":{"rawValue":" is undefined!","raw":"\" is undefined!\""},"value":" is undefined!"},"extra":{"parenthesized":true,"parenStart":2583}}}],"directives":[]},"alternate":null}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":" ========= CHECKING PARAMETER PRESENCE ======== ","start":1518,"end":1570,"loc":{"start":{"line":42,"column":1},"end":{"line":42,"column":53}}},{"type":"CommentBlock","value":"* Method to check if a parameter of a given name is present in the conf object \n\tsupplied to the constraint, and if it is defined. Throws an error if this is not the case.\n\t@param {string} name - the name of the parameter, which should be present as a key\n\tin the object.\n\t\n\t@example\n\t* let conf = { MY_PARAMETER : \"something\" }\n\t* // This works, because  MY_PARAMETER is present in conf\n\t* let checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t* \n\t* // There will be an error if MY_PARAMETER is absent/undefined:\n\t* conf = {}\n\t* checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t* conf = { MY_PARAMETER : \"undefined\" }\n\t* checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t","start":1573,"end":2388,"loc":{"start":{"line":44,"column":1},"end":{"line":62,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":" ========= CHECKING PARAMETER STRUCTURE ======== ","start":2636,"end":2689,"loc":{"start":{"line":72,"column":1},"end":{"line":72,"column":54}}},{"type":"CommentBlock","value":"* Helper function. Some parameters need to be specified for each {@link CellKind}, \n\tso to check those we first need to know the number of cellkinds on the CPM.\n\tThis number is retrieved from the CPM or added to it if it isn't there yet.\n\t@param {number} n_default - a number of cellkinds (including background), which is used\n\tto set the number of cellkinds in the CPM if it isn't there yet.\n\t@return {number} the number of non-background cellkinds as cached in the CPM.\n\t@private\n\t","start":2693,"end":3180,"loc":{"start":{"line":74,"column":1},"end":{"line":81,"column":3}}}]},{"type":"ClassMethod","start":3182,"end":3407,"loc":{"start":{"line":82,"column":1},"end":{"line":90,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":3182,"end":3200,"loc":{"start":{"line":82,"column":1},"end":{"line":82,"column":19},"identifierName":"confCheckCellKinds"},"name":"confCheckCellKinds","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":3202,"end":3211,"loc":{"start":{"line":82,"column":21},"end":{"line":82,"column":30},"identifierName":"n_default"},"name":"n_default"}],"body":{"type":"BlockStatement","start":3213,"end":3407,"loc":{"start":{"line":82,"column":32},"end":{"line":90,"column":2}},"body":[{"type":"IfStatement","start":3217,"end":3295,"loc":{"start":{"line":83,"column":2},"end":{"line":85,"column":3}},"test":{"type":"UnaryExpression","start":3221,"end":3228,"loc":{"start":{"line":83,"column":6},"end":{"line":83,"column":13}},"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":3222,"end":3228,"loc":{"start":{"line":83,"column":7},"end":{"line":83,"column":13}},"object":{"type":"ThisExpression","start":3222,"end":3226,"loc":{"start":{"line":83,"column":7},"end":{"line":83,"column":11}}},"property":{"type":"Identifier","start":3227,"end":3228,"loc":{"start":{"line":83,"column":12},"end":{"line":83,"column":13},"identifierName":"C"},"name":"C"},"computed":false},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":3230,"end":3295,"loc":{"start":{"line":83,"column":15},"end":{"line":85,"column":3}},"body":[{"type":"ThrowStatement","start":3235,"end":3291,"loc":{"start":{"line":84,"column":3},"end":{"line":84,"column":59}},"argument":{"type":"StringLiteral","start":3241,"end":3290,"loc":{"start":{"line":84,"column":9},"end":{"line":84,"column":58}},"extra":{"rawValue":"confCheck method called before addition to CPM!","raw":"\"confCheck method called before addition to CPM!\"","parenthesized":true,"parenStart":3240},"value":"confCheck method called before addition to CPM!"}}],"directives":[]},"alternate":null},{"type":"IfStatement","start":3298,"end":3375,"loc":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"test":{"type":"UnaryExpression","start":3302,"end":3329,"loc":{"start":{"line":86,"column":6},"end":{"line":86,"column":33}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":3304,"end":3328,"loc":{"start":{"line":86,"column":8},"end":{"line":86,"column":32}},"left":{"type":"StringLiteral","start":3304,"end":3318,"loc":{"start":{"line":86,"column":8},"end":{"line":86,"column":22}},"extra":{"rawValue":"n_cell_kinds","raw":"\"n_cell_kinds\""},"value":"n_cell_kinds"},"operator":"in","right":{"type":"MemberExpression","start":3322,"end":3328,"loc":{"start":{"line":86,"column":26},"end":{"line":86,"column":32}},"object":{"type":"ThisExpression","start":3322,"end":3326,"loc":{"start":{"line":86,"column":26},"end":{"line":86,"column":30}}},"property":{"type":"Identifier","start":3327,"end":3328,"loc":{"start":{"line":86,"column":31},"end":{"line":86,"column":32},"identifierName":"C"},"name":"C"},"computed":false},"extra":{"parenthesized":true,"parenStart":3303}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":3331,"end":3375,"loc":{"start":{"line":86,"column":35},"end":{"line":88,"column":3}},"body":[{"type":"ExpressionStatement","start":3336,"end":3371,"loc":{"start":{"line":87,"column":3},"end":{"line":87,"column":38}},"expression":{"type":"AssignmentExpression","start":3336,"end":3371,"loc":{"start":{"line":87,"column":3},"end":{"line":87,"column":38}},"operator":"=","left":{"type":"MemberExpression","start":3336,"end":3355,"loc":{"start":{"line":87,"column":3},"end":{"line":87,"column":22}},"object":{"type":"MemberExpression","start":3336,"end":3342,"loc":{"start":{"line":87,"column":3},"end":{"line":87,"column":9}},"object":{"type":"ThisExpression","start":3336,"end":3340,"loc":{"start":{"line":87,"column":3},"end":{"line":87,"column":7}}},"property":{"type":"Identifier","start":3341,"end":3342,"loc":{"start":{"line":87,"column":8},"end":{"line":87,"column":9},"identifierName":"C"},"name":"C"},"computed":false},"property":{"type":"Identifier","start":3343,"end":3355,"loc":{"start":{"line":87,"column":10},"end":{"line":87,"column":22},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds"},"computed":false},"right":{"type":"BinaryExpression","start":3358,"end":3371,"loc":{"start":{"line":87,"column":25},"end":{"line":87,"column":38}},"left":{"type":"Identifier","start":3358,"end":3367,"loc":{"start":{"line":87,"column":25},"end":{"line":87,"column":34},"identifierName":"n_default"},"name":"n_default"},"operator":"-","right":{"type":"NumericLiteral","start":3370,"end":3371,"loc":{"start":{"line":87,"column":37},"end":{"line":87,"column":38}},"extra":{"rawValue":1,"raw":"1"},"value":1}}}}],"directives":[]},"alternate":null},{"type":"ReturnStatement","start":3378,"end":3404,"loc":{"start":{"line":89,"column":2},"end":{"line":89,"column":28}},"argument":{"type":"MemberExpression","start":3385,"end":3404,"loc":{"start":{"line":89,"column":9},"end":{"line":89,"column":28}},"object":{"type":"MemberExpression","start":3385,"end":3391,"loc":{"start":{"line":89,"column":9},"end":{"line":89,"column":15}},"object":{"type":"ThisExpression","start":3385,"end":3389,"loc":{"start":{"line":89,"column":9},"end":{"line":89,"column":13}}},"property":{"type":"Identifier","start":3390,"end":3391,"loc":{"start":{"line":89,"column":14},"end":{"line":89,"column":15},"identifierName":"C"},"name":"C"},"computed":false},"property":{"type":"Identifier","start":3392,"end":3404,"loc":{"start":{"line":89,"column":16},"end":{"line":89,"column":28},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds"},"computed":false}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":" ========= CHECKING PARAMETER STRUCTURE ======== ","start":2636,"end":2689,"loc":{"start":{"line":72,"column":1},"end":{"line":72,"column":54}}},{"type":"CommentBlock","value":"* Helper function. Some parameters need to be specified for each {@link CellKind}, \n\tso to check those we first need to know the number of cellkinds on the CPM.\n\tThis number is retrieved from the CPM or added to it if it isn't there yet.\n\t@param {number} n_default - a number of cellkinds (including background), which is used\n\tto set the number of cellkinds in the CPM if it isn't there yet.\n\t@return {number} the number of non-background cellkinds as cached in the CPM.\n\t@private\n\t","start":2693,"end":3180,"loc":{"start":{"line":74,"column":1},"end":{"line":81,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Parameter structure for parameters that should come as a single value.\n\tThis value can be of type string, boolean, or number.\n\t@example\n\t* let ACT_MEAN = \"arithmetic\" // Is a SingleValue parameter\n\t@typedef {number|string|boolean} SingleValue\n\t","start":3411,"end":3661,"loc":{"start":{"line":92,"column":1},"end":{"line":97,"column":3}}},{"type":"CommentBlock","value":"* Check if a parameter consists of a single value (rather than an object or array),\n\twhich can be a string, number, or boolean. \n\t@param {SingleValue} p - the parameter to check, which must be a single\n\tstring/number/boolean value.\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a single value.\n\t\n\t@example\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = true, p2 = 1, p3 = \"hi\", p4 = [1,2]\n\t* // Nothing happens for parameters of type SingleValue:\n\t* checker.confCheckStructureSingle( p1, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p2, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" )\n\t*\n\t* // This will throw an error because p4 is an array.\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" )\n\t","start":3665,"end":4486,"loc":{"start":{"line":99,"column":1},"end":{"line":116,"column":3}}}]},{"type":"ClassMethod","start":4488,"end":4805,"loc":{"start":{"line":117,"column":1},"end":{"line":128,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":4488,"end":4512,"loc":{"start":{"line":117,"column":1},"end":{"line":117,"column":25},"identifierName":"confCheckStructureSingle"},"name":"confCheckStructureSingle","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":4514,"end":4515,"loc":{"start":{"line":117,"column":27},"end":{"line":117,"column":28},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":4517,"end":4521,"loc":{"start":{"line":117,"column":30},"end":{"line":117,"column":34},"identifierName":"name"},"name":"name"}],"body":{"type":"BlockStatement","start":4523,"end":4805,"loc":{"start":{"line":117,"column":36},"end":{"line":128,"column":2}},"body":[{"type":"VariableDeclaration","start":4627,"end":4646,"loc":{"start":{"line":121,"column":2},"end":{"line":121,"column":21}},"declarations":[{"type":"VariableDeclarator","start":4631,"end":4646,"loc":{"start":{"line":121,"column":6},"end":{"line":121,"column":21}},"id":{"type":"Identifier","start":4631,"end":4635,"loc":{"start":{"line":121,"column":6},"end":{"line":121,"column":10},"identifierName":"type"},"name":"type","leadingComments":null},"init":{"type":"UnaryExpression","start":4638,"end":4646,"loc":{"start":{"line":121,"column":13},"end":{"line":121,"column":21}},"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":4645,"end":4646,"loc":{"start":{"line":121,"column":20},"end":{"line":121,"column":21},"identifierName":"p"},"name":"p"},"extra":{"parenthesizedArgument":false}},"leadingComments":null}],"kind":"let","leadingComments":[{"type":"CommentLine","value":" single values are of type string, number, or boolean. If that is the case,","start":4529,"end":4606,"loc":{"start":{"line":119,"column":2},"end":{"line":119,"column":79}}},{"type":"CommentLine","value":" just return.","start":4609,"end":4624,"loc":{"start":{"line":120,"column":2},"end":{"line":120,"column":17}}}]},{"type":"IfStatement","start":4649,"end":4801,"loc":{"start":{"line":122,"column":2},"end":{"line":126,"column":3}},"test":{"type":"LogicalExpression","start":4653,"end":4710,"loc":{"start":{"line":122,"column":6},"end":{"line":122,"column":63}},"left":{"type":"LogicalExpression","start":4653,"end":4689,"loc":{"start":{"line":122,"column":6},"end":{"line":122,"column":42}},"left":{"type":"BinaryExpression","start":4653,"end":4669,"loc":{"start":{"line":122,"column":6},"end":{"line":122,"column":22}},"left":{"type":"Identifier","start":4653,"end":4657,"loc":{"start":{"line":122,"column":6},"end":{"line":122,"column":10},"identifierName":"type"},"name":"type"},"operator":"==","right":{"type":"StringLiteral","start":4661,"end":4669,"loc":{"start":{"line":122,"column":14},"end":{"line":122,"column":22}},"extra":{"rawValue":"string","raw":"\"string\""},"value":"string"}},"operator":"||","right":{"type":"BinaryExpression","start":4673,"end":4689,"loc":{"start":{"line":122,"column":26},"end":{"line":122,"column":42}},"left":{"type":"Identifier","start":4673,"end":4677,"loc":{"start":{"line":122,"column":26},"end":{"line":122,"column":30},"identifierName":"type"},"name":"type"},"operator":"==","right":{"type":"StringLiteral","start":4681,"end":4689,"loc":{"start":{"line":122,"column":34},"end":{"line":122,"column":42}},"extra":{"rawValue":"number","raw":"\"number\""},"value":"number"}}},"operator":"||","right":{"type":"BinaryExpression","start":4693,"end":4710,"loc":{"start":{"line":122,"column":46},"end":{"line":122,"column":63}},"left":{"type":"Identifier","start":4693,"end":4697,"loc":{"start":{"line":122,"column":46},"end":{"line":122,"column":50},"identifierName":"type"},"name":"type"},"operator":"==","right":{"type":"StringLiteral","start":4701,"end":4710,"loc":{"start":{"line":122,"column":54},"end":{"line":122,"column":63}},"extra":{"rawValue":"boolean","raw":"\"boolean\""},"value":"boolean"}}},"consequent":{"type":"BlockStatement","start":4712,"end":4727,"loc":{"start":{"line":122,"column":65},"end":{"line":124,"column":3}},"body":[{"type":"ReturnStatement","start":4717,"end":4723,"loc":{"start":{"line":123,"column":3},"end":{"line":123,"column":9}},"argument":null}],"directives":[]},"alternate":{"type":"BlockStatement","start":4733,"end":4801,"loc":{"start":{"line":124,"column":9},"end":{"line":126,"column":3}},"body":[{"type":"ThrowStatement","start":4738,"end":4797,"loc":{"start":{"line":125,"column":3},"end":{"line":125,"column":62}},"argument":{"type":"BinaryExpression","start":4745,"end":4795,"loc":{"start":{"line":125,"column":10},"end":{"line":125,"column":60}},"left":{"type":"BinaryExpression","start":4745,"end":4764,"loc":{"start":{"line":125,"column":10},"end":{"line":125,"column":29}},"left":{"type":"StringLiteral","start":4745,"end":4757,"loc":{"start":{"line":125,"column":10},"end":{"line":125,"column":22}},"extra":{"rawValue":"Parameter ","raw":"\"Parameter \""},"value":"Parameter "},"operator":"+","right":{"type":"Identifier","start":4760,"end":4764,"loc":{"start":{"line":125,"column":25},"end":{"line":125,"column":29},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":4767,"end":4795,"loc":{"start":{"line":125,"column":32},"end":{"line":125,"column":60}},"extra":{"rawValue":" should be a single value!","raw":"\" should be a single value!\""},"value":" should be a single value!"},"extra":{"parenthesized":true,"parenStart":4743}}}],"directives":[]}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Parameter structure for parameters that should come as a single value.\n\tThis value can be of type string, boolean, or number.\n\t@example\n\t* let ACT_MEAN = \"arithmetic\" // Is a SingleValue parameter\n\t@typedef {number|string|boolean} SingleValue\n\t","start":3411,"end":3661,"loc":{"start":{"line":92,"column":1},"end":{"line":97,"column":3}}},{"type":"CommentBlock","value":"* Check if a parameter consists of a single value (rather than an object or array),\n\twhich can be a string, number, or boolean. \n\t@param {SingleValue} p - the parameter to check, which must be a single\n\tstring/number/boolean value.\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a single value.\n\t\n\t@example\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = true, p2 = 1, p3 = \"hi\", p4 = [1,2]\n\t* // Nothing happens for parameters of type SingleValue:\n\t* checker.confCheckStructureSingle( p1, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p2, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" )\n\t*\n\t* // This will throw an error because p4 is an array.\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" )\n\t","start":3665,"end":4486,"loc":{"start":{"line":99,"column":1},"end":{"line":116,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Parameter structure for parameters that should come in an array with an element\n\tfor each {@link CellKind} including background.\n\t@example\n\t* let V = [0,5] // Is a KindArray parameter\n\t@typedef {Array} KindArray\n\t","start":4809,"end":5028,"loc":{"start":{"line":130,"column":1},"end":{"line":135,"column":3}}},{"type":"CommentBlock","value":"* Check if a parameter has a {@link KindArray} structure.\n\t@param {KindArray} p - the parameter to check\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a {@link KindArray}.\n\t\n\t@example\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = [1,1], p2 = [\"hi\",\"hi\"], p3 = \"hi\", p4 = [1,2,3]\n\t* // Nothing happens when parameters are indeed arrays of length 2\n\t* // (regardless of what type of array)\n\t* checker.confCheckStructureKindArray( p1, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureKindArray( p2, \"MY_PARAMETER\" )\n\t*\n\t* // You'll get an error when p is no array, or when \n\t* // its length doesn't match the number of cellkinds:\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" )\n\t","start":5032,"end":5918,"loc":{"start":{"line":137,"column":1},"end":{"line":155,"column":3}}}]},{"type":"ClassMethod","start":5920,"end":6361,"loc":{"start":{"line":156,"column":1},"end":{"line":167,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":5920,"end":5947,"loc":{"start":{"line":156,"column":1},"end":{"line":156,"column":28},"identifierName":"confCheckStructureKindArray"},"name":"confCheckStructureKindArray","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":5949,"end":5950,"loc":{"start":{"line":156,"column":30},"end":{"line":156,"column":31},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":5952,"end":5956,"loc":{"start":{"line":156,"column":33},"end":{"line":156,"column":37},"identifierName":"name"},"name":"name"}],"body":{"type":"BlockStatement","start":5958,"end":6361,"loc":{"start":{"line":156,"column":39},"end":{"line":167,"column":2}},"body":[{"type":"IfStatement","start":5962,"end":6051,"loc":{"start":{"line":157,"column":2},"end":{"line":159,"column":3}},"test":{"type":"UnaryExpression","start":5966,"end":5987,"loc":{"start":{"line":157,"column":6},"end":{"line":157,"column":27}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":5968,"end":5986,"loc":{"start":{"line":157,"column":8},"end":{"line":157,"column":26}},"left":{"type":"Identifier","start":5968,"end":5969,"loc":{"start":{"line":157,"column":8},"end":{"line":157,"column":9},"identifierName":"p"},"name":"p"},"operator":"instanceof","right":{"type":"Identifier","start":5981,"end":5986,"loc":{"start":{"line":157,"column":21},"end":{"line":157,"column":26},"identifierName":"Array"},"name":"Array"},"extra":{"parenthesized":true,"parenStart":5967}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":5989,"end":6051,"loc":{"start":{"line":157,"column":29},"end":{"line":159,"column":3}},"body":[{"type":"ThrowStatement","start":5994,"end":6047,"loc":{"start":{"line":158,"column":3},"end":{"line":158,"column":56}},"argument":{"type":"BinaryExpression","start":6001,"end":6045,"loc":{"start":{"line":158,"column":10},"end":{"line":158,"column":54}},"left":{"type":"BinaryExpression","start":6001,"end":6020,"loc":{"start":{"line":158,"column":10},"end":{"line":158,"column":29}},"left":{"type":"StringLiteral","start":6001,"end":6013,"loc":{"start":{"line":158,"column":10},"end":{"line":158,"column":22}},"extra":{"rawValue":"Parameter ","raw":"\"Parameter \""},"value":"Parameter "},"operator":"+","right":{"type":"Identifier","start":6016,"end":6020,"loc":{"start":{"line":158,"column":25},"end":{"line":158,"column":29},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":6023,"end":6045,"loc":{"start":{"line":158,"column":32},"end":{"line":158,"column":54}},"extra":{"rawValue":" should be an array!","raw":"\" should be an array!\""},"value":" should be an array!"},"extra":{"parenthesized":true,"parenStart":5999}}}],"directives":[],"trailingComments":null},"alternate":null,"trailingComments":[{"type":"CommentLine","value":" Check if the array has an element for each cellkind incl. background","start":6058,"end":6129,"loc":{"start":{"line":161,"column":2},"end":{"line":161,"column":73}}}]},{"type":"VariableDeclaration","start":6132,"end":6186,"loc":{"start":{"line":162,"column":2},"end":{"line":162,"column":56}},"declarations":[{"type":"VariableDeclarator","start":6136,"end":6186,"loc":{"start":{"line":162,"column":6},"end":{"line":162,"column":56}},"id":{"type":"Identifier","start":6136,"end":6148,"loc":{"start":{"line":162,"column":6},"end":{"line":162,"column":18},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds","leadingComments":null},"init":{"type":"CallExpression","start":6151,"end":6186,"loc":{"start":{"line":162,"column":21},"end":{"line":162,"column":56}},"callee":{"type":"MemberExpression","start":6151,"end":6174,"loc":{"start":{"line":162,"column":21},"end":{"line":162,"column":44}},"object":{"type":"ThisExpression","start":6151,"end":6155,"loc":{"start":{"line":162,"column":21},"end":{"line":162,"column":25}}},"property":{"type":"Identifier","start":6156,"end":6174,"loc":{"start":{"line":162,"column":26},"end":{"line":162,"column":44},"identifierName":"confCheckCellKinds"},"name":"confCheckCellKinds"},"computed":false},"arguments":[{"type":"MemberExpression","start":6176,"end":6184,"loc":{"start":{"line":162,"column":46},"end":{"line":162,"column":54}},"object":{"type":"Identifier","start":6176,"end":6177,"loc":{"start":{"line":162,"column":46},"end":{"line":162,"column":47},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":6178,"end":6184,"loc":{"start":{"line":162,"column":48},"end":{"line":162,"column":54},"identifierName":"length"},"name":"length"},"computed":false}]},"leadingComments":null}],"kind":"let","leadingComments":[{"type":"CommentLine","value":" Check if the array has an element for each cellkind incl. background","start":6058,"end":6129,"loc":{"start":{"line":161,"column":2},"end":{"line":161,"column":73}}}]},{"type":"IfStatement","start":6189,"end":6358,"loc":{"start":{"line":163,"column":2},"end":{"line":166,"column":3}},"test":{"type":"BinaryExpression","start":6193,"end":6235,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":48}},"left":{"type":"MemberExpression","start":6193,"end":6215,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":28}},"object":{"type":"MemberExpression","start":6193,"end":6208,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":21}},"object":{"type":"MemberExpression","start":6193,"end":6202,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":15}},"object":{"type":"ThisExpression","start":6193,"end":6197,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":10}}},"property":{"type":"Identifier","start":6198,"end":6202,"loc":{"start":{"line":163,"column":11},"end":{"line":163,"column":15},"identifierName":"conf"},"name":"conf"},"computed":false},"property":{"type":"Identifier","start":6203,"end":6207,"loc":{"start":{"line":163,"column":16},"end":{"line":163,"column":20},"identifierName":"name"},"name":"name"},"computed":true},"property":{"type":"Identifier","start":6209,"end":6215,"loc":{"start":{"line":163,"column":22},"end":{"line":163,"column":28},"identifierName":"length"},"name":"length"},"computed":false},"operator":"!=","right":{"type":"BinaryExpression","start":6219,"end":6235,"loc":{"start":{"line":163,"column":32},"end":{"line":163,"column":48}},"left":{"type":"Identifier","start":6219,"end":6231,"loc":{"start":{"line":163,"column":32},"end":{"line":163,"column":44},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds"},"operator":"+","right":{"type":"NumericLiteral","start":6234,"end":6235,"loc":{"start":{"line":163,"column":47},"end":{"line":163,"column":48}},"extra":{"rawValue":1,"raw":"1"},"value":1}}},"consequent":{"type":"BlockStatement","start":6237,"end":6358,"loc":{"start":{"line":163,"column":50},"end":{"line":166,"column":3}},"body":[{"type":"ThrowStatement","start":6242,"end":6354,"loc":{"start":{"line":164,"column":3},"end":{"line":165,"column":82}},"argument":{"type":"BinaryExpression","start":6249,"end":6352,"loc":{"start":{"line":164,"column":10},"end":{"line":165,"column":80}},"left":{"type":"BinaryExpression","start":6249,"end":6268,"loc":{"start":{"line":164,"column":10},"end":{"line":164,"column":29}},"left":{"type":"StringLiteral","start":6249,"end":6261,"loc":{"start":{"line":164,"column":10},"end":{"line":164,"column":22}},"extra":{"rawValue":"Parameter ","raw":"\"Parameter \""},"value":"Parameter "},"operator":"+","right":{"type":"Identifier","start":6264,"end":6268,"loc":{"start":{"line":164,"column":25},"end":{"line":164,"column":29},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":6275,"end":6352,"loc":{"start":{"line":165,"column":3},"end":{"line":165,"column":80}},"extra":{"rawValue":" should be an array with an element for each cellkind including background!","raw":"\" should be an array with an element for each cellkind including background!\""},"value":" should be an array with an element for each cellkind including background!"},"extra":{"parenthesized":true,"parenStart":6247}}}],"directives":[]},"alternate":null}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Parameter structure for parameters that should come in an array with an element\n\tfor each {@link CellKind} including background.\n\t@example\n\t* let V = [0,5] // Is a KindArray parameter\n\t@typedef {Array} KindArray\n\t","start":4809,"end":5028,"loc":{"start":{"line":130,"column":1},"end":{"line":135,"column":3}}},{"type":"CommentBlock","value":"* Check if a parameter has a {@link KindArray} structure.\n\t@param {KindArray} p - the parameter to check\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a {@link KindArray}.\n\t\n\t@example\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = [1,1], p2 = [\"hi\",\"hi\"], p3 = \"hi\", p4 = [1,2,3]\n\t* // Nothing happens when parameters are indeed arrays of length 2\n\t* // (regardless of what type of array)\n\t* checker.confCheckStructureKindArray( p1, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureKindArray( p2, \"MY_PARAMETER\" )\n\t*\n\t* // You'll get an error when p is no array, or when \n\t* // its length doesn't match the number of cellkinds:\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" )\n\t","start":5032,"end":5918,"loc":{"start":{"line":137,"column":1},"end":{"line":155,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Parameter structure for parameters that specify interactions between two cells \n\twith each a {@link CellKind}. Should be an array of arrays (\"matrix\") \n\twhere each array has an element for each cellkind including background. \n\tThus, M[n][m] specifies the parameter for an interaction between a cell of \n\tcellkind n and a cell of cellkind m.\n\t@example\n\t* let J = [[0,20],[20,10]] // is a KindMatrix parameter.\n\t@typedef {Array} KindMatrix\n\t","start":6365,"end":6810,"loc":{"start":{"line":169,"column":1},"end":{"line":177,"column":3}}},{"type":"CommentBlock","value":"* Checker if a parameter has a {@link KindMatrix} structure.\n\tIf this is not the case, the method throws an error.\n\t@param {KindMatrix} p - the parameter to check\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a {@link KindMatrix}.\n\t\n\t@example\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = [[1,1],[1,1]], p2 = [[\"a\",\"a\"],[\"a\",\"a\"]] \n\t* // Nothing happens when parameters are indeed arrays of length 2\n\t* // with sub-arrays of length 2 (regardless of what is in the elements)\n\t* checker.confCheckStructureKindArray( p1, \"MY_PARAMETER\" ) //OK\n\t* checker.confCheckStructureKindArray( p2, \"MY_PARAMETER\" ) //OK\n\t*\n\t* // You'll get an error when p is no array, or when \n\t* // its length doesn't match the number of cellkinds:\n\t* let p3 = 1, p4 = [1,2,3], p5 = [[1,2],[1,2],[1,2]]\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" ) //error\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" ) //error\n\t* checker.confCheckStructureSingle( p5, \"MY_PARAMETER\" ) //error\n\t","start":6814,"end":7932,"loc":{"start":{"line":179,"column":1},"end":{"line":200,"column":3}}}]},{"type":"ClassMethod","start":7934,"end":8751,"loc":{"start":{"line":201,"column":1},"end":{"line":234,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":7934,"end":7962,"loc":{"start":{"line":201,"column":1},"end":{"line":201,"column":29},"identifierName":"confCheckStructureKindMatrix"},"name":"confCheckStructureKindMatrix","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":7964,"end":7965,"loc":{"start":{"line":201,"column":31},"end":{"line":201,"column":32},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":7967,"end":7971,"loc":{"start":{"line":201,"column":34},"end":{"line":201,"column":38},"identifierName":"name"},"name":"name"}],"body":{"type":"BlockStatement","start":7973,"end":8751,"loc":{"start":{"line":201,"column":40},"end":{"line":234,"column":2}},"body":[{"type":"VariableDeclaration","start":7978,"end":8008,"loc":{"start":{"line":203,"column":2},"end":{"line":203,"column":32}},"declarations":[{"type":"VariableDeclarator","start":7982,"end":7994,"loc":{"start":{"line":203,"column":6},"end":{"line":203,"column":18}},"id":{"type":"Identifier","start":7982,"end":7986,"loc":{"start":{"line":203,"column":6},"end":{"line":203,"column":10},"identifierName":"err1"},"name":"err1"},"init":{"type":"BooleanLiteral","start":7989,"end":7994,"loc":{"start":{"line":203,"column":13},"end":{"line":203,"column":18}},"value":false}},{"type":"VariableDeclarator","start":7996,"end":8008,"loc":{"start":{"line":203,"column":20},"end":{"line":203,"column":32}},"id":{"type":"Identifier","start":7996,"end":8000,"loc":{"start":{"line":203,"column":20},"end":{"line":203,"column":24},"identifierName":"err2"},"name":"err2"},"init":{"type":"BooleanLiteral","start":8003,"end":8008,"loc":{"start":{"line":203,"column":27},"end":{"line":203,"column":32}},"value":false}}],"kind":"let"},{"type":"VariableDeclaration","start":8011,"end":8027,"loc":{"start":{"line":204,"column":2},"end":{"line":204,"column":18}},"declarations":[{"type":"VariableDeclarator","start":8015,"end":8027,"loc":{"start":{"line":204,"column":6},"end":{"line":204,"column":18}},"id":{"type":"Identifier","start":8015,"end":8027,"loc":{"start":{"line":204,"column":6},"end":{"line":204,"column":18},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds","leadingComments":null,"trailingComments":null},"init":null,"trailingComments":null}],"kind":"let","trailingComments":[{"type":"CommentLine","value":" err1: Check if the main array is an array and has the right size","start":8031,"end":8098,"loc":{"start":{"line":206,"column":2},"end":{"line":206,"column":69}}}]},{"type":"IfStatement","start":8101,"end":8280,"loc":{"start":{"line":207,"column":2},"end":{"line":214,"column":3}},"test":{"type":"UnaryExpression","start":8105,"end":8126,"loc":{"start":{"line":207,"column":6},"end":{"line":207,"column":27}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":8107,"end":8125,"loc":{"start":{"line":207,"column":8},"end":{"line":207,"column":26}},"left":{"type":"Identifier","start":8107,"end":8108,"loc":{"start":{"line":207,"column":8},"end":{"line":207,"column":9},"identifierName":"p"},"name":"p","leadingComments":null},"operator":"instanceof","right":{"type":"Identifier","start":8120,"end":8125,"loc":{"start":{"line":207,"column":21},"end":{"line":207,"column":26},"identifierName":"Array"},"name":"Array"},"leadingComments":null,"extra":{"parenthesized":true,"parenStart":8106}},"extra":{"parenthesizedArgument":false},"leadingComments":null},"consequent":{"type":"BlockStatement","start":8128,"end":8148,"loc":{"start":{"line":207,"column":29},"end":{"line":209,"column":3}},"body":[{"type":"ExpressionStatement","start":8133,"end":8144,"loc":{"start":{"line":208,"column":3},"end":{"line":208,"column":14}},"expression":{"type":"AssignmentExpression","start":8133,"end":8144,"loc":{"start":{"line":208,"column":3},"end":{"line":208,"column":14}},"operator":"=","left":{"type":"Identifier","start":8133,"end":8137,"loc":{"start":{"line":208,"column":3},"end":{"line":208,"column":7},"identifierName":"err1"},"name":"err1"},"right":{"type":"BooleanLiteral","start":8140,"end":8144,"loc":{"start":{"line":208,"column":10},"end":{"line":208,"column":14}},"value":true}}}],"directives":[]},"alternate":{"type":"BlockStatement","start":8154,"end":8280,"loc":{"start":{"line":209,"column":9},"end":{"line":214,"column":3}},"body":[{"type":"ExpressionStatement","start":8159,"end":8209,"loc":{"start":{"line":210,"column":3},"end":{"line":210,"column":53}},"expression":{"type":"AssignmentExpression","start":8159,"end":8209,"loc":{"start":{"line":210,"column":3},"end":{"line":210,"column":53}},"operator":"=","left":{"type":"Identifier","start":8159,"end":8171,"loc":{"start":{"line":210,"column":3},"end":{"line":210,"column":15},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds"},"right":{"type":"CallExpression","start":8174,"end":8209,"loc":{"start":{"line":210,"column":18},"end":{"line":210,"column":53}},"callee":{"type":"MemberExpression","start":8174,"end":8197,"loc":{"start":{"line":210,"column":18},"end":{"line":210,"column":41}},"object":{"type":"ThisExpression","start":8174,"end":8178,"loc":{"start":{"line":210,"column":18},"end":{"line":210,"column":22}}},"property":{"type":"Identifier","start":8179,"end":8197,"loc":{"start":{"line":210,"column":23},"end":{"line":210,"column":41},"identifierName":"confCheckCellKinds"},"name":"confCheckCellKinds"},"computed":false},"arguments":[{"type":"MemberExpression","start":8199,"end":8207,"loc":{"start":{"line":210,"column":43},"end":{"line":210,"column":51}},"object":{"type":"Identifier","start":8199,"end":8200,"loc":{"start":{"line":210,"column":43},"end":{"line":210,"column":44},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":8201,"end":8207,"loc":{"start":{"line":210,"column":45},"end":{"line":210,"column":51},"identifierName":"length"},"name":"length"},"computed":false}]}}},{"type":"IfStatement","start":8213,"end":8274,"loc":{"start":{"line":211,"column":3},"end":{"line":213,"column":4}},"test":{"type":"UnaryExpression","start":8217,"end":8250,"loc":{"start":{"line":211,"column":7},"end":{"line":211,"column":40}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":8220,"end":8248,"loc":{"start":{"line":211,"column":10},"end":{"line":211,"column":38}},"left":{"type":"MemberExpression","start":8220,"end":8228,"loc":{"start":{"line":211,"column":10},"end":{"line":211,"column":18}},"object":{"type":"Identifier","start":8220,"end":8221,"loc":{"start":{"line":211,"column":10},"end":{"line":211,"column":11},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":8222,"end":8228,"loc":{"start":{"line":211,"column":12},"end":{"line":211,"column":18},"identifierName":"length"},"name":"length"},"computed":false},"operator":"==","right":{"type":"BinaryExpression","start":8232,"end":8248,"loc":{"start":{"line":211,"column":22},"end":{"line":211,"column":38}},"left":{"type":"Identifier","start":8232,"end":8244,"loc":{"start":{"line":211,"column":22},"end":{"line":211,"column":34},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds"},"operator":"+","right":{"type":"NumericLiteral","start":8247,"end":8248,"loc":{"start":{"line":211,"column":37},"end":{"line":211,"column":38}},"extra":{"rawValue":1,"raw":"1"},"value":1}},"extra":{"parenthesized":true,"parenStart":8218}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":8252,"end":8274,"loc":{"start":{"line":211,"column":42},"end":{"line":213,"column":4}},"body":[{"type":"ExpressionStatement","start":8258,"end":8269,"loc":{"start":{"line":212,"column":4},"end":{"line":212,"column":15}},"expression":{"type":"AssignmentExpression","start":8258,"end":8269,"loc":{"start":{"line":212,"column":4},"end":{"line":212,"column":15}},"operator":"=","left":{"type":"Identifier","start":8258,"end":8262,"loc":{"start":{"line":212,"column":4},"end":{"line":212,"column":8},"identifierName":"err1"},"name":"err1"},"right":{"type":"BooleanLiteral","start":8265,"end":8269,"loc":{"start":{"line":212,"column":11},"end":{"line":212,"column":15}},"value":true}}}],"directives":[]},"alternate":null}],"directives":[]},"leadingComments":[{"type":"CommentLine","value":" err1: Check if the main array is an array and has the right size","start":8031,"end":8098,"loc":{"start":{"line":206,"column":2},"end":{"line":206,"column":69}}}]},{"type":"IfStatement","start":8283,"end":8413,"loc":{"start":{"line":215,"column":2},"end":{"line":218,"column":3}},"test":{"type":"Identifier","start":8287,"end":8291,"loc":{"start":{"line":215,"column":6},"end":{"line":215,"column":10},"identifierName":"err1"},"name":"err1"},"consequent":{"type":"BlockStatement","start":8293,"end":8413,"loc":{"start":{"line":215,"column":12},"end":{"line":218,"column":3}},"body":[{"type":"ThrowStatement","start":8298,"end":8409,"loc":{"start":{"line":216,"column":3},"end":{"line":217,"column":81}},"argument":{"type":"BinaryExpression","start":8305,"end":8407,"loc":{"start":{"line":216,"column":10},"end":{"line":217,"column":79}},"left":{"type":"BinaryExpression","start":8305,"end":8324,"loc":{"start":{"line":216,"column":10},"end":{"line":216,"column":29}},"left":{"type":"StringLiteral","start":8305,"end":8317,"loc":{"start":{"line":216,"column":10},"end":{"line":216,"column":22}},"extra":{"rawValue":"Parameter ","raw":"\"Parameter \""},"value":"Parameter "},"operator":"+","right":{"type":"Identifier","start":8320,"end":8324,"loc":{"start":{"line":216,"column":25},"end":{"line":216,"column":29},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":8331,"end":8407,"loc":{"start":{"line":217,"column":3},"end":{"line":217,"column":79}},"extra":{"rawValue":" must be an array with a sub-array for each cellkind including background!","raw":"\" must be an array with a sub-array for each cellkind including background!\""},"value":" must be an array with a sub-array for each cellkind including background!"},"extra":{"parenthesized":true,"parenStart":8303}}}],"directives":[],"trailingComments":null},"alternate":null,"trailingComments":[{"type":"CommentLine","value":" Check if subarrays have the right size","start":8419,"end":8460,"loc":{"start":{"line":220,"column":2},"end":{"line":220,"column":43}}}]},{"type":"ForOfStatement","start":8463,"end":8748,"loc":{"start":{"line":221,"column":2},"end":{"line":233,"column":3}},"left":{"type":"VariableDeclaration","start":8468,"end":8473,"loc":{"start":{"line":221,"column":7},"end":{"line":221,"column":12}},"declarations":[{"type":"VariableDeclarator","start":8472,"end":8473,"loc":{"start":{"line":221,"column":11},"end":{"line":221,"column":12}},"id":{"type":"Identifier","start":8472,"end":8473,"loc":{"start":{"line":221,"column":11},"end":{"line":221,"column":12},"identifierName":"e"},"name":"e","leadingComments":null},"init":null,"leadingComments":null}],"kind":"let","leadingComments":null},"right":{"type":"Identifier","start":8477,"end":8478,"loc":{"start":{"line":221,"column":16},"end":{"line":221,"column":17},"identifierName":"p"},"name":"p"},"body":{"type":"BlockStatement","start":8480,"end":8748,"loc":{"start":{"line":221,"column":19},"end":{"line":233,"column":3}},"body":[{"type":"IfStatement","start":8485,"end":8616,"loc":{"start":{"line":222,"column":3},"end":{"line":228,"column":4}},"test":{"type":"UnaryExpression","start":8489,"end":8510,"loc":{"start":{"line":222,"column":7},"end":{"line":222,"column":28}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":8491,"end":8509,"loc":{"start":{"line":222,"column":9},"end":{"line":222,"column":27}},"left":{"type":"Identifier","start":8491,"end":8492,"loc":{"start":{"line":222,"column":9},"end":{"line":222,"column":10},"identifierName":"e"},"name":"e"},"operator":"instanceof","right":{"type":"Identifier","start":8504,"end":8509,"loc":{"start":{"line":222,"column":22},"end":{"line":222,"column":27},"identifierName":"Array"},"name":"Array"},"extra":{"parenthesized":true,"parenStart":8490}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":8512,"end":8534,"loc":{"start":{"line":222,"column":30},"end":{"line":224,"column":4}},"body":[{"type":"ExpressionStatement","start":8518,"end":8529,"loc":{"start":{"line":223,"column":4},"end":{"line":223,"column":15}},"expression":{"type":"AssignmentExpression","start":8518,"end":8529,"loc":{"start":{"line":223,"column":4},"end":{"line":223,"column":15}},"operator":"=","left":{"type":"Identifier","start":8518,"end":8522,"loc":{"start":{"line":223,"column":4},"end":{"line":223,"column":8},"identifierName":"err2"},"name":"err2"},"right":{"type":"BooleanLiteral","start":8525,"end":8529,"loc":{"start":{"line":223,"column":11},"end":{"line":223,"column":15}},"value":true}}}],"directives":[]},"alternate":{"type":"BlockStatement","start":8540,"end":8616,"loc":{"start":{"line":224,"column":10},"end":{"line":228,"column":4}},"body":[{"type":"IfStatement","start":8546,"end":8609,"loc":{"start":{"line":225,"column":4},"end":{"line":227,"column":5}},"test":{"type":"UnaryExpression","start":8550,"end":8583,"loc":{"start":{"line":225,"column":8},"end":{"line":225,"column":41}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":8553,"end":8581,"loc":{"start":{"line":225,"column":11},"end":{"line":225,"column":39}},"left":{"type":"MemberExpression","start":8553,"end":8561,"loc":{"start":{"line":225,"column":11},"end":{"line":225,"column":19}},"object":{"type":"Identifier","start":8553,"end":8554,"loc":{"start":{"line":225,"column":11},"end":{"line":225,"column":12},"identifierName":"e"},"name":"e"},"property":{"type":"Identifier","start":8555,"end":8561,"loc":{"start":{"line":225,"column":13},"end":{"line":225,"column":19},"identifierName":"length"},"name":"length"},"computed":false},"operator":"==","right":{"type":"BinaryExpression","start":8565,"end":8581,"loc":{"start":{"line":225,"column":23},"end":{"line":225,"column":39}},"left":{"type":"Identifier","start":8565,"end":8577,"loc":{"start":{"line":225,"column":23},"end":{"line":225,"column":35},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds"},"operator":"+","right":{"type":"NumericLiteral","start":8580,"end":8581,"loc":{"start":{"line":225,"column":38},"end":{"line":225,"column":39}},"extra":{"rawValue":1,"raw":"1"},"value":1}},"extra":{"parenthesized":true,"parenStart":8551}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":8585,"end":8609,"loc":{"start":{"line":225,"column":43},"end":{"line":227,"column":5}},"body":[{"type":"ExpressionStatement","start":8592,"end":8603,"loc":{"start":{"line":226,"column":5},"end":{"line":226,"column":16}},"expression":{"type":"AssignmentExpression","start":8592,"end":8603,"loc":{"start":{"line":226,"column":5},"end":{"line":226,"column":16}},"operator":"=","left":{"type":"Identifier","start":8592,"end":8596,"loc":{"start":{"line":226,"column":5},"end":{"line":226,"column":9},"identifierName":"err2"},"name":"err2"},"right":{"type":"BooleanLiteral","start":8599,"end":8603,"loc":{"start":{"line":226,"column":12},"end":{"line":226,"column":16}},"value":true}}}],"directives":[]},"alternate":null}],"directives":[]}},{"type":"IfStatement","start":8620,"end":8744,"loc":{"start":{"line":229,"column":3},"end":{"line":232,"column":4}},"test":{"type":"Identifier","start":8624,"end":8628,"loc":{"start":{"line":229,"column":7},"end":{"line":229,"column":11},"identifierName":"err2"},"name":"err2"},"consequent":{"type":"BlockStatement","start":8630,"end":8744,"loc":{"start":{"line":229,"column":13},"end":{"line":232,"column":4}},"body":[{"type":"ThrowStatement","start":8636,"end":8739,"loc":{"start":{"line":230,"column":4},"end":{"line":231,"column":69}},"argument":{"type":"BinaryExpression","start":8643,"end":8737,"loc":{"start":{"line":230,"column":11},"end":{"line":231,"column":67}},"left":{"type":"BinaryExpression","start":8643,"end":8666,"loc":{"start":{"line":230,"column":11},"end":{"line":230,"column":34}},"left":{"type":"StringLiteral","start":8643,"end":8659,"loc":{"start":{"line":230,"column":11},"end":{"line":230,"column":27}},"extra":{"rawValue":"Sub-arrays of ","raw":"\"Sub-arrays of \""},"value":"Sub-arrays of "},"operator":"+","right":{"type":"Identifier","start":8662,"end":8666,"loc":{"start":{"line":230,"column":30},"end":{"line":230,"column":34},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":8674,"end":8737,"loc":{"start":{"line":231,"column":4},"end":{"line":231,"column":67}},"extra":{"rawValue":" must have an element for each cellkind including background!","raw":"\" must have an element for each cellkind including background!\""},"value":" must have an element for each cellkind including background!"},"extra":{"parenthesized":true,"parenStart":8641}}}],"directives":[]},"alternate":null}],"directives":[]},"leadingComments":[{"type":"CommentLine","value":" Check if subarrays have the right size","start":8419,"end":8460,"loc":{"start":{"line":220,"column":2},"end":{"line":220,"column":43}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Parameter structure for parameters that specify interactions between two cells \n\twith each a {@link CellKind}. Should be an array of arrays (\"matrix\") \n\twhere each array has an element for each cellkind including background. \n\tThus, M[n][m] specifies the parameter for an interaction between a cell of \n\tcellkind n and a cell of cellkind m.\n\t@example\n\t* let J = [[0,20],[20,10]] // is a KindMatrix parameter.\n\t@typedef {Array} KindMatrix\n\t","start":6365,"end":6810,"loc":{"start":{"line":169,"column":1},"end":{"line":177,"column":3}}},{"type":"CommentBlock","value":"* Checker if a parameter has a {@link KindMatrix} structure.\n\tIf this is not the case, the method throws an error.\n\t@param {KindMatrix} p - the parameter to check\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a {@link KindMatrix}.\n\t\n\t@example\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = [[1,1],[1,1]], p2 = [[\"a\",\"a\"],[\"a\",\"a\"]] \n\t* // Nothing happens when parameters are indeed arrays of length 2\n\t* // with sub-arrays of length 2 (regardless of what is in the elements)\n\t* checker.confCheckStructureKindArray( p1, \"MY_PARAMETER\" ) //OK\n\t* checker.confCheckStructureKindArray( p2, \"MY_PARAMETER\" ) //OK\n\t*\n\t* // You'll get an error when p is no array, or when \n\t* // its length doesn't match the number of cellkinds:\n\t* let p3 = 1, p4 = [1,2,3], p5 = [[1,2],[1,2],[1,2]]\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" ) //error\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" ) //error\n\t* checker.confCheckStructureSingle( p5, \"MY_PARAMETER\" ) //error\n\t","start":6814,"end":7932,"loc":{"start":{"line":179,"column":1},"end":{"line":200,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method for checking if the parameter has the right structure. Throws an error\n\tmessage if the parameter does not have this structure.\n\t\n\tIt internally uses one of the following functions, depending on the structure argument:\n\t{@link confCheckStructureSingle}, {@link confCheckStructureKindArray}, or\n\t{@link confCheckStructureKindMatrix}.\n\t\n\t@param {SingleValue|KindArray|KindMatrix} p - the parameter to check the structure of\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t\n\t@example\n\t* // My own configuration object\n\t* let conf = {\n\t*\tP1 : true,\n\t* \tP2 : [0,2],\n\t* \tP3 : [-1,2,4],\n\t* \tP4 : [[1,2],[1,2]]\n\t* }\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* // These checks work out fine:\n\t* checker.confCheckStructure( conf[\"P1\"],\"P1\",\"SingleValue\")\n\t* checker.confCheckStructure( conf[\"P2\"],\"P2\",\"KindArray\")\n\t* checker.confCheckStructure( conf[\"P4\"],\"P4\",\"KindMatrix\")\n\t* \n\t* // These checks throw an error:\n\t* checker.confCheckStructure( conf[\"P1\"],\"P1\",\"KindArray\") // not an array\n\t* checker.confCheckStructure( conf[\"P2\"],\"P3\",\"KindArray\") // too long\n\t","start":8755,"end":10085,"loc":{"start":{"line":236,"column":1},"end":{"line":267,"column":3}}}]},{"type":"ClassMethod","start":10087,"end":10514,"loc":{"start":{"line":268,"column":1},"end":{"line":278,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":10087,"end":10105,"loc":{"start":{"line":268,"column":1},"end":{"line":268,"column":19},"identifierName":"confCheckStructure"},"name":"confCheckStructure","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":10107,"end":10108,"loc":{"start":{"line":268,"column":21},"end":{"line":268,"column":22},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":10110,"end":10114,"loc":{"start":{"line":268,"column":24},"end":{"line":268,"column":28},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":10116,"end":10125,"loc":{"start":{"line":268,"column":30},"end":{"line":268,"column":39},"identifierName":"structure"},"name":"structure"}],"body":{"type":"BlockStatement","start":10127,"end":10514,"loc":{"start":{"line":268,"column":41},"end":{"line":278,"column":2}},"body":[{"type":"IfStatement","start":10131,"end":10511,"loc":{"start":{"line":269,"column":2},"end":{"line":277,"column":3}},"test":{"type":"BinaryExpression","start":10135,"end":10161,"loc":{"start":{"line":269,"column":6},"end":{"line":269,"column":32}},"left":{"type":"Identifier","start":10135,"end":10144,"loc":{"start":{"line":269,"column":6},"end":{"line":269,"column":15},"identifierName":"structure"},"name":"structure"},"operator":"==","right":{"type":"StringLiteral","start":10148,"end":10161,"loc":{"start":{"line":269,"column":19},"end":{"line":269,"column":32}},"extra":{"rawValue":"SingleValue","raw":"\"SingleValue\""},"value":"SingleValue"}},"consequent":{"type":"BlockStatement","start":10163,"end":10212,"loc":{"start":{"line":269,"column":34},"end":{"line":271,"column":3}},"body":[{"type":"ExpressionStatement","start":10168,"end":10208,"loc":{"start":{"line":270,"column":3},"end":{"line":270,"column":43}},"expression":{"type":"CallExpression","start":10168,"end":10208,"loc":{"start":{"line":270,"column":3},"end":{"line":270,"column":43}},"callee":{"type":"MemberExpression","start":10168,"end":10197,"loc":{"start":{"line":270,"column":3},"end":{"line":270,"column":32}},"object":{"type":"ThisExpression","start":10168,"end":10172,"loc":{"start":{"line":270,"column":3},"end":{"line":270,"column":7}}},"property":{"type":"Identifier","start":10173,"end":10197,"loc":{"start":{"line":270,"column":8},"end":{"line":270,"column":32},"identifierName":"confCheckStructureSingle"},"name":"confCheckStructureSingle"},"computed":false},"arguments":[{"type":"Identifier","start":10199,"end":10200,"loc":{"start":{"line":270,"column":34},"end":{"line":270,"column":35},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":10202,"end":10206,"loc":{"start":{"line":270,"column":37},"end":{"line":270,"column":41},"identifierName":"name"},"name":"name"}]}}],"directives":[]},"alternate":{"type":"IfStatement","start":10218,"end":10511,"loc":{"start":{"line":271,"column":9},"end":{"line":277,"column":3}},"test":{"type":"BinaryExpression","start":10223,"end":10247,"loc":{"start":{"line":271,"column":14},"end":{"line":271,"column":38}},"left":{"type":"Identifier","start":10223,"end":10232,"loc":{"start":{"line":271,"column":14},"end":{"line":271,"column":23},"identifierName":"structure"},"name":"structure"},"operator":"==","right":{"type":"StringLiteral","start":10236,"end":10247,"loc":{"start":{"line":271,"column":27},"end":{"line":271,"column":38}},"extra":{"rawValue":"KindArray","raw":"\"KindArray\""},"value":"KindArray"}},"consequent":{"type":"BlockStatement","start":10249,"end":10301,"loc":{"start":{"line":271,"column":40},"end":{"line":273,"column":3}},"body":[{"type":"ExpressionStatement","start":10254,"end":10297,"loc":{"start":{"line":272,"column":3},"end":{"line":272,"column":46}},"expression":{"type":"CallExpression","start":10254,"end":10297,"loc":{"start":{"line":272,"column":3},"end":{"line":272,"column":46}},"callee":{"type":"MemberExpression","start":10254,"end":10286,"loc":{"start":{"line":272,"column":3},"end":{"line":272,"column":35}},"object":{"type":"ThisExpression","start":10254,"end":10258,"loc":{"start":{"line":272,"column":3},"end":{"line":272,"column":7}}},"property":{"type":"Identifier","start":10259,"end":10286,"loc":{"start":{"line":272,"column":8},"end":{"line":272,"column":35},"identifierName":"confCheckStructureKindArray"},"name":"confCheckStructureKindArray"},"computed":false},"arguments":[{"type":"Identifier","start":10288,"end":10289,"loc":{"start":{"line":272,"column":37},"end":{"line":272,"column":38},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":10291,"end":10295,"loc":{"start":{"line":272,"column":40},"end":{"line":272,"column":44},"identifierName":"name"},"name":"name"}]}}],"directives":[]},"alternate":{"type":"IfStatement","start":10307,"end":10511,"loc":{"start":{"line":273,"column":9},"end":{"line":277,"column":3}},"test":{"type":"BinaryExpression","start":10312,"end":10337,"loc":{"start":{"line":273,"column":14},"end":{"line":273,"column":39}},"left":{"type":"Identifier","start":10312,"end":10321,"loc":{"start":{"line":273,"column":14},"end":{"line":273,"column":23},"identifierName":"structure"},"name":"structure"},"operator":"==","right":{"type":"StringLiteral","start":10325,"end":10337,"loc":{"start":{"line":273,"column":27},"end":{"line":273,"column":39}},"extra":{"rawValue":"KindMatrix","raw":"\"KindMatrix\""},"value":"KindMatrix"}},"consequent":{"type":"BlockStatement","start":10339,"end":10392,"loc":{"start":{"line":273,"column":41},"end":{"line":275,"column":3}},"body":[{"type":"ExpressionStatement","start":10344,"end":10388,"loc":{"start":{"line":274,"column":3},"end":{"line":274,"column":47}},"expression":{"type":"CallExpression","start":10344,"end":10388,"loc":{"start":{"line":274,"column":3},"end":{"line":274,"column":47}},"callee":{"type":"MemberExpression","start":10344,"end":10377,"loc":{"start":{"line":274,"column":3},"end":{"line":274,"column":36}},"object":{"type":"ThisExpression","start":10344,"end":10348,"loc":{"start":{"line":274,"column":3},"end":{"line":274,"column":7}}},"property":{"type":"Identifier","start":10349,"end":10377,"loc":{"start":{"line":274,"column":8},"end":{"line":274,"column":36},"identifierName":"confCheckStructureKindMatrix"},"name":"confCheckStructureKindMatrix"},"computed":false},"arguments":[{"type":"Identifier","start":10379,"end":10380,"loc":{"start":{"line":274,"column":38},"end":{"line":274,"column":39},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":10382,"end":10386,"loc":{"start":{"line":274,"column":41},"end":{"line":274,"column":45},"identifierName":"name"},"name":"name"}]}}],"directives":[]},"alternate":{"type":"BlockStatement","start":10398,"end":10511,"loc":{"start":{"line":275,"column":9},"end":{"line":277,"column":3}},"body":[{"type":"ThrowStatement","start":10403,"end":10507,"loc":{"start":{"line":276,"column":3},"end":{"line":276,"column":107}},"argument":{"type":"BinaryExpression","start":10409,"end":10506,"loc":{"start":{"line":276,"column":9},"end":{"line":276,"column":106}},"left":{"type":"BinaryExpression","start":10409,"end":10441,"loc":{"start":{"line":276,"column":9},"end":{"line":276,"column":41}},"left":{"type":"StringLiteral","start":10409,"end":10429,"loc":{"start":{"line":276,"column":9},"end":{"line":276,"column":29}},"extra":{"rawValue":"Unknown structure ","raw":"\"Unknown structure \""},"value":"Unknown structure "},"operator":"+","right":{"type":"Identifier","start":10432,"end":10441,"loc":{"start":{"line":276,"column":32},"end":{"line":276,"column":41},"identifierName":"structure"},"name":"structure"}},"operator":"+","right":{"type":"StringLiteral","start":10444,"end":10506,"loc":{"start":{"line":276,"column":44},"end":{"line":276,"column":106}},"extra":{"rawValue":", please choose 'SingleValue', 'KindArray', or 'KindMatrix'.","raw":"\", please choose 'SingleValue', 'KindArray', or 'KindMatrix'.\""},"value":", please choose 'SingleValue', 'KindArray', or 'KindMatrix'."},"extra":{"parenthesized":true,"parenStart":10408}}}],"directives":[]}}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method for checking if the parameter has the right structure. Throws an error\n\tmessage if the parameter does not have this structure.\n\t\n\tIt internally uses one of the following functions, depending on the structure argument:\n\t{@link confCheckStructureSingle}, {@link confCheckStructureKindArray}, or\n\t{@link confCheckStructureKindMatrix}.\n\t\n\t@param {SingleValue|KindArray|KindMatrix} p - the parameter to check the structure of\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t\n\t@example\n\t* // My own configuration object\n\t* let conf = {\n\t*\tP1 : true,\n\t* \tP2 : [0,2],\n\t* \tP3 : [-1,2,4],\n\t* \tP4 : [[1,2],[1,2]]\n\t* }\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* // These checks work out fine:\n\t* checker.confCheckStructure( conf[\"P1\"],\"P1\",\"SingleValue\")\n\t* checker.confCheckStructure( conf[\"P2\"],\"P2\",\"KindArray\")\n\t* checker.confCheckStructure( conf[\"P4\"],\"P4\",\"KindMatrix\")\n\t* \n\t* // These checks throw an error:\n\t* checker.confCheckStructure( conf[\"P1\"],\"P1\",\"KindArray\") // not an array\n\t* checker.confCheckStructure( conf[\"P2\"],\"P3\",\"KindArray\") // too long\n\t","start":8755,"end":10085,"loc":{"start":{"line":236,"column":1},"end":{"line":267,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":" ========= CHECKING VALUE TYPE ======== ","start":10518,"end":10562,"loc":{"start":{"line":280,"column":1},"end":{"line":280,"column":45}}},{"type":"CommentBlock","value":"* Check if a value is of type 'number'.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a number?\n\t@example\n\tthis.isNumber( -1 ) // true\n\tthis.isNumber( 0.5 ) // true\n\tthis.isNumber( true ) // false\n\tthis.isNumber( [1,2 ] ) // false\n\tthis.isNumber( \"hello world\" ) // false\n\t@private\n\t","start":10566,"end":10868,"loc":{"start":{"line":282,"column":1},"end":{"line":292,"column":3}}}]},{"type":"ClassMethod","start":10870,"end":10922,"loc":{"start":{"line":293,"column":1},"end":{"line":295,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":10870,"end":10878,"loc":{"start":{"line":293,"column":1},"end":{"line":293,"column":9},"identifierName":"isNumber"},"name":"isNumber","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":10880,"end":10881,"loc":{"start":{"line":293,"column":11},"end":{"line":293,"column":12},"identifierName":"v"},"name":"v"}],"body":{"type":"BlockStatement","start":10883,"end":10922,"loc":{"start":{"line":293,"column":14},"end":{"line":295,"column":2}},"body":[{"type":"ReturnStatement","start":10887,"end":10919,"loc":{"start":{"line":294,"column":2},"end":{"line":294,"column":34}},"argument":{"type":"BinaryExpression","start":10896,"end":10917,"loc":{"start":{"line":294,"column":11},"end":{"line":294,"column":32}},"left":{"type":"UnaryExpression","start":10896,"end":10904,"loc":{"start":{"line":294,"column":11},"end":{"line":294,"column":19}},"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":10903,"end":10904,"loc":{"start":{"line":294,"column":18},"end":{"line":294,"column":19},"identifierName":"v"},"name":"v"},"extra":{"parenthesizedArgument":false}},"operator":"===","right":{"type":"StringLiteral","start":10909,"end":10917,"loc":{"start":{"line":294,"column":24},"end":{"line":294,"column":32}},"extra":{"rawValue":"number","raw":"\"number\""},"value":"number"},"extra":{"parenthesized":true,"parenStart":10894}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":" ========= CHECKING VALUE TYPE ======== ","start":10518,"end":10562,"loc":{"start":{"line":280,"column":1},"end":{"line":280,"column":45}}},{"type":"CommentBlock","value":"* Check if a value is of type 'number'.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a number?\n\t@example\n\tthis.isNumber( -1 ) // true\n\tthis.isNumber( 0.5 ) // true\n\tthis.isNumber( true ) // false\n\tthis.isNumber( [1,2 ] ) // false\n\tthis.isNumber( \"hello world\" ) // false\n\t@private\n\t","start":10566,"end":10868,"loc":{"start":{"line":282,"column":1},"end":{"line":292,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'number' and non-negative.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a non-negative number?\n\t@example\n\tthis.isNonNegative( -1 ) // false\n\tthis.isNonNegative( 0.5 ) // true\n\tthis.isNumber( true ) // false\n\tthis.isNumber( [1,2 ] ) // false\n\tthis.isNumber( \"hello world\" ) // false\n\t@private\n\t","start":10924,"end":11267,"loc":{"start":{"line":296,"column":1},"end":{"line":306,"column":3}}}]},{"type":"ClassMethod","start":11269,"end":11370,"loc":{"start":{"line":307,"column":1},"end":{"line":312,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":11269,"end":11282,"loc":{"start":{"line":307,"column":1},"end":{"line":307,"column":14},"identifierName":"isNonNegative"},"name":"isNonNegative","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":11284,"end":11285,"loc":{"start":{"line":307,"column":16},"end":{"line":307,"column":17},"identifierName":"v"},"name":"v"}],"body":{"type":"BlockStatement","start":11287,"end":11370,"loc":{"start":{"line":307,"column":19},"end":{"line":312,"column":2}},"body":[{"type":"IfStatement","start":11291,"end":11353,"loc":{"start":{"line":308,"column":2},"end":{"line":310,"column":3}},"test":{"type":"LogicalExpression","start":11295,"end":11330,"loc":{"start":{"line":308,"column":6},"end":{"line":308,"column":41}},"left":{"type":"UnaryExpression","start":11295,"end":11321,"loc":{"start":{"line":308,"column":6},"end":{"line":308,"column":32}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":11298,"end":11319,"loc":{"start":{"line":308,"column":9},"end":{"line":308,"column":30}},"left":{"type":"UnaryExpression","start":11298,"end":11306,"loc":{"start":{"line":308,"column":9},"end":{"line":308,"column":17}},"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":11305,"end":11306,"loc":{"start":{"line":308,"column":16},"end":{"line":308,"column":17},"identifierName":"v"},"name":"v"},"extra":{"parenthesizedArgument":false}},"operator":"===","right":{"type":"StringLiteral","start":11311,"end":11319,"loc":{"start":{"line":308,"column":22},"end":{"line":308,"column":30}},"extra":{"rawValue":"number","raw":"\"number\""},"value":"number"},"extra":{"parenthesized":true,"parenStart":11296}},"extra":{"parenthesizedArgument":false}},"operator":"||","right":{"type":"BinaryExpression","start":11325,"end":11330,"loc":{"start":{"line":308,"column":36},"end":{"line":308,"column":41}},"left":{"type":"Identifier","start":11325,"end":11326,"loc":{"start":{"line":308,"column":36},"end":{"line":308,"column":37},"identifierName":"v"},"name":"v"},"operator":"<","right":{"type":"NumericLiteral","start":11329,"end":11330,"loc":{"start":{"line":308,"column":40},"end":{"line":308,"column":41}},"extra":{"rawValue":0,"raw":"0"},"value":0}}},"consequent":{"type":"BlockStatement","start":11332,"end":11353,"loc":{"start":{"line":308,"column":43},"end":{"line":310,"column":3}},"body":[{"type":"ReturnStatement","start":11337,"end":11349,"loc":{"start":{"line":309,"column":3},"end":{"line":309,"column":15}},"argument":{"type":"BooleanLiteral","start":11344,"end":11349,"loc":{"start":{"line":309,"column":10},"end":{"line":309,"column":15}},"value":false}}],"directives":[]},"alternate":null},{"type":"ReturnStatement","start":11356,"end":11367,"loc":{"start":{"line":311,"column":2},"end":{"line":311,"column":13}},"argument":{"type":"BooleanLiteral","start":11363,"end":11367,"loc":{"start":{"line":311,"column":9},"end":{"line":311,"column":13}},"value":true}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'number' and non-negative.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a non-negative number?\n\t@example\n\tthis.isNonNegative( -1 ) // false\n\tthis.isNonNegative( 0.5 ) // true\n\tthis.isNumber( true ) // false\n\tthis.isNumber( [1,2 ] ) // false\n\tthis.isNumber( \"hello world\" ) // false\n\t@private\n\t","start":10924,"end":11267,"loc":{"start":{"line":296,"column":1},"end":{"line":306,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'number' and between 0 and 1.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a number between 0 and 1?\n\t@example\n\tthis.isProbability( -1 ) // false\n\tthis.isProbability( 0.5 ) // true\n\tthis.isProbability( true ) // false\n\tthis.isProbability( [1,2 ] ) // false\n\tthis.isProbability( \"hello world\" ) // false\n\t@private\n\t","start":11372,"end":11736,"loc":{"start":{"line":313,"column":1},"end":{"line":323,"column":3}}}]},{"type":"ClassMethod","start":11738,"end":11848,"loc":{"start":{"line":324,"column":1},"end":{"line":329,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":11738,"end":11751,"loc":{"start":{"line":324,"column":1},"end":{"line":324,"column":14},"identifierName":"isProbability"},"name":"isProbability","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":11753,"end":11754,"loc":{"start":{"line":324,"column":16},"end":{"line":324,"column":17},"identifierName":"v"},"name":"v"}],"body":{"type":"BlockStatement","start":11756,"end":11848,"loc":{"start":{"line":324,"column":19},"end":{"line":329,"column":2}},"body":[{"type":"IfStatement","start":11760,"end":11831,"loc":{"start":{"line":325,"column":2},"end":{"line":327,"column":3}},"test":{"type":"LogicalExpression","start":11764,"end":11808,"loc":{"start":{"line":325,"column":6},"end":{"line":325,"column":50}},"left":{"type":"LogicalExpression","start":11764,"end":11799,"loc":{"start":{"line":325,"column":6},"end":{"line":325,"column":41}},"left":{"type":"UnaryExpression","start":11764,"end":11790,"loc":{"start":{"line":325,"column":6},"end":{"line":325,"column":32}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":11767,"end":11788,"loc":{"start":{"line":325,"column":9},"end":{"line":325,"column":30}},"left":{"type":"UnaryExpression","start":11767,"end":11775,"loc":{"start":{"line":325,"column":9},"end":{"line":325,"column":17}},"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":11774,"end":11775,"loc":{"start":{"line":325,"column":16},"end":{"line":325,"column":17},"identifierName":"v"},"name":"v"},"extra":{"parenthesizedArgument":false}},"operator":"===","right":{"type":"StringLiteral","start":11780,"end":11788,"loc":{"start":{"line":325,"column":22},"end":{"line":325,"column":30}},"extra":{"rawValue":"number","raw":"\"number\""},"value":"number"},"extra":{"parenthesized":true,"parenStart":11765}},"extra":{"parenthesizedArgument":false}},"operator":"||","right":{"type":"BinaryExpression","start":11794,"end":11799,"loc":{"start":{"line":325,"column":36},"end":{"line":325,"column":41}},"left":{"type":"Identifier","start":11794,"end":11795,"loc":{"start":{"line":325,"column":36},"end":{"line":325,"column":37},"identifierName":"v"},"name":"v"},"operator":"<","right":{"type":"NumericLiteral","start":11798,"end":11799,"loc":{"start":{"line":325,"column":40},"end":{"line":325,"column":41}},"extra":{"rawValue":0,"raw":"0"},"value":0}}},"operator":"||","right":{"type":"BinaryExpression","start":11803,"end":11808,"loc":{"start":{"line":325,"column":45},"end":{"line":325,"column":50}},"left":{"type":"Identifier","start":11803,"end":11804,"loc":{"start":{"line":325,"column":45},"end":{"line":325,"column":46},"identifierName":"v"},"name":"v"},"operator":">","right":{"type":"NumericLiteral","start":11807,"end":11808,"loc":{"start":{"line":325,"column":49},"end":{"line":325,"column":50}},"extra":{"rawValue":1,"raw":"1"},"value":1}}},"consequent":{"type":"BlockStatement","start":11810,"end":11831,"loc":{"start":{"line":325,"column":52},"end":{"line":327,"column":3}},"body":[{"type":"ReturnStatement","start":11815,"end":11827,"loc":{"start":{"line":326,"column":3},"end":{"line":326,"column":15}},"argument":{"type":"BooleanLiteral","start":11822,"end":11827,"loc":{"start":{"line":326,"column":10},"end":{"line":326,"column":15}},"value":false}}],"directives":[]},"alternate":null},{"type":"ReturnStatement","start":11834,"end":11845,"loc":{"start":{"line":328,"column":2},"end":{"line":328,"column":13}},"argument":{"type":"BooleanLiteral","start":11841,"end":11845,"loc":{"start":{"line":328,"column":9},"end":{"line":328,"column":13}},"value":true}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'number' and between 0 and 1.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a number between 0 and 1?\n\t@example\n\tthis.isProbability( -1 ) // false\n\tthis.isProbability( 0.5 ) // true\n\tthis.isProbability( true ) // false\n\tthis.isProbability( [1,2 ] ) // false\n\tthis.isProbability( \"hello world\" ) // false\n\t@private\n\t","start":11372,"end":11736,"loc":{"start":{"line":313,"column":1},"end":{"line":323,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'string' and has one of a set of\n\tpredefined values.\n\t@param {number} v - value to check.\n\t@param {string[]} [values=[]] - possible values. If left empty,\n\tany string is considered OK.\n\t@return {boolean} is v a string and does it match one of the predefined values?\n\t@example\n\tthis.isString( true ) // false\n\tthis.isString( [\"a\",\"b\"] ) // false\n\tthis.isString( \"hello world\" ) // true\n\t@private\n\t","start":11850,"end":12280,"loc":{"start":{"line":330,"column":1},"end":{"line":341,"column":3}}}]},{"type":"ClassMethod","start":12282,"end":12476,"loc":{"start":{"line":342,"column":1},"end":{"line":353,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":12282,"end":12290,"loc":{"start":{"line":342,"column":1},"end":{"line":342,"column":9},"identifierName":"isString"},"name":"isString","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":12292,"end":12293,"loc":{"start":{"line":342,"column":11},"end":{"line":342,"column":12},"identifierName":"v"},"name":"v"},{"type":"AssignmentPattern","start":12295,"end":12306,"loc":{"start":{"line":342,"column":14},"end":{"line":342,"column":25}},"left":{"type":"Identifier","start":12295,"end":12301,"loc":{"start":{"line":342,"column":14},"end":{"line":342,"column":20},"identifierName":"values"},"name":"values"},"right":{"type":"ArrayExpression","start":12304,"end":12306,"loc":{"start":{"line":342,"column":23},"end":{"line":342,"column":25}},"elements":[]}}],"body":{"type":"BlockStatement","start":12308,"end":12476,"loc":{"start":{"line":342,"column":27},"end":{"line":353,"column":2}},"body":[{"type":"IfStatement","start":12312,"end":12365,"loc":{"start":{"line":343,"column":2},"end":{"line":345,"column":3}},"test":{"type":"UnaryExpression","start":12316,"end":12342,"loc":{"start":{"line":343,"column":6},"end":{"line":343,"column":32}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":12319,"end":12340,"loc":{"start":{"line":343,"column":9},"end":{"line":343,"column":30}},"left":{"type":"UnaryExpression","start":12319,"end":12327,"loc":{"start":{"line":343,"column":9},"end":{"line":343,"column":17}},"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":12326,"end":12327,"loc":{"start":{"line":343,"column":16},"end":{"line":343,"column":17},"identifierName":"v"},"name":"v"},"extra":{"parenthesizedArgument":false}},"operator":"===","right":{"type":"StringLiteral","start":12332,"end":12340,"loc":{"start":{"line":343,"column":22},"end":{"line":343,"column":30}},"extra":{"rawValue":"string","raw":"\"string\""},"value":"string"},"extra":{"parenthesized":true,"parenStart":12317}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":12344,"end":12365,"loc":{"start":{"line":343,"column":34},"end":{"line":345,"column":3}},"body":[{"type":"ReturnStatement","start":12349,"end":12361,"loc":{"start":{"line":344,"column":3},"end":{"line":344,"column":15}},"argument":{"type":"BooleanLiteral","start":12356,"end":12361,"loc":{"start":{"line":344,"column":10},"end":{"line":344,"column":15}},"value":false}}],"directives":[]},"alternate":null},{"type":"VariableDeclaration","start":12368,"end":12385,"loc":{"start":{"line":346,"column":2},"end":{"line":346,"column":19}},"declarations":[{"type":"VariableDeclarator","start":12372,"end":12385,"loc":{"start":{"line":346,"column":6},"end":{"line":346,"column":19}},"id":{"type":"Identifier","start":12372,"end":12377,"loc":{"start":{"line":346,"column":6},"end":{"line":346,"column":11},"identifierName":"found"},"name":"found"},"init":{"type":"BooleanLiteral","start":12380,"end":12385,"loc":{"start":{"line":346,"column":14},"end":{"line":346,"column":19}},"value":false}}],"kind":"let"},{"type":"ForOfStatement","start":12388,"end":12458,"loc":{"start":{"line":347,"column":2},"end":{"line":351,"column":3}},"left":{"type":"VariableDeclaration","start":12393,"end":12400,"loc":{"start":{"line":347,"column":7},"end":{"line":347,"column":14}},"declarations":[{"type":"VariableDeclarator","start":12397,"end":12400,"loc":{"start":{"line":347,"column":11},"end":{"line":347,"column":14}},"id":{"type":"Identifier","start":12397,"end":12400,"loc":{"start":{"line":347,"column":11},"end":{"line":347,"column":14},"identifierName":"val"},"name":"val"},"init":null}],"kind":"let"},"right":{"type":"Identifier","start":12404,"end":12410,"loc":{"start":{"line":347,"column":18},"end":{"line":347,"column":24},"identifierName":"values"},"name":"values"},"body":{"type":"BlockStatement","start":12412,"end":12458,"loc":{"start":{"line":347,"column":26},"end":{"line":351,"column":3}},"body":[{"type":"IfStatement","start":12417,"end":12454,"loc":{"start":{"line":348,"column":3},"end":{"line":350,"column":4}},"test":{"type":"BinaryExpression","start":12421,"end":12429,"loc":{"start":{"line":348,"column":7},"end":{"line":348,"column":15}},"left":{"type":"Identifier","start":12421,"end":12424,"loc":{"start":{"line":348,"column":7},"end":{"line":348,"column":10},"identifierName":"val"},"name":"val"},"operator":"==","right":{"type":"Identifier","start":12428,"end":12429,"loc":{"start":{"line":348,"column":14},"end":{"line":348,"column":15},"identifierName":"v"},"name":"v"}},"consequent":{"type":"BlockStatement","start":12431,"end":12454,"loc":{"start":{"line":348,"column":17},"end":{"line":350,"column":4}},"body":[{"type":"ExpressionStatement","start":12437,"end":12449,"loc":{"start":{"line":349,"column":4},"end":{"line":349,"column":16}},"expression":{"type":"AssignmentExpression","start":12437,"end":12449,"loc":{"start":{"line":349,"column":4},"end":{"line":349,"column":16}},"operator":"=","left":{"type":"Identifier","start":12437,"end":12442,"loc":{"start":{"line":349,"column":4},"end":{"line":349,"column":9},"identifierName":"found"},"name":"found"},"right":{"type":"BooleanLiteral","start":12445,"end":12449,"loc":{"start":{"line":349,"column":12},"end":{"line":349,"column":16}},"value":true}}}],"directives":[]},"alternate":null}],"directives":[]}},{"type":"ReturnStatement","start":12461,"end":12473,"loc":{"start":{"line":352,"column":2},"end":{"line":352,"column":14}},"argument":{"type":"Identifier","start":12468,"end":12473,"loc":{"start":{"line":352,"column":9},"end":{"line":352,"column":14},"identifierName":"found"},"name":"found"}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'string' and has one of a set of\n\tpredefined values.\n\t@param {number} v - value to check.\n\t@param {string[]} [values=[]] - possible values. If left empty,\n\tany string is considered OK.\n\t@return {boolean} is v a string and does it match one of the predefined values?\n\t@example\n\tthis.isString( true ) // false\n\tthis.isString( [\"a\",\"b\"] ) // false\n\tthis.isString( \"hello world\" ) // true\n\t@private\n\t","start":11850,"end":12280,"loc":{"start":{"line":330,"column":1},"end":{"line":341,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'boolean'.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a boolean?\n\t@example\n\tthis.isBoolean( true ) // true\n\tthis.isBoolean( [true,false] ) // false\n\tthis.isBoolean( \"hello world\" ) // true\n\t@private\n\t","start":12478,"end":12730,"loc":{"start":{"line":354,"column":1},"end":{"line":362,"column":3}}}]},{"type":"ClassMethod","start":12732,"end":12785,"loc":{"start":{"line":363,"column":1},"end":{"line":365,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":12732,"end":12741,"loc":{"start":{"line":363,"column":1},"end":{"line":363,"column":10},"identifierName":"isBoolean"},"name":"isBoolean","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":12743,"end":12744,"loc":{"start":{"line":363,"column":12},"end":{"line":363,"column":13},"identifierName":"v"},"name":"v"}],"body":{"type":"BlockStatement","start":12746,"end":12785,"loc":{"start":{"line":363,"column":15},"end":{"line":365,"column":2}},"body":[{"type":"ReturnStatement","start":12750,"end":12782,"loc":{"start":{"line":364,"column":2},"end":{"line":364,"column":34}},"argument":{"type":"BinaryExpression","start":12758,"end":12780,"loc":{"start":{"line":364,"column":10},"end":{"line":364,"column":32}},"left":{"type":"UnaryExpression","start":12758,"end":12766,"loc":{"start":{"line":364,"column":10},"end":{"line":364,"column":18}},"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":12765,"end":12766,"loc":{"start":{"line":364,"column":17},"end":{"line":364,"column":18},"identifierName":"v"},"name":"v"},"extra":{"parenthesizedArgument":false}},"operator":"===","right":{"type":"StringLiteral","start":12771,"end":12780,"loc":{"start":{"line":364,"column":23},"end":{"line":364,"column":32}},"extra":{"rawValue":"boolean","raw":"\"boolean\""},"value":"boolean"},"extra":{"parenthesized":true,"parenStart":12756}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'boolean'.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a boolean?\n\t@example\n\tthis.isBoolean( true ) // true\n\tthis.isBoolean( [true,false] ) // false\n\tthis.isBoolean( \"hello world\" ) // true\n\t@private\n\t","start":12478,"end":12730,"loc":{"start":{"line":354,"column":1},"end":{"line":362,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a value is a coordinate in the dimensions of the current grid.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a coordinate of the right dimensions?\n\t@public\n\t","start":12789,"end":12976,"loc":{"start":{"line":367,"column":1},"end":{"line":371,"column":3}}}]},{"type":"ClassMethod","start":12978,"end":13130,"loc":{"start":{"line":372,"column":1},"end":{"line":380,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":12978,"end":12990,"loc":{"start":{"line":372,"column":1},"end":{"line":372,"column":13},"identifierName":"isCoordinate"},"name":"isCoordinate","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":12992,"end":12993,"loc":{"start":{"line":372,"column":15},"end":{"line":372,"column":16},"identifierName":"v"},"name":"v"}],"body":{"type":"BlockStatement","start":12995,"end":13130,"loc":{"start":{"line":372,"column":18},"end":{"line":380,"column":2}},"body":[{"type":"IfStatement","start":12999,"end":13049,"loc":{"start":{"line":373,"column":2},"end":{"line":375,"column":3}},"test":{"type":"UnaryExpression","start":13003,"end":13026,"loc":{"start":{"line":373,"column":6},"end":{"line":373,"column":29}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":13006,"end":13024,"loc":{"start":{"line":373,"column":9},"end":{"line":373,"column":27}},"left":{"type":"Identifier","start":13006,"end":13007,"loc":{"start":{"line":373,"column":9},"end":{"line":373,"column":10},"identifierName":"v"},"name":"v"},"operator":"instanceof","right":{"type":"Identifier","start":13019,"end":13024,"loc":{"start":{"line":373,"column":22},"end":{"line":373,"column":27},"identifierName":"Array"},"name":"Array"},"extra":{"parenthesized":true,"parenStart":13004}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":13028,"end":13049,"loc":{"start":{"line":373,"column":31},"end":{"line":375,"column":3}},"body":[{"type":"ReturnStatement","start":13033,"end":13045,"loc":{"start":{"line":374,"column":3},"end":{"line":374,"column":15}},"argument":{"type":"BooleanLiteral","start":13040,"end":13045,"loc":{"start":{"line":374,"column":10},"end":{"line":374,"column":15}},"value":false}}],"directives":[]},"alternate":null},{"type":"IfStatement","start":13052,"end":13113,"loc":{"start":{"line":376,"column":2},"end":{"line":378,"column":3}},"test":{"type":"BinaryExpression","start":13056,"end":13090,"loc":{"start":{"line":376,"column":6},"end":{"line":376,"column":40}},"left":{"type":"UnaryExpression","start":13056,"end":13065,"loc":{"start":{"line":376,"column":6},"end":{"line":376,"column":15}},"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":13057,"end":13065,"loc":{"start":{"line":376,"column":7},"end":{"line":376,"column":15}},"object":{"type":"Identifier","start":13057,"end":13058,"loc":{"start":{"line":376,"column":7},"end":{"line":376,"column":8},"identifierName":"v"},"name":"v"},"property":{"type":"Identifier","start":13059,"end":13065,"loc":{"start":{"line":376,"column":9},"end":{"line":376,"column":15},"identifierName":"length"},"name":"length"},"computed":false},"extra":{"parenthesizedArgument":false}},"operator":"==","right":{"type":"MemberExpression","start":13069,"end":13090,"loc":{"start":{"line":376,"column":19},"end":{"line":376,"column":40}},"object":{"type":"MemberExpression","start":13069,"end":13083,"loc":{"start":{"line":376,"column":19},"end":{"line":376,"column":33}},"object":{"type":"MemberExpression","start":13069,"end":13075,"loc":{"start":{"line":376,"column":19},"end":{"line":376,"column":25}},"object":{"type":"ThisExpression","start":13069,"end":13073,"loc":{"start":{"line":376,"column":19},"end":{"line":376,"column":23}}},"property":{"type":"Identifier","start":13074,"end":13075,"loc":{"start":{"line":376,"column":24},"end":{"line":376,"column":25},"identifierName":"C"},"name":"C"},"computed":false},"property":{"type":"Identifier","start":13076,"end":13083,"loc":{"start":{"line":376,"column":26},"end":{"line":376,"column":33},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":13084,"end":13090,"loc":{"start":{"line":376,"column":34},"end":{"line":376,"column":40},"identifierName":"length"},"name":"length"},"computed":false}},"consequent":{"type":"BlockStatement","start":13092,"end":13113,"loc":{"start":{"line":376,"column":42},"end":{"line":378,"column":3}},"body":[{"type":"ReturnStatement","start":13097,"end":13109,"loc":{"start":{"line":377,"column":3},"end":{"line":377,"column":15}},"argument":{"type":"BooleanLiteral","start":13104,"end":13109,"loc":{"start":{"line":377,"column":10},"end":{"line":377,"column":15}},"value":false}}],"directives":[]},"alternate":null},{"type":"ReturnStatement","start":13116,"end":13127,"loc":{"start":{"line":379,"column":2},"end":{"line":379,"column":13}},"argument":{"type":"BooleanLiteral","start":13123,"end":13127,"loc":{"start":{"line":379,"column":9},"end":{"line":379,"column":13}},"value":true}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if a value is a coordinate in the dimensions of the current grid.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a coordinate of the right dimensions?\n\t@public\n\t","start":12789,"end":12976,"loc":{"start":{"line":367,"column":1},"end":{"line":371,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if the elements of a given parameter are of the right type.\n\tIt throws an error if this is not the case.\n\t@param {anything} p - parameter to check.\n\t@param {string} name - parameter name used for any error messages.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t@param {string} valuetype - type of value, which must be one of \n\t\"Number\", \"NonNegative\", \"Probability\", \"String\", or \"Boolean\". \n\t@param {string[]} values - predefined specific options for the value. \n\tIf left empty, this is ignored.\n\t@private\n\t","start":13134,"end":13752,"loc":{"start":{"line":382,"column":1},"end":{"line":393,"column":3}}}]},{"type":"ClassMethod","start":13754,"end":15149,"loc":{"start":{"line":394,"column":1},"end":{"line":431,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":13754,"end":13772,"loc":{"start":{"line":394,"column":1},"end":{"line":394,"column":19},"identifierName":"confCheckValueType"},"name":"confCheckValueType","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":13774,"end":13775,"loc":{"start":{"line":394,"column":21},"end":{"line":394,"column":22},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":13777,"end":13781,"loc":{"start":{"line":394,"column":24},"end":{"line":394,"column":28},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":13783,"end":13792,"loc":{"start":{"line":394,"column":30},"end":{"line":394,"column":39},"identifierName":"structure"},"name":"structure"},{"type":"Identifier","start":13794,"end":13803,"loc":{"start":{"line":394,"column":41},"end":{"line":394,"column":50},"identifierName":"valuetype"},"name":"valuetype"},{"type":"AssignmentPattern","start":13805,"end":13816,"loc":{"start":{"line":394,"column":52},"end":{"line":394,"column":63}},"left":{"type":"Identifier","start":13805,"end":13811,"loc":{"start":{"line":394,"column":52},"end":{"line":394,"column":58},"identifierName":"values"},"name":"values"},"right":{"type":"ArrayExpression","start":13814,"end":13816,"loc":{"start":{"line":394,"column":61},"end":{"line":394,"column":63}},"elements":[]}}],"body":{"type":"BlockStatement","start":13818,"end":15149,"loc":{"start":{"line":394,"column":65},"end":{"line":431,"column":2}},"body":[{"type":"VariableDeclaration","start":13873,"end":13889,"loc":{"start":{"line":397,"column":2},"end":{"line":397,"column":18}},"declarations":[{"type":"VariableDeclarator","start":13877,"end":13889,"loc":{"start":{"line":397,"column":6},"end":{"line":397,"column":18}},"id":{"type":"Identifier","start":13877,"end":13889,"loc":{"start":{"line":397,"column":6},"end":{"line":397,"column":18},"identifierName":"valuechecker"},"name":"valuechecker","leadingComments":null},"init":null,"leadingComments":null}],"kind":"let","leadingComments":[{"type":"CommentLine","value":" Determine which checkfunction will be used.","start":13824,"end":13870,"loc":{"start":{"line":396,"column":2},"end":{"line":396,"column":48}}}]},{"type":"IfStatement","start":13892,"end":14429,"loc":{"start":{"line":398,"column":2},"end":{"line":411,"column":3}},"test":{"type":"BinaryExpression","start":13896,"end":13917,"loc":{"start":{"line":398,"column":6},"end":{"line":398,"column":27}},"left":{"type":"Identifier","start":13896,"end":13905,"loc":{"start":{"line":398,"column":6},"end":{"line":398,"column":15},"identifierName":"valuetype"},"name":"valuetype"},"operator":"==","right":{"type":"StringLiteral","start":13909,"end":13917,"loc":{"start":{"line":398,"column":19},"end":{"line":398,"column":27}},"extra":{"rawValue":"Number","raw":"\"Number\""},"value":"Number"}},"consequent":{"type":"BlockStatement","start":13919,"end":13956,"loc":{"start":{"line":398,"column":29},"end":{"line":400,"column":3}},"body":[{"type":"ExpressionStatement","start":13924,"end":13952,"loc":{"start":{"line":399,"column":3},"end":{"line":399,"column":31}},"expression":{"type":"AssignmentExpression","start":13924,"end":13952,"loc":{"start":{"line":399,"column":3},"end":{"line":399,"column":31}},"operator":"=","left":{"type":"Identifier","start":13924,"end":13936,"loc":{"start":{"line":399,"column":3},"end":{"line":399,"column":15},"identifierName":"valuechecker"},"name":"valuechecker"},"right":{"type":"MemberExpression","start":13939,"end":13952,"loc":{"start":{"line":399,"column":18},"end":{"line":399,"column":31}},"object":{"type":"ThisExpression","start":13939,"end":13943,"loc":{"start":{"line":399,"column":18},"end":{"line":399,"column":22}}},"property":{"type":"Identifier","start":13944,"end":13952,"loc":{"start":{"line":399,"column":23},"end":{"line":399,"column":31},"identifierName":"isNumber"},"name":"isNumber"},"computed":false}}}],"directives":[]},"alternate":{"type":"IfStatement","start":13962,"end":14429,"loc":{"start":{"line":400,"column":9},"end":{"line":411,"column":3}},"test":{"type":"BinaryExpression","start":13967,"end":13993,"loc":{"start":{"line":400,"column":14},"end":{"line":400,"column":40}},"left":{"type":"Identifier","start":13967,"end":13976,"loc":{"start":{"line":400,"column":14},"end":{"line":400,"column":23},"identifierName":"valuetype"},"name":"valuetype"},"operator":"==","right":{"type":"StringLiteral","start":13980,"end":13993,"loc":{"start":{"line":400,"column":27},"end":{"line":400,"column":40}},"extra":{"rawValue":"NonNegative","raw":"\"NonNegative\""},"value":"NonNegative"}},"consequent":{"type":"BlockStatement","start":13995,"end":14037,"loc":{"start":{"line":400,"column":42},"end":{"line":402,"column":3}},"body":[{"type":"ExpressionStatement","start":14000,"end":14033,"loc":{"start":{"line":401,"column":3},"end":{"line":401,"column":36}},"expression":{"type":"AssignmentExpression","start":14000,"end":14033,"loc":{"start":{"line":401,"column":3},"end":{"line":401,"column":36}},"operator":"=","left":{"type":"Identifier","start":14000,"end":14012,"loc":{"start":{"line":401,"column":3},"end":{"line":401,"column":15},"identifierName":"valuechecker"},"name":"valuechecker"},"right":{"type":"MemberExpression","start":14015,"end":14033,"loc":{"start":{"line":401,"column":18},"end":{"line":401,"column":36}},"object":{"type":"ThisExpression","start":14015,"end":14019,"loc":{"start":{"line":401,"column":18},"end":{"line":401,"column":22}}},"property":{"type":"Identifier","start":14020,"end":14033,"loc":{"start":{"line":401,"column":23},"end":{"line":401,"column":36},"identifierName":"isNonNegative"},"name":"isNonNegative"},"computed":false}}}],"directives":[]},"alternate":{"type":"IfStatement","start":14043,"end":14429,"loc":{"start":{"line":402,"column":9},"end":{"line":411,"column":3}},"test":{"type":"BinaryExpression","start":14048,"end":14074,"loc":{"start":{"line":402,"column":14},"end":{"line":402,"column":40}},"left":{"type":"Identifier","start":14048,"end":14057,"loc":{"start":{"line":402,"column":14},"end":{"line":402,"column":23},"identifierName":"valuetype"},"name":"valuetype"},"operator":"==","right":{"type":"StringLiteral","start":14061,"end":14074,"loc":{"start":{"line":402,"column":27},"end":{"line":402,"column":40}},"extra":{"rawValue":"Probability","raw":"\"Probability\""},"value":"Probability"}},"consequent":{"type":"BlockStatement","start":14076,"end":14118,"loc":{"start":{"line":402,"column":42},"end":{"line":404,"column":3}},"body":[{"type":"ExpressionStatement","start":14081,"end":14114,"loc":{"start":{"line":403,"column":3},"end":{"line":403,"column":36}},"expression":{"type":"AssignmentExpression","start":14081,"end":14114,"loc":{"start":{"line":403,"column":3},"end":{"line":403,"column":36}},"operator":"=","left":{"type":"Identifier","start":14081,"end":14093,"loc":{"start":{"line":403,"column":3},"end":{"line":403,"column":15},"identifierName":"valuechecker"},"name":"valuechecker"},"right":{"type":"MemberExpression","start":14096,"end":14114,"loc":{"start":{"line":403,"column":18},"end":{"line":403,"column":36}},"object":{"type":"ThisExpression","start":14096,"end":14100,"loc":{"start":{"line":403,"column":18},"end":{"line":403,"column":22}}},"property":{"type":"Identifier","start":14101,"end":14114,"loc":{"start":{"line":403,"column":23},"end":{"line":403,"column":36},"identifierName":"isProbability"},"name":"isProbability"},"computed":false}}}],"directives":[]},"alternate":{"type":"IfStatement","start":14124,"end":14429,"loc":{"start":{"line":404,"column":9},"end":{"line":411,"column":3}},"test":{"type":"BinaryExpression","start":14129,"end":14150,"loc":{"start":{"line":404,"column":14},"end":{"line":404,"column":35}},"left":{"type":"Identifier","start":14129,"end":14138,"loc":{"start":{"line":404,"column":14},"end":{"line":404,"column":23},"identifierName":"valuetype"},"name":"valuetype"},"operator":"==","right":{"type":"StringLiteral","start":14142,"end":14150,"loc":{"start":{"line":404,"column":27},"end":{"line":404,"column":35}},"extra":{"rawValue":"String","raw":"\"String\""},"value":"String"}},"consequent":{"type":"BlockStatement","start":14152,"end":14189,"loc":{"start":{"line":404,"column":37},"end":{"line":406,"column":3}},"body":[{"type":"ExpressionStatement","start":14157,"end":14185,"loc":{"start":{"line":405,"column":3},"end":{"line":405,"column":31}},"expression":{"type":"AssignmentExpression","start":14157,"end":14185,"loc":{"start":{"line":405,"column":3},"end":{"line":405,"column":31}},"operator":"=","left":{"type":"Identifier","start":14157,"end":14169,"loc":{"start":{"line":405,"column":3},"end":{"line":405,"column":15},"identifierName":"valuechecker"},"name":"valuechecker"},"right":{"type":"MemberExpression","start":14172,"end":14185,"loc":{"start":{"line":405,"column":18},"end":{"line":405,"column":31}},"object":{"type":"ThisExpression","start":14172,"end":14176,"loc":{"start":{"line":405,"column":18},"end":{"line":405,"column":22}}},"property":{"type":"Identifier","start":14177,"end":14185,"loc":{"start":{"line":405,"column":23},"end":{"line":405,"column":31},"identifierName":"isString"},"name":"isString"},"computed":false}}}],"directives":[]},"alternate":{"type":"IfStatement","start":14195,"end":14429,"loc":{"start":{"line":406,"column":9},"end":{"line":411,"column":3}},"test":{"type":"BinaryExpression","start":14200,"end":14222,"loc":{"start":{"line":406,"column":14},"end":{"line":406,"column":36}},"left":{"type":"Identifier","start":14200,"end":14209,"loc":{"start":{"line":406,"column":14},"end":{"line":406,"column":23},"identifierName":"valuetype"},"name":"valuetype"},"operator":"==","right":{"type":"StringLiteral","start":14213,"end":14222,"loc":{"start":{"line":406,"column":27},"end":{"line":406,"column":36}},"extra":{"rawValue":"Boolean","raw":"\"Boolean\""},"value":"Boolean"}},"consequent":{"type":"BlockStatement","start":14224,"end":14262,"loc":{"start":{"line":406,"column":38},"end":{"line":408,"column":3}},"body":[{"type":"ExpressionStatement","start":14229,"end":14258,"loc":{"start":{"line":407,"column":3},"end":{"line":407,"column":32}},"expression":{"type":"AssignmentExpression","start":14229,"end":14258,"loc":{"start":{"line":407,"column":3},"end":{"line":407,"column":32}},"operator":"=","left":{"type":"Identifier","start":14229,"end":14241,"loc":{"start":{"line":407,"column":3},"end":{"line":407,"column":15},"identifierName":"valuechecker"},"name":"valuechecker"},"right":{"type":"MemberExpression","start":14244,"end":14258,"loc":{"start":{"line":407,"column":18},"end":{"line":407,"column":32}},"object":{"type":"ThisExpression","start":14244,"end":14248,"loc":{"start":{"line":407,"column":18},"end":{"line":407,"column":22}}},"property":{"type":"Identifier","start":14249,"end":14258,"loc":{"start":{"line":407,"column":23},"end":{"line":407,"column":32},"identifierName":"isBoolean"},"name":"isBoolean"},"computed":false}}}],"directives":[]},"alternate":{"type":"BlockStatement","start":14268,"end":14429,"loc":{"start":{"line":408,"column":9},"end":{"line":411,"column":3}},"body":[{"type":"ThrowStatement","start":14273,"end":14425,"loc":{"start":{"line":409,"column":3},"end":{"line":410,"column":88}},"argument":{"type":"BinaryExpression","start":14280,"end":14424,"loc":{"start":{"line":409,"column":10},"end":{"line":410,"column":87}},"left":{"type":"BinaryExpression","start":14280,"end":14334,"loc":{"start":{"line":409,"column":10},"end":{"line":409,"column":64}},"left":{"type":"StringLiteral","start":14280,"end":14327,"loc":{"start":{"line":409,"column":10},"end":{"line":409,"column":57}},"extra":{"rawValue":"Unsupported valuetype in check for parameter ","raw":"\"Unsupported valuetype in check for parameter \""},"value":"Unsupported valuetype in check for parameter "},"operator":"+","right":{"type":"Identifier","start":14330,"end":14334,"loc":{"start":{"line":409,"column":60},"end":{"line":409,"column":64},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":14341,"end":14424,"loc":{"start":{"line":410,"column":4},"end":{"line":410,"column":87}},"extra":{"rawValue":", please choose from: 'Number','NonNegative', 'Probability', 'String', 'Boolean'.","raw":"\", please choose from: 'Number','NonNegative', 'Probability', 'String', 'Boolean'.\""},"value":", please choose from: 'Number','NonNegative', 'Probability', 'String', 'Boolean'."},"extra":{"parenthesized":true,"parenStart":14278}}}],"directives":[]}}}}}},{"type":"VariableDeclaration","start":14435,"end":14536,"loc":{"start":{"line":413,"column":2},"end":{"line":413,"column":103}},"declarations":[{"type":"VariableDeclarator","start":14439,"end":14536,"loc":{"start":{"line":413,"column":6},"end":{"line":413,"column":103}},"id":{"type":"Identifier","start":14439,"end":14446,"loc":{"start":{"line":413,"column":6},"end":{"line":413,"column":13},"identifierName":"message"},"name":"message"},"init":{"type":"BinaryExpression","start":14450,"end":14536,"loc":{"start":{"line":413,"column":17},"end":{"line":413,"column":103}},"left":{"type":"BinaryExpression","start":14450,"end":14530,"loc":{"start":{"line":413,"column":17},"end":{"line":413,"column":97}},"left":{"type":"BinaryExpression","start":14450,"end":14518,"loc":{"start":{"line":413,"column":17},"end":{"line":413,"column":85}},"left":{"type":"BinaryExpression","start":14450,"end":14469,"loc":{"start":{"line":413,"column":17},"end":{"line":413,"column":36}},"left":{"type":"StringLiteral","start":14450,"end":14462,"loc":{"start":{"line":413,"column":17},"end":{"line":413,"column":29}},"extra":{"rawValue":"Parameter ","raw":"\"Parameter \""},"value":"Parameter "},"operator":"+","right":{"type":"Identifier","start":14465,"end":14469,"loc":{"start":{"line":413,"column":32},"end":{"line":413,"column":36},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":14472,"end":14518,"loc":{"start":{"line":413,"column":39},"end":{"line":413,"column":85}},"extra":{"rawValue":" : incorrect type. Expecting values of type ","raw":"\" : incorrect type. Expecting values of type \""},"value":" : incorrect type. Expecting values of type "}},"operator":"+","right":{"type":"Identifier","start":14521,"end":14530,"loc":{"start":{"line":413,"column":88},"end":{"line":413,"column":97},"identifierName":"valuetype"},"name":"valuetype"}},"operator":"+","right":{"type":"StringLiteral","start":14533,"end":14536,"loc":{"start":{"line":413,"column":100},"end":{"line":413,"column":103}},"extra":{"rawValue":".","raw":"\".\""},"value":".","leadingComments":null,"trailingComments":null},"trailingComments":null},"trailingComments":null}],"kind":"let","trailingComments":[{"type":"CommentLine","value":" structure determines how the checker is applied.","start":14543,"end":14594,"loc":{"start":{"line":415,"column":2},"end":{"line":415,"column":53}}}]},{"type":"IfStatement","start":14597,"end":15146,"loc":{"start":{"line":416,"column":2},"end":{"line":430,"column":3}},"test":{"type":"BinaryExpression","start":14601,"end":14627,"loc":{"start":{"line":416,"column":6},"end":{"line":416,"column":32}},"left":{"type":"Identifier","start":14601,"end":14610,"loc":{"start":{"line":416,"column":6},"end":{"line":416,"column":15},"identifierName":"structure"},"name":"structure","leadingComments":null},"operator":"==","right":{"type":"StringLiteral","start":14614,"end":14627,"loc":{"start":{"line":416,"column":19},"end":{"line":416,"column":32}},"extra":{"rawValue":"SingleValue","raw":"\"SingleValue\""},"value":"SingleValue"},"leadingComments":null},"consequent":{"type":"BlockStatement","start":14629,"end":14708,"loc":{"start":{"line":416,"column":34},"end":{"line":418,"column":3}},"body":[{"type":"IfStatement","start":14634,"end":14704,"loc":{"start":{"line":417,"column":3},"end":{"line":417,"column":73}},"test":{"type":"LogicalExpression","start":14638,"end":14684,"loc":{"start":{"line":417,"column":7},"end":{"line":417,"column":53}},"left":{"type":"BinaryExpression","start":14638,"end":14654,"loc":{"start":{"line":417,"column":7},"end":{"line":417,"column":23}},"left":{"type":"Identifier","start":14638,"end":14639,"loc":{"start":{"line":417,"column":7},"end":{"line":417,"column":8},"identifierName":"p"},"name":"p"},"operator":"==","right":{"type":"StringLiteral","start":14643,"end":14654,"loc":{"start":{"line":417,"column":12},"end":{"line":417,"column":23}},"extra":{"rawValue":"undefined","raw":"\"undefined\""},"value":"undefined"}},"operator":"||","right":{"type":"UnaryExpression","start":14658,"end":14684,"loc":{"start":{"line":417,"column":27},"end":{"line":417,"column":53}},"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":14659,"end":14684,"loc":{"start":{"line":417,"column":28},"end":{"line":417,"column":53}},"callee":{"type":"Identifier","start":14659,"end":14671,"loc":{"start":{"line":417,"column":28},"end":{"line":417,"column":40},"identifierName":"valuechecker"},"name":"valuechecker"},"arguments":[{"type":"Identifier","start":14673,"end":14674,"loc":{"start":{"line":417,"column":42},"end":{"line":417,"column":43},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":14676,"end":14682,"loc":{"start":{"line":417,"column":45},"end":{"line":417,"column":51},"identifierName":"values"},"name":"values"}]},"extra":{"parenthesizedArgument":false}}},"consequent":{"type":"BlockStatement","start":14686,"end":14704,"loc":{"start":{"line":417,"column":55},"end":{"line":417,"column":73}},"body":[{"type":"ThrowStatement","start":14688,"end":14702,"loc":{"start":{"line":417,"column":57},"end":{"line":417,"column":71}},"argument":{"type":"Identifier","start":14694,"end":14701,"loc":{"start":{"line":417,"column":63},"end":{"line":417,"column":70},"identifierName":"message"},"name":"message","extra":{"parenthesized":true,"parenStart":14693}}}],"directives":[]},"alternate":null}],"directives":[]},"alternate":{"type":"IfStatement","start":14714,"end":15146,"loc":{"start":{"line":418,"column":9},"end":{"line":430,"column":3}},"test":{"type":"BinaryExpression","start":14719,"end":14743,"loc":{"start":{"line":418,"column":14},"end":{"line":418,"column":38}},"left":{"type":"Identifier","start":14719,"end":14728,"loc":{"start":{"line":418,"column":14},"end":{"line":418,"column":23},"identifierName":"structure"},"name":"structure"},"operator":"==","right":{"type":"StringLiteral","start":14732,"end":14743,"loc":{"start":{"line":418,"column":27},"end":{"line":418,"column":38}},"extra":{"rawValue":"KindArray","raw":"\"KindArray\""},"value":"KindArray"}},"consequent":{"type":"BlockStatement","start":14745,"end":14852,"loc":{"start":{"line":418,"column":40},"end":{"line":422,"column":3}},"body":[{"type":"ForOfStatement","start":14750,"end":14848,"loc":{"start":{"line":419,"column":3},"end":{"line":421,"column":4}},"left":{"type":"VariableDeclaration","start":14755,"end":14760,"loc":{"start":{"line":419,"column":8},"end":{"line":419,"column":13}},"declarations":[{"type":"VariableDeclarator","start":14759,"end":14760,"loc":{"start":{"line":419,"column":12},"end":{"line":419,"column":13}},"id":{"type":"Identifier","start":14759,"end":14760,"loc":{"start":{"line":419,"column":12},"end":{"line":419,"column":13},"identifierName":"i"},"name":"i"},"init":null}],"kind":"let"},"right":{"type":"Identifier","start":14764,"end":14765,"loc":{"start":{"line":419,"column":17},"end":{"line":419,"column":18},"identifierName":"p"},"name":"p"},"body":{"type":"BlockStatement","start":14767,"end":14848,"loc":{"start":{"line":419,"column":20},"end":{"line":421,"column":4}},"body":[{"type":"IfStatement","start":14773,"end":14843,"loc":{"start":{"line":420,"column":4},"end":{"line":420,"column":74}},"test":{"type":"LogicalExpression","start":14777,"end":14823,"loc":{"start":{"line":420,"column":8},"end":{"line":420,"column":54}},"left":{"type":"BinaryExpression","start":14777,"end":14793,"loc":{"start":{"line":420,"column":8},"end":{"line":420,"column":24}},"left":{"type":"Identifier","start":14777,"end":14778,"loc":{"start":{"line":420,"column":8},"end":{"line":420,"column":9},"identifierName":"i"},"name":"i"},"operator":"==","right":{"type":"StringLiteral","start":14782,"end":14793,"loc":{"start":{"line":420,"column":13},"end":{"line":420,"column":24}},"extra":{"rawValue":"undefined","raw":"\"undefined\""},"value":"undefined"}},"operator":"||","right":{"type":"UnaryExpression","start":14797,"end":14823,"loc":{"start":{"line":420,"column":28},"end":{"line":420,"column":54}},"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":14798,"end":14823,"loc":{"start":{"line":420,"column":29},"end":{"line":420,"column":54}},"callee":{"type":"Identifier","start":14798,"end":14810,"loc":{"start":{"line":420,"column":29},"end":{"line":420,"column":41},"identifierName":"valuechecker"},"name":"valuechecker"},"arguments":[{"type":"Identifier","start":14812,"end":14813,"loc":{"start":{"line":420,"column":43},"end":{"line":420,"column":44},"identifierName":"i"},"name":"i"},{"type":"Identifier","start":14815,"end":14821,"loc":{"start":{"line":420,"column":46},"end":{"line":420,"column":52},"identifierName":"values"},"name":"values"}]},"extra":{"parenthesizedArgument":false}}},"consequent":{"type":"BlockStatement","start":14825,"end":14843,"loc":{"start":{"line":420,"column":56},"end":{"line":420,"column":74}},"body":[{"type":"ThrowStatement","start":14827,"end":14841,"loc":{"start":{"line":420,"column":58},"end":{"line":420,"column":72}},"argument":{"type":"Identifier","start":14833,"end":14840,"loc":{"start":{"line":420,"column":64},"end":{"line":420,"column":71},"identifierName":"message"},"name":"message","extra":{"parenthesized":true,"parenStart":14832}}}],"directives":[]},"alternate":null}],"directives":[]}}],"directives":[]},"alternate":{"type":"IfStatement","start":14858,"end":15146,"loc":{"start":{"line":422,"column":9},"end":{"line":430,"column":3}},"test":{"type":"BinaryExpression","start":14863,"end":14888,"loc":{"start":{"line":422,"column":14},"end":{"line":422,"column":39}},"left":{"type":"Identifier","start":14863,"end":14872,"loc":{"start":{"line":422,"column":14},"end":{"line":422,"column":23},"identifierName":"structure"},"name":"structure"},"operator":"==","right":{"type":"StringLiteral","start":14876,"end":14888,"loc":{"start":{"line":422,"column":27},"end":{"line":422,"column":39}},"extra":{"rawValue":"KindMatrix","raw":"\"KindMatrix\""},"value":"KindMatrix"}},"consequent":{"type":"BlockStatement","start":14890,"end":15027,"loc":{"start":{"line":422,"column":41},"end":{"line":428,"column":3}},"body":[{"type":"ForOfStatement","start":14895,"end":15023,"loc":{"start":{"line":423,"column":3},"end":{"line":427,"column":4}},"left":{"type":"VariableDeclaration","start":14900,"end":14905,"loc":{"start":{"line":423,"column":8},"end":{"line":423,"column":13}},"declarations":[{"type":"VariableDeclarator","start":14904,"end":14905,"loc":{"start":{"line":423,"column":12},"end":{"line":423,"column":13}},"id":{"type":"Identifier","start":14904,"end":14905,"loc":{"start":{"line":423,"column":12},"end":{"line":423,"column":13},"identifierName":"i"},"name":"i"},"init":null}],"kind":"let"},"right":{"type":"Identifier","start":14909,"end":14910,"loc":{"start":{"line":423,"column":17},"end":{"line":423,"column":18},"identifierName":"p"},"name":"p"},"body":{"type":"BlockStatement","start":14912,"end":15023,"loc":{"start":{"line":423,"column":20},"end":{"line":427,"column":4}},"body":[{"type":"ForOfStatement","start":14918,"end":15018,"loc":{"start":{"line":424,"column":4},"end":{"line":426,"column":5}},"left":{"type":"VariableDeclaration","start":14923,"end":14928,"loc":{"start":{"line":424,"column":9},"end":{"line":424,"column":14}},"declarations":[{"type":"VariableDeclarator","start":14927,"end":14928,"loc":{"start":{"line":424,"column":13},"end":{"line":424,"column":14}},"id":{"type":"Identifier","start":14927,"end":14928,"loc":{"start":{"line":424,"column":13},"end":{"line":424,"column":14},"identifierName":"j"},"name":"j"},"init":null}],"kind":"let"},"right":{"type":"Identifier","start":14932,"end":14933,"loc":{"start":{"line":424,"column":18},"end":{"line":424,"column":19},"identifierName":"i"},"name":"i"},"body":{"type":"BlockStatement","start":14935,"end":15018,"loc":{"start":{"line":424,"column":21},"end":{"line":426,"column":5}},"body":[{"type":"IfStatement","start":14942,"end":15012,"loc":{"start":{"line":425,"column":5},"end":{"line":425,"column":75}},"test":{"type":"LogicalExpression","start":14946,"end":14992,"loc":{"start":{"line":425,"column":9},"end":{"line":425,"column":55}},"left":{"type":"BinaryExpression","start":14946,"end":14962,"loc":{"start":{"line":425,"column":9},"end":{"line":425,"column":25}},"left":{"type":"Identifier","start":14946,"end":14947,"loc":{"start":{"line":425,"column":9},"end":{"line":425,"column":10},"identifierName":"j"},"name":"j"},"operator":"==","right":{"type":"StringLiteral","start":14951,"end":14962,"loc":{"start":{"line":425,"column":14},"end":{"line":425,"column":25}},"extra":{"rawValue":"undefined","raw":"\"undefined\""},"value":"undefined"}},"operator":"||","right":{"type":"UnaryExpression","start":14966,"end":14992,"loc":{"start":{"line":425,"column":29},"end":{"line":425,"column":55}},"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":14967,"end":14992,"loc":{"start":{"line":425,"column":30},"end":{"line":425,"column":55}},"callee":{"type":"Identifier","start":14967,"end":14979,"loc":{"start":{"line":425,"column":30},"end":{"line":425,"column":42},"identifierName":"valuechecker"},"name":"valuechecker"},"arguments":[{"type":"Identifier","start":14981,"end":14982,"loc":{"start":{"line":425,"column":44},"end":{"line":425,"column":45},"identifierName":"j"},"name":"j"},{"type":"Identifier","start":14984,"end":14990,"loc":{"start":{"line":425,"column":47},"end":{"line":425,"column":53},"identifierName":"values"},"name":"values"}]},"extra":{"parenthesizedArgument":false}}},"consequent":{"type":"BlockStatement","start":14994,"end":15012,"loc":{"start":{"line":425,"column":57},"end":{"line":425,"column":75}},"body":[{"type":"ThrowStatement","start":14996,"end":15010,"loc":{"start":{"line":425,"column":59},"end":{"line":425,"column":73}},"argument":{"type":"Identifier","start":15002,"end":15009,"loc":{"start":{"line":425,"column":65},"end":{"line":425,"column":72},"identifierName":"message"},"name":"message","extra":{"parenthesized":true,"parenStart":15001}}}],"directives":[]},"alternate":null}],"directives":[]}}],"directives":[]}}],"directives":[]},"alternate":{"type":"BlockStatement","start":15033,"end":15146,"loc":{"start":{"line":428,"column":9},"end":{"line":430,"column":3}},"body":[{"type":"ThrowStatement","start":15038,"end":15142,"loc":{"start":{"line":429,"column":3},"end":{"line":429,"column":107}},"argument":{"type":"BinaryExpression","start":15044,"end":15141,"loc":{"start":{"line":429,"column":9},"end":{"line":429,"column":106}},"left":{"type":"BinaryExpression","start":15044,"end":15076,"loc":{"start":{"line":429,"column":9},"end":{"line":429,"column":41}},"left":{"type":"StringLiteral","start":15044,"end":15064,"loc":{"start":{"line":429,"column":9},"end":{"line":429,"column":29}},"extra":{"rawValue":"Unknown structure ","raw":"\"Unknown structure \""},"value":"Unknown structure "},"operator":"+","right":{"type":"Identifier","start":15067,"end":15076,"loc":{"start":{"line":429,"column":32},"end":{"line":429,"column":41},"identifierName":"structure"},"name":"structure"}},"operator":"+","right":{"type":"StringLiteral","start":15079,"end":15141,"loc":{"start":{"line":429,"column":44},"end":{"line":429,"column":106}},"extra":{"rawValue":", please choose 'SingleValue', 'KindArray', or 'KindMatrix'.","raw":"\", please choose 'SingleValue', 'KindArray', or 'KindMatrix'.\""},"value":", please choose 'SingleValue', 'KindArray', or 'KindMatrix'."},"extra":{"parenthesized":true,"parenStart":15043}}}],"directives":[]}}},"leadingComments":[{"type":"CommentLine","value":" structure determines how the checker is applied.","start":14543,"end":14594,"loc":{"start":{"line":415,"column":2},"end":{"line":415,"column":53}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if the elements of a given parameter are of the right type.\n\tIt throws an error if this is not the case.\n\t@param {anything} p - parameter to check.\n\t@param {string} name - parameter name used for any error messages.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t@param {string} valuetype - type of value, which must be one of \n\t\"Number\", \"NonNegative\", \"Probability\", \"String\", or \"Boolean\". \n\t@param {string[]} values - predefined specific options for the value. \n\tIf left empty, this is ignored.\n\t@private\n\t","start":13134,"end":13752,"loc":{"start":{"line":382,"column":1},"end":{"line":393,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a parameter exists and is defined, has the right structure, and if all \n\tits elements are of the correct type. Throw an error if any of these do not hold.\n\t@param {string} name - parameter name used for any error messages.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t@param {string} valuetype - type of value, which must be one of \n\t\"Number\", \"NonNegative\", \"Probability\", \"String\", or \"Boolean\". \n\t@param {string[]} [values =[]] - predefined specific options for the value. \n\tIf left empty, this is ignored.\n\t\n\t@example\n\t* // from inside the confChecker() function of your constraint:\n\t* let checker = new ParameterChecker( this.conf, this.C )\n\t* \n\t* checker.confCheckParameter( \"MY_PARAMETER\", \"KindMatrix\", \"Number\" ) // see Adhesion\n\t* checker.confCheckParameter( \"MY_PARAMETER_2\", \"KindArray\", \"NonNegative\" )\n\t","start":15153,"end":16083,"loc":{"start":{"line":433,"column":1},"end":{"line":449,"column":3}}}]},{"type":"ClassMethod","start":16085,"end":16326,"loc":{"start":{"line":450,"column":1},"end":{"line":455,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":16085,"end":16103,"loc":{"start":{"line":450,"column":1},"end":{"line":450,"column":19},"identifierName":"confCheckParameter"},"name":"confCheckParameter","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":16105,"end":16109,"loc":{"start":{"line":450,"column":21},"end":{"line":450,"column":25},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":16111,"end":16120,"loc":{"start":{"line":450,"column":27},"end":{"line":450,"column":36},"identifierName":"structure"},"name":"structure"},{"type":"Identifier","start":16122,"end":16131,"loc":{"start":{"line":450,"column":38},"end":{"line":450,"column":47},"identifierName":"valuetype"},"name":"valuetype"},{"type":"AssignmentPattern","start":16133,"end":16144,"loc":{"start":{"line":450,"column":49},"end":{"line":450,"column":60}},"left":{"type":"Identifier","start":16133,"end":16139,"loc":{"start":{"line":450,"column":49},"end":{"line":450,"column":55},"identifierName":"values"},"name":"values"},"right":{"type":"ArrayExpression","start":16142,"end":16144,"loc":{"start":{"line":450,"column":58},"end":{"line":450,"column":60}},"elements":[]}}],"body":{"type":"BlockStatement","start":16146,"end":16326,"loc":{"start":{"line":450,"column":62},"end":{"line":455,"column":2}},"body":[{"type":"ExpressionStatement","start":16150,"end":16182,"loc":{"start":{"line":451,"column":2},"end":{"line":451,"column":34}},"expression":{"type":"CallExpression","start":16150,"end":16182,"loc":{"start":{"line":451,"column":2},"end":{"line":451,"column":34}},"callee":{"type":"MemberExpression","start":16150,"end":16174,"loc":{"start":{"line":451,"column":2},"end":{"line":451,"column":26}},"object":{"type":"ThisExpression","start":16150,"end":16154,"loc":{"start":{"line":451,"column":2},"end":{"line":451,"column":6}}},"property":{"type":"Identifier","start":16155,"end":16174,"loc":{"start":{"line":451,"column":7},"end":{"line":451,"column":26},"identifierName":"confCheckPresenceOf"},"name":"confCheckPresenceOf"},"computed":false},"arguments":[{"type":"Identifier","start":16176,"end":16180,"loc":{"start":{"line":451,"column":28},"end":{"line":451,"column":32},"identifierName":"name"},"name":"name"}]}},{"type":"VariableDeclaration","start":16185,"end":16208,"loc":{"start":{"line":452,"column":2},"end":{"line":452,"column":25}},"declarations":[{"type":"VariableDeclarator","start":16189,"end":16208,"loc":{"start":{"line":452,"column":6},"end":{"line":452,"column":25}},"id":{"type":"Identifier","start":16189,"end":16190,"loc":{"start":{"line":452,"column":6},"end":{"line":452,"column":7},"identifierName":"p"},"name":"p"},"init":{"type":"MemberExpression","start":16193,"end":16208,"loc":{"start":{"line":452,"column":10},"end":{"line":452,"column":25}},"object":{"type":"MemberExpression","start":16193,"end":16202,"loc":{"start":{"line":452,"column":10},"end":{"line":452,"column":19}},"object":{"type":"ThisExpression","start":16193,"end":16197,"loc":{"start":{"line":452,"column":10},"end":{"line":452,"column":14}}},"property":{"type":"Identifier","start":16198,"end":16202,"loc":{"start":{"line":452,"column":15},"end":{"line":452,"column":19},"identifierName":"conf"},"name":"conf"},"computed":false},"property":{"type":"Identifier","start":16203,"end":16207,"loc":{"start":{"line":452,"column":20},"end":{"line":452,"column":24},"identifierName":"name"},"name":"name"},"computed":true}}],"kind":"let"},{"type":"ExpressionStatement","start":16211,"end":16256,"loc":{"start":{"line":453,"column":2},"end":{"line":453,"column":47}},"expression":{"type":"CallExpression","start":16211,"end":16256,"loc":{"start":{"line":453,"column":2},"end":{"line":453,"column":47}},"callee":{"type":"MemberExpression","start":16211,"end":16234,"loc":{"start":{"line":453,"column":2},"end":{"line":453,"column":25}},"object":{"type":"ThisExpression","start":16211,"end":16215,"loc":{"start":{"line":453,"column":2},"end":{"line":453,"column":6}}},"property":{"type":"Identifier","start":16216,"end":16234,"loc":{"start":{"line":453,"column":7},"end":{"line":453,"column":25},"identifierName":"confCheckStructure"},"name":"confCheckStructure"},"computed":false},"arguments":[{"type":"Identifier","start":16236,"end":16237,"loc":{"start":{"line":453,"column":27},"end":{"line":453,"column":28},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":16239,"end":16243,"loc":{"start":{"line":453,"column":30},"end":{"line":453,"column":34},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":16245,"end":16254,"loc":{"start":{"line":453,"column":36},"end":{"line":453,"column":45},"identifierName":"structure"},"name":"structure"}]}},{"type":"ExpressionStatement","start":16259,"end":16323,"loc":{"start":{"line":454,"column":2},"end":{"line":454,"column":66}},"expression":{"type":"CallExpression","start":16259,"end":16323,"loc":{"start":{"line":454,"column":2},"end":{"line":454,"column":66}},"callee":{"type":"MemberExpression","start":16259,"end":16282,"loc":{"start":{"line":454,"column":2},"end":{"line":454,"column":25}},"object":{"type":"ThisExpression","start":16259,"end":16263,"loc":{"start":{"line":454,"column":2},"end":{"line":454,"column":6}}},"property":{"type":"Identifier","start":16264,"end":16282,"loc":{"start":{"line":454,"column":7},"end":{"line":454,"column":25},"identifierName":"confCheckValueType"},"name":"confCheckValueType"},"computed":false},"arguments":[{"type":"Identifier","start":16284,"end":16285,"loc":{"start":{"line":454,"column":27},"end":{"line":454,"column":28},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":16287,"end":16291,"loc":{"start":{"line":454,"column":30},"end":{"line":454,"column":34},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":16293,"end":16302,"loc":{"start":{"line":454,"column":36},"end":{"line":454,"column":45},"identifierName":"structure"},"name":"structure"},{"type":"Identifier","start":16304,"end":16313,"loc":{"start":{"line":454,"column":47},"end":{"line":454,"column":56},"identifierName":"valuetype"},"name":"valuetype"},{"type":"Identifier","start":16315,"end":16321,"loc":{"start":{"line":454,"column":58},"end":{"line":454,"column":64},"identifierName":"values"},"name":"values"}]}}],"directives":[]},"leadingComments":[{"type":"CommentBlock","value":"* Check if a parameter exists and is defined, has the right structure, and if all \n\tits elements are of the correct type. Throw an error if any of these do not hold.\n\t@param {string} name - parameter name used for any error messages.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t@param {string} valuetype - type of value, which must be one of \n\t\"Number\", \"NonNegative\", \"Probability\", \"String\", or \"Boolean\". \n\t@param {string[]} [values =[]] - predefined specific options for the value. \n\tIf left empty, this is ignored.\n\t\n\t@example\n\t* // from inside the confChecker() function of your constraint:\n\t* let checker = new ParameterChecker( this.conf, this.C )\n\t* \n\t* checker.confCheckParameter( \"MY_PARAMETER\", \"KindMatrix\", \"Number\" ) // see Adhesion\n\t* checker.confCheckParameter( \"MY_PARAMETER_2\", \"KindArray\", \"NonNegative\" )\n\t","start":15153,"end":16083,"loc":{"start":{"line":433,"column":1},"end":{"line":449,"column":3}}}]}]},"leadingComments":[],"name":"_","trailingComments":[]},{"type":"Identifier","start":16334,"end":16365,"loc":{"start":{"line":460,"column":0},"end":{"line":460,"column":31}},"declaration":{"type":"Identifier","start":16349,"end":16365,"loc":{"start":{"line":460,"column":15},"end":{"line":460,"column":31},"identifierName":"ParameterChecker"},"name":"ParameterChecker"},"name":"_","leadingComments":[],"trailingComments":[]},{"type":"ExportDefaultDeclaration","start":16334,"end":16365,"loc":{"start":{"line":460,"column":0},"end":{"line":460,"column":31}},"declaration":{"type":"ClassDeclaration","start":1001,"end":16332,"loc":{"start":{"line":23,"column":0},"end":{"line":458,"column":1}},"id":{"type":"Identifier","start":1007,"end":1023,"loc":{"start":{"line":23,"column":6},"end":{"line":23,"column":22},"identifierName":"ParameterChecker"},"name":"ParameterChecker","leadingComments":null},"superClass":null,"body":{"type":"ClassBody","start":1024,"end":16332,"loc":{"start":{"line":23,"column":23},"end":{"line":458,"column":1}},"body":[{"type":"ClassMethod","start":1256,"end":1514,"loc":{"start":{"line":30,"column":1},"end":{"line":40,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":1256,"end":1267,"loc":{"start":{"line":30,"column":1},"end":{"line":30,"column":12},"identifierName":"constructor"},"name":"constructor","leadingComments":null},"kind":"constructor","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":1269,"end":1273,"loc":{"start":{"line":30,"column":14},"end":{"line":30,"column":18},"identifierName":"conf"},"name":"conf"},{"type":"Identifier","start":1275,"end":1276,"loc":{"start":{"line":30,"column":20},"end":{"line":30,"column":21},"identifierName":"C"},"name":"C"}],"body":{"type":"BlockStatement","start":1278,"end":1514,"loc":{"start":{"line":30,"column":23},"end":{"line":40,"column":2}},"body":[{"type":"ExpressionStatement","start":1358,"end":1374,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":18}},"expression":{"type":"AssignmentExpression","start":1358,"end":1374,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":18}},"operator":"=","left":{"type":"MemberExpression","start":1358,"end":1367,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":11}},"object":{"type":"ThisExpression","start":1358,"end":1362,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":1363,"end":1367,"loc":{"start":{"line":34,"column":7},"end":{"line":34,"column":11},"identifierName":"conf"},"name":"conf"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":1370,"end":1374,"loc":{"start":{"line":34,"column":14},"end":{"line":34,"column":18},"identifierName":"conf"},"name":"conf","leadingComments":null,"trailingComments":null},"leadingComments":null,"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The configuration object to check parameters in \n\t\t@type {object}","start":1284,"end":1355,"loc":{"start":{"line":32,"column":2},"end":{"line":33,"column":18}}}],"trailingComments":[{"type":"CommentBlock","value":"* The attached CPM. This is used to check if parameter array lengths match\n\t\tthe number of cellkinds\n\t\t@type {CPM}","start":1380,"end":1498,"loc":{"start":{"line":36,"column":2},"end":{"line":38,"column":15}}}]},{"type":"ExpressionStatement","start":1501,"end":1511,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":12}},"expression":{"type":"AssignmentExpression","start":1501,"end":1511,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":12}},"operator":"=","left":{"type":"MemberExpression","start":1501,"end":1507,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":8}},"object":{"type":"ThisExpression","start":1501,"end":1505,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":1506,"end":1507,"loc":{"start":{"line":39,"column":7},"end":{"line":39,"column":8},"identifierName":"C"},"name":"C"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":1510,"end":1511,"loc":{"start":{"line":39,"column":11},"end":{"line":39,"column":12},"identifierName":"C"},"name":"C"},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The attached CPM. This is used to check if parameter array lengths match\n\t\tthe number of cellkinds\n\t\t@type {CPM}","start":1380,"end":1498,"loc":{"start":{"line":36,"column":2},"end":{"line":38,"column":15}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The constructor of the ParameterChecker takes a configuration object.\n\t@param {object} conf - configuration settings as supplied to a constraint, containing the\n\trelevant parameters.\n\t@param {CPM} C - the attached CPM.\n\t","start":1028,"end":1254,"loc":{"start":{"line":25,"column":1},"end":{"line":29,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":" ========= CHECKING PARAMETER PRESENCE ======== ","start":1518,"end":1570,"loc":{"start":{"line":42,"column":1},"end":{"line":42,"column":53}}},{"type":"CommentBlock","value":"* Method to check if a parameter of a given name is present in the conf object \n\tsupplied to the constraint, and if it is defined. Throws an error if this is not the case.\n\t@param {string} name - the name of the parameter, which should be present as a key\n\tin the object.\n\t\n\t@example\n\t* let conf = { MY_PARAMETER : \"something\" }\n\t* // This works, because  MY_PARAMETER is present in conf\n\t* let checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t* \n\t* // There will be an error if MY_PARAMETER is absent/undefined:\n\t* conf = {}\n\t* checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t* conf = { MY_PARAMETER : \"undefined\" }\n\t* checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t","start":1573,"end":2388,"loc":{"start":{"line":44,"column":1},"end":{"line":62,"column":3}}}]},{"type":"ClassMethod","start":2390,"end":2632,"loc":{"start":{"line":63,"column":1},"end":{"line":70,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":2390,"end":2409,"loc":{"start":{"line":63,"column":1},"end":{"line":63,"column":20},"identifierName":"confCheckPresenceOf"},"name":"confCheckPresenceOf","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":2411,"end":2415,"loc":{"start":{"line":63,"column":22},"end":{"line":63,"column":26},"identifierName":"name"},"name":"name"}],"body":{"type":"BlockStatement","start":2417,"end":2632,"loc":{"start":{"line":63,"column":28},"end":{"line":70,"column":2}},"body":[{"type":"IfStatement","start":2421,"end":2534,"loc":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"test":{"type":"UnaryExpression","start":2425,"end":2458,"loc":{"start":{"line":64,"column":6},"end":{"line":64,"column":39}},"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":2426,"end":2458,"loc":{"start":{"line":64,"column":7},"end":{"line":64,"column":39}},"callee":{"type":"MemberExpression","start":2426,"end":2450,"loc":{"start":{"line":64,"column":7},"end":{"line":64,"column":31}},"object":{"type":"MemberExpression","start":2426,"end":2435,"loc":{"start":{"line":64,"column":7},"end":{"line":64,"column":16}},"object":{"type":"ThisExpression","start":2426,"end":2430,"loc":{"start":{"line":64,"column":7},"end":{"line":64,"column":11}}},"property":{"type":"Identifier","start":2431,"end":2435,"loc":{"start":{"line":64,"column":12},"end":{"line":64,"column":16},"identifierName":"conf"},"name":"conf"},"computed":false},"property":{"type":"Identifier","start":2436,"end":2450,"loc":{"start":{"line":64,"column":17},"end":{"line":64,"column":31},"identifierName":"hasOwnProperty"},"name":"hasOwnProperty"},"computed":false},"arguments":[{"type":"Identifier","start":2452,"end":2456,"loc":{"start":{"line":64,"column":33},"end":{"line":64,"column":37},"identifierName":"name"},"name":"name"}]},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":2460,"end":2534,"loc":{"start":{"line":64,"column":41},"end":{"line":66,"column":3}},"body":[{"type":"ThrowStatement","start":2465,"end":2530,"loc":{"start":{"line":65,"column":3},"end":{"line":65,"column":68}},"argument":{"type":"BinaryExpression","start":2472,"end":2528,"loc":{"start":{"line":65,"column":10},"end":{"line":65,"column":66}},"left":{"type":"BinaryExpression","start":2472,"end":2503,"loc":{"start":{"line":65,"column":10},"end":{"line":65,"column":41}},"left":{"type":"StringLiteral","start":2472,"end":2496,"loc":{"start":{"line":65,"column":10},"end":{"line":65,"column":34}},"extra":{"rawValue":"Cannot find parameter ","raw":"\"Cannot find parameter \""},"value":"Cannot find parameter "},"operator":"+","right":{"type":"Identifier","start":2499,"end":2503,"loc":{"start":{"line":65,"column":37},"end":{"line":65,"column":41},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":2506,"end":2528,"loc":{"start":{"line":65,"column":44},"end":{"line":65,"column":66}},"extra":{"rawValue":" in the conf object!","raw":"\" in the conf object!\""},"value":" in the conf object!"},"extra":{"parenthesized":true,"parenStart":2470}}}],"directives":[]},"alternate":null},{"type":"IfStatement","start":2537,"end":2629,"loc":{"start":{"line":67,"column":2},"end":{"line":69,"column":3}},"test":{"type":"BinaryExpression","start":2541,"end":2571,"loc":{"start":{"line":67,"column":6},"end":{"line":67,"column":36}},"left":{"type":"MemberExpression","start":2541,"end":2556,"loc":{"start":{"line":67,"column":6},"end":{"line":67,"column":21}},"object":{"type":"MemberExpression","start":2541,"end":2550,"loc":{"start":{"line":67,"column":6},"end":{"line":67,"column":15}},"object":{"type":"ThisExpression","start":2541,"end":2545,"loc":{"start":{"line":67,"column":6},"end":{"line":67,"column":10}}},"property":{"type":"Identifier","start":2546,"end":2550,"loc":{"start":{"line":67,"column":11},"end":{"line":67,"column":15},"identifierName":"conf"},"name":"conf"},"computed":false},"property":{"type":"Identifier","start":2551,"end":2555,"loc":{"start":{"line":67,"column":16},"end":{"line":67,"column":20},"identifierName":"name"},"name":"name"},"computed":true},"operator":"==","right":{"type":"StringLiteral","start":2560,"end":2571,"loc":{"start":{"line":67,"column":25},"end":{"line":67,"column":36}},"extra":{"rawValue":"undefined","raw":"\"undefined\""},"value":"undefined"}},"consequent":{"type":"BlockStatement","start":2573,"end":2629,"loc":{"start":{"line":67,"column":38},"end":{"line":69,"column":3}},"body":[{"type":"ThrowStatement","start":2578,"end":2625,"loc":{"start":{"line":68,"column":3},"end":{"line":68,"column":50}},"argument":{"type":"BinaryExpression","start":2585,"end":2623,"loc":{"start":{"line":68,"column":10},"end":{"line":68,"column":48}},"left":{"type":"BinaryExpression","start":2585,"end":2604,"loc":{"start":{"line":68,"column":10},"end":{"line":68,"column":29}},"left":{"type":"StringLiteral","start":2585,"end":2597,"loc":{"start":{"line":68,"column":10},"end":{"line":68,"column":22}},"extra":{"rawValue":"Parameter ","raw":"\"Parameter \""},"value":"Parameter "},"operator":"+","right":{"type":"Identifier","start":2600,"end":2604,"loc":{"start":{"line":68,"column":25},"end":{"line":68,"column":29},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":2607,"end":2623,"loc":{"start":{"line":68,"column":32},"end":{"line":68,"column":48}},"extra":{"rawValue":" is undefined!","raw":"\" is undefined!\""},"value":" is undefined!"},"extra":{"parenthesized":true,"parenStart":2583}}}],"directives":[]},"alternate":null}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":" ========= CHECKING PARAMETER PRESENCE ======== ","start":1518,"end":1570,"loc":{"start":{"line":42,"column":1},"end":{"line":42,"column":53}}},{"type":"CommentBlock","value":"* Method to check if a parameter of a given name is present in the conf object \n\tsupplied to the constraint, and if it is defined. Throws an error if this is not the case.\n\t@param {string} name - the name of the parameter, which should be present as a key\n\tin the object.\n\t\n\t@example\n\t* let conf = { MY_PARAMETER : \"something\" }\n\t* // This works, because  MY_PARAMETER is present in conf\n\t* let checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t* \n\t* // There will be an error if MY_PARAMETER is absent/undefined:\n\t* conf = {}\n\t* checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t* conf = { MY_PARAMETER : \"undefined\" }\n\t* checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t","start":1573,"end":2388,"loc":{"start":{"line":44,"column":1},"end":{"line":62,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":" ========= CHECKING PARAMETER STRUCTURE ======== ","start":2636,"end":2689,"loc":{"start":{"line":72,"column":1},"end":{"line":72,"column":54}}},{"type":"CommentBlock","value":"* Helper function. Some parameters need to be specified for each {@link CellKind}, \n\tso to check those we first need to know the number of cellkinds on the CPM.\n\tThis number is retrieved from the CPM or added to it if it isn't there yet.\n\t@param {number} n_default - a number of cellkinds (including background), which is used\n\tto set the number of cellkinds in the CPM if it isn't there yet.\n\t@return {number} the number of non-background cellkinds as cached in the CPM.\n\t@private\n\t","start":2693,"end":3180,"loc":{"start":{"line":74,"column":1},"end":{"line":81,"column":3}}}]},{"type":"ClassMethod","start":3182,"end":3407,"loc":{"start":{"line":82,"column":1},"end":{"line":90,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":3182,"end":3200,"loc":{"start":{"line":82,"column":1},"end":{"line":82,"column":19},"identifierName":"confCheckCellKinds"},"name":"confCheckCellKinds","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":3202,"end":3211,"loc":{"start":{"line":82,"column":21},"end":{"line":82,"column":30},"identifierName":"n_default"},"name":"n_default"}],"body":{"type":"BlockStatement","start":3213,"end":3407,"loc":{"start":{"line":82,"column":32},"end":{"line":90,"column":2}},"body":[{"type":"IfStatement","start":3217,"end":3295,"loc":{"start":{"line":83,"column":2},"end":{"line":85,"column":3}},"test":{"type":"UnaryExpression","start":3221,"end":3228,"loc":{"start":{"line":83,"column":6},"end":{"line":83,"column":13}},"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":3222,"end":3228,"loc":{"start":{"line":83,"column":7},"end":{"line":83,"column":13}},"object":{"type":"ThisExpression","start":3222,"end":3226,"loc":{"start":{"line":83,"column":7},"end":{"line":83,"column":11}}},"property":{"type":"Identifier","start":3227,"end":3228,"loc":{"start":{"line":83,"column":12},"end":{"line":83,"column":13},"identifierName":"C"},"name":"C"},"computed":false},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":3230,"end":3295,"loc":{"start":{"line":83,"column":15},"end":{"line":85,"column":3}},"body":[{"type":"ThrowStatement","start":3235,"end":3291,"loc":{"start":{"line":84,"column":3},"end":{"line":84,"column":59}},"argument":{"type":"StringLiteral","start":3241,"end":3290,"loc":{"start":{"line":84,"column":9},"end":{"line":84,"column":58}},"extra":{"rawValue":"confCheck method called before addition to CPM!","raw":"\"confCheck method called before addition to CPM!\"","parenthesized":true,"parenStart":3240},"value":"confCheck method called before addition to CPM!"}}],"directives":[]},"alternate":null},{"type":"IfStatement","start":3298,"end":3375,"loc":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"test":{"type":"UnaryExpression","start":3302,"end":3329,"loc":{"start":{"line":86,"column":6},"end":{"line":86,"column":33}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":3304,"end":3328,"loc":{"start":{"line":86,"column":8},"end":{"line":86,"column":32}},"left":{"type":"StringLiteral","start":3304,"end":3318,"loc":{"start":{"line":86,"column":8},"end":{"line":86,"column":22}},"extra":{"rawValue":"n_cell_kinds","raw":"\"n_cell_kinds\""},"value":"n_cell_kinds"},"operator":"in","right":{"type":"MemberExpression","start":3322,"end":3328,"loc":{"start":{"line":86,"column":26},"end":{"line":86,"column":32}},"object":{"type":"ThisExpression","start":3322,"end":3326,"loc":{"start":{"line":86,"column":26},"end":{"line":86,"column":30}}},"property":{"type":"Identifier","start":3327,"end":3328,"loc":{"start":{"line":86,"column":31},"end":{"line":86,"column":32},"identifierName":"C"},"name":"C"},"computed":false},"extra":{"parenthesized":true,"parenStart":3303}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":3331,"end":3375,"loc":{"start":{"line":86,"column":35},"end":{"line":88,"column":3}},"body":[{"type":"ExpressionStatement","start":3336,"end":3371,"loc":{"start":{"line":87,"column":3},"end":{"line":87,"column":38}},"expression":{"type":"AssignmentExpression","start":3336,"end":3371,"loc":{"start":{"line":87,"column":3},"end":{"line":87,"column":38}},"operator":"=","left":{"type":"MemberExpression","start":3336,"end":3355,"loc":{"start":{"line":87,"column":3},"end":{"line":87,"column":22}},"object":{"type":"MemberExpression","start":3336,"end":3342,"loc":{"start":{"line":87,"column":3},"end":{"line":87,"column":9}},"object":{"type":"ThisExpression","start":3336,"end":3340,"loc":{"start":{"line":87,"column":3},"end":{"line":87,"column":7}}},"property":{"type":"Identifier","start":3341,"end":3342,"loc":{"start":{"line":87,"column":8},"end":{"line":87,"column":9},"identifierName":"C"},"name":"C"},"computed":false},"property":{"type":"Identifier","start":3343,"end":3355,"loc":{"start":{"line":87,"column":10},"end":{"line":87,"column":22},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds"},"computed":false},"right":{"type":"BinaryExpression","start":3358,"end":3371,"loc":{"start":{"line":87,"column":25},"end":{"line":87,"column":38}},"left":{"type":"Identifier","start":3358,"end":3367,"loc":{"start":{"line":87,"column":25},"end":{"line":87,"column":34},"identifierName":"n_default"},"name":"n_default"},"operator":"-","right":{"type":"NumericLiteral","start":3370,"end":3371,"loc":{"start":{"line":87,"column":37},"end":{"line":87,"column":38}},"extra":{"rawValue":1,"raw":"1"},"value":1}}}}],"directives":[]},"alternate":null},{"type":"ReturnStatement","start":3378,"end":3404,"loc":{"start":{"line":89,"column":2},"end":{"line":89,"column":28}},"argument":{"type":"MemberExpression","start":3385,"end":3404,"loc":{"start":{"line":89,"column":9},"end":{"line":89,"column":28}},"object":{"type":"MemberExpression","start":3385,"end":3391,"loc":{"start":{"line":89,"column":9},"end":{"line":89,"column":15}},"object":{"type":"ThisExpression","start":3385,"end":3389,"loc":{"start":{"line":89,"column":9},"end":{"line":89,"column":13}}},"property":{"type":"Identifier","start":3390,"end":3391,"loc":{"start":{"line":89,"column":14},"end":{"line":89,"column":15},"identifierName":"C"},"name":"C"},"computed":false},"property":{"type":"Identifier","start":3392,"end":3404,"loc":{"start":{"line":89,"column":16},"end":{"line":89,"column":28},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds"},"computed":false}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":" ========= CHECKING PARAMETER STRUCTURE ======== ","start":2636,"end":2689,"loc":{"start":{"line":72,"column":1},"end":{"line":72,"column":54}}},{"type":"CommentBlock","value":"* Helper function. Some parameters need to be specified for each {@link CellKind}, \n\tso to check those we first need to know the number of cellkinds on the CPM.\n\tThis number is retrieved from the CPM or added to it if it isn't there yet.\n\t@param {number} n_default - a number of cellkinds (including background), which is used\n\tto set the number of cellkinds in the CPM if it isn't there yet.\n\t@return {number} the number of non-background cellkinds as cached in the CPM.\n\t@private\n\t","start":2693,"end":3180,"loc":{"start":{"line":74,"column":1},"end":{"line":81,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Parameter structure for parameters that should come as a single value.\n\tThis value can be of type string, boolean, or number.\n\t@example\n\t* let ACT_MEAN = \"arithmetic\" // Is a SingleValue parameter\n\t@typedef {number|string|boolean} SingleValue\n\t","start":3411,"end":3661,"loc":{"start":{"line":92,"column":1},"end":{"line":97,"column":3}}},{"type":"CommentBlock","value":"* Check if a parameter consists of a single value (rather than an object or array),\n\twhich can be a string, number, or boolean. \n\t@param {SingleValue} p - the parameter to check, which must be a single\n\tstring/number/boolean value.\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a single value.\n\t\n\t@example\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = true, p2 = 1, p3 = \"hi\", p4 = [1,2]\n\t* // Nothing happens for parameters of type SingleValue:\n\t* checker.confCheckStructureSingle( p1, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p2, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" )\n\t*\n\t* // This will throw an error because p4 is an array.\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" )\n\t","start":3665,"end":4486,"loc":{"start":{"line":99,"column":1},"end":{"line":116,"column":3}}}]},{"type":"ClassMethod","start":4488,"end":4805,"loc":{"start":{"line":117,"column":1},"end":{"line":128,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":4488,"end":4512,"loc":{"start":{"line":117,"column":1},"end":{"line":117,"column":25},"identifierName":"confCheckStructureSingle"},"name":"confCheckStructureSingle","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":4514,"end":4515,"loc":{"start":{"line":117,"column":27},"end":{"line":117,"column":28},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":4517,"end":4521,"loc":{"start":{"line":117,"column":30},"end":{"line":117,"column":34},"identifierName":"name"},"name":"name"}],"body":{"type":"BlockStatement","start":4523,"end":4805,"loc":{"start":{"line":117,"column":36},"end":{"line":128,"column":2}},"body":[{"type":"VariableDeclaration","start":4627,"end":4646,"loc":{"start":{"line":121,"column":2},"end":{"line":121,"column":21}},"declarations":[{"type":"VariableDeclarator","start":4631,"end":4646,"loc":{"start":{"line":121,"column":6},"end":{"line":121,"column":21}},"id":{"type":"Identifier","start":4631,"end":4635,"loc":{"start":{"line":121,"column":6},"end":{"line":121,"column":10},"identifierName":"type"},"name":"type","leadingComments":null},"init":{"type":"UnaryExpression","start":4638,"end":4646,"loc":{"start":{"line":121,"column":13},"end":{"line":121,"column":21}},"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":4645,"end":4646,"loc":{"start":{"line":121,"column":20},"end":{"line":121,"column":21},"identifierName":"p"},"name":"p"},"extra":{"parenthesizedArgument":false}},"leadingComments":null}],"kind":"let","leadingComments":[{"type":"CommentLine","value":" single values are of type string, number, or boolean. If that is the case,","start":4529,"end":4606,"loc":{"start":{"line":119,"column":2},"end":{"line":119,"column":79}}},{"type":"CommentLine","value":" just return.","start":4609,"end":4624,"loc":{"start":{"line":120,"column":2},"end":{"line":120,"column":17}}}]},{"type":"IfStatement","start":4649,"end":4801,"loc":{"start":{"line":122,"column":2},"end":{"line":126,"column":3}},"test":{"type":"LogicalExpression","start":4653,"end":4710,"loc":{"start":{"line":122,"column":6},"end":{"line":122,"column":63}},"left":{"type":"LogicalExpression","start":4653,"end":4689,"loc":{"start":{"line":122,"column":6},"end":{"line":122,"column":42}},"left":{"type":"BinaryExpression","start":4653,"end":4669,"loc":{"start":{"line":122,"column":6},"end":{"line":122,"column":22}},"left":{"type":"Identifier","start":4653,"end":4657,"loc":{"start":{"line":122,"column":6},"end":{"line":122,"column":10},"identifierName":"type"},"name":"type"},"operator":"==","right":{"type":"StringLiteral","start":4661,"end":4669,"loc":{"start":{"line":122,"column":14},"end":{"line":122,"column":22}},"extra":{"rawValue":"string","raw":"\"string\""},"value":"string"}},"operator":"||","right":{"type":"BinaryExpression","start":4673,"end":4689,"loc":{"start":{"line":122,"column":26},"end":{"line":122,"column":42}},"left":{"type":"Identifier","start":4673,"end":4677,"loc":{"start":{"line":122,"column":26},"end":{"line":122,"column":30},"identifierName":"type"},"name":"type"},"operator":"==","right":{"type":"StringLiteral","start":4681,"end":4689,"loc":{"start":{"line":122,"column":34},"end":{"line":122,"column":42}},"extra":{"rawValue":"number","raw":"\"number\""},"value":"number"}}},"operator":"||","right":{"type":"BinaryExpression","start":4693,"end":4710,"loc":{"start":{"line":122,"column":46},"end":{"line":122,"column":63}},"left":{"type":"Identifier","start":4693,"end":4697,"loc":{"start":{"line":122,"column":46},"end":{"line":122,"column":50},"identifierName":"type"},"name":"type"},"operator":"==","right":{"type":"StringLiteral","start":4701,"end":4710,"loc":{"start":{"line":122,"column":54},"end":{"line":122,"column":63}},"extra":{"rawValue":"boolean","raw":"\"boolean\""},"value":"boolean"}}},"consequent":{"type":"BlockStatement","start":4712,"end":4727,"loc":{"start":{"line":122,"column":65},"end":{"line":124,"column":3}},"body":[{"type":"ReturnStatement","start":4717,"end":4723,"loc":{"start":{"line":123,"column":3},"end":{"line":123,"column":9}},"argument":null}],"directives":[]},"alternate":{"type":"BlockStatement","start":4733,"end":4801,"loc":{"start":{"line":124,"column":9},"end":{"line":126,"column":3}},"body":[{"type":"ThrowStatement","start":4738,"end":4797,"loc":{"start":{"line":125,"column":3},"end":{"line":125,"column":62}},"argument":{"type":"BinaryExpression","start":4745,"end":4795,"loc":{"start":{"line":125,"column":10},"end":{"line":125,"column":60}},"left":{"type":"BinaryExpression","start":4745,"end":4764,"loc":{"start":{"line":125,"column":10},"end":{"line":125,"column":29}},"left":{"type":"StringLiteral","start":4745,"end":4757,"loc":{"start":{"line":125,"column":10},"end":{"line":125,"column":22}},"extra":{"rawValue":"Parameter ","raw":"\"Parameter \""},"value":"Parameter "},"operator":"+","right":{"type":"Identifier","start":4760,"end":4764,"loc":{"start":{"line":125,"column":25},"end":{"line":125,"column":29},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":4767,"end":4795,"loc":{"start":{"line":125,"column":32},"end":{"line":125,"column":60}},"extra":{"rawValue":" should be a single value!","raw":"\" should be a single value!\""},"value":" should be a single value!"},"extra":{"parenthesized":true,"parenStart":4743}}}],"directives":[]}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Parameter structure for parameters that should come as a single value.\n\tThis value can be of type string, boolean, or number.\n\t@example\n\t* let ACT_MEAN = \"arithmetic\" // Is a SingleValue parameter\n\t@typedef {number|string|boolean} SingleValue\n\t","start":3411,"end":3661,"loc":{"start":{"line":92,"column":1},"end":{"line":97,"column":3}}},{"type":"CommentBlock","value":"* Check if a parameter consists of a single value (rather than an object or array),\n\twhich can be a string, number, or boolean. \n\t@param {SingleValue} p - the parameter to check, which must be a single\n\tstring/number/boolean value.\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a single value.\n\t\n\t@example\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = true, p2 = 1, p3 = \"hi\", p4 = [1,2]\n\t* // Nothing happens for parameters of type SingleValue:\n\t* checker.confCheckStructureSingle( p1, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p2, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" )\n\t*\n\t* // This will throw an error because p4 is an array.\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" )\n\t","start":3665,"end":4486,"loc":{"start":{"line":99,"column":1},"end":{"line":116,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Parameter structure for parameters that should come in an array with an element\n\tfor each {@link CellKind} including background.\n\t@example\n\t* let V = [0,5] // Is a KindArray parameter\n\t@typedef {Array} KindArray\n\t","start":4809,"end":5028,"loc":{"start":{"line":130,"column":1},"end":{"line":135,"column":3}}},{"type":"CommentBlock","value":"* Check if a parameter has a {@link KindArray} structure.\n\t@param {KindArray} p - the parameter to check\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a {@link KindArray}.\n\t\n\t@example\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = [1,1], p2 = [\"hi\",\"hi\"], p3 = \"hi\", p4 = [1,2,3]\n\t* // Nothing happens when parameters are indeed arrays of length 2\n\t* // (regardless of what type of array)\n\t* checker.confCheckStructureKindArray( p1, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureKindArray( p2, \"MY_PARAMETER\" )\n\t*\n\t* // You'll get an error when p is no array, or when \n\t* // its length doesn't match the number of cellkinds:\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" )\n\t","start":5032,"end":5918,"loc":{"start":{"line":137,"column":1},"end":{"line":155,"column":3}}}]},{"type":"ClassMethod","start":5920,"end":6361,"loc":{"start":{"line":156,"column":1},"end":{"line":167,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":5920,"end":5947,"loc":{"start":{"line":156,"column":1},"end":{"line":156,"column":28},"identifierName":"confCheckStructureKindArray"},"name":"confCheckStructureKindArray","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":5949,"end":5950,"loc":{"start":{"line":156,"column":30},"end":{"line":156,"column":31},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":5952,"end":5956,"loc":{"start":{"line":156,"column":33},"end":{"line":156,"column":37},"identifierName":"name"},"name":"name"}],"body":{"type":"BlockStatement","start":5958,"end":6361,"loc":{"start":{"line":156,"column":39},"end":{"line":167,"column":2}},"body":[{"type":"IfStatement","start":5962,"end":6051,"loc":{"start":{"line":157,"column":2},"end":{"line":159,"column":3}},"test":{"type":"UnaryExpression","start":5966,"end":5987,"loc":{"start":{"line":157,"column":6},"end":{"line":157,"column":27}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":5968,"end":5986,"loc":{"start":{"line":157,"column":8},"end":{"line":157,"column":26}},"left":{"type":"Identifier","start":5968,"end":5969,"loc":{"start":{"line":157,"column":8},"end":{"line":157,"column":9},"identifierName":"p"},"name":"p"},"operator":"instanceof","right":{"type":"Identifier","start":5981,"end":5986,"loc":{"start":{"line":157,"column":21},"end":{"line":157,"column":26},"identifierName":"Array"},"name":"Array"},"extra":{"parenthesized":true,"parenStart":5967}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":5989,"end":6051,"loc":{"start":{"line":157,"column":29},"end":{"line":159,"column":3}},"body":[{"type":"ThrowStatement","start":5994,"end":6047,"loc":{"start":{"line":158,"column":3},"end":{"line":158,"column":56}},"argument":{"type":"BinaryExpression","start":6001,"end":6045,"loc":{"start":{"line":158,"column":10},"end":{"line":158,"column":54}},"left":{"type":"BinaryExpression","start":6001,"end":6020,"loc":{"start":{"line":158,"column":10},"end":{"line":158,"column":29}},"left":{"type":"StringLiteral","start":6001,"end":6013,"loc":{"start":{"line":158,"column":10},"end":{"line":158,"column":22}},"extra":{"rawValue":"Parameter ","raw":"\"Parameter \""},"value":"Parameter "},"operator":"+","right":{"type":"Identifier","start":6016,"end":6020,"loc":{"start":{"line":158,"column":25},"end":{"line":158,"column":29},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":6023,"end":6045,"loc":{"start":{"line":158,"column":32},"end":{"line":158,"column":54}},"extra":{"rawValue":" should be an array!","raw":"\" should be an array!\""},"value":" should be an array!"},"extra":{"parenthesized":true,"parenStart":5999}}}],"directives":[],"trailingComments":null},"alternate":null,"trailingComments":[{"type":"CommentLine","value":" Check if the array has an element for each cellkind incl. background","start":6058,"end":6129,"loc":{"start":{"line":161,"column":2},"end":{"line":161,"column":73}}}]},{"type":"VariableDeclaration","start":6132,"end":6186,"loc":{"start":{"line":162,"column":2},"end":{"line":162,"column":56}},"declarations":[{"type":"VariableDeclarator","start":6136,"end":6186,"loc":{"start":{"line":162,"column":6},"end":{"line":162,"column":56}},"id":{"type":"Identifier","start":6136,"end":6148,"loc":{"start":{"line":162,"column":6},"end":{"line":162,"column":18},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds","leadingComments":null},"init":{"type":"CallExpression","start":6151,"end":6186,"loc":{"start":{"line":162,"column":21},"end":{"line":162,"column":56}},"callee":{"type":"MemberExpression","start":6151,"end":6174,"loc":{"start":{"line":162,"column":21},"end":{"line":162,"column":44}},"object":{"type":"ThisExpression","start":6151,"end":6155,"loc":{"start":{"line":162,"column":21},"end":{"line":162,"column":25}}},"property":{"type":"Identifier","start":6156,"end":6174,"loc":{"start":{"line":162,"column":26},"end":{"line":162,"column":44},"identifierName":"confCheckCellKinds"},"name":"confCheckCellKinds"},"computed":false},"arguments":[{"type":"MemberExpression","start":6176,"end":6184,"loc":{"start":{"line":162,"column":46},"end":{"line":162,"column":54}},"object":{"type":"Identifier","start":6176,"end":6177,"loc":{"start":{"line":162,"column":46},"end":{"line":162,"column":47},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":6178,"end":6184,"loc":{"start":{"line":162,"column":48},"end":{"line":162,"column":54},"identifierName":"length"},"name":"length"},"computed":false}]},"leadingComments":null}],"kind":"let","leadingComments":[{"type":"CommentLine","value":" Check if the array has an element for each cellkind incl. background","start":6058,"end":6129,"loc":{"start":{"line":161,"column":2},"end":{"line":161,"column":73}}}]},{"type":"IfStatement","start":6189,"end":6358,"loc":{"start":{"line":163,"column":2},"end":{"line":166,"column":3}},"test":{"type":"BinaryExpression","start":6193,"end":6235,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":48}},"left":{"type":"MemberExpression","start":6193,"end":6215,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":28}},"object":{"type":"MemberExpression","start":6193,"end":6208,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":21}},"object":{"type":"MemberExpression","start":6193,"end":6202,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":15}},"object":{"type":"ThisExpression","start":6193,"end":6197,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":10}}},"property":{"type":"Identifier","start":6198,"end":6202,"loc":{"start":{"line":163,"column":11},"end":{"line":163,"column":15},"identifierName":"conf"},"name":"conf"},"computed":false},"property":{"type":"Identifier","start":6203,"end":6207,"loc":{"start":{"line":163,"column":16},"end":{"line":163,"column":20},"identifierName":"name"},"name":"name"},"computed":true},"property":{"type":"Identifier","start":6209,"end":6215,"loc":{"start":{"line":163,"column":22},"end":{"line":163,"column":28},"identifierName":"length"},"name":"length"},"computed":false},"operator":"!=","right":{"type":"BinaryExpression","start":6219,"end":6235,"loc":{"start":{"line":163,"column":32},"end":{"line":163,"column":48}},"left":{"type":"Identifier","start":6219,"end":6231,"loc":{"start":{"line":163,"column":32},"end":{"line":163,"column":44},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds"},"operator":"+","right":{"type":"NumericLiteral","start":6234,"end":6235,"loc":{"start":{"line":163,"column":47},"end":{"line":163,"column":48}},"extra":{"rawValue":1,"raw":"1"},"value":1}}},"consequent":{"type":"BlockStatement","start":6237,"end":6358,"loc":{"start":{"line":163,"column":50},"end":{"line":166,"column":3}},"body":[{"type":"ThrowStatement","start":6242,"end":6354,"loc":{"start":{"line":164,"column":3},"end":{"line":165,"column":82}},"argument":{"type":"BinaryExpression","start":6249,"end":6352,"loc":{"start":{"line":164,"column":10},"end":{"line":165,"column":80}},"left":{"type":"BinaryExpression","start":6249,"end":6268,"loc":{"start":{"line":164,"column":10},"end":{"line":164,"column":29}},"left":{"type":"StringLiteral","start":6249,"end":6261,"loc":{"start":{"line":164,"column":10},"end":{"line":164,"column":22}},"extra":{"rawValue":"Parameter ","raw":"\"Parameter \""},"value":"Parameter "},"operator":"+","right":{"type":"Identifier","start":6264,"end":6268,"loc":{"start":{"line":164,"column":25},"end":{"line":164,"column":29},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":6275,"end":6352,"loc":{"start":{"line":165,"column":3},"end":{"line":165,"column":80}},"extra":{"rawValue":" should be an array with an element for each cellkind including background!","raw":"\" should be an array with an element for each cellkind including background!\""},"value":" should be an array with an element for each cellkind including background!"},"extra":{"parenthesized":true,"parenStart":6247}}}],"directives":[]},"alternate":null}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Parameter structure for parameters that should come in an array with an element\n\tfor each {@link CellKind} including background.\n\t@example\n\t* let V = [0,5] // Is a KindArray parameter\n\t@typedef {Array} KindArray\n\t","start":4809,"end":5028,"loc":{"start":{"line":130,"column":1},"end":{"line":135,"column":3}}},{"type":"CommentBlock","value":"* Check if a parameter has a {@link KindArray} structure.\n\t@param {KindArray} p - the parameter to check\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a {@link KindArray}.\n\t\n\t@example\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = [1,1], p2 = [\"hi\",\"hi\"], p3 = \"hi\", p4 = [1,2,3]\n\t* // Nothing happens when parameters are indeed arrays of length 2\n\t* // (regardless of what type of array)\n\t* checker.confCheckStructureKindArray( p1, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureKindArray( p2, \"MY_PARAMETER\" )\n\t*\n\t* // You'll get an error when p is no array, or when \n\t* // its length doesn't match the number of cellkinds:\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" )\n\t","start":5032,"end":5918,"loc":{"start":{"line":137,"column":1},"end":{"line":155,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Parameter structure for parameters that specify interactions between two cells \n\twith each a {@link CellKind}. Should be an array of arrays (\"matrix\") \n\twhere each array has an element for each cellkind including background. \n\tThus, M[n][m] specifies the parameter for an interaction between a cell of \n\tcellkind n and a cell of cellkind m.\n\t@example\n\t* let J = [[0,20],[20,10]] // is a KindMatrix parameter.\n\t@typedef {Array} KindMatrix\n\t","start":6365,"end":6810,"loc":{"start":{"line":169,"column":1},"end":{"line":177,"column":3}}},{"type":"CommentBlock","value":"* Checker if a parameter has a {@link KindMatrix} structure.\n\tIf this is not the case, the method throws an error.\n\t@param {KindMatrix} p - the parameter to check\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a {@link KindMatrix}.\n\t\n\t@example\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = [[1,1],[1,1]], p2 = [[\"a\",\"a\"],[\"a\",\"a\"]] \n\t* // Nothing happens when parameters are indeed arrays of length 2\n\t* // with sub-arrays of length 2 (regardless of what is in the elements)\n\t* checker.confCheckStructureKindArray( p1, \"MY_PARAMETER\" ) //OK\n\t* checker.confCheckStructureKindArray( p2, \"MY_PARAMETER\" ) //OK\n\t*\n\t* // You'll get an error when p is no array, or when \n\t* // its length doesn't match the number of cellkinds:\n\t* let p3 = 1, p4 = [1,2,3], p5 = [[1,2],[1,2],[1,2]]\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" ) //error\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" ) //error\n\t* checker.confCheckStructureSingle( p5, \"MY_PARAMETER\" ) //error\n\t","start":6814,"end":7932,"loc":{"start":{"line":179,"column":1},"end":{"line":200,"column":3}}}]},{"type":"ClassMethod","start":7934,"end":8751,"loc":{"start":{"line":201,"column":1},"end":{"line":234,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":7934,"end":7962,"loc":{"start":{"line":201,"column":1},"end":{"line":201,"column":29},"identifierName":"confCheckStructureKindMatrix"},"name":"confCheckStructureKindMatrix","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":7964,"end":7965,"loc":{"start":{"line":201,"column":31},"end":{"line":201,"column":32},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":7967,"end":7971,"loc":{"start":{"line":201,"column":34},"end":{"line":201,"column":38},"identifierName":"name"},"name":"name"}],"body":{"type":"BlockStatement","start":7973,"end":8751,"loc":{"start":{"line":201,"column":40},"end":{"line":234,"column":2}},"body":[{"type":"VariableDeclaration","start":7978,"end":8008,"loc":{"start":{"line":203,"column":2},"end":{"line":203,"column":32}},"declarations":[{"type":"VariableDeclarator","start":7982,"end":7994,"loc":{"start":{"line":203,"column":6},"end":{"line":203,"column":18}},"id":{"type":"Identifier","start":7982,"end":7986,"loc":{"start":{"line":203,"column":6},"end":{"line":203,"column":10},"identifierName":"err1"},"name":"err1"},"init":{"type":"BooleanLiteral","start":7989,"end":7994,"loc":{"start":{"line":203,"column":13},"end":{"line":203,"column":18}},"value":false}},{"type":"VariableDeclarator","start":7996,"end":8008,"loc":{"start":{"line":203,"column":20},"end":{"line":203,"column":32}},"id":{"type":"Identifier","start":7996,"end":8000,"loc":{"start":{"line":203,"column":20},"end":{"line":203,"column":24},"identifierName":"err2"},"name":"err2"},"init":{"type":"BooleanLiteral","start":8003,"end":8008,"loc":{"start":{"line":203,"column":27},"end":{"line":203,"column":32}},"value":false}}],"kind":"let"},{"type":"VariableDeclaration","start":8011,"end":8027,"loc":{"start":{"line":204,"column":2},"end":{"line":204,"column":18}},"declarations":[{"type":"VariableDeclarator","start":8015,"end":8027,"loc":{"start":{"line":204,"column":6},"end":{"line":204,"column":18}},"id":{"type":"Identifier","start":8015,"end":8027,"loc":{"start":{"line":204,"column":6},"end":{"line":204,"column":18},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds","leadingComments":null,"trailingComments":null},"init":null,"trailingComments":null}],"kind":"let","trailingComments":[{"type":"CommentLine","value":" err1: Check if the main array is an array and has the right size","start":8031,"end":8098,"loc":{"start":{"line":206,"column":2},"end":{"line":206,"column":69}}}]},{"type":"IfStatement","start":8101,"end":8280,"loc":{"start":{"line":207,"column":2},"end":{"line":214,"column":3}},"test":{"type":"UnaryExpression","start":8105,"end":8126,"loc":{"start":{"line":207,"column":6},"end":{"line":207,"column":27}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":8107,"end":8125,"loc":{"start":{"line":207,"column":8},"end":{"line":207,"column":26}},"left":{"type":"Identifier","start":8107,"end":8108,"loc":{"start":{"line":207,"column":8},"end":{"line":207,"column":9},"identifierName":"p"},"name":"p","leadingComments":null},"operator":"instanceof","right":{"type":"Identifier","start":8120,"end":8125,"loc":{"start":{"line":207,"column":21},"end":{"line":207,"column":26},"identifierName":"Array"},"name":"Array"},"leadingComments":null,"extra":{"parenthesized":true,"parenStart":8106}},"extra":{"parenthesizedArgument":false},"leadingComments":null},"consequent":{"type":"BlockStatement","start":8128,"end":8148,"loc":{"start":{"line":207,"column":29},"end":{"line":209,"column":3}},"body":[{"type":"ExpressionStatement","start":8133,"end":8144,"loc":{"start":{"line":208,"column":3},"end":{"line":208,"column":14}},"expression":{"type":"AssignmentExpression","start":8133,"end":8144,"loc":{"start":{"line":208,"column":3},"end":{"line":208,"column":14}},"operator":"=","left":{"type":"Identifier","start":8133,"end":8137,"loc":{"start":{"line":208,"column":3},"end":{"line":208,"column":7},"identifierName":"err1"},"name":"err1"},"right":{"type":"BooleanLiteral","start":8140,"end":8144,"loc":{"start":{"line":208,"column":10},"end":{"line":208,"column":14}},"value":true}}}],"directives":[]},"alternate":{"type":"BlockStatement","start":8154,"end":8280,"loc":{"start":{"line":209,"column":9},"end":{"line":214,"column":3}},"body":[{"type":"ExpressionStatement","start":8159,"end":8209,"loc":{"start":{"line":210,"column":3},"end":{"line":210,"column":53}},"expression":{"type":"AssignmentExpression","start":8159,"end":8209,"loc":{"start":{"line":210,"column":3},"end":{"line":210,"column":53}},"operator":"=","left":{"type":"Identifier","start":8159,"end":8171,"loc":{"start":{"line":210,"column":3},"end":{"line":210,"column":15},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds"},"right":{"type":"CallExpression","start":8174,"end":8209,"loc":{"start":{"line":210,"column":18},"end":{"line":210,"column":53}},"callee":{"type":"MemberExpression","start":8174,"end":8197,"loc":{"start":{"line":210,"column":18},"end":{"line":210,"column":41}},"object":{"type":"ThisExpression","start":8174,"end":8178,"loc":{"start":{"line":210,"column":18},"end":{"line":210,"column":22}}},"property":{"type":"Identifier","start":8179,"end":8197,"loc":{"start":{"line":210,"column":23},"end":{"line":210,"column":41},"identifierName":"confCheckCellKinds"},"name":"confCheckCellKinds"},"computed":false},"arguments":[{"type":"MemberExpression","start":8199,"end":8207,"loc":{"start":{"line":210,"column":43},"end":{"line":210,"column":51}},"object":{"type":"Identifier","start":8199,"end":8200,"loc":{"start":{"line":210,"column":43},"end":{"line":210,"column":44},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":8201,"end":8207,"loc":{"start":{"line":210,"column":45},"end":{"line":210,"column":51},"identifierName":"length"},"name":"length"},"computed":false}]}}},{"type":"IfStatement","start":8213,"end":8274,"loc":{"start":{"line":211,"column":3},"end":{"line":213,"column":4}},"test":{"type":"UnaryExpression","start":8217,"end":8250,"loc":{"start":{"line":211,"column":7},"end":{"line":211,"column":40}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":8220,"end":8248,"loc":{"start":{"line":211,"column":10},"end":{"line":211,"column":38}},"left":{"type":"MemberExpression","start":8220,"end":8228,"loc":{"start":{"line":211,"column":10},"end":{"line":211,"column":18}},"object":{"type":"Identifier","start":8220,"end":8221,"loc":{"start":{"line":211,"column":10},"end":{"line":211,"column":11},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":8222,"end":8228,"loc":{"start":{"line":211,"column":12},"end":{"line":211,"column":18},"identifierName":"length"},"name":"length"},"computed":false},"operator":"==","right":{"type":"BinaryExpression","start":8232,"end":8248,"loc":{"start":{"line":211,"column":22},"end":{"line":211,"column":38}},"left":{"type":"Identifier","start":8232,"end":8244,"loc":{"start":{"line":211,"column":22},"end":{"line":211,"column":34},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds"},"operator":"+","right":{"type":"NumericLiteral","start":8247,"end":8248,"loc":{"start":{"line":211,"column":37},"end":{"line":211,"column":38}},"extra":{"rawValue":1,"raw":"1"},"value":1}},"extra":{"parenthesized":true,"parenStart":8218}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":8252,"end":8274,"loc":{"start":{"line":211,"column":42},"end":{"line":213,"column":4}},"body":[{"type":"ExpressionStatement","start":8258,"end":8269,"loc":{"start":{"line":212,"column":4},"end":{"line":212,"column":15}},"expression":{"type":"AssignmentExpression","start":8258,"end":8269,"loc":{"start":{"line":212,"column":4},"end":{"line":212,"column":15}},"operator":"=","left":{"type":"Identifier","start":8258,"end":8262,"loc":{"start":{"line":212,"column":4},"end":{"line":212,"column":8},"identifierName":"err1"},"name":"err1"},"right":{"type":"BooleanLiteral","start":8265,"end":8269,"loc":{"start":{"line":212,"column":11},"end":{"line":212,"column":15}},"value":true}}}],"directives":[]},"alternate":null}],"directives":[]},"leadingComments":[{"type":"CommentLine","value":" err1: Check if the main array is an array and has the right size","start":8031,"end":8098,"loc":{"start":{"line":206,"column":2},"end":{"line":206,"column":69}}}]},{"type":"IfStatement","start":8283,"end":8413,"loc":{"start":{"line":215,"column":2},"end":{"line":218,"column":3}},"test":{"type":"Identifier","start":8287,"end":8291,"loc":{"start":{"line":215,"column":6},"end":{"line":215,"column":10},"identifierName":"err1"},"name":"err1"},"consequent":{"type":"BlockStatement","start":8293,"end":8413,"loc":{"start":{"line":215,"column":12},"end":{"line":218,"column":3}},"body":[{"type":"ThrowStatement","start":8298,"end":8409,"loc":{"start":{"line":216,"column":3},"end":{"line":217,"column":81}},"argument":{"type":"BinaryExpression","start":8305,"end":8407,"loc":{"start":{"line":216,"column":10},"end":{"line":217,"column":79}},"left":{"type":"BinaryExpression","start":8305,"end":8324,"loc":{"start":{"line":216,"column":10},"end":{"line":216,"column":29}},"left":{"type":"StringLiteral","start":8305,"end":8317,"loc":{"start":{"line":216,"column":10},"end":{"line":216,"column":22}},"extra":{"rawValue":"Parameter ","raw":"\"Parameter \""},"value":"Parameter "},"operator":"+","right":{"type":"Identifier","start":8320,"end":8324,"loc":{"start":{"line":216,"column":25},"end":{"line":216,"column":29},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":8331,"end":8407,"loc":{"start":{"line":217,"column":3},"end":{"line":217,"column":79}},"extra":{"rawValue":" must be an array with a sub-array for each cellkind including background!","raw":"\" must be an array with a sub-array for each cellkind including background!\""},"value":" must be an array with a sub-array for each cellkind including background!"},"extra":{"parenthesized":true,"parenStart":8303}}}],"directives":[],"trailingComments":null},"alternate":null,"trailingComments":[{"type":"CommentLine","value":" Check if subarrays have the right size","start":8419,"end":8460,"loc":{"start":{"line":220,"column":2},"end":{"line":220,"column":43}}}]},{"type":"ForOfStatement","start":8463,"end":8748,"loc":{"start":{"line":221,"column":2},"end":{"line":233,"column":3}},"left":{"type":"VariableDeclaration","start":8468,"end":8473,"loc":{"start":{"line":221,"column":7},"end":{"line":221,"column":12}},"declarations":[{"type":"VariableDeclarator","start":8472,"end":8473,"loc":{"start":{"line":221,"column":11},"end":{"line":221,"column":12}},"id":{"type":"Identifier","start":8472,"end":8473,"loc":{"start":{"line":221,"column":11},"end":{"line":221,"column":12},"identifierName":"e"},"name":"e","leadingComments":null},"init":null,"leadingComments":null}],"kind":"let","leadingComments":null},"right":{"type":"Identifier","start":8477,"end":8478,"loc":{"start":{"line":221,"column":16},"end":{"line":221,"column":17},"identifierName":"p"},"name":"p"},"body":{"type":"BlockStatement","start":8480,"end":8748,"loc":{"start":{"line":221,"column":19},"end":{"line":233,"column":3}},"body":[{"type":"IfStatement","start":8485,"end":8616,"loc":{"start":{"line":222,"column":3},"end":{"line":228,"column":4}},"test":{"type":"UnaryExpression","start":8489,"end":8510,"loc":{"start":{"line":222,"column":7},"end":{"line":222,"column":28}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":8491,"end":8509,"loc":{"start":{"line":222,"column":9},"end":{"line":222,"column":27}},"left":{"type":"Identifier","start":8491,"end":8492,"loc":{"start":{"line":222,"column":9},"end":{"line":222,"column":10},"identifierName":"e"},"name":"e"},"operator":"instanceof","right":{"type":"Identifier","start":8504,"end":8509,"loc":{"start":{"line":222,"column":22},"end":{"line":222,"column":27},"identifierName":"Array"},"name":"Array"},"extra":{"parenthesized":true,"parenStart":8490}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":8512,"end":8534,"loc":{"start":{"line":222,"column":30},"end":{"line":224,"column":4}},"body":[{"type":"ExpressionStatement","start":8518,"end":8529,"loc":{"start":{"line":223,"column":4},"end":{"line":223,"column":15}},"expression":{"type":"AssignmentExpression","start":8518,"end":8529,"loc":{"start":{"line":223,"column":4},"end":{"line":223,"column":15}},"operator":"=","left":{"type":"Identifier","start":8518,"end":8522,"loc":{"start":{"line":223,"column":4},"end":{"line":223,"column":8},"identifierName":"err2"},"name":"err2"},"right":{"type":"BooleanLiteral","start":8525,"end":8529,"loc":{"start":{"line":223,"column":11},"end":{"line":223,"column":15}},"value":true}}}],"directives":[]},"alternate":{"type":"BlockStatement","start":8540,"end":8616,"loc":{"start":{"line":224,"column":10},"end":{"line":228,"column":4}},"body":[{"type":"IfStatement","start":8546,"end":8609,"loc":{"start":{"line":225,"column":4},"end":{"line":227,"column":5}},"test":{"type":"UnaryExpression","start":8550,"end":8583,"loc":{"start":{"line":225,"column":8},"end":{"line":225,"column":41}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":8553,"end":8581,"loc":{"start":{"line":225,"column":11},"end":{"line":225,"column":39}},"left":{"type":"MemberExpression","start":8553,"end":8561,"loc":{"start":{"line":225,"column":11},"end":{"line":225,"column":19}},"object":{"type":"Identifier","start":8553,"end":8554,"loc":{"start":{"line":225,"column":11},"end":{"line":225,"column":12},"identifierName":"e"},"name":"e"},"property":{"type":"Identifier","start":8555,"end":8561,"loc":{"start":{"line":225,"column":13},"end":{"line":225,"column":19},"identifierName":"length"},"name":"length"},"computed":false},"operator":"==","right":{"type":"BinaryExpression","start":8565,"end":8581,"loc":{"start":{"line":225,"column":23},"end":{"line":225,"column":39}},"left":{"type":"Identifier","start":8565,"end":8577,"loc":{"start":{"line":225,"column":23},"end":{"line":225,"column":35},"identifierName":"n_cell_kinds"},"name":"n_cell_kinds"},"operator":"+","right":{"type":"NumericLiteral","start":8580,"end":8581,"loc":{"start":{"line":225,"column":38},"end":{"line":225,"column":39}},"extra":{"rawValue":1,"raw":"1"},"value":1}},"extra":{"parenthesized":true,"parenStart":8551}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":8585,"end":8609,"loc":{"start":{"line":225,"column":43},"end":{"line":227,"column":5}},"body":[{"type":"ExpressionStatement","start":8592,"end":8603,"loc":{"start":{"line":226,"column":5},"end":{"line":226,"column":16}},"expression":{"type":"AssignmentExpression","start":8592,"end":8603,"loc":{"start":{"line":226,"column":5},"end":{"line":226,"column":16}},"operator":"=","left":{"type":"Identifier","start":8592,"end":8596,"loc":{"start":{"line":226,"column":5},"end":{"line":226,"column":9},"identifierName":"err2"},"name":"err2"},"right":{"type":"BooleanLiteral","start":8599,"end":8603,"loc":{"start":{"line":226,"column":12},"end":{"line":226,"column":16}},"value":true}}}],"directives":[]},"alternate":null}],"directives":[]}},{"type":"IfStatement","start":8620,"end":8744,"loc":{"start":{"line":229,"column":3},"end":{"line":232,"column":4}},"test":{"type":"Identifier","start":8624,"end":8628,"loc":{"start":{"line":229,"column":7},"end":{"line":229,"column":11},"identifierName":"err2"},"name":"err2"},"consequent":{"type":"BlockStatement","start":8630,"end":8744,"loc":{"start":{"line":229,"column":13},"end":{"line":232,"column":4}},"body":[{"type":"ThrowStatement","start":8636,"end":8739,"loc":{"start":{"line":230,"column":4},"end":{"line":231,"column":69}},"argument":{"type":"BinaryExpression","start":8643,"end":8737,"loc":{"start":{"line":230,"column":11},"end":{"line":231,"column":67}},"left":{"type":"BinaryExpression","start":8643,"end":8666,"loc":{"start":{"line":230,"column":11},"end":{"line":230,"column":34}},"left":{"type":"StringLiteral","start":8643,"end":8659,"loc":{"start":{"line":230,"column":11},"end":{"line":230,"column":27}},"extra":{"rawValue":"Sub-arrays of ","raw":"\"Sub-arrays of \""},"value":"Sub-arrays of "},"operator":"+","right":{"type":"Identifier","start":8662,"end":8666,"loc":{"start":{"line":230,"column":30},"end":{"line":230,"column":34},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":8674,"end":8737,"loc":{"start":{"line":231,"column":4},"end":{"line":231,"column":67}},"extra":{"rawValue":" must have an element for each cellkind including background!","raw":"\" must have an element for each cellkind including background!\""},"value":" must have an element for each cellkind including background!"},"extra":{"parenthesized":true,"parenStart":8641}}}],"directives":[]},"alternate":null}],"directives":[]},"leadingComments":[{"type":"CommentLine","value":" Check if subarrays have the right size","start":8419,"end":8460,"loc":{"start":{"line":220,"column":2},"end":{"line":220,"column":43}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Parameter structure for parameters that specify interactions between two cells \n\twith each a {@link CellKind}. Should be an array of arrays (\"matrix\") \n\twhere each array has an element for each cellkind including background. \n\tThus, M[n][m] specifies the parameter for an interaction between a cell of \n\tcellkind n and a cell of cellkind m.\n\t@example\n\t* let J = [[0,20],[20,10]] // is a KindMatrix parameter.\n\t@typedef {Array} KindMatrix\n\t","start":6365,"end":6810,"loc":{"start":{"line":169,"column":1},"end":{"line":177,"column":3}}},{"type":"CommentBlock","value":"* Checker if a parameter has a {@link KindMatrix} structure.\n\tIf this is not the case, the method throws an error.\n\t@param {KindMatrix} p - the parameter to check\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a {@link KindMatrix}.\n\t\n\t@example\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = [[1,1],[1,1]], p2 = [[\"a\",\"a\"],[\"a\",\"a\"]] \n\t* // Nothing happens when parameters are indeed arrays of length 2\n\t* // with sub-arrays of length 2 (regardless of what is in the elements)\n\t* checker.confCheckStructureKindArray( p1, \"MY_PARAMETER\" ) //OK\n\t* checker.confCheckStructureKindArray( p2, \"MY_PARAMETER\" ) //OK\n\t*\n\t* // You'll get an error when p is no array, or when \n\t* // its length doesn't match the number of cellkinds:\n\t* let p3 = 1, p4 = [1,2,3], p5 = [[1,2],[1,2],[1,2]]\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" ) //error\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" ) //error\n\t* checker.confCheckStructureSingle( p5, \"MY_PARAMETER\" ) //error\n\t","start":6814,"end":7932,"loc":{"start":{"line":179,"column":1},"end":{"line":200,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method for checking if the parameter has the right structure. Throws an error\n\tmessage if the parameter does not have this structure.\n\t\n\tIt internally uses one of the following functions, depending on the structure argument:\n\t{@link confCheckStructureSingle}, {@link confCheckStructureKindArray}, or\n\t{@link confCheckStructureKindMatrix}.\n\t\n\t@param {SingleValue|KindArray|KindMatrix} p - the parameter to check the structure of\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t\n\t@example\n\t* // My own configuration object\n\t* let conf = {\n\t*\tP1 : true,\n\t* \tP2 : [0,2],\n\t* \tP3 : [-1,2,4],\n\t* \tP4 : [[1,2],[1,2]]\n\t* }\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* // These checks work out fine:\n\t* checker.confCheckStructure( conf[\"P1\"],\"P1\",\"SingleValue\")\n\t* checker.confCheckStructure( conf[\"P2\"],\"P2\",\"KindArray\")\n\t* checker.confCheckStructure( conf[\"P4\"],\"P4\",\"KindMatrix\")\n\t* \n\t* // These checks throw an error:\n\t* checker.confCheckStructure( conf[\"P1\"],\"P1\",\"KindArray\") // not an array\n\t* checker.confCheckStructure( conf[\"P2\"],\"P3\",\"KindArray\") // too long\n\t","start":8755,"end":10085,"loc":{"start":{"line":236,"column":1},"end":{"line":267,"column":3}}}]},{"type":"ClassMethod","start":10087,"end":10514,"loc":{"start":{"line":268,"column":1},"end":{"line":278,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":10087,"end":10105,"loc":{"start":{"line":268,"column":1},"end":{"line":268,"column":19},"identifierName":"confCheckStructure"},"name":"confCheckStructure","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":10107,"end":10108,"loc":{"start":{"line":268,"column":21},"end":{"line":268,"column":22},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":10110,"end":10114,"loc":{"start":{"line":268,"column":24},"end":{"line":268,"column":28},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":10116,"end":10125,"loc":{"start":{"line":268,"column":30},"end":{"line":268,"column":39},"identifierName":"structure"},"name":"structure"}],"body":{"type":"BlockStatement","start":10127,"end":10514,"loc":{"start":{"line":268,"column":41},"end":{"line":278,"column":2}},"body":[{"type":"IfStatement","start":10131,"end":10511,"loc":{"start":{"line":269,"column":2},"end":{"line":277,"column":3}},"test":{"type":"BinaryExpression","start":10135,"end":10161,"loc":{"start":{"line":269,"column":6},"end":{"line":269,"column":32}},"left":{"type":"Identifier","start":10135,"end":10144,"loc":{"start":{"line":269,"column":6},"end":{"line":269,"column":15},"identifierName":"structure"},"name":"structure"},"operator":"==","right":{"type":"StringLiteral","start":10148,"end":10161,"loc":{"start":{"line":269,"column":19},"end":{"line":269,"column":32}},"extra":{"rawValue":"SingleValue","raw":"\"SingleValue\""},"value":"SingleValue"}},"consequent":{"type":"BlockStatement","start":10163,"end":10212,"loc":{"start":{"line":269,"column":34},"end":{"line":271,"column":3}},"body":[{"type":"ExpressionStatement","start":10168,"end":10208,"loc":{"start":{"line":270,"column":3},"end":{"line":270,"column":43}},"expression":{"type":"CallExpression","start":10168,"end":10208,"loc":{"start":{"line":270,"column":3},"end":{"line":270,"column":43}},"callee":{"type":"MemberExpression","start":10168,"end":10197,"loc":{"start":{"line":270,"column":3},"end":{"line":270,"column":32}},"object":{"type":"ThisExpression","start":10168,"end":10172,"loc":{"start":{"line":270,"column":3},"end":{"line":270,"column":7}}},"property":{"type":"Identifier","start":10173,"end":10197,"loc":{"start":{"line":270,"column":8},"end":{"line":270,"column":32},"identifierName":"confCheckStructureSingle"},"name":"confCheckStructureSingle"},"computed":false},"arguments":[{"type":"Identifier","start":10199,"end":10200,"loc":{"start":{"line":270,"column":34},"end":{"line":270,"column":35},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":10202,"end":10206,"loc":{"start":{"line":270,"column":37},"end":{"line":270,"column":41},"identifierName":"name"},"name":"name"}]}}],"directives":[]},"alternate":{"type":"IfStatement","start":10218,"end":10511,"loc":{"start":{"line":271,"column":9},"end":{"line":277,"column":3}},"test":{"type":"BinaryExpression","start":10223,"end":10247,"loc":{"start":{"line":271,"column":14},"end":{"line":271,"column":38}},"left":{"type":"Identifier","start":10223,"end":10232,"loc":{"start":{"line":271,"column":14},"end":{"line":271,"column":23},"identifierName":"structure"},"name":"structure"},"operator":"==","right":{"type":"StringLiteral","start":10236,"end":10247,"loc":{"start":{"line":271,"column":27},"end":{"line":271,"column":38}},"extra":{"rawValue":"KindArray","raw":"\"KindArray\""},"value":"KindArray"}},"consequent":{"type":"BlockStatement","start":10249,"end":10301,"loc":{"start":{"line":271,"column":40},"end":{"line":273,"column":3}},"body":[{"type":"ExpressionStatement","start":10254,"end":10297,"loc":{"start":{"line":272,"column":3},"end":{"line":272,"column":46}},"expression":{"type":"CallExpression","start":10254,"end":10297,"loc":{"start":{"line":272,"column":3},"end":{"line":272,"column":46}},"callee":{"type":"MemberExpression","start":10254,"end":10286,"loc":{"start":{"line":272,"column":3},"end":{"line":272,"column":35}},"object":{"type":"ThisExpression","start":10254,"end":10258,"loc":{"start":{"line":272,"column":3},"end":{"line":272,"column":7}}},"property":{"type":"Identifier","start":10259,"end":10286,"loc":{"start":{"line":272,"column":8},"end":{"line":272,"column":35},"identifierName":"confCheckStructureKindArray"},"name":"confCheckStructureKindArray"},"computed":false},"arguments":[{"type":"Identifier","start":10288,"end":10289,"loc":{"start":{"line":272,"column":37},"end":{"line":272,"column":38},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":10291,"end":10295,"loc":{"start":{"line":272,"column":40},"end":{"line":272,"column":44},"identifierName":"name"},"name":"name"}]}}],"directives":[]},"alternate":{"type":"IfStatement","start":10307,"end":10511,"loc":{"start":{"line":273,"column":9},"end":{"line":277,"column":3}},"test":{"type":"BinaryExpression","start":10312,"end":10337,"loc":{"start":{"line":273,"column":14},"end":{"line":273,"column":39}},"left":{"type":"Identifier","start":10312,"end":10321,"loc":{"start":{"line":273,"column":14},"end":{"line":273,"column":23},"identifierName":"structure"},"name":"structure"},"operator":"==","right":{"type":"StringLiteral","start":10325,"end":10337,"loc":{"start":{"line":273,"column":27},"end":{"line":273,"column":39}},"extra":{"rawValue":"KindMatrix","raw":"\"KindMatrix\""},"value":"KindMatrix"}},"consequent":{"type":"BlockStatement","start":10339,"end":10392,"loc":{"start":{"line":273,"column":41},"end":{"line":275,"column":3}},"body":[{"type":"ExpressionStatement","start":10344,"end":10388,"loc":{"start":{"line":274,"column":3},"end":{"line":274,"column":47}},"expression":{"type":"CallExpression","start":10344,"end":10388,"loc":{"start":{"line":274,"column":3},"end":{"line":274,"column":47}},"callee":{"type":"MemberExpression","start":10344,"end":10377,"loc":{"start":{"line":274,"column":3},"end":{"line":274,"column":36}},"object":{"type":"ThisExpression","start":10344,"end":10348,"loc":{"start":{"line":274,"column":3},"end":{"line":274,"column":7}}},"property":{"type":"Identifier","start":10349,"end":10377,"loc":{"start":{"line":274,"column":8},"end":{"line":274,"column":36},"identifierName":"confCheckStructureKindMatrix"},"name":"confCheckStructureKindMatrix"},"computed":false},"arguments":[{"type":"Identifier","start":10379,"end":10380,"loc":{"start":{"line":274,"column":38},"end":{"line":274,"column":39},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":10382,"end":10386,"loc":{"start":{"line":274,"column":41},"end":{"line":274,"column":45},"identifierName":"name"},"name":"name"}]}}],"directives":[]},"alternate":{"type":"BlockStatement","start":10398,"end":10511,"loc":{"start":{"line":275,"column":9},"end":{"line":277,"column":3}},"body":[{"type":"ThrowStatement","start":10403,"end":10507,"loc":{"start":{"line":276,"column":3},"end":{"line":276,"column":107}},"argument":{"type":"BinaryExpression","start":10409,"end":10506,"loc":{"start":{"line":276,"column":9},"end":{"line":276,"column":106}},"left":{"type":"BinaryExpression","start":10409,"end":10441,"loc":{"start":{"line":276,"column":9},"end":{"line":276,"column":41}},"left":{"type":"StringLiteral","start":10409,"end":10429,"loc":{"start":{"line":276,"column":9},"end":{"line":276,"column":29}},"extra":{"rawValue":"Unknown structure ","raw":"\"Unknown structure \""},"value":"Unknown structure "},"operator":"+","right":{"type":"Identifier","start":10432,"end":10441,"loc":{"start":{"line":276,"column":32},"end":{"line":276,"column":41},"identifierName":"structure"},"name":"structure"}},"operator":"+","right":{"type":"StringLiteral","start":10444,"end":10506,"loc":{"start":{"line":276,"column":44},"end":{"line":276,"column":106}},"extra":{"rawValue":", please choose 'SingleValue', 'KindArray', or 'KindMatrix'.","raw":"\", please choose 'SingleValue', 'KindArray', or 'KindMatrix'.\""},"value":", please choose 'SingleValue', 'KindArray', or 'KindMatrix'."},"extra":{"parenthesized":true,"parenStart":10408}}}],"directives":[]}}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method for checking if the parameter has the right structure. Throws an error\n\tmessage if the parameter does not have this structure.\n\t\n\tIt internally uses one of the following functions, depending on the structure argument:\n\t{@link confCheckStructureSingle}, {@link confCheckStructureKindArray}, or\n\t{@link confCheckStructureKindMatrix}.\n\t\n\t@param {SingleValue|KindArray|KindMatrix} p - the parameter to check the structure of\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t\n\t@example\n\t* // My own configuration object\n\t* let conf = {\n\t*\tP1 : true,\n\t* \tP2 : [0,2],\n\t* \tP3 : [-1,2,4],\n\t* \tP4 : [[1,2],[1,2]]\n\t* }\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* // These checks work out fine:\n\t* checker.confCheckStructure( conf[\"P1\"],\"P1\",\"SingleValue\")\n\t* checker.confCheckStructure( conf[\"P2\"],\"P2\",\"KindArray\")\n\t* checker.confCheckStructure( conf[\"P4\"],\"P4\",\"KindMatrix\")\n\t* \n\t* // These checks throw an error:\n\t* checker.confCheckStructure( conf[\"P1\"],\"P1\",\"KindArray\") // not an array\n\t* checker.confCheckStructure( conf[\"P2\"],\"P3\",\"KindArray\") // too long\n\t","start":8755,"end":10085,"loc":{"start":{"line":236,"column":1},"end":{"line":267,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":" ========= CHECKING VALUE TYPE ======== ","start":10518,"end":10562,"loc":{"start":{"line":280,"column":1},"end":{"line":280,"column":45}}},{"type":"CommentBlock","value":"* Check if a value is of type 'number'.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a number?\n\t@example\n\tthis.isNumber( -1 ) // true\n\tthis.isNumber( 0.5 ) // true\n\tthis.isNumber( true ) // false\n\tthis.isNumber( [1,2 ] ) // false\n\tthis.isNumber( \"hello world\" ) // false\n\t@private\n\t","start":10566,"end":10868,"loc":{"start":{"line":282,"column":1},"end":{"line":292,"column":3}}}]},{"type":"ClassMethod","start":10870,"end":10922,"loc":{"start":{"line":293,"column":1},"end":{"line":295,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":10870,"end":10878,"loc":{"start":{"line":293,"column":1},"end":{"line":293,"column":9},"identifierName":"isNumber"},"name":"isNumber","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":10880,"end":10881,"loc":{"start":{"line":293,"column":11},"end":{"line":293,"column":12},"identifierName":"v"},"name":"v"}],"body":{"type":"BlockStatement","start":10883,"end":10922,"loc":{"start":{"line":293,"column":14},"end":{"line":295,"column":2}},"body":[{"type":"ReturnStatement","start":10887,"end":10919,"loc":{"start":{"line":294,"column":2},"end":{"line":294,"column":34}},"argument":{"type":"BinaryExpression","start":10896,"end":10917,"loc":{"start":{"line":294,"column":11},"end":{"line":294,"column":32}},"left":{"type":"UnaryExpression","start":10896,"end":10904,"loc":{"start":{"line":294,"column":11},"end":{"line":294,"column":19}},"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":10903,"end":10904,"loc":{"start":{"line":294,"column":18},"end":{"line":294,"column":19},"identifierName":"v"},"name":"v"},"extra":{"parenthesizedArgument":false}},"operator":"===","right":{"type":"StringLiteral","start":10909,"end":10917,"loc":{"start":{"line":294,"column":24},"end":{"line":294,"column":32}},"extra":{"rawValue":"number","raw":"\"number\""},"value":"number"},"extra":{"parenthesized":true,"parenStart":10894}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":" ========= CHECKING VALUE TYPE ======== ","start":10518,"end":10562,"loc":{"start":{"line":280,"column":1},"end":{"line":280,"column":45}}},{"type":"CommentBlock","value":"* Check if a value is of type 'number'.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a number?\n\t@example\n\tthis.isNumber( -1 ) // true\n\tthis.isNumber( 0.5 ) // true\n\tthis.isNumber( true ) // false\n\tthis.isNumber( [1,2 ] ) // false\n\tthis.isNumber( \"hello world\" ) // false\n\t@private\n\t","start":10566,"end":10868,"loc":{"start":{"line":282,"column":1},"end":{"line":292,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'number' and non-negative.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a non-negative number?\n\t@example\n\tthis.isNonNegative( -1 ) // false\n\tthis.isNonNegative( 0.5 ) // true\n\tthis.isNumber( true ) // false\n\tthis.isNumber( [1,2 ] ) // false\n\tthis.isNumber( \"hello world\" ) // false\n\t@private\n\t","start":10924,"end":11267,"loc":{"start":{"line":296,"column":1},"end":{"line":306,"column":3}}}]},{"type":"ClassMethod","start":11269,"end":11370,"loc":{"start":{"line":307,"column":1},"end":{"line":312,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":11269,"end":11282,"loc":{"start":{"line":307,"column":1},"end":{"line":307,"column":14},"identifierName":"isNonNegative"},"name":"isNonNegative","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":11284,"end":11285,"loc":{"start":{"line":307,"column":16},"end":{"line":307,"column":17},"identifierName":"v"},"name":"v"}],"body":{"type":"BlockStatement","start":11287,"end":11370,"loc":{"start":{"line":307,"column":19},"end":{"line":312,"column":2}},"body":[{"type":"IfStatement","start":11291,"end":11353,"loc":{"start":{"line":308,"column":2},"end":{"line":310,"column":3}},"test":{"type":"LogicalExpression","start":11295,"end":11330,"loc":{"start":{"line":308,"column":6},"end":{"line":308,"column":41}},"left":{"type":"UnaryExpression","start":11295,"end":11321,"loc":{"start":{"line":308,"column":6},"end":{"line":308,"column":32}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":11298,"end":11319,"loc":{"start":{"line":308,"column":9},"end":{"line":308,"column":30}},"left":{"type":"UnaryExpression","start":11298,"end":11306,"loc":{"start":{"line":308,"column":9},"end":{"line":308,"column":17}},"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":11305,"end":11306,"loc":{"start":{"line":308,"column":16},"end":{"line":308,"column":17},"identifierName":"v"},"name":"v"},"extra":{"parenthesizedArgument":false}},"operator":"===","right":{"type":"StringLiteral","start":11311,"end":11319,"loc":{"start":{"line":308,"column":22},"end":{"line":308,"column":30}},"extra":{"rawValue":"number","raw":"\"number\""},"value":"number"},"extra":{"parenthesized":true,"parenStart":11296}},"extra":{"parenthesizedArgument":false}},"operator":"||","right":{"type":"BinaryExpression","start":11325,"end":11330,"loc":{"start":{"line":308,"column":36},"end":{"line":308,"column":41}},"left":{"type":"Identifier","start":11325,"end":11326,"loc":{"start":{"line":308,"column":36},"end":{"line":308,"column":37},"identifierName":"v"},"name":"v"},"operator":"<","right":{"type":"NumericLiteral","start":11329,"end":11330,"loc":{"start":{"line":308,"column":40},"end":{"line":308,"column":41}},"extra":{"rawValue":0,"raw":"0"},"value":0}}},"consequent":{"type":"BlockStatement","start":11332,"end":11353,"loc":{"start":{"line":308,"column":43},"end":{"line":310,"column":3}},"body":[{"type":"ReturnStatement","start":11337,"end":11349,"loc":{"start":{"line":309,"column":3},"end":{"line":309,"column":15}},"argument":{"type":"BooleanLiteral","start":11344,"end":11349,"loc":{"start":{"line":309,"column":10},"end":{"line":309,"column":15}},"value":false}}],"directives":[]},"alternate":null},{"type":"ReturnStatement","start":11356,"end":11367,"loc":{"start":{"line":311,"column":2},"end":{"line":311,"column":13}},"argument":{"type":"BooleanLiteral","start":11363,"end":11367,"loc":{"start":{"line":311,"column":9},"end":{"line":311,"column":13}},"value":true}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'number' and non-negative.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a non-negative number?\n\t@example\n\tthis.isNonNegative( -1 ) // false\n\tthis.isNonNegative( 0.5 ) // true\n\tthis.isNumber( true ) // false\n\tthis.isNumber( [1,2 ] ) // false\n\tthis.isNumber( \"hello world\" ) // false\n\t@private\n\t","start":10924,"end":11267,"loc":{"start":{"line":296,"column":1},"end":{"line":306,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'number' and between 0 and 1.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a number between 0 and 1?\n\t@example\n\tthis.isProbability( -1 ) // false\n\tthis.isProbability( 0.5 ) // true\n\tthis.isProbability( true ) // false\n\tthis.isProbability( [1,2 ] ) // false\n\tthis.isProbability( \"hello world\" ) // false\n\t@private\n\t","start":11372,"end":11736,"loc":{"start":{"line":313,"column":1},"end":{"line":323,"column":3}}}]},{"type":"ClassMethod","start":11738,"end":11848,"loc":{"start":{"line":324,"column":1},"end":{"line":329,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":11738,"end":11751,"loc":{"start":{"line":324,"column":1},"end":{"line":324,"column":14},"identifierName":"isProbability"},"name":"isProbability","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":11753,"end":11754,"loc":{"start":{"line":324,"column":16},"end":{"line":324,"column":17},"identifierName":"v"},"name":"v"}],"body":{"type":"BlockStatement","start":11756,"end":11848,"loc":{"start":{"line":324,"column":19},"end":{"line":329,"column":2}},"body":[{"type":"IfStatement","start":11760,"end":11831,"loc":{"start":{"line":325,"column":2},"end":{"line":327,"column":3}},"test":{"type":"LogicalExpression","start":11764,"end":11808,"loc":{"start":{"line":325,"column":6},"end":{"line":325,"column":50}},"left":{"type":"LogicalExpression","start":11764,"end":11799,"loc":{"start":{"line":325,"column":6},"end":{"line":325,"column":41}},"left":{"type":"UnaryExpression","start":11764,"end":11790,"loc":{"start":{"line":325,"column":6},"end":{"line":325,"column":32}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":11767,"end":11788,"loc":{"start":{"line":325,"column":9},"end":{"line":325,"column":30}},"left":{"type":"UnaryExpression","start":11767,"end":11775,"loc":{"start":{"line":325,"column":9},"end":{"line":325,"column":17}},"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":11774,"end":11775,"loc":{"start":{"line":325,"column":16},"end":{"line":325,"column":17},"identifierName":"v"},"name":"v"},"extra":{"parenthesizedArgument":false}},"operator":"===","right":{"type":"StringLiteral","start":11780,"end":11788,"loc":{"start":{"line":325,"column":22},"end":{"line":325,"column":30}},"extra":{"rawValue":"number","raw":"\"number\""},"value":"number"},"extra":{"parenthesized":true,"parenStart":11765}},"extra":{"parenthesizedArgument":false}},"operator":"||","right":{"type":"BinaryExpression","start":11794,"end":11799,"loc":{"start":{"line":325,"column":36},"end":{"line":325,"column":41}},"left":{"type":"Identifier","start":11794,"end":11795,"loc":{"start":{"line":325,"column":36},"end":{"line":325,"column":37},"identifierName":"v"},"name":"v"},"operator":"<","right":{"type":"NumericLiteral","start":11798,"end":11799,"loc":{"start":{"line":325,"column":40},"end":{"line":325,"column":41}},"extra":{"rawValue":0,"raw":"0"},"value":0}}},"operator":"||","right":{"type":"BinaryExpression","start":11803,"end":11808,"loc":{"start":{"line":325,"column":45},"end":{"line":325,"column":50}},"left":{"type":"Identifier","start":11803,"end":11804,"loc":{"start":{"line":325,"column":45},"end":{"line":325,"column":46},"identifierName":"v"},"name":"v"},"operator":">","right":{"type":"NumericLiteral","start":11807,"end":11808,"loc":{"start":{"line":325,"column":49},"end":{"line":325,"column":50}},"extra":{"rawValue":1,"raw":"1"},"value":1}}},"consequent":{"type":"BlockStatement","start":11810,"end":11831,"loc":{"start":{"line":325,"column":52},"end":{"line":327,"column":3}},"body":[{"type":"ReturnStatement","start":11815,"end":11827,"loc":{"start":{"line":326,"column":3},"end":{"line":326,"column":15}},"argument":{"type":"BooleanLiteral","start":11822,"end":11827,"loc":{"start":{"line":326,"column":10},"end":{"line":326,"column":15}},"value":false}}],"directives":[]},"alternate":null},{"type":"ReturnStatement","start":11834,"end":11845,"loc":{"start":{"line":328,"column":2},"end":{"line":328,"column":13}},"argument":{"type":"BooleanLiteral","start":11841,"end":11845,"loc":{"start":{"line":328,"column":9},"end":{"line":328,"column":13}},"value":true}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'number' and between 0 and 1.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a number between 0 and 1?\n\t@example\n\tthis.isProbability( -1 ) // false\n\tthis.isProbability( 0.5 ) // true\n\tthis.isProbability( true ) // false\n\tthis.isProbability( [1,2 ] ) // false\n\tthis.isProbability( \"hello world\" ) // false\n\t@private\n\t","start":11372,"end":11736,"loc":{"start":{"line":313,"column":1},"end":{"line":323,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'string' and has one of a set of\n\tpredefined values.\n\t@param {number} v - value to check.\n\t@param {string[]} [values=[]] - possible values. If left empty,\n\tany string is considered OK.\n\t@return {boolean} is v a string and does it match one of the predefined values?\n\t@example\n\tthis.isString( true ) // false\n\tthis.isString( [\"a\",\"b\"] ) // false\n\tthis.isString( \"hello world\" ) // true\n\t@private\n\t","start":11850,"end":12280,"loc":{"start":{"line":330,"column":1},"end":{"line":341,"column":3}}}]},{"type":"ClassMethod","start":12282,"end":12476,"loc":{"start":{"line":342,"column":1},"end":{"line":353,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":12282,"end":12290,"loc":{"start":{"line":342,"column":1},"end":{"line":342,"column":9},"identifierName":"isString"},"name":"isString","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":12292,"end":12293,"loc":{"start":{"line":342,"column":11},"end":{"line":342,"column":12},"identifierName":"v"},"name":"v"},{"type":"AssignmentPattern","start":12295,"end":12306,"loc":{"start":{"line":342,"column":14},"end":{"line":342,"column":25}},"left":{"type":"Identifier","start":12295,"end":12301,"loc":{"start":{"line":342,"column":14},"end":{"line":342,"column":20},"identifierName":"values"},"name":"values"},"right":{"type":"ArrayExpression","start":12304,"end":12306,"loc":{"start":{"line":342,"column":23},"end":{"line":342,"column":25}},"elements":[]}}],"body":{"type":"BlockStatement","start":12308,"end":12476,"loc":{"start":{"line":342,"column":27},"end":{"line":353,"column":2}},"body":[{"type":"IfStatement","start":12312,"end":12365,"loc":{"start":{"line":343,"column":2},"end":{"line":345,"column":3}},"test":{"type":"UnaryExpression","start":12316,"end":12342,"loc":{"start":{"line":343,"column":6},"end":{"line":343,"column":32}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":12319,"end":12340,"loc":{"start":{"line":343,"column":9},"end":{"line":343,"column":30}},"left":{"type":"UnaryExpression","start":12319,"end":12327,"loc":{"start":{"line":343,"column":9},"end":{"line":343,"column":17}},"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":12326,"end":12327,"loc":{"start":{"line":343,"column":16},"end":{"line":343,"column":17},"identifierName":"v"},"name":"v"},"extra":{"parenthesizedArgument":false}},"operator":"===","right":{"type":"StringLiteral","start":12332,"end":12340,"loc":{"start":{"line":343,"column":22},"end":{"line":343,"column":30}},"extra":{"rawValue":"string","raw":"\"string\""},"value":"string"},"extra":{"parenthesized":true,"parenStart":12317}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":12344,"end":12365,"loc":{"start":{"line":343,"column":34},"end":{"line":345,"column":3}},"body":[{"type":"ReturnStatement","start":12349,"end":12361,"loc":{"start":{"line":344,"column":3},"end":{"line":344,"column":15}},"argument":{"type":"BooleanLiteral","start":12356,"end":12361,"loc":{"start":{"line":344,"column":10},"end":{"line":344,"column":15}},"value":false}}],"directives":[]},"alternate":null},{"type":"VariableDeclaration","start":12368,"end":12385,"loc":{"start":{"line":346,"column":2},"end":{"line":346,"column":19}},"declarations":[{"type":"VariableDeclarator","start":12372,"end":12385,"loc":{"start":{"line":346,"column":6},"end":{"line":346,"column":19}},"id":{"type":"Identifier","start":12372,"end":12377,"loc":{"start":{"line":346,"column":6},"end":{"line":346,"column":11},"identifierName":"found"},"name":"found"},"init":{"type":"BooleanLiteral","start":12380,"end":12385,"loc":{"start":{"line":346,"column":14},"end":{"line":346,"column":19}},"value":false}}],"kind":"let"},{"type":"ForOfStatement","start":12388,"end":12458,"loc":{"start":{"line":347,"column":2},"end":{"line":351,"column":3}},"left":{"type":"VariableDeclaration","start":12393,"end":12400,"loc":{"start":{"line":347,"column":7},"end":{"line":347,"column":14}},"declarations":[{"type":"VariableDeclarator","start":12397,"end":12400,"loc":{"start":{"line":347,"column":11},"end":{"line":347,"column":14}},"id":{"type":"Identifier","start":12397,"end":12400,"loc":{"start":{"line":347,"column":11},"end":{"line":347,"column":14},"identifierName":"val"},"name":"val"},"init":null}],"kind":"let"},"right":{"type":"Identifier","start":12404,"end":12410,"loc":{"start":{"line":347,"column":18},"end":{"line":347,"column":24},"identifierName":"values"},"name":"values"},"body":{"type":"BlockStatement","start":12412,"end":12458,"loc":{"start":{"line":347,"column":26},"end":{"line":351,"column":3}},"body":[{"type":"IfStatement","start":12417,"end":12454,"loc":{"start":{"line":348,"column":3},"end":{"line":350,"column":4}},"test":{"type":"BinaryExpression","start":12421,"end":12429,"loc":{"start":{"line":348,"column":7},"end":{"line":348,"column":15}},"left":{"type":"Identifier","start":12421,"end":12424,"loc":{"start":{"line":348,"column":7},"end":{"line":348,"column":10},"identifierName":"val"},"name":"val"},"operator":"==","right":{"type":"Identifier","start":12428,"end":12429,"loc":{"start":{"line":348,"column":14},"end":{"line":348,"column":15},"identifierName":"v"},"name":"v"}},"consequent":{"type":"BlockStatement","start":12431,"end":12454,"loc":{"start":{"line":348,"column":17},"end":{"line":350,"column":4}},"body":[{"type":"ExpressionStatement","start":12437,"end":12449,"loc":{"start":{"line":349,"column":4},"end":{"line":349,"column":16}},"expression":{"type":"AssignmentExpression","start":12437,"end":12449,"loc":{"start":{"line":349,"column":4},"end":{"line":349,"column":16}},"operator":"=","left":{"type":"Identifier","start":12437,"end":12442,"loc":{"start":{"line":349,"column":4},"end":{"line":349,"column":9},"identifierName":"found"},"name":"found"},"right":{"type":"BooleanLiteral","start":12445,"end":12449,"loc":{"start":{"line":349,"column":12},"end":{"line":349,"column":16}},"value":true}}}],"directives":[]},"alternate":null}],"directives":[]}},{"type":"ReturnStatement","start":12461,"end":12473,"loc":{"start":{"line":352,"column":2},"end":{"line":352,"column":14}},"argument":{"type":"Identifier","start":12468,"end":12473,"loc":{"start":{"line":352,"column":9},"end":{"line":352,"column":14},"identifierName":"found"},"name":"found"}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'string' and has one of a set of\n\tpredefined values.\n\t@param {number} v - value to check.\n\t@param {string[]} [values=[]] - possible values. If left empty,\n\tany string is considered OK.\n\t@return {boolean} is v a string and does it match one of the predefined values?\n\t@example\n\tthis.isString( true ) // false\n\tthis.isString( [\"a\",\"b\"] ) // false\n\tthis.isString( \"hello world\" ) // true\n\t@private\n\t","start":11850,"end":12280,"loc":{"start":{"line":330,"column":1},"end":{"line":341,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'boolean'.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a boolean?\n\t@example\n\tthis.isBoolean( true ) // true\n\tthis.isBoolean( [true,false] ) // false\n\tthis.isBoolean( \"hello world\" ) // true\n\t@private\n\t","start":12478,"end":12730,"loc":{"start":{"line":354,"column":1},"end":{"line":362,"column":3}}}]},{"type":"ClassMethod","start":12732,"end":12785,"loc":{"start":{"line":363,"column":1},"end":{"line":365,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":12732,"end":12741,"loc":{"start":{"line":363,"column":1},"end":{"line":363,"column":10},"identifierName":"isBoolean"},"name":"isBoolean","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":12743,"end":12744,"loc":{"start":{"line":363,"column":12},"end":{"line":363,"column":13},"identifierName":"v"},"name":"v"}],"body":{"type":"BlockStatement","start":12746,"end":12785,"loc":{"start":{"line":363,"column":15},"end":{"line":365,"column":2}},"body":[{"type":"ReturnStatement","start":12750,"end":12782,"loc":{"start":{"line":364,"column":2},"end":{"line":364,"column":34}},"argument":{"type":"BinaryExpression","start":12758,"end":12780,"loc":{"start":{"line":364,"column":10},"end":{"line":364,"column":32}},"left":{"type":"UnaryExpression","start":12758,"end":12766,"loc":{"start":{"line":364,"column":10},"end":{"line":364,"column":18}},"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":12765,"end":12766,"loc":{"start":{"line":364,"column":17},"end":{"line":364,"column":18},"identifierName":"v"},"name":"v"},"extra":{"parenthesizedArgument":false}},"operator":"===","right":{"type":"StringLiteral","start":12771,"end":12780,"loc":{"start":{"line":364,"column":23},"end":{"line":364,"column":32}},"extra":{"rawValue":"boolean","raw":"\"boolean\""},"value":"boolean"},"extra":{"parenthesized":true,"parenStart":12756}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if a value is of type 'boolean'.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a boolean?\n\t@example\n\tthis.isBoolean( true ) // true\n\tthis.isBoolean( [true,false] ) // false\n\tthis.isBoolean( \"hello world\" ) // true\n\t@private\n\t","start":12478,"end":12730,"loc":{"start":{"line":354,"column":1},"end":{"line":362,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a value is a coordinate in the dimensions of the current grid.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a coordinate of the right dimensions?\n\t@public\n\t","start":12789,"end":12976,"loc":{"start":{"line":367,"column":1},"end":{"line":371,"column":3}}}]},{"type":"ClassMethod","start":12978,"end":13130,"loc":{"start":{"line":372,"column":1},"end":{"line":380,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":12978,"end":12990,"loc":{"start":{"line":372,"column":1},"end":{"line":372,"column":13},"identifierName":"isCoordinate"},"name":"isCoordinate","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":12992,"end":12993,"loc":{"start":{"line":372,"column":15},"end":{"line":372,"column":16},"identifierName":"v"},"name":"v"}],"body":{"type":"BlockStatement","start":12995,"end":13130,"loc":{"start":{"line":372,"column":18},"end":{"line":380,"column":2}},"body":[{"type":"IfStatement","start":12999,"end":13049,"loc":{"start":{"line":373,"column":2},"end":{"line":375,"column":3}},"test":{"type":"UnaryExpression","start":13003,"end":13026,"loc":{"start":{"line":373,"column":6},"end":{"line":373,"column":29}},"operator":"!","prefix":true,"argument":{"type":"BinaryExpression","start":13006,"end":13024,"loc":{"start":{"line":373,"column":9},"end":{"line":373,"column":27}},"left":{"type":"Identifier","start":13006,"end":13007,"loc":{"start":{"line":373,"column":9},"end":{"line":373,"column":10},"identifierName":"v"},"name":"v"},"operator":"instanceof","right":{"type":"Identifier","start":13019,"end":13024,"loc":{"start":{"line":373,"column":22},"end":{"line":373,"column":27},"identifierName":"Array"},"name":"Array"},"extra":{"parenthesized":true,"parenStart":13004}},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":13028,"end":13049,"loc":{"start":{"line":373,"column":31},"end":{"line":375,"column":3}},"body":[{"type":"ReturnStatement","start":13033,"end":13045,"loc":{"start":{"line":374,"column":3},"end":{"line":374,"column":15}},"argument":{"type":"BooleanLiteral","start":13040,"end":13045,"loc":{"start":{"line":374,"column":10},"end":{"line":374,"column":15}},"value":false}}],"directives":[]},"alternate":null},{"type":"IfStatement","start":13052,"end":13113,"loc":{"start":{"line":376,"column":2},"end":{"line":378,"column":3}},"test":{"type":"BinaryExpression","start":13056,"end":13090,"loc":{"start":{"line":376,"column":6},"end":{"line":376,"column":40}},"left":{"type":"UnaryExpression","start":13056,"end":13065,"loc":{"start":{"line":376,"column":6},"end":{"line":376,"column":15}},"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":13057,"end":13065,"loc":{"start":{"line":376,"column":7},"end":{"line":376,"column":15}},"object":{"type":"Identifier","start":13057,"end":13058,"loc":{"start":{"line":376,"column":7},"end":{"line":376,"column":8},"identifierName":"v"},"name":"v"},"property":{"type":"Identifier","start":13059,"end":13065,"loc":{"start":{"line":376,"column":9},"end":{"line":376,"column":15},"identifierName":"length"},"name":"length"},"computed":false},"extra":{"parenthesizedArgument":false}},"operator":"==","right":{"type":"MemberExpression","start":13069,"end":13090,"loc":{"start":{"line":376,"column":19},"end":{"line":376,"column":40}},"object":{"type":"MemberExpression","start":13069,"end":13083,"loc":{"start":{"line":376,"column":19},"end":{"line":376,"column":33}},"object":{"type":"MemberExpression","start":13069,"end":13075,"loc":{"start":{"line":376,"column":19},"end":{"line":376,"column":25}},"object":{"type":"ThisExpression","start":13069,"end":13073,"loc":{"start":{"line":376,"column":19},"end":{"line":376,"column":23}}},"property":{"type":"Identifier","start":13074,"end":13075,"loc":{"start":{"line":376,"column":24},"end":{"line":376,"column":25},"identifierName":"C"},"name":"C"},"computed":false},"property":{"type":"Identifier","start":13076,"end":13083,"loc":{"start":{"line":376,"column":26},"end":{"line":376,"column":33},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":13084,"end":13090,"loc":{"start":{"line":376,"column":34},"end":{"line":376,"column":40},"identifierName":"length"},"name":"length"},"computed":false}},"consequent":{"type":"BlockStatement","start":13092,"end":13113,"loc":{"start":{"line":376,"column":42},"end":{"line":378,"column":3}},"body":[{"type":"ReturnStatement","start":13097,"end":13109,"loc":{"start":{"line":377,"column":3},"end":{"line":377,"column":15}},"argument":{"type":"BooleanLiteral","start":13104,"end":13109,"loc":{"start":{"line":377,"column":10},"end":{"line":377,"column":15}},"value":false}}],"directives":[]},"alternate":null},{"type":"ReturnStatement","start":13116,"end":13127,"loc":{"start":{"line":379,"column":2},"end":{"line":379,"column":13}},"argument":{"type":"BooleanLiteral","start":13123,"end":13127,"loc":{"start":{"line":379,"column":9},"end":{"line":379,"column":13}},"value":true}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if a value is a coordinate in the dimensions of the current grid.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a coordinate of the right dimensions?\n\t@public\n\t","start":12789,"end":12976,"loc":{"start":{"line":367,"column":1},"end":{"line":371,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if the elements of a given parameter are of the right type.\n\tIt throws an error if this is not the case.\n\t@param {anything} p - parameter to check.\n\t@param {string} name - parameter name used for any error messages.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t@param {string} valuetype - type of value, which must be one of \n\t\"Number\", \"NonNegative\", \"Probability\", \"String\", or \"Boolean\". \n\t@param {string[]} values - predefined specific options for the value. \n\tIf left empty, this is ignored.\n\t@private\n\t","start":13134,"end":13752,"loc":{"start":{"line":382,"column":1},"end":{"line":393,"column":3}}}]},{"type":"ClassMethod","start":13754,"end":15149,"loc":{"start":{"line":394,"column":1},"end":{"line":431,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":13754,"end":13772,"loc":{"start":{"line":394,"column":1},"end":{"line":394,"column":19},"identifierName":"confCheckValueType"},"name":"confCheckValueType","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":13774,"end":13775,"loc":{"start":{"line":394,"column":21},"end":{"line":394,"column":22},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":13777,"end":13781,"loc":{"start":{"line":394,"column":24},"end":{"line":394,"column":28},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":13783,"end":13792,"loc":{"start":{"line":394,"column":30},"end":{"line":394,"column":39},"identifierName":"structure"},"name":"structure"},{"type":"Identifier","start":13794,"end":13803,"loc":{"start":{"line":394,"column":41},"end":{"line":394,"column":50},"identifierName":"valuetype"},"name":"valuetype"},{"type":"AssignmentPattern","start":13805,"end":13816,"loc":{"start":{"line":394,"column":52},"end":{"line":394,"column":63}},"left":{"type":"Identifier","start":13805,"end":13811,"loc":{"start":{"line":394,"column":52},"end":{"line":394,"column":58},"identifierName":"values"},"name":"values"},"right":{"type":"ArrayExpression","start":13814,"end":13816,"loc":{"start":{"line":394,"column":61},"end":{"line":394,"column":63}},"elements":[]}}],"body":{"type":"BlockStatement","start":13818,"end":15149,"loc":{"start":{"line":394,"column":65},"end":{"line":431,"column":2}},"body":[{"type":"VariableDeclaration","start":13873,"end":13889,"loc":{"start":{"line":397,"column":2},"end":{"line":397,"column":18}},"declarations":[{"type":"VariableDeclarator","start":13877,"end":13889,"loc":{"start":{"line":397,"column":6},"end":{"line":397,"column":18}},"id":{"type":"Identifier","start":13877,"end":13889,"loc":{"start":{"line":397,"column":6},"end":{"line":397,"column":18},"identifierName":"valuechecker"},"name":"valuechecker","leadingComments":null},"init":null,"leadingComments":null}],"kind":"let","leadingComments":[{"type":"CommentLine","value":" Determine which checkfunction will be used.","start":13824,"end":13870,"loc":{"start":{"line":396,"column":2},"end":{"line":396,"column":48}}}]},{"type":"IfStatement","start":13892,"end":14429,"loc":{"start":{"line":398,"column":2},"end":{"line":411,"column":3}},"test":{"type":"BinaryExpression","start":13896,"end":13917,"loc":{"start":{"line":398,"column":6},"end":{"line":398,"column":27}},"left":{"type":"Identifier","start":13896,"end":13905,"loc":{"start":{"line":398,"column":6},"end":{"line":398,"column":15},"identifierName":"valuetype"},"name":"valuetype"},"operator":"==","right":{"type":"StringLiteral","start":13909,"end":13917,"loc":{"start":{"line":398,"column":19},"end":{"line":398,"column":27}},"extra":{"rawValue":"Number","raw":"\"Number\""},"value":"Number"}},"consequent":{"type":"BlockStatement","start":13919,"end":13956,"loc":{"start":{"line":398,"column":29},"end":{"line":400,"column":3}},"body":[{"type":"ExpressionStatement","start":13924,"end":13952,"loc":{"start":{"line":399,"column":3},"end":{"line":399,"column":31}},"expression":{"type":"AssignmentExpression","start":13924,"end":13952,"loc":{"start":{"line":399,"column":3},"end":{"line":399,"column":31}},"operator":"=","left":{"type":"Identifier","start":13924,"end":13936,"loc":{"start":{"line":399,"column":3},"end":{"line":399,"column":15},"identifierName":"valuechecker"},"name":"valuechecker"},"right":{"type":"MemberExpression","start":13939,"end":13952,"loc":{"start":{"line":399,"column":18},"end":{"line":399,"column":31}},"object":{"type":"ThisExpression","start":13939,"end":13943,"loc":{"start":{"line":399,"column":18},"end":{"line":399,"column":22}}},"property":{"type":"Identifier","start":13944,"end":13952,"loc":{"start":{"line":399,"column":23},"end":{"line":399,"column":31},"identifierName":"isNumber"},"name":"isNumber"},"computed":false}}}],"directives":[]},"alternate":{"type":"IfStatement","start":13962,"end":14429,"loc":{"start":{"line":400,"column":9},"end":{"line":411,"column":3}},"test":{"type":"BinaryExpression","start":13967,"end":13993,"loc":{"start":{"line":400,"column":14},"end":{"line":400,"column":40}},"left":{"type":"Identifier","start":13967,"end":13976,"loc":{"start":{"line":400,"column":14},"end":{"line":400,"column":23},"identifierName":"valuetype"},"name":"valuetype"},"operator":"==","right":{"type":"StringLiteral","start":13980,"end":13993,"loc":{"start":{"line":400,"column":27},"end":{"line":400,"column":40}},"extra":{"rawValue":"NonNegative","raw":"\"NonNegative\""},"value":"NonNegative"}},"consequent":{"type":"BlockStatement","start":13995,"end":14037,"loc":{"start":{"line":400,"column":42},"end":{"line":402,"column":3}},"body":[{"type":"ExpressionStatement","start":14000,"end":14033,"loc":{"start":{"line":401,"column":3},"end":{"line":401,"column":36}},"expression":{"type":"AssignmentExpression","start":14000,"end":14033,"loc":{"start":{"line":401,"column":3},"end":{"line":401,"column":36}},"operator":"=","left":{"type":"Identifier","start":14000,"end":14012,"loc":{"start":{"line":401,"column":3},"end":{"line":401,"column":15},"identifierName":"valuechecker"},"name":"valuechecker"},"right":{"type":"MemberExpression","start":14015,"end":14033,"loc":{"start":{"line":401,"column":18},"end":{"line":401,"column":36}},"object":{"type":"ThisExpression","start":14015,"end":14019,"loc":{"start":{"line":401,"column":18},"end":{"line":401,"column":22}}},"property":{"type":"Identifier","start":14020,"end":14033,"loc":{"start":{"line":401,"column":23},"end":{"line":401,"column":36},"identifierName":"isNonNegative"},"name":"isNonNegative"},"computed":false}}}],"directives":[]},"alternate":{"type":"IfStatement","start":14043,"end":14429,"loc":{"start":{"line":402,"column":9},"end":{"line":411,"column":3}},"test":{"type":"BinaryExpression","start":14048,"end":14074,"loc":{"start":{"line":402,"column":14},"end":{"line":402,"column":40}},"left":{"type":"Identifier","start":14048,"end":14057,"loc":{"start":{"line":402,"column":14},"end":{"line":402,"column":23},"identifierName":"valuetype"},"name":"valuetype"},"operator":"==","right":{"type":"StringLiteral","start":14061,"end":14074,"loc":{"start":{"line":402,"column":27},"end":{"line":402,"column":40}},"extra":{"rawValue":"Probability","raw":"\"Probability\""},"value":"Probability"}},"consequent":{"type":"BlockStatement","start":14076,"end":14118,"loc":{"start":{"line":402,"column":42},"end":{"line":404,"column":3}},"body":[{"type":"ExpressionStatement","start":14081,"end":14114,"loc":{"start":{"line":403,"column":3},"end":{"line":403,"column":36}},"expression":{"type":"AssignmentExpression","start":14081,"end":14114,"loc":{"start":{"line":403,"column":3},"end":{"line":403,"column":36}},"operator":"=","left":{"type":"Identifier","start":14081,"end":14093,"loc":{"start":{"line":403,"column":3},"end":{"line":403,"column":15},"identifierName":"valuechecker"},"name":"valuechecker"},"right":{"type":"MemberExpression","start":14096,"end":14114,"loc":{"start":{"line":403,"column":18},"end":{"line":403,"column":36}},"object":{"type":"ThisExpression","start":14096,"end":14100,"loc":{"start":{"line":403,"column":18},"end":{"line":403,"column":22}}},"property":{"type":"Identifier","start":14101,"end":14114,"loc":{"start":{"line":403,"column":23},"end":{"line":403,"column":36},"identifierName":"isProbability"},"name":"isProbability"},"computed":false}}}],"directives":[]},"alternate":{"type":"IfStatement","start":14124,"end":14429,"loc":{"start":{"line":404,"column":9},"end":{"line":411,"column":3}},"test":{"type":"BinaryExpression","start":14129,"end":14150,"loc":{"start":{"line":404,"column":14},"end":{"line":404,"column":35}},"left":{"type":"Identifier","start":14129,"end":14138,"loc":{"start":{"line":404,"column":14},"end":{"line":404,"column":23},"identifierName":"valuetype"},"name":"valuetype"},"operator":"==","right":{"type":"StringLiteral","start":14142,"end":14150,"loc":{"start":{"line":404,"column":27},"end":{"line":404,"column":35}},"extra":{"rawValue":"String","raw":"\"String\""},"value":"String"}},"consequent":{"type":"BlockStatement","start":14152,"end":14189,"loc":{"start":{"line":404,"column":37},"end":{"line":406,"column":3}},"body":[{"type":"ExpressionStatement","start":14157,"end":14185,"loc":{"start":{"line":405,"column":3},"end":{"line":405,"column":31}},"expression":{"type":"AssignmentExpression","start":14157,"end":14185,"loc":{"start":{"line":405,"column":3},"end":{"line":405,"column":31}},"operator":"=","left":{"type":"Identifier","start":14157,"end":14169,"loc":{"start":{"line":405,"column":3},"end":{"line":405,"column":15},"identifierName":"valuechecker"},"name":"valuechecker"},"right":{"type":"MemberExpression","start":14172,"end":14185,"loc":{"start":{"line":405,"column":18},"end":{"line":405,"column":31}},"object":{"type":"ThisExpression","start":14172,"end":14176,"loc":{"start":{"line":405,"column":18},"end":{"line":405,"column":22}}},"property":{"type":"Identifier","start":14177,"end":14185,"loc":{"start":{"line":405,"column":23},"end":{"line":405,"column":31},"identifierName":"isString"},"name":"isString"},"computed":false}}}],"directives":[]},"alternate":{"type":"IfStatement","start":14195,"end":14429,"loc":{"start":{"line":406,"column":9},"end":{"line":411,"column":3}},"test":{"type":"BinaryExpression","start":14200,"end":14222,"loc":{"start":{"line":406,"column":14},"end":{"line":406,"column":36}},"left":{"type":"Identifier","start":14200,"end":14209,"loc":{"start":{"line":406,"column":14},"end":{"line":406,"column":23},"identifierName":"valuetype"},"name":"valuetype"},"operator":"==","right":{"type":"StringLiteral","start":14213,"end":14222,"loc":{"start":{"line":406,"column":27},"end":{"line":406,"column":36}},"extra":{"rawValue":"Boolean","raw":"\"Boolean\""},"value":"Boolean"}},"consequent":{"type":"BlockStatement","start":14224,"end":14262,"loc":{"start":{"line":406,"column":38},"end":{"line":408,"column":3}},"body":[{"type":"ExpressionStatement","start":14229,"end":14258,"loc":{"start":{"line":407,"column":3},"end":{"line":407,"column":32}},"expression":{"type":"AssignmentExpression","start":14229,"end":14258,"loc":{"start":{"line":407,"column":3},"end":{"line":407,"column":32}},"operator":"=","left":{"type":"Identifier","start":14229,"end":14241,"loc":{"start":{"line":407,"column":3},"end":{"line":407,"column":15},"identifierName":"valuechecker"},"name":"valuechecker"},"right":{"type":"MemberExpression","start":14244,"end":14258,"loc":{"start":{"line":407,"column":18},"end":{"line":407,"column":32}},"object":{"type":"ThisExpression","start":14244,"end":14248,"loc":{"start":{"line":407,"column":18},"end":{"line":407,"column":22}}},"property":{"type":"Identifier","start":14249,"end":14258,"loc":{"start":{"line":407,"column":23},"end":{"line":407,"column":32},"identifierName":"isBoolean"},"name":"isBoolean"},"computed":false}}}],"directives":[]},"alternate":{"type":"BlockStatement","start":14268,"end":14429,"loc":{"start":{"line":408,"column":9},"end":{"line":411,"column":3}},"body":[{"type":"ThrowStatement","start":14273,"end":14425,"loc":{"start":{"line":409,"column":3},"end":{"line":410,"column":88}},"argument":{"type":"BinaryExpression","start":14280,"end":14424,"loc":{"start":{"line":409,"column":10},"end":{"line":410,"column":87}},"left":{"type":"BinaryExpression","start":14280,"end":14334,"loc":{"start":{"line":409,"column":10},"end":{"line":409,"column":64}},"left":{"type":"StringLiteral","start":14280,"end":14327,"loc":{"start":{"line":409,"column":10},"end":{"line":409,"column":57}},"extra":{"rawValue":"Unsupported valuetype in check for parameter ","raw":"\"Unsupported valuetype in check for parameter \""},"value":"Unsupported valuetype in check for parameter "},"operator":"+","right":{"type":"Identifier","start":14330,"end":14334,"loc":{"start":{"line":409,"column":60},"end":{"line":409,"column":64},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":14341,"end":14424,"loc":{"start":{"line":410,"column":4},"end":{"line":410,"column":87}},"extra":{"rawValue":", please choose from: 'Number','NonNegative', 'Probability', 'String', 'Boolean'.","raw":"\", please choose from: 'Number','NonNegative', 'Probability', 'String', 'Boolean'.\""},"value":", please choose from: 'Number','NonNegative', 'Probability', 'String', 'Boolean'."},"extra":{"parenthesized":true,"parenStart":14278}}}],"directives":[]}}}}}},{"type":"VariableDeclaration","start":14435,"end":14536,"loc":{"start":{"line":413,"column":2},"end":{"line":413,"column":103}},"declarations":[{"type":"VariableDeclarator","start":14439,"end":14536,"loc":{"start":{"line":413,"column":6},"end":{"line":413,"column":103}},"id":{"type":"Identifier","start":14439,"end":14446,"loc":{"start":{"line":413,"column":6},"end":{"line":413,"column":13},"identifierName":"message"},"name":"message"},"init":{"type":"BinaryExpression","start":14450,"end":14536,"loc":{"start":{"line":413,"column":17},"end":{"line":413,"column":103}},"left":{"type":"BinaryExpression","start":14450,"end":14530,"loc":{"start":{"line":413,"column":17},"end":{"line":413,"column":97}},"left":{"type":"BinaryExpression","start":14450,"end":14518,"loc":{"start":{"line":413,"column":17},"end":{"line":413,"column":85}},"left":{"type":"BinaryExpression","start":14450,"end":14469,"loc":{"start":{"line":413,"column":17},"end":{"line":413,"column":36}},"left":{"type":"StringLiteral","start":14450,"end":14462,"loc":{"start":{"line":413,"column":17},"end":{"line":413,"column":29}},"extra":{"rawValue":"Parameter ","raw":"\"Parameter \""},"value":"Parameter "},"operator":"+","right":{"type":"Identifier","start":14465,"end":14469,"loc":{"start":{"line":413,"column":32},"end":{"line":413,"column":36},"identifierName":"name"},"name":"name"}},"operator":"+","right":{"type":"StringLiteral","start":14472,"end":14518,"loc":{"start":{"line":413,"column":39},"end":{"line":413,"column":85}},"extra":{"rawValue":" : incorrect type. Expecting values of type ","raw":"\" : incorrect type. Expecting values of type \""},"value":" : incorrect type. Expecting values of type "}},"operator":"+","right":{"type":"Identifier","start":14521,"end":14530,"loc":{"start":{"line":413,"column":88},"end":{"line":413,"column":97},"identifierName":"valuetype"},"name":"valuetype"}},"operator":"+","right":{"type":"StringLiteral","start":14533,"end":14536,"loc":{"start":{"line":413,"column":100},"end":{"line":413,"column":103}},"extra":{"rawValue":".","raw":"\".\""},"value":".","leadingComments":null,"trailingComments":null},"trailingComments":null},"trailingComments":null}],"kind":"let","trailingComments":[{"type":"CommentLine","value":" structure determines how the checker is applied.","start":14543,"end":14594,"loc":{"start":{"line":415,"column":2},"end":{"line":415,"column":53}}}]},{"type":"IfStatement","start":14597,"end":15146,"loc":{"start":{"line":416,"column":2},"end":{"line":430,"column":3}},"test":{"type":"BinaryExpression","start":14601,"end":14627,"loc":{"start":{"line":416,"column":6},"end":{"line":416,"column":32}},"left":{"type":"Identifier","start":14601,"end":14610,"loc":{"start":{"line":416,"column":6},"end":{"line":416,"column":15},"identifierName":"structure"},"name":"structure","leadingComments":null},"operator":"==","right":{"type":"StringLiteral","start":14614,"end":14627,"loc":{"start":{"line":416,"column":19},"end":{"line":416,"column":32}},"extra":{"rawValue":"SingleValue","raw":"\"SingleValue\""},"value":"SingleValue"},"leadingComments":null},"consequent":{"type":"BlockStatement","start":14629,"end":14708,"loc":{"start":{"line":416,"column":34},"end":{"line":418,"column":3}},"body":[{"type":"IfStatement","start":14634,"end":14704,"loc":{"start":{"line":417,"column":3},"end":{"line":417,"column":73}},"test":{"type":"LogicalExpression","start":14638,"end":14684,"loc":{"start":{"line":417,"column":7},"end":{"line":417,"column":53}},"left":{"type":"BinaryExpression","start":14638,"end":14654,"loc":{"start":{"line":417,"column":7},"end":{"line":417,"column":23}},"left":{"type":"Identifier","start":14638,"end":14639,"loc":{"start":{"line":417,"column":7},"end":{"line":417,"column":8},"identifierName":"p"},"name":"p"},"operator":"==","right":{"type":"StringLiteral","start":14643,"end":14654,"loc":{"start":{"line":417,"column":12},"end":{"line":417,"column":23}},"extra":{"rawValue":"undefined","raw":"\"undefined\""},"value":"undefined"}},"operator":"||","right":{"type":"UnaryExpression","start":14658,"end":14684,"loc":{"start":{"line":417,"column":27},"end":{"line":417,"column":53}},"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":14659,"end":14684,"loc":{"start":{"line":417,"column":28},"end":{"line":417,"column":53}},"callee":{"type":"Identifier","start":14659,"end":14671,"loc":{"start":{"line":417,"column":28},"end":{"line":417,"column":40},"identifierName":"valuechecker"},"name":"valuechecker"},"arguments":[{"type":"Identifier","start":14673,"end":14674,"loc":{"start":{"line":417,"column":42},"end":{"line":417,"column":43},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":14676,"end":14682,"loc":{"start":{"line":417,"column":45},"end":{"line":417,"column":51},"identifierName":"values"},"name":"values"}]},"extra":{"parenthesizedArgument":false}}},"consequent":{"type":"BlockStatement","start":14686,"end":14704,"loc":{"start":{"line":417,"column":55},"end":{"line":417,"column":73}},"body":[{"type":"ThrowStatement","start":14688,"end":14702,"loc":{"start":{"line":417,"column":57},"end":{"line":417,"column":71}},"argument":{"type":"Identifier","start":14694,"end":14701,"loc":{"start":{"line":417,"column":63},"end":{"line":417,"column":70},"identifierName":"message"},"name":"message","extra":{"parenthesized":true,"parenStart":14693}}}],"directives":[]},"alternate":null}],"directives":[]},"alternate":{"type":"IfStatement","start":14714,"end":15146,"loc":{"start":{"line":418,"column":9},"end":{"line":430,"column":3}},"test":{"type":"BinaryExpression","start":14719,"end":14743,"loc":{"start":{"line":418,"column":14},"end":{"line":418,"column":38}},"left":{"type":"Identifier","start":14719,"end":14728,"loc":{"start":{"line":418,"column":14},"end":{"line":418,"column":23},"identifierName":"structure"},"name":"structure"},"operator":"==","right":{"type":"StringLiteral","start":14732,"end":14743,"loc":{"start":{"line":418,"column":27},"end":{"line":418,"column":38}},"extra":{"rawValue":"KindArray","raw":"\"KindArray\""},"value":"KindArray"}},"consequent":{"type":"BlockStatement","start":14745,"end":14852,"loc":{"start":{"line":418,"column":40},"end":{"line":422,"column":3}},"body":[{"type":"ForOfStatement","start":14750,"end":14848,"loc":{"start":{"line":419,"column":3},"end":{"line":421,"column":4}},"left":{"type":"VariableDeclaration","start":14755,"end":14760,"loc":{"start":{"line":419,"column":8},"end":{"line":419,"column":13}},"declarations":[{"type":"VariableDeclarator","start":14759,"end":14760,"loc":{"start":{"line":419,"column":12},"end":{"line":419,"column":13}},"id":{"type":"Identifier","start":14759,"end":14760,"loc":{"start":{"line":419,"column":12},"end":{"line":419,"column":13},"identifierName":"i"},"name":"i"},"init":null}],"kind":"let"},"right":{"type":"Identifier","start":14764,"end":14765,"loc":{"start":{"line":419,"column":17},"end":{"line":419,"column":18},"identifierName":"p"},"name":"p"},"body":{"type":"BlockStatement","start":14767,"end":14848,"loc":{"start":{"line":419,"column":20},"end":{"line":421,"column":4}},"body":[{"type":"IfStatement","start":14773,"end":14843,"loc":{"start":{"line":420,"column":4},"end":{"line":420,"column":74}},"test":{"type":"LogicalExpression","start":14777,"end":14823,"loc":{"start":{"line":420,"column":8},"end":{"line":420,"column":54}},"left":{"type":"BinaryExpression","start":14777,"end":14793,"loc":{"start":{"line":420,"column":8},"end":{"line":420,"column":24}},"left":{"type":"Identifier","start":14777,"end":14778,"loc":{"start":{"line":420,"column":8},"end":{"line":420,"column":9},"identifierName":"i"},"name":"i"},"operator":"==","right":{"type":"StringLiteral","start":14782,"end":14793,"loc":{"start":{"line":420,"column":13},"end":{"line":420,"column":24}},"extra":{"rawValue":"undefined","raw":"\"undefined\""},"value":"undefined"}},"operator":"||","right":{"type":"UnaryExpression","start":14797,"end":14823,"loc":{"start":{"line":420,"column":28},"end":{"line":420,"column":54}},"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":14798,"end":14823,"loc":{"start":{"line":420,"column":29},"end":{"line":420,"column":54}},"callee":{"type":"Identifier","start":14798,"end":14810,"loc":{"start":{"line":420,"column":29},"end":{"line":420,"column":41},"identifierName":"valuechecker"},"name":"valuechecker"},"arguments":[{"type":"Identifier","start":14812,"end":14813,"loc":{"start":{"line":420,"column":43},"end":{"line":420,"column":44},"identifierName":"i"},"name":"i"},{"type":"Identifier","start":14815,"end":14821,"loc":{"start":{"line":420,"column":46},"end":{"line":420,"column":52},"identifierName":"values"},"name":"values"}]},"extra":{"parenthesizedArgument":false}}},"consequent":{"type":"BlockStatement","start":14825,"end":14843,"loc":{"start":{"line":420,"column":56},"end":{"line":420,"column":74}},"body":[{"type":"ThrowStatement","start":14827,"end":14841,"loc":{"start":{"line":420,"column":58},"end":{"line":420,"column":72}},"argument":{"type":"Identifier","start":14833,"end":14840,"loc":{"start":{"line":420,"column":64},"end":{"line":420,"column":71},"identifierName":"message"},"name":"message","extra":{"parenthesized":true,"parenStart":14832}}}],"directives":[]},"alternate":null}],"directives":[]}}],"directives":[]},"alternate":{"type":"IfStatement","start":14858,"end":15146,"loc":{"start":{"line":422,"column":9},"end":{"line":430,"column":3}},"test":{"type":"BinaryExpression","start":14863,"end":14888,"loc":{"start":{"line":422,"column":14},"end":{"line":422,"column":39}},"left":{"type":"Identifier","start":14863,"end":14872,"loc":{"start":{"line":422,"column":14},"end":{"line":422,"column":23},"identifierName":"structure"},"name":"structure"},"operator":"==","right":{"type":"StringLiteral","start":14876,"end":14888,"loc":{"start":{"line":422,"column":27},"end":{"line":422,"column":39}},"extra":{"rawValue":"KindMatrix","raw":"\"KindMatrix\""},"value":"KindMatrix"}},"consequent":{"type":"BlockStatement","start":14890,"end":15027,"loc":{"start":{"line":422,"column":41},"end":{"line":428,"column":3}},"body":[{"type":"ForOfStatement","start":14895,"end":15023,"loc":{"start":{"line":423,"column":3},"end":{"line":427,"column":4}},"left":{"type":"VariableDeclaration","start":14900,"end":14905,"loc":{"start":{"line":423,"column":8},"end":{"line":423,"column":13}},"declarations":[{"type":"VariableDeclarator","start":14904,"end":14905,"loc":{"start":{"line":423,"column":12},"end":{"line":423,"column":13}},"id":{"type":"Identifier","start":14904,"end":14905,"loc":{"start":{"line":423,"column":12},"end":{"line":423,"column":13},"identifierName":"i"},"name":"i"},"init":null}],"kind":"let"},"right":{"type":"Identifier","start":14909,"end":14910,"loc":{"start":{"line":423,"column":17},"end":{"line":423,"column":18},"identifierName":"p"},"name":"p"},"body":{"type":"BlockStatement","start":14912,"end":15023,"loc":{"start":{"line":423,"column":20},"end":{"line":427,"column":4}},"body":[{"type":"ForOfStatement","start":14918,"end":15018,"loc":{"start":{"line":424,"column":4},"end":{"line":426,"column":5}},"left":{"type":"VariableDeclaration","start":14923,"end":14928,"loc":{"start":{"line":424,"column":9},"end":{"line":424,"column":14}},"declarations":[{"type":"VariableDeclarator","start":14927,"end":14928,"loc":{"start":{"line":424,"column":13},"end":{"line":424,"column":14}},"id":{"type":"Identifier","start":14927,"end":14928,"loc":{"start":{"line":424,"column":13},"end":{"line":424,"column":14},"identifierName":"j"},"name":"j"},"init":null}],"kind":"let"},"right":{"type":"Identifier","start":14932,"end":14933,"loc":{"start":{"line":424,"column":18},"end":{"line":424,"column":19},"identifierName":"i"},"name":"i"},"body":{"type":"BlockStatement","start":14935,"end":15018,"loc":{"start":{"line":424,"column":21},"end":{"line":426,"column":5}},"body":[{"type":"IfStatement","start":14942,"end":15012,"loc":{"start":{"line":425,"column":5},"end":{"line":425,"column":75}},"test":{"type":"LogicalExpression","start":14946,"end":14992,"loc":{"start":{"line":425,"column":9},"end":{"line":425,"column":55}},"left":{"type":"BinaryExpression","start":14946,"end":14962,"loc":{"start":{"line":425,"column":9},"end":{"line":425,"column":25}},"left":{"type":"Identifier","start":14946,"end":14947,"loc":{"start":{"line":425,"column":9},"end":{"line":425,"column":10},"identifierName":"j"},"name":"j"},"operator":"==","right":{"type":"StringLiteral","start":14951,"end":14962,"loc":{"start":{"line":425,"column":14},"end":{"line":425,"column":25}},"extra":{"rawValue":"undefined","raw":"\"undefined\""},"value":"undefined"}},"operator":"||","right":{"type":"UnaryExpression","start":14966,"end":14992,"loc":{"start":{"line":425,"column":29},"end":{"line":425,"column":55}},"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":14967,"end":14992,"loc":{"start":{"line":425,"column":30},"end":{"line":425,"column":55}},"callee":{"type":"Identifier","start":14967,"end":14979,"loc":{"start":{"line":425,"column":30},"end":{"line":425,"column":42},"identifierName":"valuechecker"},"name":"valuechecker"},"arguments":[{"type":"Identifier","start":14981,"end":14982,"loc":{"start":{"line":425,"column":44},"end":{"line":425,"column":45},"identifierName":"j"},"name":"j"},{"type":"Identifier","start":14984,"end":14990,"loc":{"start":{"line":425,"column":47},"end":{"line":425,"column":53},"identifierName":"values"},"name":"values"}]},"extra":{"parenthesizedArgument":false}}},"consequent":{"type":"BlockStatement","start":14994,"end":15012,"loc":{"start":{"line":425,"column":57},"end":{"line":425,"column":75}},"body":[{"type":"ThrowStatement","start":14996,"end":15010,"loc":{"start":{"line":425,"column":59},"end":{"line":425,"column":73}},"argument":{"type":"Identifier","start":15002,"end":15009,"loc":{"start":{"line":425,"column":65},"end":{"line":425,"column":72},"identifierName":"message"},"name":"message","extra":{"parenthesized":true,"parenStart":15001}}}],"directives":[]},"alternate":null}],"directives":[]}}],"directives":[]}}],"directives":[]},"alternate":{"type":"BlockStatement","start":15033,"end":15146,"loc":{"start":{"line":428,"column":9},"end":{"line":430,"column":3}},"body":[{"type":"ThrowStatement","start":15038,"end":15142,"loc":{"start":{"line":429,"column":3},"end":{"line":429,"column":107}},"argument":{"type":"BinaryExpression","start":15044,"end":15141,"loc":{"start":{"line":429,"column":9},"end":{"line":429,"column":106}},"left":{"type":"BinaryExpression","start":15044,"end":15076,"loc":{"start":{"line":429,"column":9},"end":{"line":429,"column":41}},"left":{"type":"StringLiteral","start":15044,"end":15064,"loc":{"start":{"line":429,"column":9},"end":{"line":429,"column":29}},"extra":{"rawValue":"Unknown structure ","raw":"\"Unknown structure \""},"value":"Unknown structure "},"operator":"+","right":{"type":"Identifier","start":15067,"end":15076,"loc":{"start":{"line":429,"column":32},"end":{"line":429,"column":41},"identifierName":"structure"},"name":"structure"}},"operator":"+","right":{"type":"StringLiteral","start":15079,"end":15141,"loc":{"start":{"line":429,"column":44},"end":{"line":429,"column":106}},"extra":{"rawValue":", please choose 'SingleValue', 'KindArray', or 'KindMatrix'.","raw":"\", please choose 'SingleValue', 'KindArray', or 'KindMatrix'.\""},"value":", please choose 'SingleValue', 'KindArray', or 'KindMatrix'."},"extra":{"parenthesized":true,"parenStart":15043}}}],"directives":[]}}},"leadingComments":[{"type":"CommentLine","value":" structure determines how the checker is applied.","start":14543,"end":14594,"loc":{"start":{"line":415,"column":2},"end":{"line":415,"column":53}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if the elements of a given parameter are of the right type.\n\tIt throws an error if this is not the case.\n\t@param {anything} p - parameter to check.\n\t@param {string} name - parameter name used for any error messages.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t@param {string} valuetype - type of value, which must be one of \n\t\"Number\", \"NonNegative\", \"Probability\", \"String\", or \"Boolean\". \n\t@param {string[]} values - predefined specific options for the value. \n\tIf left empty, this is ignored.\n\t@private\n\t","start":13134,"end":13752,"loc":{"start":{"line":382,"column":1},"end":{"line":393,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a parameter exists and is defined, has the right structure, and if all \n\tits elements are of the correct type. Throw an error if any of these do not hold.\n\t@param {string} name - parameter name used for any error messages.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t@param {string} valuetype - type of value, which must be one of \n\t\"Number\", \"NonNegative\", \"Probability\", \"String\", or \"Boolean\". \n\t@param {string[]} [values =[]] - predefined specific options for the value. \n\tIf left empty, this is ignored.\n\t\n\t@example\n\t* // from inside the confChecker() function of your constraint:\n\t* let checker = new ParameterChecker( this.conf, this.C )\n\t* \n\t* checker.confCheckParameter( \"MY_PARAMETER\", \"KindMatrix\", \"Number\" ) // see Adhesion\n\t* checker.confCheckParameter( \"MY_PARAMETER_2\", \"KindArray\", \"NonNegative\" )\n\t","start":15153,"end":16083,"loc":{"start":{"line":433,"column":1},"end":{"line":449,"column":3}}}]},{"type":"ClassMethod","start":16085,"end":16326,"loc":{"start":{"line":450,"column":1},"end":{"line":455,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":16085,"end":16103,"loc":{"start":{"line":450,"column":1},"end":{"line":450,"column":19},"identifierName":"confCheckParameter"},"name":"confCheckParameter","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":16105,"end":16109,"loc":{"start":{"line":450,"column":21},"end":{"line":450,"column":25},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":16111,"end":16120,"loc":{"start":{"line":450,"column":27},"end":{"line":450,"column":36},"identifierName":"structure"},"name":"structure"},{"type":"Identifier","start":16122,"end":16131,"loc":{"start":{"line":450,"column":38},"end":{"line":450,"column":47},"identifierName":"valuetype"},"name":"valuetype"},{"type":"AssignmentPattern","start":16133,"end":16144,"loc":{"start":{"line":450,"column":49},"end":{"line":450,"column":60}},"left":{"type":"Identifier","start":16133,"end":16139,"loc":{"start":{"line":450,"column":49},"end":{"line":450,"column":55},"identifierName":"values"},"name":"values"},"right":{"type":"ArrayExpression","start":16142,"end":16144,"loc":{"start":{"line":450,"column":58},"end":{"line":450,"column":60}},"elements":[]}}],"body":{"type":"BlockStatement","start":16146,"end":16326,"loc":{"start":{"line":450,"column":62},"end":{"line":455,"column":2}},"body":[{"type":"ExpressionStatement","start":16150,"end":16182,"loc":{"start":{"line":451,"column":2},"end":{"line":451,"column":34}},"expression":{"type":"CallExpression","start":16150,"end":16182,"loc":{"start":{"line":451,"column":2},"end":{"line":451,"column":34}},"callee":{"type":"MemberExpression","start":16150,"end":16174,"loc":{"start":{"line":451,"column":2},"end":{"line":451,"column":26}},"object":{"type":"ThisExpression","start":16150,"end":16154,"loc":{"start":{"line":451,"column":2},"end":{"line":451,"column":6}}},"property":{"type":"Identifier","start":16155,"end":16174,"loc":{"start":{"line":451,"column":7},"end":{"line":451,"column":26},"identifierName":"confCheckPresenceOf"},"name":"confCheckPresenceOf"},"computed":false},"arguments":[{"type":"Identifier","start":16176,"end":16180,"loc":{"start":{"line":451,"column":28},"end":{"line":451,"column":32},"identifierName":"name"},"name":"name"}]}},{"type":"VariableDeclaration","start":16185,"end":16208,"loc":{"start":{"line":452,"column":2},"end":{"line":452,"column":25}},"declarations":[{"type":"VariableDeclarator","start":16189,"end":16208,"loc":{"start":{"line":452,"column":6},"end":{"line":452,"column":25}},"id":{"type":"Identifier","start":16189,"end":16190,"loc":{"start":{"line":452,"column":6},"end":{"line":452,"column":7},"identifierName":"p"},"name":"p"},"init":{"type":"MemberExpression","start":16193,"end":16208,"loc":{"start":{"line":452,"column":10},"end":{"line":452,"column":25}},"object":{"type":"MemberExpression","start":16193,"end":16202,"loc":{"start":{"line":452,"column":10},"end":{"line":452,"column":19}},"object":{"type":"ThisExpression","start":16193,"end":16197,"loc":{"start":{"line":452,"column":10},"end":{"line":452,"column":14}}},"property":{"type":"Identifier","start":16198,"end":16202,"loc":{"start":{"line":452,"column":15},"end":{"line":452,"column":19},"identifierName":"conf"},"name":"conf"},"computed":false},"property":{"type":"Identifier","start":16203,"end":16207,"loc":{"start":{"line":452,"column":20},"end":{"line":452,"column":24},"identifierName":"name"},"name":"name"},"computed":true}}],"kind":"let"},{"type":"ExpressionStatement","start":16211,"end":16256,"loc":{"start":{"line":453,"column":2},"end":{"line":453,"column":47}},"expression":{"type":"CallExpression","start":16211,"end":16256,"loc":{"start":{"line":453,"column":2},"end":{"line":453,"column":47}},"callee":{"type":"MemberExpression","start":16211,"end":16234,"loc":{"start":{"line":453,"column":2},"end":{"line":453,"column":25}},"object":{"type":"ThisExpression","start":16211,"end":16215,"loc":{"start":{"line":453,"column":2},"end":{"line":453,"column":6}}},"property":{"type":"Identifier","start":16216,"end":16234,"loc":{"start":{"line":453,"column":7},"end":{"line":453,"column":25},"identifierName":"confCheckStructure"},"name":"confCheckStructure"},"computed":false},"arguments":[{"type":"Identifier","start":16236,"end":16237,"loc":{"start":{"line":453,"column":27},"end":{"line":453,"column":28},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":16239,"end":16243,"loc":{"start":{"line":453,"column":30},"end":{"line":453,"column":34},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":16245,"end":16254,"loc":{"start":{"line":453,"column":36},"end":{"line":453,"column":45},"identifierName":"structure"},"name":"structure"}]}},{"type":"ExpressionStatement","start":16259,"end":16323,"loc":{"start":{"line":454,"column":2},"end":{"line":454,"column":66}},"expression":{"type":"CallExpression","start":16259,"end":16323,"loc":{"start":{"line":454,"column":2},"end":{"line":454,"column":66}},"callee":{"type":"MemberExpression","start":16259,"end":16282,"loc":{"start":{"line":454,"column":2},"end":{"line":454,"column":25}},"object":{"type":"ThisExpression","start":16259,"end":16263,"loc":{"start":{"line":454,"column":2},"end":{"line":454,"column":6}}},"property":{"type":"Identifier","start":16264,"end":16282,"loc":{"start":{"line":454,"column":7},"end":{"line":454,"column":25},"identifierName":"confCheckValueType"},"name":"confCheckValueType"},"computed":false},"arguments":[{"type":"Identifier","start":16284,"end":16285,"loc":{"start":{"line":454,"column":27},"end":{"line":454,"column":28},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":16287,"end":16291,"loc":{"start":{"line":454,"column":30},"end":{"line":454,"column":34},"identifierName":"name"},"name":"name"},{"type":"Identifier","start":16293,"end":16302,"loc":{"start":{"line":454,"column":36},"end":{"line":454,"column":45},"identifierName":"structure"},"name":"structure"},{"type":"Identifier","start":16304,"end":16313,"loc":{"start":{"line":454,"column":47},"end":{"line":454,"column":56},"identifierName":"valuetype"},"name":"valuetype"},{"type":"Identifier","start":16315,"end":16321,"loc":{"start":{"line":454,"column":58},"end":{"line":454,"column":64},"identifierName":"values"},"name":"values"}]}}],"directives":[]},"leadingComments":[{"type":"CommentBlock","value":"* Check if a parameter exists and is defined, has the right structure, and if all \n\tits elements are of the correct type. Throw an error if any of these do not hold.\n\t@param {string} name - parameter name used for any error messages.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t@param {string} valuetype - type of value, which must be one of \n\t\"Number\", \"NonNegative\", \"Probability\", \"String\", or \"Boolean\". \n\t@param {string[]} [values =[]] - predefined specific options for the value. \n\tIf left empty, this is ignored.\n\t\n\t@example\n\t* // from inside the confChecker() function of your constraint:\n\t* let checker = new ParameterChecker( this.conf, this.C )\n\t* \n\t* checker.confCheckParameter( \"MY_PARAMETER\", \"KindMatrix\", \"Number\" ) // see Adhesion\n\t* checker.confCheckParameter( \"MY_PARAMETER_2\", \"KindArray\", \"NonNegative\" )\n\t","start":15153,"end":16083,"loc":{"start":{"line":433,"column":1},"end":{"line":449,"column":3}}}]}]},"leadingComments":[{"type":"CommentBlock","value":"* Class for checking if parameters are present in a conf object and are of the expected\nstructure and type. This is not meant for usage from outside the package, but you can\nuse it when you are building your own constraints and want to specify the required parameters.\n\n@example\n* // Add this above your constraint class\n* import ParameterChecker from \"./ParameterChecker.js\"\n* \n* // from inside the confChecker() function of your constraint:\n* let checker = new ParameterChecker( this.conf, this.C )\n* \n* // Most parameters have a standard structure and value type;\n* // you can check them like this:\n* checker.confCheckParameter( \"MY_PARAMETER\", \"KindMatrix\", \"Number\" ) // see Adhesion\n* checker.confCheckParameter( \"MY_PARAMETER_2\", \"KindArray\", \"NonNegative\" )\n* \n* // Or you can just check their presence and do a custom check:\n* checker.confCheckPresenceOf( \"MY_WEIRD_PARAMETER\" )\n* if( !myCondition ){\n* \tthrow( \"Some error because MY_WEIRD_PARAMETER does not fulfill myCondition!\" )\n* }\n","start":0,"end":1000,"loc":{"start":{"line":1,"column":0},"end":{"line":22,"column":2}}}],"__PseudoExport__":false,"trailingComments":[]},"leadingComments":null}],"directives":[]},"comments":[{"type":"CommentBlock","value":"* Class for checking if parameters are present in a conf object and are of the expected\nstructure and type. This is not meant for usage from outside the package, but you can\nuse it when you are building your own constraints and want to specify the required parameters.\n\n@example\n* // Add this above your constraint class\n* import ParameterChecker from \"./ParameterChecker.js\"\n* \n* // from inside the confChecker() function of your constraint:\n* let checker = new ParameterChecker( this.conf, this.C )\n* \n* // Most parameters have a standard structure and value type;\n* // you can check them like this:\n* checker.confCheckParameter( \"MY_PARAMETER\", \"KindMatrix\", \"Number\" ) // see Adhesion\n* checker.confCheckParameter( \"MY_PARAMETER_2\", \"KindArray\", \"NonNegative\" )\n* \n* // Or you can just check their presence and do a custom check:\n* checker.confCheckPresenceOf( \"MY_WEIRD_PARAMETER\" )\n* if( !myCondition ){\n* \tthrow( \"Some error because MY_WEIRD_PARAMETER does not fulfill myCondition!\" )\n* }\n","start":0,"end":1000,"loc":{"start":{"line":1,"column":0},"end":{"line":22,"column":2}}},{"type":"CommentBlock","value":"* The constructor of the ParameterChecker takes a configuration object.\n\t@param {object} conf - configuration settings as supplied to a constraint, containing the\n\trelevant parameters.\n\t@param {CPM} C - the attached CPM.\n\t","start":1028,"end":1254,"loc":{"start":{"line":25,"column":1},"end":{"line":29,"column":3}}},{"type":"CommentBlock","value":"* The configuration object to check parameters in \n\t\t@type {object}","start":1284,"end":1355,"loc":{"start":{"line":32,"column":2},"end":{"line":33,"column":18}}},{"type":"CommentBlock","value":"* The attached CPM. This is used to check if parameter array lengths match\n\t\tthe number of cellkinds\n\t\t@type {CPM}","start":1380,"end":1498,"loc":{"start":{"line":36,"column":2},"end":{"line":38,"column":15}}},{"type":"CommentBlock","value":" ========= CHECKING PARAMETER PRESENCE ======== ","start":1518,"end":1570,"loc":{"start":{"line":42,"column":1},"end":{"line":42,"column":53}}},{"type":"CommentBlock","value":"* Method to check if a parameter of a given name is present in the conf object \n\tsupplied to the constraint, and if it is defined. Throws an error if this is not the case.\n\t@param {string} name - the name of the parameter, which should be present as a key\n\tin the object.\n\t\n\t@example\n\t* let conf = { MY_PARAMETER : \"something\" }\n\t* // This works, because  MY_PARAMETER is present in conf\n\t* let checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t* \n\t* // There will be an error if MY_PARAMETER is absent/undefined:\n\t* conf = {}\n\t* checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t* conf = { MY_PARAMETER : \"undefined\" }\n\t* checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t","start":1573,"end":2388,"loc":{"start":{"line":44,"column":1},"end":{"line":62,"column":3}}},{"type":"CommentBlock","value":" ========= CHECKING PARAMETER STRUCTURE ======== ","start":2636,"end":2689,"loc":{"start":{"line":72,"column":1},"end":{"line":72,"column":54}}},{"type":"CommentBlock","value":"* Helper function. Some parameters need to be specified for each {@link CellKind}, \n\tso to check those we first need to know the number of cellkinds on the CPM.\n\tThis number is retrieved from the CPM or added to it if it isn't there yet.\n\t@param {number} n_default - a number of cellkinds (including background), which is used\n\tto set the number of cellkinds in the CPM if it isn't there yet.\n\t@return {number} the number of non-background cellkinds as cached in the CPM.\n\t@private\n\t","start":2693,"end":3180,"loc":{"start":{"line":74,"column":1},"end":{"line":81,"column":3}}},{"type":"CommentBlock","value":"* Parameter structure for parameters that should come as a single value.\n\tThis value can be of type string, boolean, or number.\n\t@example\n\t* let ACT_MEAN = \"arithmetic\" // Is a SingleValue parameter\n\t@typedef {number|string|boolean} SingleValue\n\t","start":3411,"end":3661,"loc":{"start":{"line":92,"column":1},"end":{"line":97,"column":3}}},{"type":"CommentBlock","value":"* Check if a parameter consists of a single value (rather than an object or array),\n\twhich can be a string, number, or boolean. \n\t@param {SingleValue} p - the parameter to check, which must be a single\n\tstring/number/boolean value.\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a single value.\n\t\n\t@example\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = true, p2 = 1, p3 = \"hi\", p4 = [1,2]\n\t* // Nothing happens for parameters of type SingleValue:\n\t* checker.confCheckStructureSingle( p1, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p2, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" )\n\t*\n\t* // This will throw an error because p4 is an array.\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" )\n\t","start":3665,"end":4486,"loc":{"start":{"line":99,"column":1},"end":{"line":116,"column":3}}},{"type":"CommentLine","value":" single values are of type string, number, or boolean. If that is the case,","start":4529,"end":4606,"loc":{"start":{"line":119,"column":2},"end":{"line":119,"column":79}}},{"type":"CommentLine","value":" just return.","start":4609,"end":4624,"loc":{"start":{"line":120,"column":2},"end":{"line":120,"column":17}}},{"type":"CommentBlock","value":"* Parameter structure for parameters that should come in an array with an element\n\tfor each {@link CellKind} including background.\n\t@example\n\t* let V = [0,5] // Is a KindArray parameter\n\t@typedef {Array} KindArray\n\t","start":4809,"end":5028,"loc":{"start":{"line":130,"column":1},"end":{"line":135,"column":3}}},{"type":"CommentBlock","value":"* Check if a parameter has a {@link KindArray} structure.\n\t@param {KindArray} p - the parameter to check\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a {@link KindArray}.\n\t\n\t@example\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = [1,1], p2 = [\"hi\",\"hi\"], p3 = \"hi\", p4 = [1,2,3]\n\t* // Nothing happens when parameters are indeed arrays of length 2\n\t* // (regardless of what type of array)\n\t* checker.confCheckStructureKindArray( p1, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureKindArray( p2, \"MY_PARAMETER\" )\n\t*\n\t* // You'll get an error when p is no array, or when \n\t* // its length doesn't match the number of cellkinds:\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" )\n\t","start":5032,"end":5918,"loc":{"start":{"line":137,"column":1},"end":{"line":155,"column":3}}},{"type":"CommentLine","value":" Check if the array has an element for each cellkind incl. background","start":6058,"end":6129,"loc":{"start":{"line":161,"column":2},"end":{"line":161,"column":73}}},{"type":"CommentBlock","value":"* Parameter structure for parameters that specify interactions between two cells \n\twith each a {@link CellKind}. Should be an array of arrays (\"matrix\") \n\twhere each array has an element for each cellkind including background. \n\tThus, M[n][m] specifies the parameter for an interaction between a cell of \n\tcellkind n and a cell of cellkind m.\n\t@example\n\t* let J = [[0,20],[20,10]] // is a KindMatrix parameter.\n\t@typedef {Array} KindMatrix\n\t","start":6365,"end":6810,"loc":{"start":{"line":169,"column":1},"end":{"line":177,"column":3}}},{"type":"CommentBlock","value":"* Checker if a parameter has a {@link KindMatrix} structure.\n\tIf this is not the case, the method throws an error.\n\t@param {KindMatrix} p - the parameter to check\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a {@link KindMatrix}.\n\t\n\t@example\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = [[1,1],[1,1]], p2 = [[\"a\",\"a\"],[\"a\",\"a\"]] \n\t* // Nothing happens when parameters are indeed arrays of length 2\n\t* // with sub-arrays of length 2 (regardless of what is in the elements)\n\t* checker.confCheckStructureKindArray( p1, \"MY_PARAMETER\" ) //OK\n\t* checker.confCheckStructureKindArray( p2, \"MY_PARAMETER\" ) //OK\n\t*\n\t* // You'll get an error when p is no array, or when \n\t* // its length doesn't match the number of cellkinds:\n\t* let p3 = 1, p4 = [1,2,3], p5 = [[1,2],[1,2],[1,2]]\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" ) //error\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" ) //error\n\t* checker.confCheckStructureSingle( p5, \"MY_PARAMETER\" ) //error\n\t","start":6814,"end":7932,"loc":{"start":{"line":179,"column":1},"end":{"line":200,"column":3}}},{"type":"CommentLine","value":" err1: Check if the main array is an array and has the right size","start":8031,"end":8098,"loc":{"start":{"line":206,"column":2},"end":{"line":206,"column":69}}},{"type":"CommentLine","value":" Check if subarrays have the right size","start":8419,"end":8460,"loc":{"start":{"line":220,"column":2},"end":{"line":220,"column":43}}},{"type":"CommentBlock","value":"* Method for checking if the parameter has the right structure. Throws an error\n\tmessage if the parameter does not have this structure.\n\t\n\tIt internally uses one of the following functions, depending on the structure argument:\n\t{@link confCheckStructureSingle}, {@link confCheckStructureKindArray}, or\n\t{@link confCheckStructureKindMatrix}.\n\t\n\t@param {SingleValue|KindArray|KindMatrix} p - the parameter to check the structure of\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t\n\t@example\n\t* // My own configuration object\n\t* let conf = {\n\t*\tP1 : true,\n\t* \tP2 : [0,2],\n\t* \tP3 : [-1,2,4],\n\t* \tP4 : [[1,2],[1,2]]\n\t* }\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* // These checks work out fine:\n\t* checker.confCheckStructure( conf[\"P1\"],\"P1\",\"SingleValue\")\n\t* checker.confCheckStructure( conf[\"P2\"],\"P2\",\"KindArray\")\n\t* checker.confCheckStructure( conf[\"P4\"],\"P4\",\"KindMatrix\")\n\t* \n\t* // These checks throw an error:\n\t* checker.confCheckStructure( conf[\"P1\"],\"P1\",\"KindArray\") // not an array\n\t* checker.confCheckStructure( conf[\"P2\"],\"P3\",\"KindArray\") // too long\n\t","start":8755,"end":10085,"loc":{"start":{"line":236,"column":1},"end":{"line":267,"column":3}}},{"type":"CommentBlock","value":" ========= CHECKING VALUE TYPE ======== ","start":10518,"end":10562,"loc":{"start":{"line":280,"column":1},"end":{"line":280,"column":45}}},{"type":"CommentBlock","value":"* Check if a value is of type 'number'.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a number?\n\t@example\n\tthis.isNumber( -1 ) // true\n\tthis.isNumber( 0.5 ) // true\n\tthis.isNumber( true ) // false\n\tthis.isNumber( [1,2 ] ) // false\n\tthis.isNumber( \"hello world\" ) // false\n\t@private\n\t","start":10566,"end":10868,"loc":{"start":{"line":282,"column":1},"end":{"line":292,"column":3}}},{"type":"CommentBlock","value":"* Check if a value is of type 'number' and non-negative.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a non-negative number?\n\t@example\n\tthis.isNonNegative( -1 ) // false\n\tthis.isNonNegative( 0.5 ) // true\n\tthis.isNumber( true ) // false\n\tthis.isNumber( [1,2 ] ) // false\n\tthis.isNumber( \"hello world\" ) // false\n\t@private\n\t","start":10924,"end":11267,"loc":{"start":{"line":296,"column":1},"end":{"line":306,"column":3}}},{"type":"CommentBlock","value":"* Check if a value is of type 'number' and between 0 and 1.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a number between 0 and 1?\n\t@example\n\tthis.isProbability( -1 ) // false\n\tthis.isProbability( 0.5 ) // true\n\tthis.isProbability( true ) // false\n\tthis.isProbability( [1,2 ] ) // false\n\tthis.isProbability( \"hello world\" ) // false\n\t@private\n\t","start":11372,"end":11736,"loc":{"start":{"line":313,"column":1},"end":{"line":323,"column":3}}},{"type":"CommentBlock","value":"* Check if a value is of type 'string' and has one of a set of\n\tpredefined values.\n\t@param {number} v - value to check.\n\t@param {string[]} [values=[]] - possible values. If left empty,\n\tany string is considered OK.\n\t@return {boolean} is v a string and does it match one of the predefined values?\n\t@example\n\tthis.isString( true ) // false\n\tthis.isString( [\"a\",\"b\"] ) // false\n\tthis.isString( \"hello world\" ) // true\n\t@private\n\t","start":11850,"end":12280,"loc":{"start":{"line":330,"column":1},"end":{"line":341,"column":3}}},{"type":"CommentBlock","value":"* Check if a value is of type 'boolean'.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a boolean?\n\t@example\n\tthis.isBoolean( true ) // true\n\tthis.isBoolean( [true,false] ) // false\n\tthis.isBoolean( \"hello world\" ) // true\n\t@private\n\t","start":12478,"end":12730,"loc":{"start":{"line":354,"column":1},"end":{"line":362,"column":3}}},{"type":"CommentBlock","value":"* Check if a value is a coordinate in the dimensions of the current grid.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a coordinate of the right dimensions?\n\t@public\n\t","start":12789,"end":12976,"loc":{"start":{"line":367,"column":1},"end":{"line":371,"column":3}}},{"type":"CommentBlock","value":"* Check if the elements of a given parameter are of the right type.\n\tIt throws an error if this is not the case.\n\t@param {anything} p - parameter to check.\n\t@param {string} name - parameter name used for any error messages.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t@param {string} valuetype - type of value, which must be one of \n\t\"Number\", \"NonNegative\", \"Probability\", \"String\", or \"Boolean\". \n\t@param {string[]} values - predefined specific options for the value. \n\tIf left empty, this is ignored.\n\t@private\n\t","start":13134,"end":13752,"loc":{"start":{"line":382,"column":1},"end":{"line":393,"column":3}}},{"type":"CommentLine","value":" Determine which checkfunction will be used.","start":13824,"end":13870,"loc":{"start":{"line":396,"column":2},"end":{"line":396,"column":48}}},{"type":"CommentLine","value":" structure determines how the checker is applied.","start":14543,"end":14594,"loc":{"start":{"line":415,"column":2},"end":{"line":415,"column":53}}},{"type":"CommentBlock","value":"* Check if a parameter exists and is defined, has the right structure, and if all \n\tits elements are of the correct type. Throw an error if any of these do not hold.\n\t@param {string} name - parameter name used for any error messages.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t@param {string} valuetype - type of value, which must be one of \n\t\"Number\", \"NonNegative\", \"Probability\", \"String\", or \"Boolean\". \n\t@param {string[]} [values =[]] - predefined specific options for the value. \n\tIf left empty, this is ignored.\n\t\n\t@example\n\t* // from inside the confChecker() function of your constraint:\n\t* let checker = new ParameterChecker( this.conf, this.C )\n\t* \n\t* checker.confCheckParameter( \"MY_PARAMETER\", \"KindMatrix\", \"Number\" ) // see Adhesion\n\t* checker.confCheckParameter( \"MY_PARAMETER_2\", \"KindArray\", \"NonNegative\" )\n\t","start":15153,"end":16083,"loc":{"start":{"line":433,"column":1},"end":{"line":449,"column":3}}}],"tokens":[{"type":"CommentBlock","value":"* Class for checking if parameters are present in a conf object and are of the expected\nstructure and type. This is not meant for usage from outside the package, but you can\nuse it when you are building your own constraints and want to specify the required parameters.\n\n@example\n* // Add this above your constraint class\n* import ParameterChecker from \"./ParameterChecker.js\"\n* \n* // from inside the confChecker() function of your constraint:\n* let checker = new ParameterChecker( this.conf, this.C )\n* \n* // Most parameters have a standard structure and value type;\n* // you can check them like this:\n* checker.confCheckParameter( \"MY_PARAMETER\", \"KindMatrix\", \"Number\" ) // see Adhesion\n* checker.confCheckParameter( \"MY_PARAMETER_2\", \"KindArray\", \"NonNegative\" )\n* \n* // Or you can just check their presence and do a custom check:\n* checker.confCheckPresenceOf( \"MY_WEIRD_PARAMETER\" )\n* if( !myCondition ){\n* \tthrow( \"Some error because MY_WEIRD_PARAMETER does not fulfill myCondition!\" )\n* }\n","start":0,"end":1000,"loc":{"start":{"line":1,"column":0},"end":{"line":22,"column":2}}},{"type":{"label":"class","keyword":"class","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"class","start":1001,"end":1006,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"ParameterChecker","start":1007,"end":1023,"loc":{"start":{"line":23,"column":6},"end":{"line":23,"column":22}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1024,"end":1025,"loc":{"start":{"line":23,"column":23},"end":{"line":23,"column":24}}},{"type":"CommentBlock","value":"* The constructor of the ParameterChecker takes a configuration object.\n\t@param {object} conf - configuration settings as supplied to a constraint, containing the\n\trelevant parameters.\n\t@param {CPM} C - the attached CPM.\n\t","start":1028,"end":1254,"loc":{"start":{"line":25,"column":1},"end":{"line":29,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"constructor","start":1256,"end":1267,"loc":{"start":{"line":30,"column":1},"end":{"line":30,"column":12}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1267,"end":1268,"loc":{"start":{"line":30,"column":12},"end":{"line":30,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"conf","start":1269,"end":1273,"loc":{"start":{"line":30,"column":14},"end":{"line":30,"column":18}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1273,"end":1274,"loc":{"start":{"line":30,"column":18},"end":{"line":30,"column":19}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"C","start":1275,"end":1276,"loc":{"start":{"line":30,"column":20},"end":{"line":30,"column":21}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1277,"end":1278,"loc":{"start":{"line":30,"column":22},"end":{"line":30,"column":23}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1278,"end":1279,"loc":{"start":{"line":30,"column":23},"end":{"line":30,"column":24}}},{"type":"CommentBlock","value":"* The configuration object to check parameters in \n\t\t@type {object}","start":1284,"end":1355,"loc":{"start":{"line":32,"column":2},"end":{"line":33,"column":18}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":1358,"end":1362,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1362,"end":1363,"loc":{"start":{"line":34,"column":6},"end":{"line":34,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"conf","start":1363,"end":1367,"loc":{"start":{"line":34,"column":7},"end":{"line":34,"column":11}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":1368,"end":1369,"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"conf","start":1370,"end":1374,"loc":{"start":{"line":34,"column":14},"end":{"line":34,"column":18}}},{"type":"CommentBlock","value":"* The attached CPM. This is used to check if parameter array lengths match\n\t\tthe number of cellkinds\n\t\t@type {CPM}","start":1380,"end":1498,"loc":{"start":{"line":36,"column":2},"end":{"line":38,"column":15}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":1501,"end":1505,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1505,"end":1506,"loc":{"start":{"line":39,"column":6},"end":{"line":39,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"C","start":1506,"end":1507,"loc":{"start":{"line":39,"column":7},"end":{"line":39,"column":8}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":1508,"end":1509,"loc":{"start":{"line":39,"column":9},"end":{"line":39,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"C","start":1510,"end":1511,"loc":{"start":{"line":39,"column":11},"end":{"line":39,"column":12}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1513,"end":1514,"loc":{"start":{"line":40,"column":1},"end":{"line":40,"column":2}}},{"type":"CommentBlock","value":" ========= CHECKING PARAMETER PRESENCE ======== ","start":1518,"end":1570,"loc":{"start":{"line":42,"column":1},"end":{"line":42,"column":53}}},{"type":"CommentBlock","value":"* Method to check if a parameter of a given name is present in the conf object \n\tsupplied to the constraint, and if it is defined. Throws an error if this is not the case.\n\t@param {string} name - the name of the parameter, which should be present as a key\n\tin the object.\n\t\n\t@example\n\t* let conf = { MY_PARAMETER : \"something\" }\n\t* // This works, because  MY_PARAMETER is present in conf\n\t* let checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t* \n\t* // There will be an error if MY_PARAMETER is absent/undefined:\n\t* conf = {}\n\t* checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t* conf = { MY_PARAMETER : \"undefined\" }\n\t* checker = new ParameterChecker( conf, myCPM )\n\t* checker.confCheckPresenceOf( \"MY_PARAMETER\" )\n\t","start":1573,"end":2388,"loc":{"start":{"line":44,"column":1},"end":{"line":62,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckPresenceOf","start":2390,"end":2409,"loc":{"start":{"line":63,"column":1},"end":{"line":63,"column":20}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2409,"end":2410,"loc":{"start":{"line":63,"column":20},"end":{"line":63,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":2411,"end":2415,"loc":{"start":{"line":63,"column":22},"end":{"line":63,"column":26}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2416,"end":2417,"loc":{"start":{"line":63,"column":27},"end":{"line":63,"column":28}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2417,"end":2418,"loc":{"start":{"line":63,"column":28},"end":{"line":63,"column":29}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":2421,"end":2423,"loc":{"start":{"line":64,"column":2},"end":{"line":64,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2423,"end":2424,"loc":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":2425,"end":2426,"loc":{"start":{"line":64,"column":6},"end":{"line":64,"column":7}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":2426,"end":2430,"loc":{"start":{"line":64,"column":7},"end":{"line":64,"column":11}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2430,"end":2431,"loc":{"start":{"line":64,"column":11},"end":{"line":64,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"conf","start":2431,"end":2435,"loc":{"start":{"line":64,"column":12},"end":{"line":64,"column":16}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2435,"end":2436,"loc":{"start":{"line":64,"column":16},"end":{"line":64,"column":17}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"hasOwnProperty","start":2436,"end":2450,"loc":{"start":{"line":64,"column":17},"end":{"line":64,"column":31}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2450,"end":2451,"loc":{"start":{"line":64,"column":31},"end":{"line":64,"column":32}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":2452,"end":2456,"loc":{"start":{"line":64,"column":33},"end":{"line":64,"column":37}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2457,"end":2458,"loc":{"start":{"line":64,"column":38},"end":{"line":64,"column":39}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2459,"end":2460,"loc":{"start":{"line":64,"column":40},"end":{"line":64,"column":41}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2460,"end":2461,"loc":{"start":{"line":64,"column":41},"end":{"line":64,"column":42}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":2465,"end":2470,"loc":{"start":{"line":65,"column":3},"end":{"line":65,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2470,"end":2471,"loc":{"start":{"line":65,"column":8},"end":{"line":65,"column":9}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Cannot find parameter ","start":2472,"end":2496,"loc":{"start":{"line":65,"column":10},"end":{"line":65,"column":34}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":2497,"end":2498,"loc":{"start":{"line":65,"column":35},"end":{"line":65,"column":36}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":2499,"end":2503,"loc":{"start":{"line":65,"column":37},"end":{"line":65,"column":41}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":2504,"end":2505,"loc":{"start":{"line":65,"column":42},"end":{"line":65,"column":43}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":" in the conf object!","start":2506,"end":2528,"loc":{"start":{"line":65,"column":44},"end":{"line":65,"column":66}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2529,"end":2530,"loc":{"start":{"line":65,"column":67},"end":{"line":65,"column":68}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2533,"end":2534,"loc":{"start":{"line":66,"column":2},"end":{"line":66,"column":3}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":2537,"end":2539,"loc":{"start":{"line":67,"column":2},"end":{"line":67,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2539,"end":2540,"loc":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":2541,"end":2545,"loc":{"start":{"line":67,"column":6},"end":{"line":67,"column":10}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2545,"end":2546,"loc":{"start":{"line":67,"column":10},"end":{"line":67,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"conf","start":2546,"end":2550,"loc":{"start":{"line":67,"column":11},"end":{"line":67,"column":15}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2550,"end":2551,"loc":{"start":{"line":67,"column":15},"end":{"line":67,"column":16}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":2551,"end":2555,"loc":{"start":{"line":67,"column":16},"end":{"line":67,"column":20}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2555,"end":2556,"loc":{"start":{"line":67,"column":20},"end":{"line":67,"column":21}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":2557,"end":2559,"loc":{"start":{"line":67,"column":22},"end":{"line":67,"column":24}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"undefined","start":2560,"end":2571,"loc":{"start":{"line":67,"column":25},"end":{"line":67,"column":36}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2572,"end":2573,"loc":{"start":{"line":67,"column":37},"end":{"line":67,"column":38}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2573,"end":2574,"loc":{"start":{"line":67,"column":38},"end":{"line":67,"column":39}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":2578,"end":2583,"loc":{"start":{"line":68,"column":3},"end":{"line":68,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2583,"end":2584,"loc":{"start":{"line":68,"column":8},"end":{"line":68,"column":9}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Parameter ","start":2585,"end":2597,"loc":{"start":{"line":68,"column":10},"end":{"line":68,"column":22}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":2598,"end":2599,"loc":{"start":{"line":68,"column":23},"end":{"line":68,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":2600,"end":2604,"loc":{"start":{"line":68,"column":25},"end":{"line":68,"column":29}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":2605,"end":2606,"loc":{"start":{"line":68,"column":30},"end":{"line":68,"column":31}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":" is undefined!","start":2607,"end":2623,"loc":{"start":{"line":68,"column":32},"end":{"line":68,"column":48}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2624,"end":2625,"loc":{"start":{"line":68,"column":49},"end":{"line":68,"column":50}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2628,"end":2629,"loc":{"start":{"line":69,"column":2},"end":{"line":69,"column":3}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2631,"end":2632,"loc":{"start":{"line":70,"column":1},"end":{"line":70,"column":2}}},{"type":"CommentBlock","value":" ========= CHECKING PARAMETER STRUCTURE ======== ","start":2636,"end":2689,"loc":{"start":{"line":72,"column":1},"end":{"line":72,"column":54}}},{"type":"CommentBlock","value":"* Helper function. Some parameters need to be specified for each {@link CellKind}, \n\tso to check those we first need to know the number of cellkinds on the CPM.\n\tThis number is retrieved from the CPM or added to it if it isn't there yet.\n\t@param {number} n_default - a number of cellkinds (including background), which is used\n\tto set the number of cellkinds in the CPM if it isn't there yet.\n\t@return {number} the number of non-background cellkinds as cached in the CPM.\n\t@private\n\t","start":2693,"end":3180,"loc":{"start":{"line":74,"column":1},"end":{"line":81,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckCellKinds","start":3182,"end":3200,"loc":{"start":{"line":82,"column":1},"end":{"line":82,"column":19}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3200,"end":3201,"loc":{"start":{"line":82,"column":19},"end":{"line":82,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"n_default","start":3202,"end":3211,"loc":{"start":{"line":82,"column":21},"end":{"line":82,"column":30}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3212,"end":3213,"loc":{"start":{"line":82,"column":31},"end":{"line":82,"column":32}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3213,"end":3214,"loc":{"start":{"line":82,"column":32},"end":{"line":82,"column":33}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":3217,"end":3219,"loc":{"start":{"line":83,"column":2},"end":{"line":83,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3219,"end":3220,"loc":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":3221,"end":3222,"loc":{"start":{"line":83,"column":6},"end":{"line":83,"column":7}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3222,"end":3226,"loc":{"start":{"line":83,"column":7},"end":{"line":83,"column":11}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3226,"end":3227,"loc":{"start":{"line":83,"column":11},"end":{"line":83,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"C","start":3227,"end":3228,"loc":{"start":{"line":83,"column":12},"end":{"line":83,"column":13}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3229,"end":3230,"loc":{"start":{"line":83,"column":14},"end":{"line":83,"column":15}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3230,"end":3231,"loc":{"start":{"line":83,"column":15},"end":{"line":83,"column":16}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":3235,"end":3240,"loc":{"start":{"line":84,"column":3},"end":{"line":84,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3240,"end":3241,"loc":{"start":{"line":84,"column":8},"end":{"line":84,"column":9}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"confCheck method called before addition to CPM!","start":3241,"end":3290,"loc":{"start":{"line":84,"column":9},"end":{"line":84,"column":58}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3290,"end":3291,"loc":{"start":{"line":84,"column":58},"end":{"line":84,"column":59}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3294,"end":3295,"loc":{"start":{"line":85,"column":2},"end":{"line":85,"column":3}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":3298,"end":3300,"loc":{"start":{"line":86,"column":2},"end":{"line":86,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3300,"end":3301,"loc":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":3302,"end":3303,"loc":{"start":{"line":86,"column":6},"end":{"line":86,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3303,"end":3304,"loc":{"start":{"line":86,"column":7},"end":{"line":86,"column":8}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"n_cell_kinds","start":3304,"end":3318,"loc":{"start":{"line":86,"column":8},"end":{"line":86,"column":22}}},{"type":{"label":"in","keyword":"in","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"in","start":3319,"end":3321,"loc":{"start":{"line":86,"column":23},"end":{"line":86,"column":25}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3322,"end":3326,"loc":{"start":{"line":86,"column":26},"end":{"line":86,"column":30}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3326,"end":3327,"loc":{"start":{"line":86,"column":30},"end":{"line":86,"column":31}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"C","start":3327,"end":3328,"loc":{"start":{"line":86,"column":31},"end":{"line":86,"column":32}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3328,"end":3329,"loc":{"start":{"line":86,"column":32},"end":{"line":86,"column":33}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3330,"end":3331,"loc":{"start":{"line":86,"column":34},"end":{"line":86,"column":35}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3331,"end":3332,"loc":{"start":{"line":86,"column":35},"end":{"line":86,"column":36}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3336,"end":3340,"loc":{"start":{"line":87,"column":3},"end":{"line":87,"column":7}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3340,"end":3341,"loc":{"start":{"line":87,"column":7},"end":{"line":87,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"C","start":3341,"end":3342,"loc":{"start":{"line":87,"column":8},"end":{"line":87,"column":9}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3342,"end":3343,"loc":{"start":{"line":87,"column":9},"end":{"line":87,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"n_cell_kinds","start":3343,"end":3355,"loc":{"start":{"line":87,"column":10},"end":{"line":87,"column":22}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":3356,"end":3357,"loc":{"start":{"line":87,"column":23},"end":{"line":87,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"n_default","start":3358,"end":3367,"loc":{"start":{"line":87,"column":25},"end":{"line":87,"column":34}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"-","start":3368,"end":3369,"loc":{"start":{"line":87,"column":35},"end":{"line":87,"column":36}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":3370,"end":3371,"loc":{"start":{"line":87,"column":37},"end":{"line":87,"column":38}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3374,"end":3375,"loc":{"start":{"line":88,"column":2},"end":{"line":88,"column":3}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":3378,"end":3384,"loc":{"start":{"line":89,"column":2},"end":{"line":89,"column":8}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3385,"end":3389,"loc":{"start":{"line":89,"column":9},"end":{"line":89,"column":13}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3389,"end":3390,"loc":{"start":{"line":89,"column":13},"end":{"line":89,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"C","start":3390,"end":3391,"loc":{"start":{"line":89,"column":14},"end":{"line":89,"column":15}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3391,"end":3392,"loc":{"start":{"line":89,"column":15},"end":{"line":89,"column":16}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"n_cell_kinds","start":3392,"end":3404,"loc":{"start":{"line":89,"column":16},"end":{"line":89,"column":28}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3406,"end":3407,"loc":{"start":{"line":90,"column":1},"end":{"line":90,"column":2}}},{"type":"CommentBlock","value":"* Parameter structure for parameters that should come as a single value.\n\tThis value can be of type string, boolean, or number.\n\t@example\n\t* let ACT_MEAN = \"arithmetic\" // Is a SingleValue parameter\n\t@typedef {number|string|boolean} SingleValue\n\t","start":3411,"end":3661,"loc":{"start":{"line":92,"column":1},"end":{"line":97,"column":3}}},{"type":"CommentBlock","value":"* Check if a parameter consists of a single value (rather than an object or array),\n\twhich can be a string, number, or boolean. \n\t@param {SingleValue} p - the parameter to check, which must be a single\n\tstring/number/boolean value.\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a single value.\n\t\n\t@example\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = true, p2 = 1, p3 = \"hi\", p4 = [1,2]\n\t* // Nothing happens for parameters of type SingleValue:\n\t* checker.confCheckStructureSingle( p1, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p2, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" )\n\t*\n\t* // This will throw an error because p4 is an array.\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" )\n\t","start":3665,"end":4486,"loc":{"start":{"line":99,"column":1},"end":{"line":116,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckStructureSingle","start":4488,"end":4512,"loc":{"start":{"line":117,"column":1},"end":{"line":117,"column":25}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4512,"end":4513,"loc":{"start":{"line":117,"column":25},"end":{"line":117,"column":26}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":4514,"end":4515,"loc":{"start":{"line":117,"column":27},"end":{"line":117,"column":28}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4515,"end":4516,"loc":{"start":{"line":117,"column":28},"end":{"line":117,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":4517,"end":4521,"loc":{"start":{"line":117,"column":30},"end":{"line":117,"column":34}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4522,"end":4523,"loc":{"start":{"line":117,"column":35},"end":{"line":117,"column":36}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4523,"end":4524,"loc":{"start":{"line":117,"column":36},"end":{"line":117,"column":37}}},{"type":"CommentLine","value":" single values are of type string, number, or boolean. If that is the case,","start":4529,"end":4606,"loc":{"start":{"line":119,"column":2},"end":{"line":119,"column":79}}},{"type":"CommentLine","value":" just return.","start":4609,"end":4624,"loc":{"start":{"line":120,"column":2},"end":{"line":120,"column":17}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":4627,"end":4630,"loc":{"start":{"line":121,"column":2},"end":{"line":121,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"type","start":4631,"end":4635,"loc":{"start":{"line":121,"column":6},"end":{"line":121,"column":10}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":4636,"end":4637,"loc":{"start":{"line":121,"column":11},"end":{"line":121,"column":12}}},{"type":{"label":"typeof","keyword":"typeof","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"typeof","start":4638,"end":4644,"loc":{"start":{"line":121,"column":13},"end":{"line":121,"column":19}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":4645,"end":4646,"loc":{"start":{"line":121,"column":20},"end":{"line":121,"column":21}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":4649,"end":4651,"loc":{"start":{"line":122,"column":2},"end":{"line":122,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4651,"end":4652,"loc":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"type","start":4653,"end":4657,"loc":{"start":{"line":122,"column":6},"end":{"line":122,"column":10}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":4658,"end":4660,"loc":{"start":{"line":122,"column":11},"end":{"line":122,"column":13}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"string","start":4661,"end":4669,"loc":{"start":{"line":122,"column":14},"end":{"line":122,"column":22}}},{"type":{"label":"||","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":1,"updateContext":null},"value":"||","start":4670,"end":4672,"loc":{"start":{"line":122,"column":23},"end":{"line":122,"column":25}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"type","start":4673,"end":4677,"loc":{"start":{"line":122,"column":26},"end":{"line":122,"column":30}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":4678,"end":4680,"loc":{"start":{"line":122,"column":31},"end":{"line":122,"column":33}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"number","start":4681,"end":4689,"loc":{"start":{"line":122,"column":34},"end":{"line":122,"column":42}}},{"type":{"label":"||","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":1,"updateContext":null},"value":"||","start":4690,"end":4692,"loc":{"start":{"line":122,"column":43},"end":{"line":122,"column":45}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"type","start":4693,"end":4697,"loc":{"start":{"line":122,"column":46},"end":{"line":122,"column":50}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":4698,"end":4700,"loc":{"start":{"line":122,"column":51},"end":{"line":122,"column":53}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"boolean","start":4701,"end":4710,"loc":{"start":{"line":122,"column":54},"end":{"line":122,"column":63}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4711,"end":4712,"loc":{"start":{"line":122,"column":64},"end":{"line":122,"column":65}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4712,"end":4713,"loc":{"start":{"line":122,"column":65},"end":{"line":122,"column":66}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":4717,"end":4723,"loc":{"start":{"line":123,"column":3},"end":{"line":123,"column":9}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4726,"end":4727,"loc":{"start":{"line":124,"column":2},"end":{"line":124,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":4728,"end":4732,"loc":{"start":{"line":124,"column":4},"end":{"line":124,"column":8}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4733,"end":4734,"loc":{"start":{"line":124,"column":9},"end":{"line":124,"column":10}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":4738,"end":4743,"loc":{"start":{"line":125,"column":3},"end":{"line":125,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4743,"end":4744,"loc":{"start":{"line":125,"column":8},"end":{"line":125,"column":9}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Parameter ","start":4745,"end":4757,"loc":{"start":{"line":125,"column":10},"end":{"line":125,"column":22}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":4758,"end":4759,"loc":{"start":{"line":125,"column":23},"end":{"line":125,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":4760,"end":4764,"loc":{"start":{"line":125,"column":25},"end":{"line":125,"column":29}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":4765,"end":4766,"loc":{"start":{"line":125,"column":30},"end":{"line":125,"column":31}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":" should be a single value!","start":4767,"end":4795,"loc":{"start":{"line":125,"column":32},"end":{"line":125,"column":60}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4796,"end":4797,"loc":{"start":{"line":125,"column":61},"end":{"line":125,"column":62}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4800,"end":4801,"loc":{"start":{"line":126,"column":2},"end":{"line":126,"column":3}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4804,"end":4805,"loc":{"start":{"line":128,"column":1},"end":{"line":128,"column":2}}},{"type":"CommentBlock","value":"* Parameter structure for parameters that should come in an array with an element\n\tfor each {@link CellKind} including background.\n\t@example\n\t* let V = [0,5] // Is a KindArray parameter\n\t@typedef {Array} KindArray\n\t","start":4809,"end":5028,"loc":{"start":{"line":130,"column":1},"end":{"line":135,"column":3}}},{"type":"CommentBlock","value":"* Check if a parameter has a {@link KindArray} structure.\n\t@param {KindArray} p - the parameter to check\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a {@link KindArray}.\n\t\n\t@example\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = [1,1], p2 = [\"hi\",\"hi\"], p3 = \"hi\", p4 = [1,2,3]\n\t* // Nothing happens when parameters are indeed arrays of length 2\n\t* // (regardless of what type of array)\n\t* checker.confCheckStructureKindArray( p1, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureKindArray( p2, \"MY_PARAMETER\" )\n\t*\n\t* // You'll get an error when p is no array, or when \n\t* // its length doesn't match the number of cellkinds:\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" )\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" )\n\t","start":5032,"end":5918,"loc":{"start":{"line":137,"column":1},"end":{"line":155,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckStructureKindArray","start":5920,"end":5947,"loc":{"start":{"line":156,"column":1},"end":{"line":156,"column":28}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5947,"end":5948,"loc":{"start":{"line":156,"column":28},"end":{"line":156,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":5949,"end":5950,"loc":{"start":{"line":156,"column":30},"end":{"line":156,"column":31}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5950,"end":5951,"loc":{"start":{"line":156,"column":31},"end":{"line":156,"column":32}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":5952,"end":5956,"loc":{"start":{"line":156,"column":33},"end":{"line":156,"column":37}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5957,"end":5958,"loc":{"start":{"line":156,"column":38},"end":{"line":156,"column":39}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5958,"end":5959,"loc":{"start":{"line":156,"column":39},"end":{"line":156,"column":40}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":5962,"end":5964,"loc":{"start":{"line":157,"column":2},"end":{"line":157,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5964,"end":5965,"loc":{"start":{"line":157,"column":4},"end":{"line":157,"column":5}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":5966,"end":5967,"loc":{"start":{"line":157,"column":6},"end":{"line":157,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5967,"end":5968,"loc":{"start":{"line":157,"column":7},"end":{"line":157,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":5968,"end":5969,"loc":{"start":{"line":157,"column":8},"end":{"line":157,"column":9}}},{"type":{"label":"instanceof","keyword":"instanceof","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"instanceof","start":5970,"end":5980,"loc":{"start":{"line":157,"column":10},"end":{"line":157,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Array","start":5981,"end":5986,"loc":{"start":{"line":157,"column":21},"end":{"line":157,"column":26}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5986,"end":5987,"loc":{"start":{"line":157,"column":26},"end":{"line":157,"column":27}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5988,"end":5989,"loc":{"start":{"line":157,"column":28},"end":{"line":157,"column":29}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5989,"end":5990,"loc":{"start":{"line":157,"column":29},"end":{"line":157,"column":30}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":5994,"end":5999,"loc":{"start":{"line":158,"column":3},"end":{"line":158,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5999,"end":6000,"loc":{"start":{"line":158,"column":8},"end":{"line":158,"column":9}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Parameter ","start":6001,"end":6013,"loc":{"start":{"line":158,"column":10},"end":{"line":158,"column":22}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":6014,"end":6015,"loc":{"start":{"line":158,"column":23},"end":{"line":158,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":6016,"end":6020,"loc":{"start":{"line":158,"column":25},"end":{"line":158,"column":29}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":6021,"end":6022,"loc":{"start":{"line":158,"column":30},"end":{"line":158,"column":31}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":" should be an array!","start":6023,"end":6045,"loc":{"start":{"line":158,"column":32},"end":{"line":158,"column":54}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6046,"end":6047,"loc":{"start":{"line":158,"column":55},"end":{"line":158,"column":56}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6050,"end":6051,"loc":{"start":{"line":159,"column":2},"end":{"line":159,"column":3}}},{"type":"CommentLine","value":" Check if the array has an element for each cellkind incl. background","start":6058,"end":6129,"loc":{"start":{"line":161,"column":2},"end":{"line":161,"column":73}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":6132,"end":6135,"loc":{"start":{"line":162,"column":2},"end":{"line":162,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"n_cell_kinds","start":6136,"end":6148,"loc":{"start":{"line":162,"column":6},"end":{"line":162,"column":18}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":6149,"end":6150,"loc":{"start":{"line":162,"column":19},"end":{"line":162,"column":20}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":6151,"end":6155,"loc":{"start":{"line":162,"column":21},"end":{"line":162,"column":25}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6155,"end":6156,"loc":{"start":{"line":162,"column":25},"end":{"line":162,"column":26}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckCellKinds","start":6156,"end":6174,"loc":{"start":{"line":162,"column":26},"end":{"line":162,"column":44}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6174,"end":6175,"loc":{"start":{"line":162,"column":44},"end":{"line":162,"column":45}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":6176,"end":6177,"loc":{"start":{"line":162,"column":46},"end":{"line":162,"column":47}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6177,"end":6178,"loc":{"start":{"line":162,"column":47},"end":{"line":162,"column":48}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":6178,"end":6184,"loc":{"start":{"line":162,"column":48},"end":{"line":162,"column":54}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6185,"end":6186,"loc":{"start":{"line":162,"column":55},"end":{"line":162,"column":56}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":6189,"end":6191,"loc":{"start":{"line":163,"column":2},"end":{"line":163,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6191,"end":6192,"loc":{"start":{"line":163,"column":4},"end":{"line":163,"column":5}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":6193,"end":6197,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":10}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6197,"end":6198,"loc":{"start":{"line":163,"column":10},"end":{"line":163,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"conf","start":6198,"end":6202,"loc":{"start":{"line":163,"column":11},"end":{"line":163,"column":15}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6202,"end":6203,"loc":{"start":{"line":163,"column":15},"end":{"line":163,"column":16}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":6203,"end":6207,"loc":{"start":{"line":163,"column":16},"end":{"line":163,"column":20}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6207,"end":6208,"loc":{"start":{"line":163,"column":20},"end":{"line":163,"column":21}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":6208,"end":6209,"loc":{"start":{"line":163,"column":21},"end":{"line":163,"column":22}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":6209,"end":6215,"loc":{"start":{"line":163,"column":22},"end":{"line":163,"column":28}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"!=","start":6216,"end":6218,"loc":{"start":{"line":163,"column":29},"end":{"line":163,"column":31}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"n_cell_kinds","start":6219,"end":6231,"loc":{"start":{"line":163,"column":32},"end":{"line":163,"column":44}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":6232,"end":6233,"loc":{"start":{"line":163,"column":45},"end":{"line":163,"column":46}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":6234,"end":6235,"loc":{"start":{"line":163,"column":47},"end":{"line":163,"column":48}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6236,"end":6237,"loc":{"start":{"line":163,"column":49},"end":{"line":163,"column":50}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6237,"end":6238,"loc":{"start":{"line":163,"column":50},"end":{"line":163,"column":51}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":6242,"end":6247,"loc":{"start":{"line":164,"column":3},"end":{"line":164,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6247,"end":6248,"loc":{"start":{"line":164,"column":8},"end":{"line":164,"column":9}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Parameter ","start":6249,"end":6261,"loc":{"start":{"line":164,"column":10},"end":{"line":164,"column":22}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":6262,"end":6263,"loc":{"start":{"line":164,"column":23},"end":{"line":164,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":6264,"end":6268,"loc":{"start":{"line":164,"column":25},"end":{"line":164,"column":29}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":6269,"end":6270,"loc":{"start":{"line":164,"column":30},"end":{"line":164,"column":31}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":" should be an array with an element for each cellkind including background!","start":6275,"end":6352,"loc":{"start":{"line":165,"column":3},"end":{"line":165,"column":80}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6353,"end":6354,"loc":{"start":{"line":165,"column":81},"end":{"line":165,"column":82}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6357,"end":6358,"loc":{"start":{"line":166,"column":2},"end":{"line":166,"column":3}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6360,"end":6361,"loc":{"start":{"line":167,"column":1},"end":{"line":167,"column":2}}},{"type":"CommentBlock","value":"* Parameter structure for parameters that specify interactions between two cells \n\twith each a {@link CellKind}. Should be an array of arrays (\"matrix\") \n\twhere each array has an element for each cellkind including background. \n\tThus, M[n][m] specifies the parameter for an interaction between a cell of \n\tcellkind n and a cell of cellkind m.\n\t@example\n\t* let J = [[0,20],[20,10]] // is a KindMatrix parameter.\n\t@typedef {Array} KindMatrix\n\t","start":6365,"end":6810,"loc":{"start":{"line":169,"column":1},"end":{"line":177,"column":3}}},{"type":"CommentBlock","value":"* Checker if a parameter has a {@link KindMatrix} structure.\n\tIf this is not the case, the method throws an error.\n\t@param {KindMatrix} p - the parameter to check\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message if p is not a {@link KindMatrix}.\n\t\n\t@example\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* let p1 = [[1,1],[1,1]], p2 = [[\"a\",\"a\"],[\"a\",\"a\"]] \n\t* // Nothing happens when parameters are indeed arrays of length 2\n\t* // with sub-arrays of length 2 (regardless of what is in the elements)\n\t* checker.confCheckStructureKindArray( p1, \"MY_PARAMETER\" ) //OK\n\t* checker.confCheckStructureKindArray( p2, \"MY_PARAMETER\" ) //OK\n\t*\n\t* // You'll get an error when p is no array, or when \n\t* // its length doesn't match the number of cellkinds:\n\t* let p3 = 1, p4 = [1,2,3], p5 = [[1,2],[1,2],[1,2]]\n\t* checker.confCheckStructureSingle( p3, \"MY_PARAMETER\" ) //error\n\t* checker.confCheckStructureSingle( p4, \"MY_PARAMETER\" ) //error\n\t* checker.confCheckStructureSingle( p5, \"MY_PARAMETER\" ) //error\n\t","start":6814,"end":7932,"loc":{"start":{"line":179,"column":1},"end":{"line":200,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckStructureKindMatrix","start":7934,"end":7962,"loc":{"start":{"line":201,"column":1},"end":{"line":201,"column":29}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7962,"end":7963,"loc":{"start":{"line":201,"column":29},"end":{"line":201,"column":30}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":7964,"end":7965,"loc":{"start":{"line":201,"column":31},"end":{"line":201,"column":32}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7965,"end":7966,"loc":{"start":{"line":201,"column":32},"end":{"line":201,"column":33}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":7967,"end":7971,"loc":{"start":{"line":201,"column":34},"end":{"line":201,"column":38}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7972,"end":7973,"loc":{"start":{"line":201,"column":39},"end":{"line":201,"column":40}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7973,"end":7974,"loc":{"start":{"line":201,"column":40},"end":{"line":201,"column":41}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":7978,"end":7981,"loc":{"start":{"line":203,"column":2},"end":{"line":203,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"err1","start":7982,"end":7986,"loc":{"start":{"line":203,"column":6},"end":{"line":203,"column":10}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":7987,"end":7988,"loc":{"start":{"line":203,"column":11},"end":{"line":203,"column":12}}},{"type":{"label":"false","keyword":"false","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"false","start":7989,"end":7994,"loc":{"start":{"line":203,"column":13},"end":{"line":203,"column":18}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7994,"end":7995,"loc":{"start":{"line":203,"column":18},"end":{"line":203,"column":19}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"err2","start":7996,"end":8000,"loc":{"start":{"line":203,"column":20},"end":{"line":203,"column":24}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":8001,"end":8002,"loc":{"start":{"line":203,"column":25},"end":{"line":203,"column":26}}},{"type":{"label":"false","keyword":"false","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"false","start":8003,"end":8008,"loc":{"start":{"line":203,"column":27},"end":{"line":203,"column":32}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":8011,"end":8014,"loc":{"start":{"line":204,"column":2},"end":{"line":204,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"n_cell_kinds","start":8015,"end":8027,"loc":{"start":{"line":204,"column":6},"end":{"line":204,"column":18}}},{"type":"CommentLine","value":" err1: Check if the main array is an array and has the right size","start":8031,"end":8098,"loc":{"start":{"line":206,"column":2},"end":{"line":206,"column":69}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":8101,"end":8103,"loc":{"start":{"line":207,"column":2},"end":{"line":207,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8103,"end":8104,"loc":{"start":{"line":207,"column":4},"end":{"line":207,"column":5}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":8105,"end":8106,"loc":{"start":{"line":207,"column":6},"end":{"line":207,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8106,"end":8107,"loc":{"start":{"line":207,"column":7},"end":{"line":207,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":8107,"end":8108,"loc":{"start":{"line":207,"column":8},"end":{"line":207,"column":9}}},{"type":{"label":"instanceof","keyword":"instanceof","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"instanceof","start":8109,"end":8119,"loc":{"start":{"line":207,"column":10},"end":{"line":207,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Array","start":8120,"end":8125,"loc":{"start":{"line":207,"column":21},"end":{"line":207,"column":26}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8125,"end":8126,"loc":{"start":{"line":207,"column":26},"end":{"line":207,"column":27}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8127,"end":8128,"loc":{"start":{"line":207,"column":28},"end":{"line":207,"column":29}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8128,"end":8129,"loc":{"start":{"line":207,"column":29},"end":{"line":207,"column":30}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"err1","start":8133,"end":8137,"loc":{"start":{"line":208,"column":3},"end":{"line":208,"column":7}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":8138,"end":8139,"loc":{"start":{"line":208,"column":8},"end":{"line":208,"column":9}}},{"type":{"label":"true","keyword":"true","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"true","start":8140,"end":8144,"loc":{"start":{"line":208,"column":10},"end":{"line":208,"column":14}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8147,"end":8148,"loc":{"start":{"line":209,"column":2},"end":{"line":209,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":8149,"end":8153,"loc":{"start":{"line":209,"column":4},"end":{"line":209,"column":8}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8154,"end":8155,"loc":{"start":{"line":209,"column":9},"end":{"line":209,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"n_cell_kinds","start":8159,"end":8171,"loc":{"start":{"line":210,"column":3},"end":{"line":210,"column":15}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":8172,"end":8173,"loc":{"start":{"line":210,"column":16},"end":{"line":210,"column":17}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":8174,"end":8178,"loc":{"start":{"line":210,"column":18},"end":{"line":210,"column":22}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":8178,"end":8179,"loc":{"start":{"line":210,"column":22},"end":{"line":210,"column":23}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckCellKinds","start":8179,"end":8197,"loc":{"start":{"line":210,"column":23},"end":{"line":210,"column":41}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8197,"end":8198,"loc":{"start":{"line":210,"column":41},"end":{"line":210,"column":42}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":8199,"end":8200,"loc":{"start":{"line":210,"column":43},"end":{"line":210,"column":44}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":8200,"end":8201,"loc":{"start":{"line":210,"column":44},"end":{"line":210,"column":45}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":8201,"end":8207,"loc":{"start":{"line":210,"column":45},"end":{"line":210,"column":51}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8208,"end":8209,"loc":{"start":{"line":210,"column":52},"end":{"line":210,"column":53}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":8213,"end":8215,"loc":{"start":{"line":211,"column":3},"end":{"line":211,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8215,"end":8216,"loc":{"start":{"line":211,"column":5},"end":{"line":211,"column":6}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":8217,"end":8218,"loc":{"start":{"line":211,"column":7},"end":{"line":211,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8218,"end":8219,"loc":{"start":{"line":211,"column":8},"end":{"line":211,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":8220,"end":8221,"loc":{"start":{"line":211,"column":10},"end":{"line":211,"column":11}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":8221,"end":8222,"loc":{"start":{"line":211,"column":11},"end":{"line":211,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":8222,"end":8228,"loc":{"start":{"line":211,"column":12},"end":{"line":211,"column":18}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":8229,"end":8231,"loc":{"start":{"line":211,"column":19},"end":{"line":211,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"n_cell_kinds","start":8232,"end":8244,"loc":{"start":{"line":211,"column":22},"end":{"line":211,"column":34}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":8245,"end":8246,"loc":{"start":{"line":211,"column":35},"end":{"line":211,"column":36}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":8247,"end":8248,"loc":{"start":{"line":211,"column":37},"end":{"line":211,"column":38}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8249,"end":8250,"loc":{"start":{"line":211,"column":39},"end":{"line":211,"column":40}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8251,"end":8252,"loc":{"start":{"line":211,"column":41},"end":{"line":211,"column":42}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8252,"end":8253,"loc":{"start":{"line":211,"column":42},"end":{"line":211,"column":43}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"err1","start":8258,"end":8262,"loc":{"start":{"line":212,"column":4},"end":{"line":212,"column":8}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":8263,"end":8264,"loc":{"start":{"line":212,"column":9},"end":{"line":212,"column":10}}},{"type":{"label":"true","keyword":"true","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"true","start":8265,"end":8269,"loc":{"start":{"line":212,"column":11},"end":{"line":212,"column":15}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8273,"end":8274,"loc":{"start":{"line":213,"column":3},"end":{"line":213,"column":4}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8279,"end":8280,"loc":{"start":{"line":214,"column":2},"end":{"line":214,"column":3}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":8283,"end":8285,"loc":{"start":{"line":215,"column":2},"end":{"line":215,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8285,"end":8286,"loc":{"start":{"line":215,"column":4},"end":{"line":215,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"err1","start":8287,"end":8291,"loc":{"start":{"line":215,"column":6},"end":{"line":215,"column":10}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8292,"end":8293,"loc":{"start":{"line":215,"column":11},"end":{"line":215,"column":12}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8293,"end":8294,"loc":{"start":{"line":215,"column":12},"end":{"line":215,"column":13}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":8298,"end":8303,"loc":{"start":{"line":216,"column":3},"end":{"line":216,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8303,"end":8304,"loc":{"start":{"line":216,"column":8},"end":{"line":216,"column":9}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Parameter ","start":8305,"end":8317,"loc":{"start":{"line":216,"column":10},"end":{"line":216,"column":22}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":8318,"end":8319,"loc":{"start":{"line":216,"column":23},"end":{"line":216,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":8320,"end":8324,"loc":{"start":{"line":216,"column":25},"end":{"line":216,"column":29}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":8325,"end":8326,"loc":{"start":{"line":216,"column":30},"end":{"line":216,"column":31}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":" must be an array with a sub-array for each cellkind including background!","start":8331,"end":8407,"loc":{"start":{"line":217,"column":3},"end":{"line":217,"column":79}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8408,"end":8409,"loc":{"start":{"line":217,"column":80},"end":{"line":217,"column":81}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8412,"end":8413,"loc":{"start":{"line":218,"column":2},"end":{"line":218,"column":3}}},{"type":"CommentLine","value":" Check if subarrays have the right size","start":8419,"end":8460,"loc":{"start":{"line":220,"column":2},"end":{"line":220,"column":43}}},{"type":{"label":"for","keyword":"for","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":true,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"for","start":8463,"end":8466,"loc":{"start":{"line":221,"column":2},"end":{"line":221,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8466,"end":8467,"loc":{"start":{"line":221,"column":5},"end":{"line":221,"column":6}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":8468,"end":8471,"loc":{"start":{"line":221,"column":7},"end":{"line":221,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"e","start":8472,"end":8473,"loc":{"start":{"line":221,"column":11},"end":{"line":221,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"of","start":8474,"end":8476,"loc":{"start":{"line":221,"column":13},"end":{"line":221,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":8477,"end":8478,"loc":{"start":{"line":221,"column":16},"end":{"line":221,"column":17}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8479,"end":8480,"loc":{"start":{"line":221,"column":18},"end":{"line":221,"column":19}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8480,"end":8481,"loc":{"start":{"line":221,"column":19},"end":{"line":221,"column":20}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":8485,"end":8487,"loc":{"start":{"line":222,"column":3},"end":{"line":222,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8487,"end":8488,"loc":{"start":{"line":222,"column":5},"end":{"line":222,"column":6}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":8489,"end":8490,"loc":{"start":{"line":222,"column":7},"end":{"line":222,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8490,"end":8491,"loc":{"start":{"line":222,"column":8},"end":{"line":222,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"e","start":8491,"end":8492,"loc":{"start":{"line":222,"column":9},"end":{"line":222,"column":10}}},{"type":{"label":"instanceof","keyword":"instanceof","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"instanceof","start":8493,"end":8503,"loc":{"start":{"line":222,"column":11},"end":{"line":222,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Array","start":8504,"end":8509,"loc":{"start":{"line":222,"column":22},"end":{"line":222,"column":27}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8509,"end":8510,"loc":{"start":{"line":222,"column":27},"end":{"line":222,"column":28}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8511,"end":8512,"loc":{"start":{"line":222,"column":29},"end":{"line":222,"column":30}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8512,"end":8513,"loc":{"start":{"line":222,"column":30},"end":{"line":222,"column":31}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"err2","start":8518,"end":8522,"loc":{"start":{"line":223,"column":4},"end":{"line":223,"column":8}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":8523,"end":8524,"loc":{"start":{"line":223,"column":9},"end":{"line":223,"column":10}}},{"type":{"label":"true","keyword":"true","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"true","start":8525,"end":8529,"loc":{"start":{"line":223,"column":11},"end":{"line":223,"column":15}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8533,"end":8534,"loc":{"start":{"line":224,"column":3},"end":{"line":224,"column":4}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":8535,"end":8539,"loc":{"start":{"line":224,"column":5},"end":{"line":224,"column":9}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8540,"end":8541,"loc":{"start":{"line":224,"column":10},"end":{"line":224,"column":11}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":8546,"end":8548,"loc":{"start":{"line":225,"column":4},"end":{"line":225,"column":6}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8548,"end":8549,"loc":{"start":{"line":225,"column":6},"end":{"line":225,"column":7}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":8550,"end":8551,"loc":{"start":{"line":225,"column":8},"end":{"line":225,"column":9}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8551,"end":8552,"loc":{"start":{"line":225,"column":9},"end":{"line":225,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"e","start":8553,"end":8554,"loc":{"start":{"line":225,"column":11},"end":{"line":225,"column":12}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":8554,"end":8555,"loc":{"start":{"line":225,"column":12},"end":{"line":225,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":8555,"end":8561,"loc":{"start":{"line":225,"column":13},"end":{"line":225,"column":19}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":8562,"end":8564,"loc":{"start":{"line":225,"column":20},"end":{"line":225,"column":22}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"n_cell_kinds","start":8565,"end":8577,"loc":{"start":{"line":225,"column":23},"end":{"line":225,"column":35}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":8578,"end":8579,"loc":{"start":{"line":225,"column":36},"end":{"line":225,"column":37}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":8580,"end":8581,"loc":{"start":{"line":225,"column":38},"end":{"line":225,"column":39}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8582,"end":8583,"loc":{"start":{"line":225,"column":40},"end":{"line":225,"column":41}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8584,"end":8585,"loc":{"start":{"line":225,"column":42},"end":{"line":225,"column":43}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8585,"end":8586,"loc":{"start":{"line":225,"column":43},"end":{"line":225,"column":44}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"err2","start":8592,"end":8596,"loc":{"start":{"line":226,"column":5},"end":{"line":226,"column":9}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":8597,"end":8598,"loc":{"start":{"line":226,"column":10},"end":{"line":226,"column":11}}},{"type":{"label":"true","keyword":"true","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"true","start":8599,"end":8603,"loc":{"start":{"line":226,"column":12},"end":{"line":226,"column":16}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8608,"end":8609,"loc":{"start":{"line":227,"column":4},"end":{"line":227,"column":5}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8615,"end":8616,"loc":{"start":{"line":228,"column":3},"end":{"line":228,"column":4}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":8620,"end":8622,"loc":{"start":{"line":229,"column":3},"end":{"line":229,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8622,"end":8623,"loc":{"start":{"line":229,"column":5},"end":{"line":229,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"err2","start":8624,"end":8628,"loc":{"start":{"line":229,"column":7},"end":{"line":229,"column":11}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8629,"end":8630,"loc":{"start":{"line":229,"column":12},"end":{"line":229,"column":13}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8630,"end":8631,"loc":{"start":{"line":229,"column":13},"end":{"line":229,"column":14}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":8636,"end":8641,"loc":{"start":{"line":230,"column":4},"end":{"line":230,"column":9}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8641,"end":8642,"loc":{"start":{"line":230,"column":9},"end":{"line":230,"column":10}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Sub-arrays of ","start":8643,"end":8659,"loc":{"start":{"line":230,"column":11},"end":{"line":230,"column":27}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":8660,"end":8661,"loc":{"start":{"line":230,"column":28},"end":{"line":230,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":8662,"end":8666,"loc":{"start":{"line":230,"column":30},"end":{"line":230,"column":34}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":8667,"end":8668,"loc":{"start":{"line":230,"column":35},"end":{"line":230,"column":36}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":" must have an element for each cellkind including background!","start":8674,"end":8737,"loc":{"start":{"line":231,"column":4},"end":{"line":231,"column":67}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8738,"end":8739,"loc":{"start":{"line":231,"column":68},"end":{"line":231,"column":69}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8743,"end":8744,"loc":{"start":{"line":232,"column":3},"end":{"line":232,"column":4}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8747,"end":8748,"loc":{"start":{"line":233,"column":2},"end":{"line":233,"column":3}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8750,"end":8751,"loc":{"start":{"line":234,"column":1},"end":{"line":234,"column":2}}},{"type":"CommentBlock","value":"* Method for checking if the parameter has the right structure. Throws an error\n\tmessage if the parameter does not have this structure.\n\t\n\tIt internally uses one of the following functions, depending on the structure argument:\n\t{@link confCheckStructureSingle}, {@link confCheckStructureKindArray}, or\n\t{@link confCheckStructureKindMatrix}.\n\t\n\t@param {SingleValue|KindArray|KindMatrix} p - the parameter to check the structure of\n\t@param {string} name - the name of this parameter in the conf object, used for the\n\terror message.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t\n\t@example\n\t* // My own configuration object\n\t* let conf = {\n\t*\tP1 : true,\n\t* \tP2 : [0,2],\n\t* \tP3 : [-1,2,4],\n\t* \tP4 : [[1,2],[1,2]]\n\t* }\n\t* // C is a CPM which has 2 cellkinds including background:\n\t* let checker = new ParameterChecker( conf, C )\n\t* // These checks work out fine:\n\t* checker.confCheckStructure( conf[\"P1\"],\"P1\",\"SingleValue\")\n\t* checker.confCheckStructure( conf[\"P2\"],\"P2\",\"KindArray\")\n\t* checker.confCheckStructure( conf[\"P4\"],\"P4\",\"KindMatrix\")\n\t* \n\t* // These checks throw an error:\n\t* checker.confCheckStructure( conf[\"P1\"],\"P1\",\"KindArray\") // not an array\n\t* checker.confCheckStructure( conf[\"P2\"],\"P3\",\"KindArray\") // too long\n\t","start":8755,"end":10085,"loc":{"start":{"line":236,"column":1},"end":{"line":267,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckStructure","start":10087,"end":10105,"loc":{"start":{"line":268,"column":1},"end":{"line":268,"column":19}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10105,"end":10106,"loc":{"start":{"line":268,"column":19},"end":{"line":268,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":10107,"end":10108,"loc":{"start":{"line":268,"column":21},"end":{"line":268,"column":22}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10108,"end":10109,"loc":{"start":{"line":268,"column":22},"end":{"line":268,"column":23}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":10110,"end":10114,"loc":{"start":{"line":268,"column":24},"end":{"line":268,"column":28}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10114,"end":10115,"loc":{"start":{"line":268,"column":28},"end":{"line":268,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"structure","start":10116,"end":10125,"loc":{"start":{"line":268,"column":30},"end":{"line":268,"column":39}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10126,"end":10127,"loc":{"start":{"line":268,"column":40},"end":{"line":268,"column":41}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10127,"end":10128,"loc":{"start":{"line":268,"column":41},"end":{"line":268,"column":42}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":10131,"end":10133,"loc":{"start":{"line":269,"column":2},"end":{"line":269,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10133,"end":10134,"loc":{"start":{"line":269,"column":4},"end":{"line":269,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"structure","start":10135,"end":10144,"loc":{"start":{"line":269,"column":6},"end":{"line":269,"column":15}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":10145,"end":10147,"loc":{"start":{"line":269,"column":16},"end":{"line":269,"column":18}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"SingleValue","start":10148,"end":10161,"loc":{"start":{"line":269,"column":19},"end":{"line":269,"column":32}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10162,"end":10163,"loc":{"start":{"line":269,"column":33},"end":{"line":269,"column":34}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10163,"end":10164,"loc":{"start":{"line":269,"column":34},"end":{"line":269,"column":35}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":10168,"end":10172,"loc":{"start":{"line":270,"column":3},"end":{"line":270,"column":7}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10172,"end":10173,"loc":{"start":{"line":270,"column":7},"end":{"line":270,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckStructureSingle","start":10173,"end":10197,"loc":{"start":{"line":270,"column":8},"end":{"line":270,"column":32}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10197,"end":10198,"loc":{"start":{"line":270,"column":32},"end":{"line":270,"column":33}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":10199,"end":10200,"loc":{"start":{"line":270,"column":34},"end":{"line":270,"column":35}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10200,"end":10201,"loc":{"start":{"line":270,"column":35},"end":{"line":270,"column":36}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":10202,"end":10206,"loc":{"start":{"line":270,"column":37},"end":{"line":270,"column":41}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10207,"end":10208,"loc":{"start":{"line":270,"column":42},"end":{"line":270,"column":43}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10211,"end":10212,"loc":{"start":{"line":271,"column":2},"end":{"line":271,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":10213,"end":10217,"loc":{"start":{"line":271,"column":4},"end":{"line":271,"column":8}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":10218,"end":10220,"loc":{"start":{"line":271,"column":9},"end":{"line":271,"column":11}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10221,"end":10222,"loc":{"start":{"line":271,"column":12},"end":{"line":271,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"structure","start":10223,"end":10232,"loc":{"start":{"line":271,"column":14},"end":{"line":271,"column":23}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":10233,"end":10235,"loc":{"start":{"line":271,"column":24},"end":{"line":271,"column":26}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"KindArray","start":10236,"end":10247,"loc":{"start":{"line":271,"column":27},"end":{"line":271,"column":38}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10248,"end":10249,"loc":{"start":{"line":271,"column":39},"end":{"line":271,"column":40}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10249,"end":10250,"loc":{"start":{"line":271,"column":40},"end":{"line":271,"column":41}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":10254,"end":10258,"loc":{"start":{"line":272,"column":3},"end":{"line":272,"column":7}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10258,"end":10259,"loc":{"start":{"line":272,"column":7},"end":{"line":272,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckStructureKindArray","start":10259,"end":10286,"loc":{"start":{"line":272,"column":8},"end":{"line":272,"column":35}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10286,"end":10287,"loc":{"start":{"line":272,"column":35},"end":{"line":272,"column":36}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":10288,"end":10289,"loc":{"start":{"line":272,"column":37},"end":{"line":272,"column":38}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10289,"end":10290,"loc":{"start":{"line":272,"column":38},"end":{"line":272,"column":39}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":10291,"end":10295,"loc":{"start":{"line":272,"column":40},"end":{"line":272,"column":44}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10296,"end":10297,"loc":{"start":{"line":272,"column":45},"end":{"line":272,"column":46}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10300,"end":10301,"loc":{"start":{"line":273,"column":2},"end":{"line":273,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":10302,"end":10306,"loc":{"start":{"line":273,"column":4},"end":{"line":273,"column":8}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":10307,"end":10309,"loc":{"start":{"line":273,"column":9},"end":{"line":273,"column":11}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10310,"end":10311,"loc":{"start":{"line":273,"column":12},"end":{"line":273,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"structure","start":10312,"end":10321,"loc":{"start":{"line":273,"column":14},"end":{"line":273,"column":23}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":10322,"end":10324,"loc":{"start":{"line":273,"column":24},"end":{"line":273,"column":26}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"KindMatrix","start":10325,"end":10337,"loc":{"start":{"line":273,"column":27},"end":{"line":273,"column":39}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10338,"end":10339,"loc":{"start":{"line":273,"column":40},"end":{"line":273,"column":41}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10339,"end":10340,"loc":{"start":{"line":273,"column":41},"end":{"line":273,"column":42}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":10344,"end":10348,"loc":{"start":{"line":274,"column":3},"end":{"line":274,"column":7}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10348,"end":10349,"loc":{"start":{"line":274,"column":7},"end":{"line":274,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckStructureKindMatrix","start":10349,"end":10377,"loc":{"start":{"line":274,"column":8},"end":{"line":274,"column":36}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10377,"end":10378,"loc":{"start":{"line":274,"column":36},"end":{"line":274,"column":37}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":10379,"end":10380,"loc":{"start":{"line":274,"column":38},"end":{"line":274,"column":39}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10380,"end":10381,"loc":{"start":{"line":274,"column":39},"end":{"line":274,"column":40}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":10382,"end":10386,"loc":{"start":{"line":274,"column":41},"end":{"line":274,"column":45}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10387,"end":10388,"loc":{"start":{"line":274,"column":46},"end":{"line":274,"column":47}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10391,"end":10392,"loc":{"start":{"line":275,"column":2},"end":{"line":275,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":10393,"end":10397,"loc":{"start":{"line":275,"column":4},"end":{"line":275,"column":8}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10398,"end":10399,"loc":{"start":{"line":275,"column":9},"end":{"line":275,"column":10}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":10403,"end":10408,"loc":{"start":{"line":276,"column":3},"end":{"line":276,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10408,"end":10409,"loc":{"start":{"line":276,"column":8},"end":{"line":276,"column":9}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Unknown structure ","start":10409,"end":10429,"loc":{"start":{"line":276,"column":9},"end":{"line":276,"column":29}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":10430,"end":10431,"loc":{"start":{"line":276,"column":30},"end":{"line":276,"column":31}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"structure","start":10432,"end":10441,"loc":{"start":{"line":276,"column":32},"end":{"line":276,"column":41}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":10442,"end":10443,"loc":{"start":{"line":276,"column":42},"end":{"line":276,"column":43}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":", please choose 'SingleValue', 'KindArray', or 'KindMatrix'.","start":10444,"end":10506,"loc":{"start":{"line":276,"column":44},"end":{"line":276,"column":106}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10506,"end":10507,"loc":{"start":{"line":276,"column":106},"end":{"line":276,"column":107}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10510,"end":10511,"loc":{"start":{"line":277,"column":2},"end":{"line":277,"column":3}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10513,"end":10514,"loc":{"start":{"line":278,"column":1},"end":{"line":278,"column":2}}},{"type":"CommentBlock","value":" ========= CHECKING VALUE TYPE ======== ","start":10518,"end":10562,"loc":{"start":{"line":280,"column":1},"end":{"line":280,"column":45}}},{"type":"CommentBlock","value":"* Check if a value is of type 'number'.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a number?\n\t@example\n\tthis.isNumber( -1 ) // true\n\tthis.isNumber( 0.5 ) // true\n\tthis.isNumber( true ) // false\n\tthis.isNumber( [1,2 ] ) // false\n\tthis.isNumber( \"hello world\" ) // false\n\t@private\n\t","start":10566,"end":10868,"loc":{"start":{"line":282,"column":1},"end":{"line":292,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"isNumber","start":10870,"end":10878,"loc":{"start":{"line":293,"column":1},"end":{"line":293,"column":9}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10878,"end":10879,"loc":{"start":{"line":293,"column":9},"end":{"line":293,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":10880,"end":10881,"loc":{"start":{"line":293,"column":11},"end":{"line":293,"column":12}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10882,"end":10883,"loc":{"start":{"line":293,"column":13},"end":{"line":293,"column":14}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10883,"end":10884,"loc":{"start":{"line":293,"column":14},"end":{"line":293,"column":15}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":10887,"end":10893,"loc":{"start":{"line":294,"column":2},"end":{"line":294,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10894,"end":10895,"loc":{"start":{"line":294,"column":9},"end":{"line":294,"column":10}}},{"type":{"label":"typeof","keyword":"typeof","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"typeof","start":10896,"end":10902,"loc":{"start":{"line":294,"column":11},"end":{"line":294,"column":17}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":10903,"end":10904,"loc":{"start":{"line":294,"column":18},"end":{"line":294,"column":19}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"===","start":10905,"end":10908,"loc":{"start":{"line":294,"column":20},"end":{"line":294,"column":23}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"number","start":10909,"end":10917,"loc":{"start":{"line":294,"column":24},"end":{"line":294,"column":32}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10918,"end":10919,"loc":{"start":{"line":294,"column":33},"end":{"line":294,"column":34}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10921,"end":10922,"loc":{"start":{"line":295,"column":1},"end":{"line":295,"column":2}}},{"type":"CommentBlock","value":"* Check if a value is of type 'number' and non-negative.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a non-negative number?\n\t@example\n\tthis.isNonNegative( -1 ) // false\n\tthis.isNonNegative( 0.5 ) // true\n\tthis.isNumber( true ) // false\n\tthis.isNumber( [1,2 ] ) // false\n\tthis.isNumber( \"hello world\" ) // false\n\t@private\n\t","start":10924,"end":11267,"loc":{"start":{"line":296,"column":1},"end":{"line":306,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"isNonNegative","start":11269,"end":11282,"loc":{"start":{"line":307,"column":1},"end":{"line":307,"column":14}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11282,"end":11283,"loc":{"start":{"line":307,"column":14},"end":{"line":307,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":11284,"end":11285,"loc":{"start":{"line":307,"column":16},"end":{"line":307,"column":17}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11286,"end":11287,"loc":{"start":{"line":307,"column":18},"end":{"line":307,"column":19}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11287,"end":11288,"loc":{"start":{"line":307,"column":19},"end":{"line":307,"column":20}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":11291,"end":11293,"loc":{"start":{"line":308,"column":2},"end":{"line":308,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11293,"end":11294,"loc":{"start":{"line":308,"column":4},"end":{"line":308,"column":5}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":11295,"end":11296,"loc":{"start":{"line":308,"column":6},"end":{"line":308,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11296,"end":11297,"loc":{"start":{"line":308,"column":7},"end":{"line":308,"column":8}}},{"type":{"label":"typeof","keyword":"typeof","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"typeof","start":11298,"end":11304,"loc":{"start":{"line":308,"column":9},"end":{"line":308,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":11305,"end":11306,"loc":{"start":{"line":308,"column":16},"end":{"line":308,"column":17}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"===","start":11307,"end":11310,"loc":{"start":{"line":308,"column":18},"end":{"line":308,"column":21}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"number","start":11311,"end":11319,"loc":{"start":{"line":308,"column":22},"end":{"line":308,"column":30}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11320,"end":11321,"loc":{"start":{"line":308,"column":31},"end":{"line":308,"column":32}}},{"type":{"label":"||","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":1,"updateContext":null},"value":"||","start":11322,"end":11324,"loc":{"start":{"line":308,"column":33},"end":{"line":308,"column":35}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":11325,"end":11326,"loc":{"start":{"line":308,"column":36},"end":{"line":308,"column":37}}},{"type":{"label":"</>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"<","start":11327,"end":11328,"loc":{"start":{"line":308,"column":38},"end":{"line":308,"column":39}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":11329,"end":11330,"loc":{"start":{"line":308,"column":40},"end":{"line":308,"column":41}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11331,"end":11332,"loc":{"start":{"line":308,"column":42},"end":{"line":308,"column":43}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11332,"end":11333,"loc":{"start":{"line":308,"column":43},"end":{"line":308,"column":44}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":11337,"end":11343,"loc":{"start":{"line":309,"column":3},"end":{"line":309,"column":9}}},{"type":{"label":"false","keyword":"false","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"false","start":11344,"end":11349,"loc":{"start":{"line":309,"column":10},"end":{"line":309,"column":15}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11352,"end":11353,"loc":{"start":{"line":310,"column":2},"end":{"line":310,"column":3}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":11356,"end":11362,"loc":{"start":{"line":311,"column":2},"end":{"line":311,"column":8}}},{"type":{"label":"true","keyword":"true","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"true","start":11363,"end":11367,"loc":{"start":{"line":311,"column":9},"end":{"line":311,"column":13}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11369,"end":11370,"loc":{"start":{"line":312,"column":1},"end":{"line":312,"column":2}}},{"type":"CommentBlock","value":"* Check if a value is of type 'number' and between 0 and 1.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a number between 0 and 1?\n\t@example\n\tthis.isProbability( -1 ) // false\n\tthis.isProbability( 0.5 ) // true\n\tthis.isProbability( true ) // false\n\tthis.isProbability( [1,2 ] ) // false\n\tthis.isProbability( \"hello world\" ) // false\n\t@private\n\t","start":11372,"end":11736,"loc":{"start":{"line":313,"column":1},"end":{"line":323,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"isProbability","start":11738,"end":11751,"loc":{"start":{"line":324,"column":1},"end":{"line":324,"column":14}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11751,"end":11752,"loc":{"start":{"line":324,"column":14},"end":{"line":324,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":11753,"end":11754,"loc":{"start":{"line":324,"column":16},"end":{"line":324,"column":17}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11755,"end":11756,"loc":{"start":{"line":324,"column":18},"end":{"line":324,"column":19}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11756,"end":11757,"loc":{"start":{"line":324,"column":19},"end":{"line":324,"column":20}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":11760,"end":11762,"loc":{"start":{"line":325,"column":2},"end":{"line":325,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11762,"end":11763,"loc":{"start":{"line":325,"column":4},"end":{"line":325,"column":5}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":11764,"end":11765,"loc":{"start":{"line":325,"column":6},"end":{"line":325,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11765,"end":11766,"loc":{"start":{"line":325,"column":7},"end":{"line":325,"column":8}}},{"type":{"label":"typeof","keyword":"typeof","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"typeof","start":11767,"end":11773,"loc":{"start":{"line":325,"column":9},"end":{"line":325,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":11774,"end":11775,"loc":{"start":{"line":325,"column":16},"end":{"line":325,"column":17}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"===","start":11776,"end":11779,"loc":{"start":{"line":325,"column":18},"end":{"line":325,"column":21}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"number","start":11780,"end":11788,"loc":{"start":{"line":325,"column":22},"end":{"line":325,"column":30}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11789,"end":11790,"loc":{"start":{"line":325,"column":31},"end":{"line":325,"column":32}}},{"type":{"label":"||","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":1,"updateContext":null},"value":"||","start":11791,"end":11793,"loc":{"start":{"line":325,"column":33},"end":{"line":325,"column":35}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":11794,"end":11795,"loc":{"start":{"line":325,"column":36},"end":{"line":325,"column":37}}},{"type":{"label":"</>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"<","start":11796,"end":11797,"loc":{"start":{"line":325,"column":38},"end":{"line":325,"column":39}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":11798,"end":11799,"loc":{"start":{"line":325,"column":40},"end":{"line":325,"column":41}}},{"type":{"label":"||","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":1,"updateContext":null},"value":"||","start":11800,"end":11802,"loc":{"start":{"line":325,"column":42},"end":{"line":325,"column":44}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":11803,"end":11804,"loc":{"start":{"line":325,"column":45},"end":{"line":325,"column":46}}},{"type":{"label":"</>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":">","start":11805,"end":11806,"loc":{"start":{"line":325,"column":47},"end":{"line":325,"column":48}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":11807,"end":11808,"loc":{"start":{"line":325,"column":49},"end":{"line":325,"column":50}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11809,"end":11810,"loc":{"start":{"line":325,"column":51},"end":{"line":325,"column":52}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11810,"end":11811,"loc":{"start":{"line":325,"column":52},"end":{"line":325,"column":53}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":11815,"end":11821,"loc":{"start":{"line":326,"column":3},"end":{"line":326,"column":9}}},{"type":{"label":"false","keyword":"false","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"false","start":11822,"end":11827,"loc":{"start":{"line":326,"column":10},"end":{"line":326,"column":15}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11830,"end":11831,"loc":{"start":{"line":327,"column":2},"end":{"line":327,"column":3}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":11834,"end":11840,"loc":{"start":{"line":328,"column":2},"end":{"line":328,"column":8}}},{"type":{"label":"true","keyword":"true","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"true","start":11841,"end":11845,"loc":{"start":{"line":328,"column":9},"end":{"line":328,"column":13}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11847,"end":11848,"loc":{"start":{"line":329,"column":1},"end":{"line":329,"column":2}}},{"type":"CommentBlock","value":"* Check if a value is of type 'string' and has one of a set of\n\tpredefined values.\n\t@param {number} v - value to check.\n\t@param {string[]} [values=[]] - possible values. If left empty,\n\tany string is considered OK.\n\t@return {boolean} is v a string and does it match one of the predefined values?\n\t@example\n\tthis.isString( true ) // false\n\tthis.isString( [\"a\",\"b\"] ) // false\n\tthis.isString( \"hello world\" ) // true\n\t@private\n\t","start":11850,"end":12280,"loc":{"start":{"line":330,"column":1},"end":{"line":341,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"isString","start":12282,"end":12290,"loc":{"start":{"line":342,"column":1},"end":{"line":342,"column":9}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12290,"end":12291,"loc":{"start":{"line":342,"column":9},"end":{"line":342,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":12292,"end":12293,"loc":{"start":{"line":342,"column":11},"end":{"line":342,"column":12}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":12293,"end":12294,"loc":{"start":{"line":342,"column":12},"end":{"line":342,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"values","start":12295,"end":12301,"loc":{"start":{"line":342,"column":14},"end":{"line":342,"column":20}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":12302,"end":12303,"loc":{"start":{"line":342,"column":21},"end":{"line":342,"column":22}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":12304,"end":12305,"loc":{"start":{"line":342,"column":23},"end":{"line":342,"column":24}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":12305,"end":12306,"loc":{"start":{"line":342,"column":24},"end":{"line":342,"column":25}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12307,"end":12308,"loc":{"start":{"line":342,"column":26},"end":{"line":342,"column":27}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12308,"end":12309,"loc":{"start":{"line":342,"column":27},"end":{"line":342,"column":28}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":12312,"end":12314,"loc":{"start":{"line":343,"column":2},"end":{"line":343,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12314,"end":12315,"loc":{"start":{"line":343,"column":4},"end":{"line":343,"column":5}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":12316,"end":12317,"loc":{"start":{"line":343,"column":6},"end":{"line":343,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12317,"end":12318,"loc":{"start":{"line":343,"column":7},"end":{"line":343,"column":8}}},{"type":{"label":"typeof","keyword":"typeof","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"typeof","start":12319,"end":12325,"loc":{"start":{"line":343,"column":9},"end":{"line":343,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":12326,"end":12327,"loc":{"start":{"line":343,"column":16},"end":{"line":343,"column":17}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"===","start":12328,"end":12331,"loc":{"start":{"line":343,"column":18},"end":{"line":343,"column":21}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"string","start":12332,"end":12340,"loc":{"start":{"line":343,"column":22},"end":{"line":343,"column":30}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12341,"end":12342,"loc":{"start":{"line":343,"column":31},"end":{"line":343,"column":32}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12343,"end":12344,"loc":{"start":{"line":343,"column":33},"end":{"line":343,"column":34}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12344,"end":12345,"loc":{"start":{"line":343,"column":34},"end":{"line":343,"column":35}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":12349,"end":12355,"loc":{"start":{"line":344,"column":3},"end":{"line":344,"column":9}}},{"type":{"label":"false","keyword":"false","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"false","start":12356,"end":12361,"loc":{"start":{"line":344,"column":10},"end":{"line":344,"column":15}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12364,"end":12365,"loc":{"start":{"line":345,"column":2},"end":{"line":345,"column":3}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":12368,"end":12371,"loc":{"start":{"line":346,"column":2},"end":{"line":346,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"found","start":12372,"end":12377,"loc":{"start":{"line":346,"column":6},"end":{"line":346,"column":11}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":12378,"end":12379,"loc":{"start":{"line":346,"column":12},"end":{"line":346,"column":13}}},{"type":{"label":"false","keyword":"false","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"false","start":12380,"end":12385,"loc":{"start":{"line":346,"column":14},"end":{"line":346,"column":19}}},{"type":{"label":"for","keyword":"for","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":true,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"for","start":12388,"end":12391,"loc":{"start":{"line":347,"column":2},"end":{"line":347,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12391,"end":12392,"loc":{"start":{"line":347,"column":5},"end":{"line":347,"column":6}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":12393,"end":12396,"loc":{"start":{"line":347,"column":7},"end":{"line":347,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"val","start":12397,"end":12400,"loc":{"start":{"line":347,"column":11},"end":{"line":347,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"of","start":12401,"end":12403,"loc":{"start":{"line":347,"column":15},"end":{"line":347,"column":17}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"values","start":12404,"end":12410,"loc":{"start":{"line":347,"column":18},"end":{"line":347,"column":24}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12411,"end":12412,"loc":{"start":{"line":347,"column":25},"end":{"line":347,"column":26}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12412,"end":12413,"loc":{"start":{"line":347,"column":26},"end":{"line":347,"column":27}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":12417,"end":12419,"loc":{"start":{"line":348,"column":3},"end":{"line":348,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12419,"end":12420,"loc":{"start":{"line":348,"column":5},"end":{"line":348,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"val","start":12421,"end":12424,"loc":{"start":{"line":348,"column":7},"end":{"line":348,"column":10}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":12425,"end":12427,"loc":{"start":{"line":348,"column":11},"end":{"line":348,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":12428,"end":12429,"loc":{"start":{"line":348,"column":14},"end":{"line":348,"column":15}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12430,"end":12431,"loc":{"start":{"line":348,"column":16},"end":{"line":348,"column":17}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12431,"end":12432,"loc":{"start":{"line":348,"column":17},"end":{"line":348,"column":18}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"found","start":12437,"end":12442,"loc":{"start":{"line":349,"column":4},"end":{"line":349,"column":9}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":12443,"end":12444,"loc":{"start":{"line":349,"column":10},"end":{"line":349,"column":11}}},{"type":{"label":"true","keyword":"true","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"true","start":12445,"end":12449,"loc":{"start":{"line":349,"column":12},"end":{"line":349,"column":16}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12453,"end":12454,"loc":{"start":{"line":350,"column":3},"end":{"line":350,"column":4}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12457,"end":12458,"loc":{"start":{"line":351,"column":2},"end":{"line":351,"column":3}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":12461,"end":12467,"loc":{"start":{"line":352,"column":2},"end":{"line":352,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"found","start":12468,"end":12473,"loc":{"start":{"line":352,"column":9},"end":{"line":352,"column":14}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12475,"end":12476,"loc":{"start":{"line":353,"column":1},"end":{"line":353,"column":2}}},{"type":"CommentBlock","value":"* Check if a value is of type 'boolean'.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a boolean?\n\t@example\n\tthis.isBoolean( true ) // true\n\tthis.isBoolean( [true,false] ) // false\n\tthis.isBoolean( \"hello world\" ) // true\n\t@private\n\t","start":12478,"end":12730,"loc":{"start":{"line":354,"column":1},"end":{"line":362,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"isBoolean","start":12732,"end":12741,"loc":{"start":{"line":363,"column":1},"end":{"line":363,"column":10}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12741,"end":12742,"loc":{"start":{"line":363,"column":10},"end":{"line":363,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":12743,"end":12744,"loc":{"start":{"line":363,"column":12},"end":{"line":363,"column":13}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12745,"end":12746,"loc":{"start":{"line":363,"column":14},"end":{"line":363,"column":15}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12746,"end":12747,"loc":{"start":{"line":363,"column":15},"end":{"line":363,"column":16}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":12750,"end":12756,"loc":{"start":{"line":364,"column":2},"end":{"line":364,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12756,"end":12757,"loc":{"start":{"line":364,"column":8},"end":{"line":364,"column":9}}},{"type":{"label":"typeof","keyword":"typeof","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"typeof","start":12758,"end":12764,"loc":{"start":{"line":364,"column":10},"end":{"line":364,"column":16}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":12765,"end":12766,"loc":{"start":{"line":364,"column":17},"end":{"line":364,"column":18}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"===","start":12767,"end":12770,"loc":{"start":{"line":364,"column":19},"end":{"line":364,"column":22}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"boolean","start":12771,"end":12780,"loc":{"start":{"line":364,"column":23},"end":{"line":364,"column":32}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12781,"end":12782,"loc":{"start":{"line":364,"column":33},"end":{"line":364,"column":34}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12784,"end":12785,"loc":{"start":{"line":365,"column":1},"end":{"line":365,"column":2}}},{"type":"CommentBlock","value":"* Check if a value is a coordinate in the dimensions of the current grid.\n\t@param {number} v - value to check.\n\t@return {boolean} is v a coordinate of the right dimensions?\n\t@public\n\t","start":12789,"end":12976,"loc":{"start":{"line":367,"column":1},"end":{"line":371,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"isCoordinate","start":12978,"end":12990,"loc":{"start":{"line":372,"column":1},"end":{"line":372,"column":13}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12990,"end":12991,"loc":{"start":{"line":372,"column":13},"end":{"line":372,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":12992,"end":12993,"loc":{"start":{"line":372,"column":15},"end":{"line":372,"column":16}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12994,"end":12995,"loc":{"start":{"line":372,"column":17},"end":{"line":372,"column":18}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12995,"end":12996,"loc":{"start":{"line":372,"column":18},"end":{"line":372,"column":19}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":12999,"end":13001,"loc":{"start":{"line":373,"column":2},"end":{"line":373,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13001,"end":13002,"loc":{"start":{"line":373,"column":4},"end":{"line":373,"column":5}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":13003,"end":13004,"loc":{"start":{"line":373,"column":6},"end":{"line":373,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13004,"end":13005,"loc":{"start":{"line":373,"column":7},"end":{"line":373,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":13006,"end":13007,"loc":{"start":{"line":373,"column":9},"end":{"line":373,"column":10}}},{"type":{"label":"instanceof","keyword":"instanceof","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"instanceof","start":13008,"end":13018,"loc":{"start":{"line":373,"column":11},"end":{"line":373,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Array","start":13019,"end":13024,"loc":{"start":{"line":373,"column":22},"end":{"line":373,"column":27}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13025,"end":13026,"loc":{"start":{"line":373,"column":28},"end":{"line":373,"column":29}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13027,"end":13028,"loc":{"start":{"line":373,"column":30},"end":{"line":373,"column":31}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13028,"end":13029,"loc":{"start":{"line":373,"column":31},"end":{"line":373,"column":32}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":13033,"end":13039,"loc":{"start":{"line":374,"column":3},"end":{"line":374,"column":9}}},{"type":{"label":"false","keyword":"false","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"false","start":13040,"end":13045,"loc":{"start":{"line":374,"column":10},"end":{"line":374,"column":15}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13048,"end":13049,"loc":{"start":{"line":375,"column":2},"end":{"line":375,"column":3}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":13052,"end":13054,"loc":{"start":{"line":376,"column":2},"end":{"line":376,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13054,"end":13055,"loc":{"start":{"line":376,"column":4},"end":{"line":376,"column":5}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":13056,"end":13057,"loc":{"start":{"line":376,"column":6},"end":{"line":376,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"v","start":13057,"end":13058,"loc":{"start":{"line":376,"column":7},"end":{"line":376,"column":8}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13058,"end":13059,"loc":{"start":{"line":376,"column":8},"end":{"line":376,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":13059,"end":13065,"loc":{"start":{"line":376,"column":9},"end":{"line":376,"column":15}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":13066,"end":13068,"loc":{"start":{"line":376,"column":16},"end":{"line":376,"column":18}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":13069,"end":13073,"loc":{"start":{"line":376,"column":19},"end":{"line":376,"column":23}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13073,"end":13074,"loc":{"start":{"line":376,"column":23},"end":{"line":376,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"C","start":13074,"end":13075,"loc":{"start":{"line":376,"column":24},"end":{"line":376,"column":25}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13075,"end":13076,"loc":{"start":{"line":376,"column":25},"end":{"line":376,"column":26}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"extents","start":13076,"end":13083,"loc":{"start":{"line":376,"column":26},"end":{"line":376,"column":33}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13083,"end":13084,"loc":{"start":{"line":376,"column":33},"end":{"line":376,"column":34}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":13084,"end":13090,"loc":{"start":{"line":376,"column":34},"end":{"line":376,"column":40}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13091,"end":13092,"loc":{"start":{"line":376,"column":41},"end":{"line":376,"column":42}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13092,"end":13093,"loc":{"start":{"line":376,"column":42},"end":{"line":376,"column":43}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":13097,"end":13103,"loc":{"start":{"line":377,"column":3},"end":{"line":377,"column":9}}},{"type":{"label":"false","keyword":"false","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"false","start":13104,"end":13109,"loc":{"start":{"line":377,"column":10},"end":{"line":377,"column":15}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13112,"end":13113,"loc":{"start":{"line":378,"column":2},"end":{"line":378,"column":3}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":13116,"end":13122,"loc":{"start":{"line":379,"column":2},"end":{"line":379,"column":8}}},{"type":{"label":"true","keyword":"true","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"true","start":13123,"end":13127,"loc":{"start":{"line":379,"column":9},"end":{"line":379,"column":13}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13129,"end":13130,"loc":{"start":{"line":380,"column":1},"end":{"line":380,"column":2}}},{"type":"CommentBlock","value":"* Check if the elements of a given parameter are of the right type.\n\tIt throws an error if this is not the case.\n\t@param {anything} p - parameter to check.\n\t@param {string} name - parameter name used for any error messages.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t@param {string} valuetype - type of value, which must be one of \n\t\"Number\", \"NonNegative\", \"Probability\", \"String\", or \"Boolean\". \n\t@param {string[]} values - predefined specific options for the value. \n\tIf left empty, this is ignored.\n\t@private\n\t","start":13134,"end":13752,"loc":{"start":{"line":382,"column":1},"end":{"line":393,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckValueType","start":13754,"end":13772,"loc":{"start":{"line":394,"column":1},"end":{"line":394,"column":19}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13772,"end":13773,"loc":{"start":{"line":394,"column":19},"end":{"line":394,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":13774,"end":13775,"loc":{"start":{"line":394,"column":21},"end":{"line":394,"column":22}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13775,"end":13776,"loc":{"start":{"line":394,"column":22},"end":{"line":394,"column":23}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":13777,"end":13781,"loc":{"start":{"line":394,"column":24},"end":{"line":394,"column":28}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13781,"end":13782,"loc":{"start":{"line":394,"column":28},"end":{"line":394,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"structure","start":13783,"end":13792,"loc":{"start":{"line":394,"column":30},"end":{"line":394,"column":39}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13792,"end":13793,"loc":{"start":{"line":394,"column":39},"end":{"line":394,"column":40}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuetype","start":13794,"end":13803,"loc":{"start":{"line":394,"column":41},"end":{"line":394,"column":50}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13803,"end":13804,"loc":{"start":{"line":394,"column":50},"end":{"line":394,"column":51}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"values","start":13805,"end":13811,"loc":{"start":{"line":394,"column":52},"end":{"line":394,"column":58}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":13812,"end":13813,"loc":{"start":{"line":394,"column":59},"end":{"line":394,"column":60}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13814,"end":13815,"loc":{"start":{"line":394,"column":61},"end":{"line":394,"column":62}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13815,"end":13816,"loc":{"start":{"line":394,"column":62},"end":{"line":394,"column":63}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13817,"end":13818,"loc":{"start":{"line":394,"column":64},"end":{"line":394,"column":65}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13818,"end":13819,"loc":{"start":{"line":394,"column":65},"end":{"line":394,"column":66}}},{"type":"CommentLine","value":" Determine which checkfunction will be used.","start":13824,"end":13870,"loc":{"start":{"line":396,"column":2},"end":{"line":396,"column":48}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":13873,"end":13876,"loc":{"start":{"line":397,"column":2},"end":{"line":397,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuechecker","start":13877,"end":13889,"loc":{"start":{"line":397,"column":6},"end":{"line":397,"column":18}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":13892,"end":13894,"loc":{"start":{"line":398,"column":2},"end":{"line":398,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13894,"end":13895,"loc":{"start":{"line":398,"column":4},"end":{"line":398,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuetype","start":13896,"end":13905,"loc":{"start":{"line":398,"column":6},"end":{"line":398,"column":15}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":13906,"end":13908,"loc":{"start":{"line":398,"column":16},"end":{"line":398,"column":18}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Number","start":13909,"end":13917,"loc":{"start":{"line":398,"column":19},"end":{"line":398,"column":27}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13918,"end":13919,"loc":{"start":{"line":398,"column":28},"end":{"line":398,"column":29}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13919,"end":13920,"loc":{"start":{"line":398,"column":29},"end":{"line":398,"column":30}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuechecker","start":13924,"end":13936,"loc":{"start":{"line":399,"column":3},"end":{"line":399,"column":15}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":13937,"end":13938,"loc":{"start":{"line":399,"column":16},"end":{"line":399,"column":17}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":13939,"end":13943,"loc":{"start":{"line":399,"column":18},"end":{"line":399,"column":22}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13943,"end":13944,"loc":{"start":{"line":399,"column":22},"end":{"line":399,"column":23}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"isNumber","start":13944,"end":13952,"loc":{"start":{"line":399,"column":23},"end":{"line":399,"column":31}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13955,"end":13956,"loc":{"start":{"line":400,"column":2},"end":{"line":400,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":13957,"end":13961,"loc":{"start":{"line":400,"column":4},"end":{"line":400,"column":8}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":13962,"end":13964,"loc":{"start":{"line":400,"column":9},"end":{"line":400,"column":11}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13965,"end":13966,"loc":{"start":{"line":400,"column":12},"end":{"line":400,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuetype","start":13967,"end":13976,"loc":{"start":{"line":400,"column":14},"end":{"line":400,"column":23}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":13977,"end":13979,"loc":{"start":{"line":400,"column":24},"end":{"line":400,"column":26}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"NonNegative","start":13980,"end":13993,"loc":{"start":{"line":400,"column":27},"end":{"line":400,"column":40}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13994,"end":13995,"loc":{"start":{"line":400,"column":41},"end":{"line":400,"column":42}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13995,"end":13996,"loc":{"start":{"line":400,"column":42},"end":{"line":400,"column":43}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuechecker","start":14000,"end":14012,"loc":{"start":{"line":401,"column":3},"end":{"line":401,"column":15}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":14013,"end":14014,"loc":{"start":{"line":401,"column":16},"end":{"line":401,"column":17}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":14015,"end":14019,"loc":{"start":{"line":401,"column":18},"end":{"line":401,"column":22}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":14019,"end":14020,"loc":{"start":{"line":401,"column":22},"end":{"line":401,"column":23}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"isNonNegative","start":14020,"end":14033,"loc":{"start":{"line":401,"column":23},"end":{"line":401,"column":36}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14036,"end":14037,"loc":{"start":{"line":402,"column":2},"end":{"line":402,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":14038,"end":14042,"loc":{"start":{"line":402,"column":4},"end":{"line":402,"column":8}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":14043,"end":14045,"loc":{"start":{"line":402,"column":9},"end":{"line":402,"column":11}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14046,"end":14047,"loc":{"start":{"line":402,"column":12},"end":{"line":402,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuetype","start":14048,"end":14057,"loc":{"start":{"line":402,"column":14},"end":{"line":402,"column":23}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":14058,"end":14060,"loc":{"start":{"line":402,"column":24},"end":{"line":402,"column":26}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Probability","start":14061,"end":14074,"loc":{"start":{"line":402,"column":27},"end":{"line":402,"column":40}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14075,"end":14076,"loc":{"start":{"line":402,"column":41},"end":{"line":402,"column":42}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14076,"end":14077,"loc":{"start":{"line":402,"column":42},"end":{"line":402,"column":43}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuechecker","start":14081,"end":14093,"loc":{"start":{"line":403,"column":3},"end":{"line":403,"column":15}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":14094,"end":14095,"loc":{"start":{"line":403,"column":16},"end":{"line":403,"column":17}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":14096,"end":14100,"loc":{"start":{"line":403,"column":18},"end":{"line":403,"column":22}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":14100,"end":14101,"loc":{"start":{"line":403,"column":22},"end":{"line":403,"column":23}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"isProbability","start":14101,"end":14114,"loc":{"start":{"line":403,"column":23},"end":{"line":403,"column":36}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14117,"end":14118,"loc":{"start":{"line":404,"column":2},"end":{"line":404,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":14119,"end":14123,"loc":{"start":{"line":404,"column":4},"end":{"line":404,"column":8}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":14124,"end":14126,"loc":{"start":{"line":404,"column":9},"end":{"line":404,"column":11}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14127,"end":14128,"loc":{"start":{"line":404,"column":12},"end":{"line":404,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuetype","start":14129,"end":14138,"loc":{"start":{"line":404,"column":14},"end":{"line":404,"column":23}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":14139,"end":14141,"loc":{"start":{"line":404,"column":24},"end":{"line":404,"column":26}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"String","start":14142,"end":14150,"loc":{"start":{"line":404,"column":27},"end":{"line":404,"column":35}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14151,"end":14152,"loc":{"start":{"line":404,"column":36},"end":{"line":404,"column":37}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14152,"end":14153,"loc":{"start":{"line":404,"column":37},"end":{"line":404,"column":38}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuechecker","start":14157,"end":14169,"loc":{"start":{"line":405,"column":3},"end":{"line":405,"column":15}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":14170,"end":14171,"loc":{"start":{"line":405,"column":16},"end":{"line":405,"column":17}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":14172,"end":14176,"loc":{"start":{"line":405,"column":18},"end":{"line":405,"column":22}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":14176,"end":14177,"loc":{"start":{"line":405,"column":22},"end":{"line":405,"column":23}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"isString","start":14177,"end":14185,"loc":{"start":{"line":405,"column":23},"end":{"line":405,"column":31}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14188,"end":14189,"loc":{"start":{"line":406,"column":2},"end":{"line":406,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":14190,"end":14194,"loc":{"start":{"line":406,"column":4},"end":{"line":406,"column":8}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":14195,"end":14197,"loc":{"start":{"line":406,"column":9},"end":{"line":406,"column":11}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14198,"end":14199,"loc":{"start":{"line":406,"column":12},"end":{"line":406,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuetype","start":14200,"end":14209,"loc":{"start":{"line":406,"column":14},"end":{"line":406,"column":23}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":14210,"end":14212,"loc":{"start":{"line":406,"column":24},"end":{"line":406,"column":26}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Boolean","start":14213,"end":14222,"loc":{"start":{"line":406,"column":27},"end":{"line":406,"column":36}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14223,"end":14224,"loc":{"start":{"line":406,"column":37},"end":{"line":406,"column":38}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14224,"end":14225,"loc":{"start":{"line":406,"column":38},"end":{"line":406,"column":39}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuechecker","start":14229,"end":14241,"loc":{"start":{"line":407,"column":3},"end":{"line":407,"column":15}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":14242,"end":14243,"loc":{"start":{"line":407,"column":16},"end":{"line":407,"column":17}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":14244,"end":14248,"loc":{"start":{"line":407,"column":18},"end":{"line":407,"column":22}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":14248,"end":14249,"loc":{"start":{"line":407,"column":22},"end":{"line":407,"column":23}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"isBoolean","start":14249,"end":14258,"loc":{"start":{"line":407,"column":23},"end":{"line":407,"column":32}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14261,"end":14262,"loc":{"start":{"line":408,"column":2},"end":{"line":408,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":14263,"end":14267,"loc":{"start":{"line":408,"column":4},"end":{"line":408,"column":8}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14268,"end":14269,"loc":{"start":{"line":408,"column":9},"end":{"line":408,"column":10}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":14273,"end":14278,"loc":{"start":{"line":409,"column":3},"end":{"line":409,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14278,"end":14279,"loc":{"start":{"line":409,"column":8},"end":{"line":409,"column":9}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Unsupported valuetype in check for parameter ","start":14280,"end":14327,"loc":{"start":{"line":409,"column":10},"end":{"line":409,"column":57}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":14328,"end":14329,"loc":{"start":{"line":409,"column":58},"end":{"line":409,"column":59}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":14330,"end":14334,"loc":{"start":{"line":409,"column":60},"end":{"line":409,"column":64}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":14335,"end":14336,"loc":{"start":{"line":409,"column":65},"end":{"line":409,"column":66}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":", please choose from: 'Number','NonNegative', 'Probability', 'String', 'Boolean'.","start":14341,"end":14424,"loc":{"start":{"line":410,"column":4},"end":{"line":410,"column":87}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14424,"end":14425,"loc":{"start":{"line":410,"column":87},"end":{"line":410,"column":88}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14428,"end":14429,"loc":{"start":{"line":411,"column":2},"end":{"line":411,"column":3}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":14435,"end":14438,"loc":{"start":{"line":413,"column":2},"end":{"line":413,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"message","start":14439,"end":14446,"loc":{"start":{"line":413,"column":6},"end":{"line":413,"column":13}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":14447,"end":14448,"loc":{"start":{"line":413,"column":14},"end":{"line":413,"column":15}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Parameter ","start":14450,"end":14462,"loc":{"start":{"line":413,"column":17},"end":{"line":413,"column":29}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":14463,"end":14464,"loc":{"start":{"line":413,"column":30},"end":{"line":413,"column":31}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":14465,"end":14469,"loc":{"start":{"line":413,"column":32},"end":{"line":413,"column":36}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":14470,"end":14471,"loc":{"start":{"line":413,"column":37},"end":{"line":413,"column":38}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":" : incorrect type. Expecting values of type ","start":14472,"end":14518,"loc":{"start":{"line":413,"column":39},"end":{"line":413,"column":85}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":14519,"end":14520,"loc":{"start":{"line":413,"column":86},"end":{"line":413,"column":87}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuetype","start":14521,"end":14530,"loc":{"start":{"line":413,"column":88},"end":{"line":413,"column":97}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":14531,"end":14532,"loc":{"start":{"line":413,"column":98},"end":{"line":413,"column":99}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":".","start":14533,"end":14536,"loc":{"start":{"line":413,"column":100},"end":{"line":413,"column":103}}},{"type":"CommentLine","value":" structure determines how the checker is applied.","start":14543,"end":14594,"loc":{"start":{"line":415,"column":2},"end":{"line":415,"column":53}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":14597,"end":14599,"loc":{"start":{"line":416,"column":2},"end":{"line":416,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14599,"end":14600,"loc":{"start":{"line":416,"column":4},"end":{"line":416,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"structure","start":14601,"end":14610,"loc":{"start":{"line":416,"column":6},"end":{"line":416,"column":15}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":14611,"end":14613,"loc":{"start":{"line":416,"column":16},"end":{"line":416,"column":18}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"SingleValue","start":14614,"end":14627,"loc":{"start":{"line":416,"column":19},"end":{"line":416,"column":32}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14628,"end":14629,"loc":{"start":{"line":416,"column":33},"end":{"line":416,"column":34}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14629,"end":14630,"loc":{"start":{"line":416,"column":34},"end":{"line":416,"column":35}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":14634,"end":14636,"loc":{"start":{"line":417,"column":3},"end":{"line":417,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14636,"end":14637,"loc":{"start":{"line":417,"column":5},"end":{"line":417,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":14638,"end":14639,"loc":{"start":{"line":417,"column":7},"end":{"line":417,"column":8}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":14640,"end":14642,"loc":{"start":{"line":417,"column":9},"end":{"line":417,"column":11}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"undefined","start":14643,"end":14654,"loc":{"start":{"line":417,"column":12},"end":{"line":417,"column":23}}},{"type":{"label":"||","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":1,"updateContext":null},"value":"||","start":14655,"end":14657,"loc":{"start":{"line":417,"column":24},"end":{"line":417,"column":26}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":14658,"end":14659,"loc":{"start":{"line":417,"column":27},"end":{"line":417,"column":28}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuechecker","start":14659,"end":14671,"loc":{"start":{"line":417,"column":28},"end":{"line":417,"column":40}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14671,"end":14672,"loc":{"start":{"line":417,"column":40},"end":{"line":417,"column":41}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":14673,"end":14674,"loc":{"start":{"line":417,"column":42},"end":{"line":417,"column":43}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":14674,"end":14675,"loc":{"start":{"line":417,"column":43},"end":{"line":417,"column":44}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"values","start":14676,"end":14682,"loc":{"start":{"line":417,"column":45},"end":{"line":417,"column":51}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14683,"end":14684,"loc":{"start":{"line":417,"column":52},"end":{"line":417,"column":53}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14685,"end":14686,"loc":{"start":{"line":417,"column":54},"end":{"line":417,"column":55}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14686,"end":14687,"loc":{"start":{"line":417,"column":55},"end":{"line":417,"column":56}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":14688,"end":14693,"loc":{"start":{"line":417,"column":57},"end":{"line":417,"column":62}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14693,"end":14694,"loc":{"start":{"line":417,"column":62},"end":{"line":417,"column":63}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"message","start":14694,"end":14701,"loc":{"start":{"line":417,"column":63},"end":{"line":417,"column":70}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14701,"end":14702,"loc":{"start":{"line":417,"column":70},"end":{"line":417,"column":71}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14703,"end":14704,"loc":{"start":{"line":417,"column":72},"end":{"line":417,"column":73}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14707,"end":14708,"loc":{"start":{"line":418,"column":2},"end":{"line":418,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":14709,"end":14713,"loc":{"start":{"line":418,"column":4},"end":{"line":418,"column":8}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":14714,"end":14716,"loc":{"start":{"line":418,"column":9},"end":{"line":418,"column":11}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14717,"end":14718,"loc":{"start":{"line":418,"column":12},"end":{"line":418,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"structure","start":14719,"end":14728,"loc":{"start":{"line":418,"column":14},"end":{"line":418,"column":23}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":14729,"end":14731,"loc":{"start":{"line":418,"column":24},"end":{"line":418,"column":26}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"KindArray","start":14732,"end":14743,"loc":{"start":{"line":418,"column":27},"end":{"line":418,"column":38}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14744,"end":14745,"loc":{"start":{"line":418,"column":39},"end":{"line":418,"column":40}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14745,"end":14746,"loc":{"start":{"line":418,"column":40},"end":{"line":418,"column":41}}},{"type":{"label":"for","keyword":"for","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":true,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"for","start":14750,"end":14753,"loc":{"start":{"line":419,"column":3},"end":{"line":419,"column":6}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14753,"end":14754,"loc":{"start":{"line":419,"column":6},"end":{"line":419,"column":7}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":14755,"end":14758,"loc":{"start":{"line":419,"column":8},"end":{"line":419,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":14759,"end":14760,"loc":{"start":{"line":419,"column":12},"end":{"line":419,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"of","start":14761,"end":14763,"loc":{"start":{"line":419,"column":14},"end":{"line":419,"column":16}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":14764,"end":14765,"loc":{"start":{"line":419,"column":17},"end":{"line":419,"column":18}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14766,"end":14767,"loc":{"start":{"line":419,"column":19},"end":{"line":419,"column":20}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14767,"end":14768,"loc":{"start":{"line":419,"column":20},"end":{"line":419,"column":21}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":14773,"end":14775,"loc":{"start":{"line":420,"column":4},"end":{"line":420,"column":6}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14775,"end":14776,"loc":{"start":{"line":420,"column":6},"end":{"line":420,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":14777,"end":14778,"loc":{"start":{"line":420,"column":8},"end":{"line":420,"column":9}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":14779,"end":14781,"loc":{"start":{"line":420,"column":10},"end":{"line":420,"column":12}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"undefined","start":14782,"end":14793,"loc":{"start":{"line":420,"column":13},"end":{"line":420,"column":24}}},{"type":{"label":"||","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":1,"updateContext":null},"value":"||","start":14794,"end":14796,"loc":{"start":{"line":420,"column":25},"end":{"line":420,"column":27}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":14797,"end":14798,"loc":{"start":{"line":420,"column":28},"end":{"line":420,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuechecker","start":14798,"end":14810,"loc":{"start":{"line":420,"column":29},"end":{"line":420,"column":41}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14810,"end":14811,"loc":{"start":{"line":420,"column":41},"end":{"line":420,"column":42}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":14812,"end":14813,"loc":{"start":{"line":420,"column":43},"end":{"line":420,"column":44}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":14813,"end":14814,"loc":{"start":{"line":420,"column":44},"end":{"line":420,"column":45}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"values","start":14815,"end":14821,"loc":{"start":{"line":420,"column":46},"end":{"line":420,"column":52}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14822,"end":14823,"loc":{"start":{"line":420,"column":53},"end":{"line":420,"column":54}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14824,"end":14825,"loc":{"start":{"line":420,"column":55},"end":{"line":420,"column":56}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14825,"end":14826,"loc":{"start":{"line":420,"column":56},"end":{"line":420,"column":57}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":14827,"end":14832,"loc":{"start":{"line":420,"column":58},"end":{"line":420,"column":63}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14832,"end":14833,"loc":{"start":{"line":420,"column":63},"end":{"line":420,"column":64}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"message","start":14833,"end":14840,"loc":{"start":{"line":420,"column":64},"end":{"line":420,"column":71}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14840,"end":14841,"loc":{"start":{"line":420,"column":71},"end":{"line":420,"column":72}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14842,"end":14843,"loc":{"start":{"line":420,"column":73},"end":{"line":420,"column":74}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14847,"end":14848,"loc":{"start":{"line":421,"column":3},"end":{"line":421,"column":4}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14851,"end":14852,"loc":{"start":{"line":422,"column":2},"end":{"line":422,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":14853,"end":14857,"loc":{"start":{"line":422,"column":4},"end":{"line":422,"column":8}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":14858,"end":14860,"loc":{"start":{"line":422,"column":9},"end":{"line":422,"column":11}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14861,"end":14862,"loc":{"start":{"line":422,"column":12},"end":{"line":422,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"structure","start":14863,"end":14872,"loc":{"start":{"line":422,"column":14},"end":{"line":422,"column":23}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":14873,"end":14875,"loc":{"start":{"line":422,"column":24},"end":{"line":422,"column":26}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"KindMatrix","start":14876,"end":14888,"loc":{"start":{"line":422,"column":27},"end":{"line":422,"column":39}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14889,"end":14890,"loc":{"start":{"line":422,"column":40},"end":{"line":422,"column":41}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14890,"end":14891,"loc":{"start":{"line":422,"column":41},"end":{"line":422,"column":42}}},{"type":{"label":"for","keyword":"for","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":true,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"for","start":14895,"end":14898,"loc":{"start":{"line":423,"column":3},"end":{"line":423,"column":6}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14898,"end":14899,"loc":{"start":{"line":423,"column":6},"end":{"line":423,"column":7}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":14900,"end":14903,"loc":{"start":{"line":423,"column":8},"end":{"line":423,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":14904,"end":14905,"loc":{"start":{"line":423,"column":12},"end":{"line":423,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"of","start":14906,"end":14908,"loc":{"start":{"line":423,"column":14},"end":{"line":423,"column":16}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":14909,"end":14910,"loc":{"start":{"line":423,"column":17},"end":{"line":423,"column":18}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14911,"end":14912,"loc":{"start":{"line":423,"column":19},"end":{"line":423,"column":20}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14912,"end":14913,"loc":{"start":{"line":423,"column":20},"end":{"line":423,"column":21}}},{"type":{"label":"for","keyword":"for","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":true,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"for","start":14918,"end":14921,"loc":{"start":{"line":424,"column":4},"end":{"line":424,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14921,"end":14922,"loc":{"start":{"line":424,"column":7},"end":{"line":424,"column":8}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":14923,"end":14926,"loc":{"start":{"line":424,"column":9},"end":{"line":424,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"j","start":14927,"end":14928,"loc":{"start":{"line":424,"column":13},"end":{"line":424,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"of","start":14929,"end":14931,"loc":{"start":{"line":424,"column":15},"end":{"line":424,"column":17}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":14932,"end":14933,"loc":{"start":{"line":424,"column":18},"end":{"line":424,"column":19}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14934,"end":14935,"loc":{"start":{"line":424,"column":20},"end":{"line":424,"column":21}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14935,"end":14936,"loc":{"start":{"line":424,"column":21},"end":{"line":424,"column":22}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":14942,"end":14944,"loc":{"start":{"line":425,"column":5},"end":{"line":425,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14944,"end":14945,"loc":{"start":{"line":425,"column":7},"end":{"line":425,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"j","start":14946,"end":14947,"loc":{"start":{"line":425,"column":9},"end":{"line":425,"column":10}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"==","start":14948,"end":14950,"loc":{"start":{"line":425,"column":11},"end":{"line":425,"column":13}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"undefined","start":14951,"end":14962,"loc":{"start":{"line":425,"column":14},"end":{"line":425,"column":25}}},{"type":{"label":"||","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":1,"updateContext":null},"value":"||","start":14963,"end":14965,"loc":{"start":{"line":425,"column":26},"end":{"line":425,"column":28}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":14966,"end":14967,"loc":{"start":{"line":425,"column":29},"end":{"line":425,"column":30}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuechecker","start":14967,"end":14979,"loc":{"start":{"line":425,"column":30},"end":{"line":425,"column":42}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14979,"end":14980,"loc":{"start":{"line":425,"column":42},"end":{"line":425,"column":43}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"j","start":14981,"end":14982,"loc":{"start":{"line":425,"column":44},"end":{"line":425,"column":45}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":14982,"end":14983,"loc":{"start":{"line":425,"column":45},"end":{"line":425,"column":46}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"values","start":14984,"end":14990,"loc":{"start":{"line":425,"column":47},"end":{"line":425,"column":53}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14991,"end":14992,"loc":{"start":{"line":425,"column":54},"end":{"line":425,"column":55}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14993,"end":14994,"loc":{"start":{"line":425,"column":56},"end":{"line":425,"column":57}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14994,"end":14995,"loc":{"start":{"line":425,"column":57},"end":{"line":425,"column":58}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":14996,"end":15001,"loc":{"start":{"line":425,"column":59},"end":{"line":425,"column":64}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15001,"end":15002,"loc":{"start":{"line":425,"column":64},"end":{"line":425,"column":65}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"message","start":15002,"end":15009,"loc":{"start":{"line":425,"column":65},"end":{"line":425,"column":72}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15009,"end":15010,"loc":{"start":{"line":425,"column":72},"end":{"line":425,"column":73}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15011,"end":15012,"loc":{"start":{"line":425,"column":74},"end":{"line":425,"column":75}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15017,"end":15018,"loc":{"start":{"line":426,"column":4},"end":{"line":426,"column":5}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15022,"end":15023,"loc":{"start":{"line":427,"column":3},"end":{"line":427,"column":4}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15026,"end":15027,"loc":{"start":{"line":428,"column":2},"end":{"line":428,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":15028,"end":15032,"loc":{"start":{"line":428,"column":4},"end":{"line":428,"column":8}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15033,"end":15034,"loc":{"start":{"line":428,"column":9},"end":{"line":428,"column":10}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":15038,"end":15043,"loc":{"start":{"line":429,"column":3},"end":{"line":429,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15043,"end":15044,"loc":{"start":{"line":429,"column":8},"end":{"line":429,"column":9}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Unknown structure ","start":15044,"end":15064,"loc":{"start":{"line":429,"column":9},"end":{"line":429,"column":29}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":15065,"end":15066,"loc":{"start":{"line":429,"column":30},"end":{"line":429,"column":31}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"structure","start":15067,"end":15076,"loc":{"start":{"line":429,"column":32},"end":{"line":429,"column":41}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":15077,"end":15078,"loc":{"start":{"line":429,"column":42},"end":{"line":429,"column":43}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":", please choose 'SingleValue', 'KindArray', or 'KindMatrix'.","start":15079,"end":15141,"loc":{"start":{"line":429,"column":44},"end":{"line":429,"column":106}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15141,"end":15142,"loc":{"start":{"line":429,"column":106},"end":{"line":429,"column":107}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15145,"end":15146,"loc":{"start":{"line":430,"column":2},"end":{"line":430,"column":3}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15148,"end":15149,"loc":{"start":{"line":431,"column":1},"end":{"line":431,"column":2}}},{"type":"CommentBlock","value":"* Check if a parameter exists and is defined, has the right structure, and if all \n\tits elements are of the correct type. Throw an error if any of these do not hold.\n\t@param {string} name - parameter name used for any error messages.\n\t@param {string} structure - parameter structure, which must be one of \n\t\"{@link SingleValue}\", \"{@link KindArray}\", or \"{@link KindMatrix}\".\n\t@param {string} valuetype - type of value, which must be one of \n\t\"Number\", \"NonNegative\", \"Probability\", \"String\", or \"Boolean\". \n\t@param {string[]} [values =[]] - predefined specific options for the value. \n\tIf left empty, this is ignored.\n\t\n\t@example\n\t* // from inside the confChecker() function of your constraint:\n\t* let checker = new ParameterChecker( this.conf, this.C )\n\t* \n\t* checker.confCheckParameter( \"MY_PARAMETER\", \"KindMatrix\", \"Number\" ) // see Adhesion\n\t* checker.confCheckParameter( \"MY_PARAMETER_2\", \"KindArray\", \"NonNegative\" )\n\t","start":15153,"end":16083,"loc":{"start":{"line":433,"column":1},"end":{"line":449,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckParameter","start":16085,"end":16103,"loc":{"start":{"line":450,"column":1},"end":{"line":450,"column":19}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16103,"end":16104,"loc":{"start":{"line":450,"column":19},"end":{"line":450,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":16105,"end":16109,"loc":{"start":{"line":450,"column":21},"end":{"line":450,"column":25}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16109,"end":16110,"loc":{"start":{"line":450,"column":25},"end":{"line":450,"column":26}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"structure","start":16111,"end":16120,"loc":{"start":{"line":450,"column":27},"end":{"line":450,"column":36}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16120,"end":16121,"loc":{"start":{"line":450,"column":36},"end":{"line":450,"column":37}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuetype","start":16122,"end":16131,"loc":{"start":{"line":450,"column":38},"end":{"line":450,"column":47}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16131,"end":16132,"loc":{"start":{"line":450,"column":47},"end":{"line":450,"column":48}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"values","start":16133,"end":16139,"loc":{"start":{"line":450,"column":49},"end":{"line":450,"column":55}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":16140,"end":16141,"loc":{"start":{"line":450,"column":56},"end":{"line":450,"column":57}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16142,"end":16143,"loc":{"start":{"line":450,"column":58},"end":{"line":450,"column":59}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16143,"end":16144,"loc":{"start":{"line":450,"column":59},"end":{"line":450,"column":60}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16145,"end":16146,"loc":{"start":{"line":450,"column":61},"end":{"line":450,"column":62}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16146,"end":16147,"loc":{"start":{"line":450,"column":62},"end":{"line":450,"column":63}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":16150,"end":16154,"loc":{"start":{"line":451,"column":2},"end":{"line":451,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16154,"end":16155,"loc":{"start":{"line":451,"column":6},"end":{"line":451,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckPresenceOf","start":16155,"end":16174,"loc":{"start":{"line":451,"column":7},"end":{"line":451,"column":26}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16174,"end":16175,"loc":{"start":{"line":451,"column":26},"end":{"line":451,"column":27}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":16176,"end":16180,"loc":{"start":{"line":451,"column":28},"end":{"line":451,"column":32}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16181,"end":16182,"loc":{"start":{"line":451,"column":33},"end":{"line":451,"column":34}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":16185,"end":16188,"loc":{"start":{"line":452,"column":2},"end":{"line":452,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":16189,"end":16190,"loc":{"start":{"line":452,"column":6},"end":{"line":452,"column":7}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":16191,"end":16192,"loc":{"start":{"line":452,"column":8},"end":{"line":452,"column":9}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":16193,"end":16197,"loc":{"start":{"line":452,"column":10},"end":{"line":452,"column":14}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16197,"end":16198,"loc":{"start":{"line":452,"column":14},"end":{"line":452,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"conf","start":16198,"end":16202,"loc":{"start":{"line":452,"column":15},"end":{"line":452,"column":19}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16202,"end":16203,"loc":{"start":{"line":452,"column":19},"end":{"line":452,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":16203,"end":16207,"loc":{"start":{"line":452,"column":20},"end":{"line":452,"column":24}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16207,"end":16208,"loc":{"start":{"line":452,"column":24},"end":{"line":452,"column":25}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":16211,"end":16215,"loc":{"start":{"line":453,"column":2},"end":{"line":453,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16215,"end":16216,"loc":{"start":{"line":453,"column":6},"end":{"line":453,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckStructure","start":16216,"end":16234,"loc":{"start":{"line":453,"column":7},"end":{"line":453,"column":25}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16234,"end":16235,"loc":{"start":{"line":453,"column":25},"end":{"line":453,"column":26}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":16236,"end":16237,"loc":{"start":{"line":453,"column":27},"end":{"line":453,"column":28}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16237,"end":16238,"loc":{"start":{"line":453,"column":28},"end":{"line":453,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":16239,"end":16243,"loc":{"start":{"line":453,"column":30},"end":{"line":453,"column":34}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16243,"end":16244,"loc":{"start":{"line":453,"column":34},"end":{"line":453,"column":35}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"structure","start":16245,"end":16254,"loc":{"start":{"line":453,"column":36},"end":{"line":453,"column":45}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16255,"end":16256,"loc":{"start":{"line":453,"column":46},"end":{"line":453,"column":47}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":16259,"end":16263,"loc":{"start":{"line":454,"column":2},"end":{"line":454,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16263,"end":16264,"loc":{"start":{"line":454,"column":6},"end":{"line":454,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"confCheckValueType","start":16264,"end":16282,"loc":{"start":{"line":454,"column":7},"end":{"line":454,"column":25}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16282,"end":16283,"loc":{"start":{"line":454,"column":25},"end":{"line":454,"column":26}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":16284,"end":16285,"loc":{"start":{"line":454,"column":27},"end":{"line":454,"column":28}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16285,"end":16286,"loc":{"start":{"line":454,"column":28},"end":{"line":454,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"name","start":16287,"end":16291,"loc":{"start":{"line":454,"column":30},"end":{"line":454,"column":34}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16291,"end":16292,"loc":{"start":{"line":454,"column":34},"end":{"line":454,"column":35}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"structure","start":16293,"end":16302,"loc":{"start":{"line":454,"column":36},"end":{"line":454,"column":45}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16302,"end":16303,"loc":{"start":{"line":454,"column":45},"end":{"line":454,"column":46}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"valuetype","start":16304,"end":16313,"loc":{"start":{"line":454,"column":47},"end":{"line":454,"column":56}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16313,"end":16314,"loc":{"start":{"line":454,"column":56},"end":{"line":454,"column":57}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"values","start":16315,"end":16321,"loc":{"start":{"line":454,"column":58},"end":{"line":454,"column":64}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16322,"end":16323,"loc":{"start":{"line":454,"column":65},"end":{"line":454,"column":66}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16325,"end":16326,"loc":{"start":{"line":455,"column":1},"end":{"line":455,"column":2}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16331,"end":16332,"loc":{"start":{"line":458,"column":0},"end":{"line":458,"column":1}}},{"type":{"label":"export","keyword":"export","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"export","start":16334,"end":16340,"loc":{"start":{"line":460,"column":0},"end":{"line":460,"column":6}}},{"type":{"label":"default","keyword":"default","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"default","start":16341,"end":16348,"loc":{"start":{"line":460,"column":7},"end":{"line":460,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"ParameterChecker","start":16349,"end":16365,"loc":{"start":{"line":460,"column":15},"end":{"line":460,"column":31}}},{"type":{"label":"eof","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16365,"end":16365,"loc":{"start":{"line":460,"column":31},"end":{"line":460,"column":31}}}]}