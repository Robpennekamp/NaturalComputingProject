{"type":"File","start":0,"end":19012,"loc":{"start":{"line":1,"column":0},"end":{"line":507,"column":0}},"program":{"type":"Program","start":0,"end":19012,"loc":{"start":{"line":1,"column":0},"end":{"line":507,"column":0}},"sourceType":"module","body":[{"type":"Identifier","start":399,"end":18990,"loc":{"start":{"line":7,"column":0},"end":{"line":504,"column":1}},"id":{"type":"Identifier","start":405,"end":409,"loc":{"start":{"line":7,"column":6},"end":{"line":7,"column":10},"identifierName":"Grid"},"name":"Grid","leadingComments":null},"superClass":null,"body":{"type":"ClassBody","start":410,"end":18990,"loc":{"start":{"line":7,"column":11},"end":{"line":504,"column":1}},"body":[{"type":"ClassMethod","start":1037,"end":3305,"loc":{"start":{"line":19,"column":1},"end":{"line":81,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":1037,"end":1048,"loc":{"start":{"line":19,"column":1},"end":{"line":19,"column":12},"identifierName":"constructor"},"name":"constructor","leadingComments":null},"kind":"constructor","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":1050,"end":1060,"loc":{"start":{"line":19,"column":14},"end":{"line":19,"column":24},"identifierName":"field_size"},"name":"field_size"},{"type":"Identifier","start":1062,"end":1067,"loc":{"start":{"line":19,"column":26},"end":{"line":19,"column":31},"identifierName":"torus"},"name":"torus"}],"body":{"type":"BlockStatement","start":1069,"end":3305,"loc":{"start":{"line":19,"column":33},"end":{"line":81,"column":2}},"body":[{"type":"ExpressionStatement","start":1075,"end":1094,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":21}},"expression":{"type":"AssignmentExpression","start":1075,"end":1094,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":21}},"operator":"=","left":{"type":"Identifier","start":1075,"end":1080,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":7},"identifierName":"torus"},"name":"torus"},"right":{"type":"LogicalExpression","start":1083,"end":1094,"loc":{"start":{"line":21,"column":10},"end":{"line":21,"column":21}},"left":{"type":"Identifier","start":1083,"end":1088,"loc":{"start":{"line":21,"column":10},"end":{"line":21,"column":15},"identifierName":"torus"},"name":"torus"},"operator":"||","right":{"type":"ArrayExpression","start":1092,"end":1094,"loc":{"start":{"line":21,"column":19},"end":{"line":21,"column":21}},"elements":[],"leadingComments":null,"trailingComments":null},"trailingComments":null},"trailingComments":null},"trailingComments":[{"type":"CommentBlock","value":"* field_size array of field size in each dimension. E.g. [100,200]\n\t\t * for a grid that is 100 pixels wide and 200 pixels high. Entries must\n\t\t * be positive integer numbers.\n\t\t * @type {GridSize}","start":1099,"end":1299,"loc":{"start":{"line":23,"column":2},"end":{"line":26,"column":23}}}]},{"type":"ExpressionStatement","start":1302,"end":1327,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":27}},"expression":{"type":"AssignmentExpression","start":1302,"end":1327,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":27}},"operator":"=","left":{"type":"MemberExpression","start":1302,"end":1314,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":14}},"object":{"type":"ThisExpression","start":1302,"end":1306,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":1307,"end":1314,"loc":{"start":{"line":27,"column":7},"end":{"line":27,"column":14},"identifierName":"extents"},"name":"extents"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":1317,"end":1327,"loc":{"start":{"line":27,"column":17},"end":{"line":27,"column":27},"identifierName":"field_size"},"name":"field_size","leadingComments":null,"trailingComments":null},"leadingComments":null,"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* field_size array of field size in each dimension. E.g. [100,200]\n\t\t * for a grid that is 100 pixels wide and 200 pixels high. Entries must\n\t\t * be positive integer numbers.\n\t\t * @type {GridSize}","start":1099,"end":1299,"loc":{"start":{"line":23,"column":2},"end":{"line":26,"column":23}}}],"trailingComments":[{"type":"CommentBlock","value":"* Number of dimensions of the grid.\n\t\t * @type {number}","start":1333,"end":1392,"loc":{"start":{"line":29,"column":2},"end":{"line":30,"column":21}}}]},{"type":"ExpressionStatement","start":1395,"end":1426,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":33}},"expression":{"type":"AssignmentExpression","start":1395,"end":1426,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":33}},"operator":"=","left":{"type":"MemberExpression","start":1395,"end":1404,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":11}},"object":{"type":"ThisExpression","start":1395,"end":1399,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":1400,"end":1404,"loc":{"start":{"line":31,"column":7},"end":{"line":31,"column":11},"identifierName":"ndim"},"name":"ndim"},"computed":false,"leadingComments":null},"right":{"type":"MemberExpression","start":1407,"end":1426,"loc":{"start":{"line":31,"column":14},"end":{"line":31,"column":33}},"object":{"type":"MemberExpression","start":1407,"end":1419,"loc":{"start":{"line":31,"column":14},"end":{"line":31,"column":26}},"object":{"type":"ThisExpression","start":1407,"end":1411,"loc":{"start":{"line":31,"column":14},"end":{"line":31,"column":18}}},"property":{"type":"Identifier","start":1412,"end":1419,"loc":{"start":{"line":31,"column":19},"end":{"line":31,"column":26},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":1420,"end":1426,"loc":{"start":{"line":31,"column":27},"end":{"line":31,"column":33},"identifierName":"length"},"name":"length"},"computed":false},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Number of dimensions of the grid.\n\t\t * @type {number}","start":1333,"end":1392,"loc":{"start":{"line":29,"column":2},"end":{"line":30,"column":21}}}]},{"type":"IfStatement","start":1435,"end":1661,"loc":{"start":{"line":34,"column":2},"end":{"line":41,"column":3}},"test":{"type":"BinaryExpression","start":1439,"end":1457,"loc":{"start":{"line":34,"column":6},"end":{"line":34,"column":24}},"left":{"type":"MemberExpression","start":1439,"end":1451,"loc":{"start":{"line":34,"column":6},"end":{"line":34,"column":18}},"object":{"type":"Identifier","start":1439,"end":1444,"loc":{"start":{"line":34,"column":6},"end":{"line":34,"column":11},"identifierName":"torus"},"name":"torus"},"property":{"type":"Identifier","start":1445,"end":1451,"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":18},"identifierName":"length"},"name":"length"},"computed":false},"operator":"===","right":{"type":"NumericLiteral","start":1456,"end":1457,"loc":{"start":{"line":34,"column":23},"end":{"line":34,"column":24}},"extra":{"rawValue":0,"raw":"0"},"value":0}},"consequent":{"type":"BlockStatement","start":1459,"end":1533,"loc":{"start":{"line":34,"column":26},"end":{"line":38,"column":3}},"body":[{"type":"ForStatement","start":1464,"end":1529,"loc":{"start":{"line":35,"column":3},"end":{"line":37,"column":4}},"init":{"type":"VariableDeclaration","start":1469,"end":1478,"loc":{"start":{"line":35,"column":8},"end":{"line":35,"column":17}},"declarations":[{"type":"VariableDeclarator","start":1473,"end":1478,"loc":{"start":{"line":35,"column":12},"end":{"line":35,"column":17}},"id":{"type":"Identifier","start":1473,"end":1474,"loc":{"start":{"line":35,"column":12},"end":{"line":35,"column":13},"identifierName":"d"},"name":"d"},"init":{"type":"NumericLiteral","start":1477,"end":1478,"loc":{"start":{"line":35,"column":16},"end":{"line":35,"column":17}},"extra":{"rawValue":0,"raw":"0"},"value":0}}],"kind":"let"},"test":{"type":"BinaryExpression","start":1480,"end":1493,"loc":{"start":{"line":35,"column":19},"end":{"line":35,"column":32}},"left":{"type":"Identifier","start":1480,"end":1481,"loc":{"start":{"line":35,"column":19},"end":{"line":35,"column":20},"identifierName":"d"},"name":"d"},"operator":"<","right":{"type":"MemberExpression","start":1484,"end":1493,"loc":{"start":{"line":35,"column":23},"end":{"line":35,"column":32}},"object":{"type":"ThisExpression","start":1484,"end":1488,"loc":{"start":{"line":35,"column":23},"end":{"line":35,"column":27}}},"property":{"type":"Identifier","start":1489,"end":1493,"loc":{"start":{"line":35,"column":28},"end":{"line":35,"column":32},"identifierName":"ndim"},"name":"ndim"},"computed":false}},"update":{"type":"UpdateExpression","start":1495,"end":1498,"loc":{"start":{"line":35,"column":34},"end":{"line":35,"column":37}},"operator":"++","prefix":false,"argument":{"type":"Identifier","start":1495,"end":1496,"loc":{"start":{"line":35,"column":34},"end":{"line":35,"column":35},"identifierName":"d"},"name":"d"}},"body":{"type":"BlockStatement","start":1500,"end":1529,"loc":{"start":{"line":35,"column":39},"end":{"line":37,"column":4}},"body":[{"type":"ExpressionStatement","start":1506,"end":1524,"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":22}},"expression":{"type":"CallExpression","start":1506,"end":1524,"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":22}},"callee":{"type":"MemberExpression","start":1506,"end":1516,"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":14}},"object":{"type":"Identifier","start":1506,"end":1511,"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":9},"identifierName":"torus"},"name":"torus"},"property":{"type":"Identifier","start":1512,"end":1516,"loc":{"start":{"line":36,"column":10},"end":{"line":36,"column":14},"identifierName":"push"},"name":"push"},"computed":false},"arguments":[{"type":"BooleanLiteral","start":1518,"end":1522,"loc":{"start":{"line":36,"column":16},"end":{"line":36,"column":20}},"value":true}]}}],"directives":[]}}],"directives":[]},"alternate":{"type":"IfStatement","start":1539,"end":1661,"loc":{"start":{"line":38,"column":9},"end":{"line":41,"column":3}},"test":{"type":"BinaryExpression","start":1544,"end":1570,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":40}},"left":{"type":"MemberExpression","start":1544,"end":1556,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":26}},"object":{"type":"Identifier","start":1544,"end":1549,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":19},"identifierName":"torus"},"name":"torus"},"property":{"type":"Identifier","start":1550,"end":1556,"loc":{"start":{"line":38,"column":20},"end":{"line":38,"column":26},"identifierName":"length"},"name":"length"},"computed":false},"operator":"!==","right":{"type":"MemberExpression","start":1561,"end":1570,"loc":{"start":{"line":38,"column":31},"end":{"line":38,"column":40}},"object":{"type":"ThisExpression","start":1561,"end":1565,"loc":{"start":{"line":38,"column":31},"end":{"line":38,"column":35}}},"property":{"type":"Identifier","start":1566,"end":1570,"loc":{"start":{"line":38,"column":36},"end":{"line":38,"column":40},"identifierName":"ndim"},"name":"ndim"},"computed":false}},"consequent":{"type":"BlockStatement","start":1572,"end":1661,"loc":{"start":{"line":38,"column":42},"end":{"line":41,"column":3}},"body":[{"type":"ThrowStatement","start":1577,"end":1657,"loc":{"start":{"line":39,"column":3},"end":{"line":40,"column":15}},"argument":{"type":"BinaryExpression","start":1584,"end":1655,"loc":{"start":{"line":39,"column":10},"end":{"line":40,"column":13}},"left":{"type":"StringLiteral","start":1584,"end":1639,"loc":{"start":{"line":39,"column":10},"end":{"line":39,"column":65}},"extra":{"rawValue":"Torus should be specified for each dimension, or not ","raw":"\"Torus should be specified for each dimension, or not \""},"value":"Torus should be specified for each dimension, or not "},"operator":"+","right":{"type":"StringLiteral","start":1646,"end":1655,"loc":{"start":{"line":40,"column":4},"end":{"line":40,"column":13}},"extra":{"rawValue":"at all!","raw":"\"at all!\""},"value":"at all!"},"extra":{"parenthesized":true,"parenStart":1582}}}],"directives":[],"trailingComments":null},"alternate":null,"trailingComments":null},"trailingComments":[{"type":"CommentBlock","value":"* Should the borders of the grid be linked, so that a cell moving\n\t\t * out on the left reappears on the right? Warning: setting to false\n\t\t * can give artifacts if done incorrectly. If torus is set to false,\n\t\t * artifacts arise because\n\t\t * cells at the border have fewer neighbors. Cells will then stick to\n\t\t * the grid borders where they have fewer neighbors to get adhesion and/or\n\t\t * perimeter penalties from. You will need to specify how to handle the\n\t\t * borders explicitly; see the examples/ folder for details on how to\n\t\t * do this.\n\t\t * Torus can be specified for\n\t\t * each dimension separately.\n\t\t * @type {boolean[]}","start":1664,"end":2300,"loc":{"start":{"line":42,"column":2},"end":{"line":53,"column":24}}}]},{"type":"ExpressionStatement","start":2303,"end":2321,"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":20}},"expression":{"type":"AssignmentExpression","start":2303,"end":2321,"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":20}},"operator":"=","left":{"type":"MemberExpression","start":2303,"end":2313,"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":12}},"object":{"type":"ThisExpression","start":2303,"end":2307,"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":2308,"end":2313,"loc":{"start":{"line":54,"column":7},"end":{"line":54,"column":12},"identifierName":"torus"},"name":"torus"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":2316,"end":2321,"loc":{"start":{"line":54,"column":15},"end":{"line":54,"column":20},"identifierName":"torus"},"name":"torus","leadingComments":null,"trailingComments":null},"leadingComments":null,"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Should the borders of the grid be linked, so that a cell moving\n\t\t * out on the left reappears on the right? Warning: setting to false\n\t\t * can give artifacts if done incorrectly. If torus is set to false,\n\t\t * artifacts arise because\n\t\t * cells at the border have fewer neighbors. Cells will then stick to\n\t\t * the grid borders where they have fewer neighbors to get adhesion and/or\n\t\t * perimeter penalties from. You will need to specify how to handle the\n\t\t * borders explicitly; see the examples/ folder for details on how to\n\t\t * do this.\n\t\t * Torus can be specified for\n\t\t * each dimension separately.\n\t\t * @type {boolean[]}","start":1664,"end":2300,"loc":{"start":{"line":42,"column":2},"end":{"line":53,"column":24}}}],"trailingComments":[{"type":"CommentBlock","value":"* Array with values for each pixel stored at the position of its\n\t\t * \t{@link IndexCoordinate}. E.g. the value of pixel with coordinate\n\t\t * \ti is stored as this._pixels[i]. This should be implemented in\n\t\t * \tthe grid subclass; see e.g. {@link Grid2D#_pixelArray}.\n\t\t * \tNote that this array is accessed indirectly via the\n\t\t * {@link _pixels} set- and get methods.\n\t\t * \t@private\n\t\t * \t","start":2325,"end":2717,"loc":{"start":{"line":56,"column":2},"end":{"line":63,"column":8}}}]},{"type":"ExpressionStatement","start":2720,"end":2748,"loc":{"start":{"line":64,"column":2},"end":{"line":64,"column":30}},"expression":{"type":"AssignmentExpression","start":2720,"end":2748,"loc":{"start":{"line":64,"column":2},"end":{"line":64,"column":30}},"operator":"=","left":{"type":"MemberExpression","start":2720,"end":2736,"loc":{"start":{"line":64,"column":2},"end":{"line":64,"column":18}},"object":{"type":"ThisExpression","start":2720,"end":2724,"loc":{"start":{"line":64,"column":2},"end":{"line":64,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":2725,"end":2736,"loc":{"start":{"line":64,"column":7},"end":{"line":64,"column":18},"identifierName":"_pixelArray"},"name":"_pixelArray"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":2739,"end":2748,"loc":{"start":{"line":64,"column":21},"end":{"line":64,"column":30},"identifierName":"undefined"},"name":"undefined"},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Array with values for each pixel stored at the position of its\n\t\t * \t{@link IndexCoordinate}. E.g. the value of pixel with coordinate\n\t\t * \ti is stored as this._pixels[i]. This should be implemented in\n\t\t * \tthe grid subclass; see e.g. {@link Grid2D#_pixelArray}.\n\t\t * \tNote that this array is accessed indirectly via the\n\t\t * {@link _pixels} set- and get methods.\n\t\t * \t@private\n\t\t * \t","start":2325,"end":2717,"loc":{"start":{"line":56,"column":2},"end":{"line":63,"column":8}}}]},{"type":"ExpressionStatement","start":2751,"end":2776,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":27}},"expression":{"type":"AssignmentExpression","start":2751,"end":2776,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":27}},"operator":"=","left":{"type":"MemberExpression","start":2751,"end":2764,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":15}},"object":{"type":"ThisExpression","start":2751,"end":2755,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":6}}},"property":{"type":"Identifier","start":2756,"end":2764,"loc":{"start":{"line":65,"column":7},"end":{"line":65,"column":15},"identifierName":"datatype"},"name":"datatype"},"computed":false},"right":{"type":"Identifier","start":2767,"end":2776,"loc":{"start":{"line":65,"column":18},"end":{"line":65,"column":27},"identifierName":"undefined"},"name":"undefined","leadingComments":null,"trailingComments":null},"trailingComments":null},"trailingComments":[{"type":"CommentBlock","value":" These are used for rapid conversion between array and index\n\t\tcoordinates, but not documented as they should not be used from outside.\n\t\t","start":2782,"end":2924,"loc":{"start":{"line":67,"column":2},"end":{"line":69,"column":4}}},{"type":"CommentBlock","value":"* @ignore ","start":2927,"end":2941,"loc":{"start":{"line":70,"column":2},"end":{"line":70,"column":16}}}]},{"type":"ExpressionStatement","start":2944,"end":3006,"loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":64}},"expression":{"type":"AssignmentExpression","start":2944,"end":3006,"loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":64}},"operator":"=","left":{"type":"MemberExpression","start":2944,"end":2955,"loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":13}},"object":{"type":"ThisExpression","start":2944,"end":2948,"loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":2949,"end":2955,"loc":{"start":{"line":71,"column":7},"end":{"line":71,"column":13},"identifierName":"X_BITS"},"name":"X_BITS"},"computed":false,"leadingComments":null},"right":{"type":"BinaryExpression","start":2958,"end":3006,"loc":{"start":{"line":71,"column":16},"end":{"line":71,"column":64}},"left":{"type":"NumericLiteral","start":2958,"end":2959,"loc":{"start":{"line":71,"column":16},"end":{"line":71,"column":17}},"extra":{"rawValue":1,"raw":"1"},"value":1},"operator":"+","right":{"type":"CallExpression","start":2960,"end":3006,"loc":{"start":{"line":71,"column":18},"end":{"line":71,"column":64}},"callee":{"type":"MemberExpression","start":2960,"end":2970,"loc":{"start":{"line":71,"column":18},"end":{"line":71,"column":28}},"object":{"type":"Identifier","start":2960,"end":2964,"loc":{"start":{"line":71,"column":18},"end":{"line":71,"column":22},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":2965,"end":2970,"loc":{"start":{"line":71,"column":23},"end":{"line":71,"column":28},"identifierName":"floor"},"name":"floor"},"computed":false},"arguments":[{"type":"CallExpression","start":2972,"end":3004,"loc":{"start":{"line":71,"column":30},"end":{"line":71,"column":62}},"callee":{"type":"MemberExpression","start":2972,"end":2981,"loc":{"start":{"line":71,"column":30},"end":{"line":71,"column":39}},"object":{"type":"Identifier","start":2972,"end":2976,"loc":{"start":{"line":71,"column":30},"end":{"line":71,"column":34},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":2977,"end":2981,"loc":{"start":{"line":71,"column":35},"end":{"line":71,"column":39},"identifierName":"log2"},"name":"log2"},"computed":false},"arguments":[{"type":"BinaryExpression","start":2983,"end":3002,"loc":{"start":{"line":71,"column":41},"end":{"line":71,"column":60}},"left":{"type":"MemberExpression","start":2983,"end":2998,"loc":{"start":{"line":71,"column":41},"end":{"line":71,"column":56}},"object":{"type":"MemberExpression","start":2983,"end":2995,"loc":{"start":{"line":71,"column":41},"end":{"line":71,"column":53}},"object":{"type":"ThisExpression","start":2983,"end":2987,"loc":{"start":{"line":71,"column":41},"end":{"line":71,"column":45}}},"property":{"type":"Identifier","start":2988,"end":2995,"loc":{"start":{"line":71,"column":46},"end":{"line":71,"column":53},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"NumericLiteral","start":2996,"end":2997,"loc":{"start":{"line":71,"column":54},"end":{"line":71,"column":55}},"extra":{"rawValue":0,"raw":"0"},"value":0},"computed":true},"operator":"-","right":{"type":"NumericLiteral","start":3001,"end":3002,"loc":{"start":{"line":71,"column":59},"end":{"line":71,"column":60}},"extra":{"rawValue":1,"raw":"1"},"value":1}}]}],"trailingComments":null},"trailingComments":null},"leadingComments":null,"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":" These are used for rapid conversion between array and index\n\t\tcoordinates, but not documented as they should not be used from outside.\n\t\t","start":2782,"end":2924,"loc":{"start":{"line":67,"column":2},"end":{"line":69,"column":4}}},{"type":"CommentBlock","value":"* @ignore ","start":2927,"end":2941,"loc":{"start":{"line":70,"column":2},"end":{"line":70,"column":16}}}],"trailingComments":[{"type":"CommentBlock","value":"* @ignore ","start":3009,"end":3023,"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":16}}}]},{"type":"ExpressionStatement","start":3026,"end":3088,"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":64}},"expression":{"type":"AssignmentExpression","start":3026,"end":3088,"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":64}},"operator":"=","left":{"type":"MemberExpression","start":3026,"end":3037,"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":13}},"object":{"type":"ThisExpression","start":3026,"end":3030,"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":3031,"end":3037,"loc":{"start":{"line":73,"column":7},"end":{"line":73,"column":13},"identifierName":"Y_BITS"},"name":"Y_BITS"},"computed":false,"leadingComments":null},"right":{"type":"BinaryExpression","start":3040,"end":3088,"loc":{"start":{"line":73,"column":16},"end":{"line":73,"column":64}},"left":{"type":"NumericLiteral","start":3040,"end":3041,"loc":{"start":{"line":73,"column":16},"end":{"line":73,"column":17}},"extra":{"rawValue":1,"raw":"1"},"value":1},"operator":"+","right":{"type":"CallExpression","start":3042,"end":3088,"loc":{"start":{"line":73,"column":18},"end":{"line":73,"column":64}},"callee":{"type":"MemberExpression","start":3042,"end":3052,"loc":{"start":{"line":73,"column":18},"end":{"line":73,"column":28}},"object":{"type":"Identifier","start":3042,"end":3046,"loc":{"start":{"line":73,"column":18},"end":{"line":73,"column":22},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":3047,"end":3052,"loc":{"start":{"line":73,"column":23},"end":{"line":73,"column":28},"identifierName":"floor"},"name":"floor"},"computed":false},"arguments":[{"type":"CallExpression","start":3054,"end":3086,"loc":{"start":{"line":73,"column":30},"end":{"line":73,"column":62}},"callee":{"type":"MemberExpression","start":3054,"end":3063,"loc":{"start":{"line":73,"column":30},"end":{"line":73,"column":39}},"object":{"type":"Identifier","start":3054,"end":3058,"loc":{"start":{"line":73,"column":30},"end":{"line":73,"column":34},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":3059,"end":3063,"loc":{"start":{"line":73,"column":35},"end":{"line":73,"column":39},"identifierName":"log2"},"name":"log2"},"computed":false},"arguments":[{"type":"BinaryExpression","start":3065,"end":3084,"loc":{"start":{"line":73,"column":41},"end":{"line":73,"column":60}},"left":{"type":"MemberExpression","start":3065,"end":3080,"loc":{"start":{"line":73,"column":41},"end":{"line":73,"column":56}},"object":{"type":"MemberExpression","start":3065,"end":3077,"loc":{"start":{"line":73,"column":41},"end":{"line":73,"column":53}},"object":{"type":"ThisExpression","start":3065,"end":3069,"loc":{"start":{"line":73,"column":41},"end":{"line":73,"column":45}}},"property":{"type":"Identifier","start":3070,"end":3077,"loc":{"start":{"line":73,"column":46},"end":{"line":73,"column":53},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"NumericLiteral","start":3078,"end":3079,"loc":{"start":{"line":73,"column":54},"end":{"line":73,"column":55}},"extra":{"rawValue":1,"raw":"1"},"value":1},"computed":true},"operator":"-","right":{"type":"NumericLiteral","start":3083,"end":3084,"loc":{"start":{"line":73,"column":59},"end":{"line":73,"column":60}},"extra":{"rawValue":1,"raw":"1"},"value":1}}]}],"trailingComments":null},"trailingComments":null},"leadingComments":null,"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* @ignore ","start":3009,"end":3023,"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":16}}}],"trailingComments":[{"type":"CommentBlock","value":"* @ignore ","start":3091,"end":3105,"loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":16}}}]},{"type":"ExpressionStatement","start":3108,"end":3142,"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":36}},"expression":{"type":"AssignmentExpression","start":3108,"end":3142,"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":36}},"operator":"=","left":{"type":"MemberExpression","start":3108,"end":3119,"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":13}},"object":{"type":"ThisExpression","start":3108,"end":3112,"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":3113,"end":3119,"loc":{"start":{"line":75,"column":7},"end":{"line":75,"column":13},"identifierName":"Y_MASK"},"name":"Y_MASK"},"computed":false,"leadingComments":null},"right":{"type":"BinaryExpression","start":3122,"end":3142,"loc":{"start":{"line":75,"column":16},"end":{"line":75,"column":36}},"left":{"type":"BinaryExpression","start":3123,"end":3139,"loc":{"start":{"line":75,"column":17},"end":{"line":75,"column":33}},"left":{"type":"NumericLiteral","start":3123,"end":3124,"loc":{"start":{"line":75,"column":17},"end":{"line":75,"column":18}},"extra":{"rawValue":1,"raw":"1"},"value":1},"operator":"<<","right":{"type":"MemberExpression","start":3128,"end":3139,"loc":{"start":{"line":75,"column":22},"end":{"line":75,"column":33}},"object":{"type":"ThisExpression","start":3128,"end":3132,"loc":{"start":{"line":75,"column":22},"end":{"line":75,"column":26}}},"property":{"type":"Identifier","start":3133,"end":3139,"loc":{"start":{"line":75,"column":27},"end":{"line":75,"column":33},"identifierName":"Y_BITS"},"name":"Y_BITS"},"computed":false},"extra":{"parenthesized":true,"parenStart":3122}},"operator":"-","right":{"type":"NumericLiteral","start":3141,"end":3142,"loc":{"start":{"line":75,"column":35},"end":{"line":75,"column":36}},"extra":{"rawValue":1,"raw":"1"},"value":1,"leadingComments":null,"trailingComments":null},"trailingComments":null},"leadingComments":null,"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* @ignore ","start":3091,"end":3105,"loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":16}}}],"trailingComments":[{"type":"CommentBlock","value":"* Array coordinates to the middle pixel on the grid.\n\t\t * @type {ArrayCoordinate}\n\t\t * ","start":3148,"end":3239,"loc":{"start":{"line":77,"column":2},"end":{"line":79,"column":7}}}]},{"type":"ExpressionStatement","start":3242,"end":3302,"loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":62}},"expression":{"type":"AssignmentExpression","start":3242,"end":3302,"loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":62}},"operator":"=","left":{"type":"MemberExpression","start":3242,"end":3255,"loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":15}},"object":{"type":"ThisExpression","start":3242,"end":3246,"loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":3247,"end":3255,"loc":{"start":{"line":80,"column":7},"end":{"line":80,"column":15},"identifierName":"midpoint"},"name":"midpoint"},"computed":false,"leadingComments":null},"right":{"type":"CallExpression","start":3258,"end":3302,"loc":{"start":{"line":80,"column":18},"end":{"line":80,"column":62}},"callee":{"type":"MemberExpression","start":3258,"end":3274,"loc":{"start":{"line":80,"column":18},"end":{"line":80,"column":34}},"object":{"type":"MemberExpression","start":3258,"end":3270,"loc":{"start":{"line":80,"column":18},"end":{"line":80,"column":30}},"object":{"type":"ThisExpression","start":3258,"end":3262,"loc":{"start":{"line":80,"column":18},"end":{"line":80,"column":22}}},"property":{"type":"Identifier","start":3263,"end":3270,"loc":{"start":{"line":80,"column":23},"end":{"line":80,"column":30},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":3271,"end":3274,"loc":{"start":{"line":80,"column":31},"end":{"line":80,"column":34},"identifierName":"map"},"name":"map"},"computed":false},"arguments":[{"type":"ArrowFunctionExpression","start":3276,"end":3300,"loc":{"start":{"line":80,"column":36},"end":{"line":80,"column":60}},"id":null,"generator":false,"expression":true,"async":false,"params":[{"type":"Identifier","start":3276,"end":3277,"loc":{"start":{"line":80,"column":36},"end":{"line":80,"column":37},"identifierName":"i"},"name":"i"}],"body":{"type":"CallExpression","start":3281,"end":3300,"loc":{"start":{"line":80,"column":41},"end":{"line":80,"column":60}},"callee":{"type":"MemberExpression","start":3281,"end":3291,"loc":{"start":{"line":80,"column":41},"end":{"line":80,"column":51}},"object":{"type":"Identifier","start":3281,"end":3285,"loc":{"start":{"line":80,"column":41},"end":{"line":80,"column":45},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":3286,"end":3291,"loc":{"start":{"line":80,"column":46},"end":{"line":80,"column":51},"identifierName":"round"},"name":"round"},"computed":false},"arguments":[{"type":"BinaryExpression","start":3292,"end":3299,"loc":{"start":{"line":80,"column":52},"end":{"line":80,"column":59}},"left":{"type":"BinaryExpression","start":3293,"end":3296,"loc":{"start":{"line":80,"column":53},"end":{"line":80,"column":56}},"left":{"type":"Identifier","start":3293,"end":3294,"loc":{"start":{"line":80,"column":53},"end":{"line":80,"column":54},"identifierName":"i"},"name":"i"},"operator":"-","right":{"type":"NumericLiteral","start":3295,"end":3296,"loc":{"start":{"line":80,"column":55},"end":{"line":80,"column":56}},"extra":{"rawValue":1,"raw":"1"},"value":1},"extra":{"parenthesized":true,"parenStart":3292}},"operator":"/","right":{"type":"NumericLiteral","start":3298,"end":3299,"loc":{"start":{"line":80,"column":58},"end":{"line":80,"column":59}},"extra":{"rawValue":2,"raw":"2"},"value":2}}]}}]},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Array coordinates to the middle pixel on the grid.\n\t\t * @type {ArrayCoordinate}\n\t\t * ","start":3148,"end":3239,"loc":{"start":{"line":77,"column":2},"end":{"line":79,"column":7}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The grid constructor.\n\t * @param {GridSize} field_size array of field size in each dimension.\n\t * E.g. [100,200] for a grid that is 100 pixels wide and 200 pixels high.\n\t * Entries must be positive integer numbers.\n\t * @param {boolean[]} [torus=[true,true,...]] - should the borders of the\n\t * grid be linked, so that a cell moving out on the left reappears on the\n\t * right? Should be an array specifying whether the torus holds in each\n\t * dimension; eg [true,false] for a torus in x but not y dimension.\n\t * Warning: setting the torus to false can give artifacts if not done\n\t * properly, see {@link Grid#torus}.","start":414,"end":1035,"loc":{"start":{"line":9,"column":1},"end":{"line":18,"column":39}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n\t * Return the array this._pixelArray, which should be set in the grid\n\t * subclass.\n\t * @returns {Uint16Array|Float32Array}\n\t * @private\n\t ","start":3308,"end":3454,"loc":{"start":{"line":83,"column":1},"end":{"line":88,"column":4}}}]},{"type":"ClassMethod","start":3456,"end":3679,"loc":{"start":{"line":89,"column":1},"end":{"line":95,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":3460,"end":3467,"loc":{"start":{"line":89,"column":5},"end":{"line":89,"column":12},"identifierName":"_pixels"},"name":"_pixels"},"kind":"get","id":null,"generator":false,"expression":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3469,"end":3679,"loc":{"start":{"line":89,"column":14},"end":{"line":95,"column":2}},"body":[{"type":"IfStatement","start":3473,"end":3542,"loc":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"test":{"type":"BinaryExpression","start":3478,"end":3508,"loc":{"start":{"line":90,"column":7},"end":{"line":90,"column":37}},"left":{"type":"MemberExpression","start":3478,"end":3494,"loc":{"start":{"line":90,"column":7},"end":{"line":90,"column":23}},"object":{"type":"ThisExpression","start":3478,"end":3482,"loc":{"start":{"line":90,"column":7},"end":{"line":90,"column":11}}},"property":{"type":"Identifier","start":3483,"end":3494,"loc":{"start":{"line":90,"column":12},"end":{"line":90,"column":23},"identifierName":"_pixelArray"},"name":"_pixelArray"},"computed":false},"operator":"!==","right":{"type":"Identifier","start":3499,"end":3508,"loc":{"start":{"line":90,"column":28},"end":{"line":90,"column":37},"identifierName":"undefined"},"name":"undefined"}},"consequent":{"type":"BlockStatement","start":3510,"end":3542,"loc":{"start":{"line":90,"column":39},"end":{"line":92,"column":3}},"body":[{"type":"ReturnStatement","start":3515,"end":3538,"loc":{"start":{"line":91,"column":3},"end":{"line":91,"column":26}},"argument":{"type":"MemberExpression","start":3522,"end":3538,"loc":{"start":{"line":91,"column":10},"end":{"line":91,"column":26}},"object":{"type":"ThisExpression","start":3522,"end":3526,"loc":{"start":{"line":91,"column":10},"end":{"line":91,"column":14}}},"property":{"type":"Identifier","start":3527,"end":3538,"loc":{"start":{"line":91,"column":15},"end":{"line":91,"column":26},"identifierName":"_pixelArray"},"name":"_pixelArray"},"computed":false}}],"directives":[]},"alternate":null},{"type":"ThrowStatement","start":3545,"end":3676,"loc":{"start":{"line":93,"column":2},"end":{"line":94,"column":56}},"argument":{"type":"BinaryExpression","start":3551,"end":3675,"loc":{"start":{"line":93,"column":8},"end":{"line":94,"column":55}},"left":{"type":"StringLiteral","start":3551,"end":3617,"loc":{"start":{"line":93,"column":8},"end":{"line":93,"column":74}},"extra":{"rawValue":"A private array this._pixelArray needs to be generated in every ","raw":"\"A private array this._pixelArray needs to be generated in every \""},"value":"A private array this._pixelArray needs to be generated in every "},"operator":"+","right":{"type":"StringLiteral","start":3623,"end":3675,"loc":{"start":{"line":94,"column":3},"end":{"line":94,"column":55}},"extra":{"rawValue":" Grid subclass! See its documentation for details.","raw":"\" Grid subclass! See its documentation for details.\""},"value":" Grid subclass! See its documentation for details."},"extra":{"parenthesized":true,"parenStart":3550}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"*\n\t * Return the array this._pixelArray, which should be set in the grid\n\t * subclass.\n\t * @returns {Uint16Array|Float32Array}\n\t * @private\n\t ","start":3308,"end":3454,"loc":{"start":{"line":83,"column":1},"end":{"line":88,"column":4}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n\t * Set or update the private this._pixelArray.\n\t * @param {Uint16Array|Float32Array} pixels - array of pixels to set.\n\t * @private\n\t ","start":3682,"end":3822,"loc":{"start":{"line":97,"column":1},"end":{"line":101,"column":4}}}]},{"type":"ClassMethod","start":3824,"end":3910,"loc":{"start":{"line":102,"column":1},"end":{"line":105,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":3828,"end":3835,"loc":{"start":{"line":102,"column":5},"end":{"line":102,"column":12},"identifierName":"_pixels"},"name":"_pixels"},"kind":"set","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":3837,"end":3843,"loc":{"start":{"line":102,"column":14},"end":{"line":102,"column":20},"identifierName":"pixels"},"name":"pixels"}],"body":{"type":"BlockStatement","start":3845,"end":3910,"loc":{"start":{"line":102,"column":22},"end":{"line":105,"column":2}},"body":[{"type":"ExpressionStatement","start":3882,"end":3907,"loc":{"start":{"line":104,"column":2},"end":{"line":104,"column":27}},"expression":{"type":"AssignmentExpression","start":3882,"end":3907,"loc":{"start":{"line":104,"column":2},"end":{"line":104,"column":27}},"operator":"=","left":{"type":"MemberExpression","start":3882,"end":3898,"loc":{"start":{"line":104,"column":2},"end":{"line":104,"column":18}},"object":{"type":"ThisExpression","start":3882,"end":3886,"loc":{"start":{"line":104,"column":2},"end":{"line":104,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":3887,"end":3898,"loc":{"start":{"line":104,"column":7},"end":{"line":104,"column":18},"identifierName":"_pixelArray"},"name":"_pixelArray"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":3901,"end":3907,"loc":{"start":{"line":104,"column":21},"end":{"line":104,"column":27},"identifierName":"pixels"},"name":"pixels"},"leadingComments":null},"leadingComments":[{"type":"CommentLine","value":"noinspection JSValidateTypes","start":3849,"end":3879,"loc":{"start":{"line":103,"column":2},"end":{"line":103,"column":32}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"*\n\t * Set or update the private this._pixelArray.\n\t * @param {Uint16Array|Float32Array} pixels - array of pixels to set.\n\t * @private\n\t ","start":3682,"end":3822,"loc":{"start":{"line":97,"column":1},"end":{"line":101,"column":4}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method to check if a given {@link ArrayCoordinate} falls within the\n\t * bounds of this grid. Returns an error if this is not the case.\n\t * @param {ArrayCoordinate} p - the coordinate to check.\n\t ","start":3913,"end":4114,"loc":{"start":{"line":107,"column":1},"end":{"line":110,"column":4}}}]},{"type":"ClassMethod","start":4116,"end":4589,"loc":{"start":{"line":111,"column":1},"end":{"line":122,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":4116,"end":4127,"loc":{"start":{"line":111,"column":1},"end":{"line":111,"column":12},"identifierName":"checkOnGrid"},"name":"checkOnGrid","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":4129,"end":4130,"loc":{"start":{"line":111,"column":14},"end":{"line":111,"column":15},"identifierName":"p"},"name":"p"}],"body":{"type":"BlockStatement","start":4132,"end":4589,"loc":{"start":{"line":111,"column":17},"end":{"line":122,"column":2}},"body":[{"type":"ForStatement","start":4136,"end":4586,"loc":{"start":{"line":112,"column":2},"end":{"line":121,"column":3}},"init":{"type":"VariableDeclaration","start":4141,"end":4150,"loc":{"start":{"line":112,"column":7},"end":{"line":112,"column":16}},"declarations":[{"type":"VariableDeclarator","start":4145,"end":4150,"loc":{"start":{"line":112,"column":11},"end":{"line":112,"column":16}},"id":{"type":"Identifier","start":4145,"end":4146,"loc":{"start":{"line":112,"column":11},"end":{"line":112,"column":12},"identifierName":"d"},"name":"d"},"init":{"type":"NumericLiteral","start":4149,"end":4150,"loc":{"start":{"line":112,"column":15},"end":{"line":112,"column":16}},"extra":{"rawValue":0,"raw":"0"},"value":0}}],"kind":"let"},"test":{"type":"BinaryExpression","start":4152,"end":4164,"loc":{"start":{"line":112,"column":18},"end":{"line":112,"column":30}},"left":{"type":"Identifier","start":4152,"end":4153,"loc":{"start":{"line":112,"column":18},"end":{"line":112,"column":19},"identifierName":"d"},"name":"d"},"operator":"<","right":{"type":"MemberExpression","start":4156,"end":4164,"loc":{"start":{"line":112,"column":22},"end":{"line":112,"column":30}},"object":{"type":"Identifier","start":4156,"end":4157,"loc":{"start":{"line":112,"column":22},"end":{"line":112,"column":23},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":4158,"end":4164,"loc":{"start":{"line":112,"column":24},"end":{"line":112,"column":30},"identifierName":"length"},"name":"length"},"computed":false}},"update":{"type":"UpdateExpression","start":4166,"end":4169,"loc":{"start":{"line":112,"column":32},"end":{"line":112,"column":35}},"operator":"++","prefix":false,"argument":{"type":"Identifier","start":4166,"end":4167,"loc":{"start":{"line":112,"column":32},"end":{"line":112,"column":33},"identifierName":"d"},"name":"d"}},"body":{"type":"BlockStatement","start":4171,"end":4586,"loc":{"start":{"line":112,"column":37},"end":{"line":121,"column":3}},"body":[{"type":"IfStatement","start":4176,"end":4582,"loc":{"start":{"line":113,"column":3},"end":{"line":120,"column":4}},"test":{"type":"LogicalExpression","start":4180,"end":4215,"loc":{"start":{"line":113,"column":7},"end":{"line":113,"column":42}},"left":{"type":"BinaryExpression","start":4180,"end":4188,"loc":{"start":{"line":113,"column":7},"end":{"line":113,"column":15}},"left":{"type":"MemberExpression","start":4180,"end":4184,"loc":{"start":{"line":113,"column":7},"end":{"line":113,"column":11}},"object":{"type":"Identifier","start":4180,"end":4181,"loc":{"start":{"line":113,"column":7},"end":{"line":113,"column":8},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":4182,"end":4183,"loc":{"start":{"line":113,"column":9},"end":{"line":113,"column":10},"identifierName":"d"},"name":"d"},"computed":true},"operator":"<","right":{"type":"NumericLiteral","start":4187,"end":4188,"loc":{"start":{"line":113,"column":14},"end":{"line":113,"column":15}},"extra":{"rawValue":0,"raw":"0"},"value":0}},"operator":"||","right":{"type":"BinaryExpression","start":4192,"end":4215,"loc":{"start":{"line":113,"column":19},"end":{"line":113,"column":42}},"left":{"type":"MemberExpression","start":4192,"end":4196,"loc":{"start":{"line":113,"column":19},"end":{"line":113,"column":23}},"object":{"type":"Identifier","start":4192,"end":4193,"loc":{"start":{"line":113,"column":19},"end":{"line":113,"column":20},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":4194,"end":4195,"loc":{"start":{"line":113,"column":21},"end":{"line":113,"column":22},"identifierName":"d"},"name":"d"},"computed":true},"operator":">=","right":{"type":"MemberExpression","start":4200,"end":4215,"loc":{"start":{"line":113,"column":27},"end":{"line":113,"column":42}},"object":{"type":"MemberExpression","start":4200,"end":4212,"loc":{"start":{"line":113,"column":27},"end":{"line":113,"column":39}},"object":{"type":"ThisExpression","start":4200,"end":4204,"loc":{"start":{"line":113,"column":27},"end":{"line":113,"column":31}}},"property":{"type":"Identifier","start":4205,"end":4212,"loc":{"start":{"line":113,"column":32},"end":{"line":113,"column":39},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":4213,"end":4214,"loc":{"start":{"line":113,"column":40},"end":{"line":113,"column":41},"identifierName":"d"},"name":"d"},"computed":true}}},"consequent":{"type":"BlockStatement","start":4217,"end":4582,"loc":{"start":{"line":113,"column":44},"end":{"line":120,"column":4}},"body":[{"type":"ThrowStatement","start":4223,"end":4577,"loc":{"start":{"line":114,"column":4},"end":{"line":119,"column":20}},"argument":{"type":"BinaryExpression","start":4229,"end":4576,"loc":{"start":{"line":114,"column":10},"end":{"line":119,"column":19}},"left":{"type":"BinaryExpression","start":4229,"end":4554,"loc":{"start":{"line":114,"column":10},"end":{"line":118,"column":61}},"left":{"type":"BinaryExpression","start":4229,"end":4490,"loc":{"start":{"line":114,"column":10},"end":{"line":117,"column":64}},"left":{"type":"BinaryExpression","start":4229,"end":4423,"loc":{"start":{"line":114,"column":10},"end":{"line":116,"column":67}},"left":{"type":"BinaryExpression","start":4229,"end":4353,"loc":{"start":{"line":114,"column":10},"end":{"line":115,"column":63}},"left":{"type":"StringLiteral","start":4229,"end":4287,"loc":{"start":{"line":114,"column":10},"end":{"line":114,"column":68}},"extra":{"rawValue":"You are trying to access a coordinate that does not seem","raw":"\"You are trying to access a coordinate that does not seem\""},"value":"You are trying to access a coordinate that does not seem"},"operator":"+","right":{"type":"StringLiteral","start":4295,"end":4353,"loc":{"start":{"line":115,"column":5},"end":{"line":115,"column":63}},"extra":{"rawValue":"to lie on the grid! I am expecting values between 0 and ","raw":"\"to lie on the grid! I am expecting values between 0 and \""},"value":"to lie on the grid! I am expecting values between 0 and "}},"operator":"+","right":{"type":"StringLiteral","start":4361,"end":4423,"loc":{"start":{"line":116,"column":5},"end":{"line":116,"column":67}},"extra":{"rawValue":"the grid dimension specified in field_size. (If this is your","raw":"\"the grid dimension specified in field_size. (If this is your\""},"value":"the grid dimension specified in field_size. (If this is your"}},"operator":"+","right":{"type":"StringLiteral","start":4431,"end":4490,"loc":{"start":{"line":117,"column":5},"end":{"line":117,"column":64}},"extra":{"rawValue":"own grid implementation and this assumption is not valid,","raw":"\"own grid implementation and this assumption is not valid,\""},"value":"own grid implementation and this assumption is not valid,"}},"operator":"+","right":{"type":"StringLiteral","start":4498,"end":4554,"loc":{"start":{"line":118,"column":5},"end":{"line":118,"column":61}},"extra":{"rawValue":"please overwrite the liesOnGrid() function in your own","raw":"\"please overwrite the liesOnGrid() function in your own\""},"value":"please overwrite the liesOnGrid() function in your own"}},"operator":"+","right":{"type":"StringLiteral","start":4562,"end":4576,"loc":{"start":{"line":119,"column":5},"end":{"line":119,"column":19}},"extra":{"rawValue":"grid class).","raw":"\"grid class).\""},"value":"grid class)."},"extra":{"parenthesized":true,"parenStart":4228}}}],"directives":[]},"alternate":null}],"directives":[]}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method to check if a given {@link ArrayCoordinate} falls within the\n\t * bounds of this grid. Returns an error if this is not the case.\n\t * @param {ArrayCoordinate} p - the coordinate to check.\n\t ","start":3913,"end":4114,"loc":{"start":{"line":107,"column":1},"end":{"line":110,"column":4}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method to correct an {@link ArrayCoordinate} outside the grid dimensions when\n\t * the grid is wrapped (torus = true). If the coordinate falls inside the grid,\n\t * it is returned unchanged. If it falls outside the grid and the grid is periodic\n\t * in that dimension, a corrected coordinate is returned. If the pixel falls outside\n\t * the grid which is not periodic in that dimension, the function returns\n\t * 'undefined'.\n\t * @param {ArrayCoordinate} p - the coordinate of the pixel to correct\n\t * @return {ArrayCoordinate} the corrected coordinate.\n\t ","start":4595,"end":5152,"loc":{"start":{"line":125,"column":1},"end":{"line":133,"column":4}}}]},{"type":"ClassMethod","start":5154,"end":5974,"loc":{"start":{"line":134,"column":1},"end":{"line":169,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":5154,"end":5169,"loc":{"start":{"line":134,"column":1},"end":{"line":134,"column":16},"identifierName":"correctPosition"},"name":"correctPosition","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":5171,"end":5172,"loc":{"start":{"line":134,"column":18},"end":{"line":134,"column":19},"identifierName":"p"},"name":"p"}],"body":{"type":"BlockStatement","start":5174,"end":5974,"loc":{"start":{"line":134,"column":21},"end":{"line":169,"column":2}},"body":[{"type":"VariableDeclaration","start":5180,"end":5193,"loc":{"start":{"line":136,"column":2},"end":{"line":136,"column":15}},"declarations":[{"type":"VariableDeclarator","start":5184,"end":5193,"loc":{"start":{"line":136,"column":6},"end":{"line":136,"column":15}},"id":{"type":"Identifier","start":5184,"end":5188,"loc":{"start":{"line":136,"column":6},"end":{"line":136,"column":10},"identifierName":"pnew"},"name":"pnew"},"init":{"type":"ArrayExpression","start":5191,"end":5193,"loc":{"start":{"line":136,"column":13},"end":{"line":136,"column":15}},"elements":[]}}],"kind":"let"},{"type":"VariableDeclaration","start":5196,"end":5214,"loc":{"start":{"line":137,"column":2},"end":{"line":137,"column":20}},"declarations":[{"type":"VariableDeclarator","start":5200,"end":5214,"loc":{"start":{"line":137,"column":6},"end":{"line":137,"column":20}},"id":{"type":"Identifier","start":5200,"end":5206,"loc":{"start":{"line":137,"column":6},"end":{"line":137,"column":12},"identifierName":"ignore"},"name":"ignore"},"init":{"type":"BooleanLiteral","start":5209,"end":5214,"loc":{"start":{"line":137,"column":15},"end":{"line":137,"column":20}},"value":false,"leadingComments":null,"trailingComments":null},"trailingComments":null}],"kind":"let","trailingComments":[{"type":"CommentLine","value":" ignore pixels that fall off the grid when non-periodic grid","start":5215,"end":5277,"loc":{"start":{"line":137,"column":21},"end":{"line":137,"column":83}}},{"type":"CommentLine","value":" Loop over the x, y, (z) dimensions","start":5282,"end":5319,"loc":{"start":{"line":139,"column":2},"end":{"line":139,"column":39}}}]},{"type":"ForStatement","start":5322,"end":5899,"loc":{"start":{"line":140,"column":2},"end":{"line":161,"column":3}},"init":{"type":"VariableDeclaration","start":5327,"end":5336,"loc":{"start":{"line":140,"column":7},"end":{"line":140,"column":16}},"declarations":[{"type":"VariableDeclarator","start":5331,"end":5336,"loc":{"start":{"line":140,"column":11},"end":{"line":140,"column":16}},"id":{"type":"Identifier","start":5331,"end":5332,"loc":{"start":{"line":140,"column":11},"end":{"line":140,"column":12},"identifierName":"d"},"name":"d","leadingComments":null},"init":{"type":"NumericLiteral","start":5335,"end":5336,"loc":{"start":{"line":140,"column":15},"end":{"line":140,"column":16}},"extra":{"rawValue":0,"raw":"0"},"value":0},"leadingComments":null}],"kind":"let","leadingComments":null},"test":{"type":"BinaryExpression","start":5338,"end":5351,"loc":{"start":{"line":140,"column":18},"end":{"line":140,"column":31}},"left":{"type":"Identifier","start":5338,"end":5339,"loc":{"start":{"line":140,"column":18},"end":{"line":140,"column":19},"identifierName":"d"},"name":"d"},"operator":"<","right":{"type":"MemberExpression","start":5342,"end":5351,"loc":{"start":{"line":140,"column":22},"end":{"line":140,"column":31}},"object":{"type":"ThisExpression","start":5342,"end":5346,"loc":{"start":{"line":140,"column":22},"end":{"line":140,"column":26}}},"property":{"type":"Identifier","start":5347,"end":5351,"loc":{"start":{"line":140,"column":27},"end":{"line":140,"column":31},"identifierName":"ndim"},"name":"ndim"},"computed":false}},"update":{"type":"UpdateExpression","start":5353,"end":5356,"loc":{"start":{"line":140,"column":33},"end":{"line":140,"column":36}},"operator":"++","prefix":false,"argument":{"type":"Identifier","start":5353,"end":5354,"loc":{"start":{"line":140,"column":33},"end":{"line":140,"column":34},"identifierName":"d"},"name":"d"}},"body":{"type":"BlockStatement","start":5358,"end":5899,"loc":{"start":{"line":140,"column":38},"end":{"line":161,"column":3}},"body":[{"type":"IfStatement","start":5479,"end":5895,"loc":{"start":{"line":144,"column":3},"end":{"line":160,"column":4}},"test":{"type":"BinaryExpression","start":5483,"end":5491,"loc":{"start":{"line":144,"column":7},"end":{"line":144,"column":15}},"left":{"type":"MemberExpression","start":5483,"end":5487,"loc":{"start":{"line":144,"column":7},"end":{"line":144,"column":11}},"object":{"type":"Identifier","start":5483,"end":5484,"loc":{"start":{"line":144,"column":7},"end":{"line":144,"column":8},"identifierName":"p"},"name":"p","leadingComments":null},"property":{"type":"Identifier","start":5485,"end":5486,"loc":{"start":{"line":144,"column":9},"end":{"line":144,"column":10},"identifierName":"d"},"name":"d"},"computed":true,"leadingComments":null},"operator":"<","right":{"type":"NumericLiteral","start":5490,"end":5491,"loc":{"start":{"line":144,"column":14},"end":{"line":144,"column":15}},"extra":{"rawValue":0,"raw":"0"},"value":0},"leadingComments":null},"consequent":{"type":"BlockStatement","start":5493,"end":5715,"loc":{"start":{"line":144,"column":17},"end":{"line":152,"column":4}},"body":[{"type":"IfStatement","start":5611,"end":5710,"loc":{"start":{"line":147,"column":4},"end":{"line":151,"column":5}},"test":{"type":"MemberExpression","start":5615,"end":5628,"loc":{"start":{"line":147,"column":8},"end":{"line":147,"column":21}},"object":{"type":"MemberExpression","start":5615,"end":5625,"loc":{"start":{"line":147,"column":8},"end":{"line":147,"column":18}},"object":{"type":"ThisExpression","start":5615,"end":5619,"loc":{"start":{"line":147,"column":8},"end":{"line":147,"column":12}},"leadingComments":null},"property":{"type":"Identifier","start":5620,"end":5625,"loc":{"start":{"line":147,"column":13},"end":{"line":147,"column":18},"identifierName":"torus"},"name":"torus"},"computed":false,"leadingComments":null},"property":{"type":"Identifier","start":5626,"end":5627,"loc":{"start":{"line":147,"column":19},"end":{"line":147,"column":20},"identifierName":"d"},"name":"d"},"computed":true,"leadingComments":null},"consequent":{"type":"BlockStatement","start":5630,"end":5678,"loc":{"start":{"line":147,"column":23},"end":{"line":149,"column":5}},"body":[{"type":"ExpressionStatement","start":5637,"end":5672,"loc":{"start":{"line":148,"column":5},"end":{"line":148,"column":40}},"expression":{"type":"CallExpression","start":5637,"end":5672,"loc":{"start":{"line":148,"column":5},"end":{"line":148,"column":40}},"callee":{"type":"MemberExpression","start":5637,"end":5646,"loc":{"start":{"line":148,"column":5},"end":{"line":148,"column":14}},"object":{"type":"Identifier","start":5637,"end":5641,"loc":{"start":{"line":148,"column":5},"end":{"line":148,"column":9},"identifierName":"pnew"},"name":"pnew"},"property":{"type":"Identifier","start":5642,"end":5646,"loc":{"start":{"line":148,"column":10},"end":{"line":148,"column":14},"identifierName":"push"},"name":"push"},"computed":false},"arguments":[{"type":"BinaryExpression","start":5648,"end":5670,"loc":{"start":{"line":148,"column":16},"end":{"line":148,"column":38}},"left":{"type":"MemberExpression","start":5648,"end":5652,"loc":{"start":{"line":148,"column":16},"end":{"line":148,"column":20}},"object":{"type":"Identifier","start":5648,"end":5649,"loc":{"start":{"line":148,"column":16},"end":{"line":148,"column":17},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":5650,"end":5651,"loc":{"start":{"line":148,"column":18},"end":{"line":148,"column":19},"identifierName":"d"},"name":"d"},"computed":true},"operator":"+","right":{"type":"MemberExpression","start":5655,"end":5670,"loc":{"start":{"line":148,"column":23},"end":{"line":148,"column":38}},"object":{"type":"MemberExpression","start":5655,"end":5667,"loc":{"start":{"line":148,"column":23},"end":{"line":148,"column":35}},"object":{"type":"ThisExpression","start":5655,"end":5659,"loc":{"start":{"line":148,"column":23},"end":{"line":148,"column":27}}},"property":{"type":"Identifier","start":5660,"end":5667,"loc":{"start":{"line":148,"column":28},"end":{"line":148,"column":35},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":5668,"end":5669,"loc":{"start":{"line":148,"column":36},"end":{"line":148,"column":37},"identifierName":"d"},"name":"d"},"computed":true}}]}}],"directives":[]},"alternate":{"type":"BlockStatement","start":5684,"end":5710,"loc":{"start":{"line":149,"column":11},"end":{"line":151,"column":5}},"body":[{"type":"ExpressionStatement","start":5691,"end":5704,"loc":{"start":{"line":150,"column":5},"end":{"line":150,"column":18}},"expression":{"type":"AssignmentExpression","start":5691,"end":5704,"loc":{"start":{"line":150,"column":5},"end":{"line":150,"column":18}},"operator":"=","left":{"type":"Identifier","start":5691,"end":5697,"loc":{"start":{"line":150,"column":5},"end":{"line":150,"column":11},"identifierName":"ignore"},"name":"ignore"},"right":{"type":"BooleanLiteral","start":5700,"end":5704,"loc":{"start":{"line":150,"column":14},"end":{"line":150,"column":18}},"value":true}}}],"directives":[]},"leadingComments":[{"type":"CommentLine","value":" If there is a torus in this dimension, correct the position and return.","start":5499,"end":5573,"loc":{"start":{"line":145,"column":4},"end":{"line":145,"column":78}}},{"type":"CommentLine","value":" otherwise just ignore it.","start":5578,"end":5606,"loc":{"start":{"line":146,"column":4},"end":{"line":146,"column":32}}}]}],"directives":[]},"alternate":{"type":"IfStatement","start":5721,"end":5895,"loc":{"start":{"line":152,"column":10},"end":{"line":160,"column":4}},"test":{"type":"BinaryExpression","start":5726,"end":5749,"loc":{"start":{"line":152,"column":15},"end":{"line":152,"column":38}},"left":{"type":"MemberExpression","start":5726,"end":5730,"loc":{"start":{"line":152,"column":15},"end":{"line":152,"column":19}},"object":{"type":"Identifier","start":5726,"end":5727,"loc":{"start":{"line":152,"column":15},"end":{"line":152,"column":16},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":5728,"end":5729,"loc":{"start":{"line":152,"column":17},"end":{"line":152,"column":18},"identifierName":"d"},"name":"d"},"computed":true},"operator":">=","right":{"type":"MemberExpression","start":5734,"end":5749,"loc":{"start":{"line":152,"column":23},"end":{"line":152,"column":38}},"object":{"type":"MemberExpression","start":5734,"end":5746,"loc":{"start":{"line":152,"column":23},"end":{"line":152,"column":35}},"object":{"type":"ThisExpression","start":5734,"end":5738,"loc":{"start":{"line":152,"column":23},"end":{"line":152,"column":27}}},"property":{"type":"Identifier","start":5739,"end":5746,"loc":{"start":{"line":152,"column":28},"end":{"line":152,"column":35},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":5747,"end":5748,"loc":{"start":{"line":152,"column":36},"end":{"line":152,"column":37},"identifierName":"d"},"name":"d"},"computed":true}},"consequent":{"type":"BlockStatement","start":5751,"end":5861,"loc":{"start":{"line":152,"column":40},"end":{"line":158,"column":4}},"body":[{"type":"IfStatement","start":5757,"end":5856,"loc":{"start":{"line":153,"column":4},"end":{"line":157,"column":5}},"test":{"type":"MemberExpression","start":5761,"end":5774,"loc":{"start":{"line":153,"column":8},"end":{"line":153,"column":21}},"object":{"type":"MemberExpression","start":5761,"end":5771,"loc":{"start":{"line":153,"column":8},"end":{"line":153,"column":18}},"object":{"type":"ThisExpression","start":5761,"end":5765,"loc":{"start":{"line":153,"column":8},"end":{"line":153,"column":12}}},"property":{"type":"Identifier","start":5766,"end":5771,"loc":{"start":{"line":153,"column":13},"end":{"line":153,"column":18},"identifierName":"torus"},"name":"torus"},"computed":false},"property":{"type":"Identifier","start":5772,"end":5773,"loc":{"start":{"line":153,"column":19},"end":{"line":153,"column":20},"identifierName":"d"},"name":"d"},"computed":true},"consequent":{"type":"BlockStatement","start":5776,"end":5824,"loc":{"start":{"line":153,"column":23},"end":{"line":155,"column":5}},"body":[{"type":"ExpressionStatement","start":5783,"end":5818,"loc":{"start":{"line":154,"column":5},"end":{"line":154,"column":40}},"expression":{"type":"CallExpression","start":5783,"end":5818,"loc":{"start":{"line":154,"column":5},"end":{"line":154,"column":40}},"callee":{"type":"MemberExpression","start":5783,"end":5792,"loc":{"start":{"line":154,"column":5},"end":{"line":154,"column":14}},"object":{"type":"Identifier","start":5783,"end":5787,"loc":{"start":{"line":154,"column":5},"end":{"line":154,"column":9},"identifierName":"pnew"},"name":"pnew"},"property":{"type":"Identifier","start":5788,"end":5792,"loc":{"start":{"line":154,"column":10},"end":{"line":154,"column":14},"identifierName":"push"},"name":"push"},"computed":false},"arguments":[{"type":"BinaryExpression","start":5794,"end":5816,"loc":{"start":{"line":154,"column":16},"end":{"line":154,"column":38}},"left":{"type":"MemberExpression","start":5794,"end":5798,"loc":{"start":{"line":154,"column":16},"end":{"line":154,"column":20}},"object":{"type":"Identifier","start":5794,"end":5795,"loc":{"start":{"line":154,"column":16},"end":{"line":154,"column":17},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":5796,"end":5797,"loc":{"start":{"line":154,"column":18},"end":{"line":154,"column":19},"identifierName":"d"},"name":"d"},"computed":true},"operator":"-","right":{"type":"MemberExpression","start":5801,"end":5816,"loc":{"start":{"line":154,"column":23},"end":{"line":154,"column":38}},"object":{"type":"MemberExpression","start":5801,"end":5813,"loc":{"start":{"line":154,"column":23},"end":{"line":154,"column":35}},"object":{"type":"ThisExpression","start":5801,"end":5805,"loc":{"start":{"line":154,"column":23},"end":{"line":154,"column":27}}},"property":{"type":"Identifier","start":5806,"end":5813,"loc":{"start":{"line":154,"column":28},"end":{"line":154,"column":35},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":5814,"end":5815,"loc":{"start":{"line":154,"column":36},"end":{"line":154,"column":37},"identifierName":"d"},"name":"d"},"computed":true}}]}}],"directives":[]},"alternate":{"type":"BlockStatement","start":5830,"end":5856,"loc":{"start":{"line":155,"column":11},"end":{"line":157,"column":5}},"body":[{"type":"ExpressionStatement","start":5837,"end":5850,"loc":{"start":{"line":156,"column":5},"end":{"line":156,"column":18}},"expression":{"type":"AssignmentExpression","start":5837,"end":5850,"loc":{"start":{"line":156,"column":5},"end":{"line":156,"column":18}},"operator":"=","left":{"type":"Identifier","start":5837,"end":5843,"loc":{"start":{"line":156,"column":5},"end":{"line":156,"column":11},"identifierName":"ignore"},"name":"ignore"},"right":{"type":"BooleanLiteral","start":5846,"end":5850,"loc":{"start":{"line":156,"column":14},"end":{"line":156,"column":18}},"value":true}}}],"directives":[]}}],"directives":[]},"alternate":{"type":"BlockStatement","start":5867,"end":5895,"loc":{"start":{"line":158,"column":10},"end":{"line":160,"column":4}},"body":[{"type":"ExpressionStatement","start":5873,"end":5890,"loc":{"start":{"line":159,"column":4},"end":{"line":159,"column":21}},"expression":{"type":"CallExpression","start":5873,"end":5890,"loc":{"start":{"line":159,"column":4},"end":{"line":159,"column":21}},"callee":{"type":"MemberExpression","start":5873,"end":5882,"loc":{"start":{"line":159,"column":4},"end":{"line":159,"column":13}},"object":{"type":"Identifier","start":5873,"end":5877,"loc":{"start":{"line":159,"column":4},"end":{"line":159,"column":8},"identifierName":"pnew"},"name":"pnew"},"property":{"type":"Identifier","start":5878,"end":5882,"loc":{"start":{"line":159,"column":9},"end":{"line":159,"column":13},"identifierName":"push"},"name":"push"},"computed":false},"arguments":[{"type":"MemberExpression","start":5884,"end":5888,"loc":{"start":{"line":159,"column":15},"end":{"line":159,"column":19}},"object":{"type":"Identifier","start":5884,"end":5885,"loc":{"start":{"line":159,"column":15},"end":{"line":159,"column":16},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":5886,"end":5887,"loc":{"start":{"line":159,"column":17},"end":{"line":159,"column":18},"identifierName":"d"},"name":"d"},"computed":true}]}}],"directives":[]}},"leadingComments":[{"type":"CommentLine","value":" If position is outside the grid dimensions, action depends on whether","start":5365,"end":5437,"loc":{"start":{"line":142,"column":3},"end":{"line":142,"column":75}}},{"type":"CommentLine","value":" grid is periodic or not (torus)","start":5441,"end":5475,"loc":{"start":{"line":143,"column":3},"end":{"line":143,"column":37}}}]}],"directives":[]},"leadingComments":[{"type":"CommentLine","value":" ignore pixels that fall off the grid when non-periodic grid","start":5215,"end":5277,"loc":{"start":{"line":137,"column":21},"end":{"line":137,"column":83}}},{"type":"CommentLine","value":" Loop over the x, y, (z) dimensions","start":5282,"end":5319,"loc":{"start":{"line":139,"column":2},"end":{"line":139,"column":39}}}]},{"type":"IfStatement","start":5904,"end":5969,"loc":{"start":{"line":163,"column":2},"end":{"line":167,"column":3}},"test":{"type":"UnaryExpression","start":5908,"end":5915,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":13}},"operator":"!","prefix":true,"argument":{"type":"Identifier","start":5909,"end":5915,"loc":{"start":{"line":163,"column":7},"end":{"line":163,"column":13},"identifierName":"ignore"},"name":"ignore"},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":5917,"end":5938,"loc":{"start":{"line":163,"column":15},"end":{"line":165,"column":3}},"body":[{"type":"ReturnStatement","start":5923,"end":5934,"loc":{"start":{"line":164,"column":3},"end":{"line":164,"column":14}},"argument":{"type":"Identifier","start":5930,"end":5934,"loc":{"start":{"line":164,"column":10},"end":{"line":164,"column":14},"identifierName":"pnew"},"name":"pnew"}}],"directives":[]},"alternate":{"type":"BlockStatement","start":5944,"end":5969,"loc":{"start":{"line":165,"column":9},"end":{"line":167,"column":3}},"body":[{"type":"ReturnStatement","start":5949,"end":5965,"loc":{"start":{"line":166,"column":3},"end":{"line":166,"column":19}},"argument":{"type":"Identifier","start":5956,"end":5965,"loc":{"start":{"line":166,"column":10},"end":{"line":166,"column":19},"identifierName":"undefined"},"name":"undefined"}}],"directives":[]}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method to correct an {@link ArrayCoordinate} outside the grid dimensions when\n\t * the grid is wrapped (torus = true). If the coordinate falls inside the grid,\n\t * it is returned unchanged. If it falls outside the grid and the grid is periodic\n\t * in that dimension, a corrected coordinate is returned. If the pixel falls outside\n\t * the grid which is not periodic in that dimension, the function returns\n\t * 'undefined'.\n\t * @param {ArrayCoordinate} p - the coordinate of the pixel to correct\n\t * @return {ArrayCoordinate} the corrected coordinate.\n\t ","start":4595,"end":5152,"loc":{"start":{"line":125,"column":1},"end":{"line":133,"column":4}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method for conversion from an {@link ArrayCoordinate} to an\n\t * {@link IndexCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#p2i} for an example.\n\t * @abstract\n\t * @param {ArrayCoordinate} p - the coordinate of the pixel to convert\n\t * @return {IndexCoordinate} the converted coordinate.\n\t ","start":5977,"end":6314,"loc":{"start":{"line":171,"column":1},"end":{"line":178,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":6316,"end":6357,"loc":{"start":{"line":179,"column":1},"end":{"line":179,"column":42}}}]},{"type":"ClassMethod","start":6359,"end":6443,"loc":{"start":{"line":180,"column":1},"end":{"line":182,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":6359,"end":6362,"loc":{"start":{"line":180,"column":1},"end":{"line":180,"column":4},"identifierName":"p2i"},"name":"p2i","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":6365,"end":6366,"loc":{"start":{"line":180,"column":7},"end":{"line":180,"column":8},"identifierName":"p"},"name":"p"}],"body":{"type":"BlockStatement","start":6368,"end":6443,"loc":{"start":{"line":180,"column":10},"end":{"line":182,"column":2}},"body":[{"type":"ThrowStatement","start":6372,"end":6440,"loc":{"start":{"line":181,"column":2},"end":{"line":181,"column":70}},"argument":{"type":"StringLiteral","start":6379,"end":6439,"loc":{"start":{"line":181,"column":9},"end":{"line":181,"column":69}},"extra":{"rawValue":"A p2i method should be implemented in every Grid subclass!","raw":"\"A p2i method should be implemented in every Grid subclass!\"","parenthesized":true,"parenStart":6377},"value":"A p2i method should be implemented in every Grid subclass!"}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method for conversion from an {@link ArrayCoordinate} to an\n\t * {@link IndexCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#p2i} for an example.\n\t * @abstract\n\t * @param {ArrayCoordinate} p - the coordinate of the pixel to convert\n\t * @return {IndexCoordinate} the converted coordinate.\n\t ","start":5977,"end":6314,"loc":{"start":{"line":171,"column":1},"end":{"line":178,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":6316,"end":6357,"loc":{"start":{"line":179,"column":1},"end":{"line":179,"column":42}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method for conversion from an {@link IndexCoordinate} to an\n\t * {@link ArrayCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#i2p} for an example.\n\t * @abstract\n\t * @param {IndexCoordinate} i - the coordinate of the pixel to convert\n\t * @return {ArrayCoordinate} the converted coordinate.\n\t ","start":6446,"end":6783,"loc":{"start":{"line":184,"column":1},"end":{"line":191,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":6785,"end":6826,"loc":{"start":{"line":192,"column":1},"end":{"line":192,"column":42}}}]},{"type":"ClassMethod","start":6828,"end":6913,"loc":{"start":{"line":193,"column":1},"end":{"line":195,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":6828,"end":6831,"loc":{"start":{"line":193,"column":1},"end":{"line":193,"column":4},"identifierName":"i2p"},"name":"i2p","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":6834,"end":6835,"loc":{"start":{"line":193,"column":7},"end":{"line":193,"column":8},"identifierName":"i"},"name":"i"}],"body":{"type":"BlockStatement","start":6837,"end":6913,"loc":{"start":{"line":193,"column":10},"end":{"line":195,"column":2}},"body":[{"type":"ThrowStatement","start":6841,"end":6910,"loc":{"start":{"line":194,"column":2},"end":{"line":194,"column":71}},"argument":{"type":"StringLiteral","start":6848,"end":6909,"loc":{"start":{"line":194,"column":9},"end":{"line":194,"column":70}},"extra":{"rawValue":"An i2p method should be implemented in every Grid subclass!","raw":"\"An i2p method should be implemented in every Grid subclass!\"","parenthesized":true,"parenStart":6846},"value":"An i2p method should be implemented in every Grid subclass!"}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method for conversion from an {@link IndexCoordinate} to an\n\t * {@link ArrayCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#i2p} for an example.\n\t * @abstract\n\t * @param {IndexCoordinate} i - the coordinate of the pixel to convert\n\t * @return {ArrayCoordinate} the converted coordinate.\n\t ","start":6446,"end":6783,"loc":{"start":{"line":184,"column":1},"end":{"line":191,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":6785,"end":6826,"loc":{"start":{"line":192,"column":1},"end":{"line":192,"column":42}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method returning the (Moore) neighborhood of a pixel based on its\n\t * {@link IndexCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#neighi} for an example.\n\t * @abstract\n\t * @param {IndexCoordinate} i - the coordinate of the pixel to get neighbors\n\t * for.\n\t * @param {boolean[]} torus are borders of the grid linked so that a cell\n\t * leaving on the right re-enters the grid on the left?\n\t * @return {IndexCoordinate[]} an array of neighbors.\n\t ","start":6916,"end":7408,"loc":{"start":{"line":197,"column":1},"end":{"line":207,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":7410,"end":7451,"loc":{"start":{"line":208,"column":1},"end":{"line":208,"column":42}}}]},{"type":"ClassMethod","start":7453,"end":7563,"loc":{"start":{"line":209,"column":1},"end":{"line":211,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":7453,"end":7459,"loc":{"start":{"line":209,"column":1},"end":{"line":209,"column":7},"identifierName":"neighi"},"name":"neighi","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":7462,"end":7463,"loc":{"start":{"line":209,"column":10},"end":{"line":209,"column":11},"identifierName":"i"},"name":"i"},{"type":"AssignmentPattern","start":7465,"end":7483,"loc":{"start":{"line":209,"column":13},"end":{"line":209,"column":31}},"left":{"type":"Identifier","start":7465,"end":7470,"loc":{"start":{"line":209,"column":13},"end":{"line":209,"column":18},"identifierName":"torus"},"name":"torus"},"right":{"type":"MemberExpression","start":7473,"end":7483,"loc":{"start":{"line":209,"column":21},"end":{"line":209,"column":31}},"object":{"type":"ThisExpression","start":7473,"end":7477,"loc":{"start":{"line":209,"column":21},"end":{"line":209,"column":25}}},"property":{"type":"Identifier","start":7478,"end":7483,"loc":{"start":{"line":209,"column":26},"end":{"line":209,"column":31},"identifierName":"torus"},"name":"torus"},"computed":false}}],"body":{"type":"BlockStatement","start":7485,"end":7563,"loc":{"start":{"line":209,"column":33},"end":{"line":211,"column":2}},"body":[{"type":"ThrowStatement","start":7489,"end":7560,"loc":{"start":{"line":210,"column":2},"end":{"line":210,"column":73}},"argument":{"type":"StringLiteral","start":7496,"end":7559,"loc":{"start":{"line":210,"column":9},"end":{"line":210,"column":72}},"extra":{"rawValue":"A neighi method should be implemented in every Grid subclass!","raw":"\"A neighi method should be implemented in every Grid subclass!\"","parenthesized":true,"parenStart":7494},"value":"A neighi method should be implemented in every Grid subclass!"}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method returning the (Moore) neighborhood of a pixel based on its\n\t * {@link IndexCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#neighi} for an example.\n\t * @abstract\n\t * @param {IndexCoordinate} i - the coordinate of the pixel to get neighbors\n\t * for.\n\t * @param {boolean[]} torus are borders of the grid linked so that a cell\n\t * leaving on the right re-enters the grid on the left?\n\t * @return {IndexCoordinate[]} an array of neighbors.\n\t ","start":6916,"end":7408,"loc":{"start":{"line":197,"column":1},"end":{"line":207,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":7410,"end":7451,"loc":{"start":{"line":208,"column":1},"end":{"line":208,"column":42}}}],"trailingComments":[{"type":"CommentBlock","value":"* The neigh method returns the neighborhood of a pixel p. This function\n\t * uses array coordinates as input and output arguments, but internally\n\t * calls a method 'neighi' which computes neighborhoods using index-\n\t * coordinates. Since neighborhoods depend on the coordinate system, the\n\t * 'neighi' method is defined in the extension class for that specific\n\t * coordinate system.\n\t * @param {ArrayCoordinate} p array coordinates of a specific pixel\n\t * @param {boolean[]} torus are borders of the grid linked so that a cell\n\t * leaving on the right re-enters the grid on the left?\n\t * @return {ArrayCoordinate[]} an array of neighbors of pixel p, where each\n\t * element contains the array coordinates of the neighbor in question.\n\t * ","start":7566,"end":8308,"loc":{"start":{"line":213,"column":1},"end":{"line":224,"column":6}}}]},{"type":"ClassMethod","start":8310,"end":8440,"loc":{"start":{"line":225,"column":1},"end":{"line":230,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":8310,"end":8315,"loc":{"start":{"line":225,"column":1},"end":{"line":225,"column":6},"identifierName":"neigh"},"name":"neigh","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":8316,"end":8317,"loc":{"start":{"line":225,"column":7},"end":{"line":225,"column":8},"identifierName":"p"},"name":"p"},{"type":"AssignmentPattern","start":8319,"end":8337,"loc":{"start":{"line":225,"column":10},"end":{"line":225,"column":28}},"left":{"type":"Identifier","start":8319,"end":8324,"loc":{"start":{"line":225,"column":10},"end":{"line":225,"column":15},"identifierName":"torus"},"name":"torus"},"right":{"type":"MemberExpression","start":8327,"end":8337,"loc":{"start":{"line":225,"column":18},"end":{"line":225,"column":28}},"object":{"type":"ThisExpression","start":8327,"end":8331,"loc":{"start":{"line":225,"column":18},"end":{"line":225,"column":22}}},"property":{"type":"Identifier","start":8332,"end":8337,"loc":{"start":{"line":225,"column":23},"end":{"line":225,"column":28},"identifierName":"torus"},"name":"torus"},"computed":false}}],"body":{"type":"BlockStatement","start":8338,"end":8440,"loc":{"start":{"line":225,"column":29},"end":{"line":230,"column":2}},"body":[{"type":"VariableDeclaration","start":8342,"end":8354,"loc":{"start":{"line":226,"column":2},"end":{"line":226,"column":14}},"declarations":[{"type":"VariableDeclarator","start":8346,"end":8354,"loc":{"start":{"line":226,"column":6},"end":{"line":226,"column":14}},"id":{"type":"Identifier","start":8346,"end":8347,"loc":{"start":{"line":226,"column":6},"end":{"line":226,"column":7},"identifierName":"g"},"name":"g"},"init":{"type":"ThisExpression","start":8350,"end":8354,"loc":{"start":{"line":226,"column":10},"end":{"line":226,"column":14}}}}],"kind":"let"},{"type":"ReturnStatement","start":8357,"end":8437,"loc":{"start":{"line":227,"column":2},"end":{"line":229,"column":5}},"argument":{"type":"CallExpression","start":8364,"end":8437,"loc":{"start":{"line":227,"column":9},"end":{"line":229,"column":5}},"callee":{"type":"MemberExpression","start":8364,"end":8398,"loc":{"start":{"line":227,"column":9},"end":{"line":227,"column":43}},"object":{"type":"CallExpression","start":8364,"end":8394,"loc":{"start":{"line":227,"column":9},"end":{"line":227,"column":39}},"callee":{"type":"MemberExpression","start":8364,"end":8372,"loc":{"start":{"line":227,"column":9},"end":{"line":227,"column":17}},"object":{"type":"Identifier","start":8364,"end":8365,"loc":{"start":{"line":227,"column":9},"end":{"line":227,"column":10},"identifierName":"g"},"name":"g"},"property":{"type":"Identifier","start":8366,"end":8372,"loc":{"start":{"line":227,"column":11},"end":{"line":227,"column":17},"identifierName":"neighi"},"name":"neighi"},"computed":false},"arguments":[{"type":"CallExpression","start":8374,"end":8385,"loc":{"start":{"line":227,"column":19},"end":{"line":227,"column":30}},"callee":{"type":"MemberExpression","start":8374,"end":8382,"loc":{"start":{"line":227,"column":19},"end":{"line":227,"column":27}},"object":{"type":"ThisExpression","start":8374,"end":8378,"loc":{"start":{"line":227,"column":19},"end":{"line":227,"column":23}}},"property":{"type":"Identifier","start":8379,"end":8382,"loc":{"start":{"line":227,"column":24},"end":{"line":227,"column":27},"identifierName":"p2i"},"name":"p2i"},"computed":false},"arguments":[{"type":"Identifier","start":8383,"end":8384,"loc":{"start":{"line":227,"column":28},"end":{"line":227,"column":29},"identifierName":"p"},"name":"p"}]},{"type":"Identifier","start":8387,"end":8392,"loc":{"start":{"line":227,"column":32},"end":{"line":227,"column":37},"identifierName":"torus"},"name":"torus"}]},"property":{"type":"Identifier","start":8395,"end":8398,"loc":{"start":{"line":227,"column":40},"end":{"line":227,"column":43},"identifierName":"map"},"name":"map"},"computed":false},"arguments":[{"type":"FunctionExpression","start":8400,"end":8435,"loc":{"start":{"line":227,"column":45},"end":{"line":229,"column":3}},"id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":8409,"end":8410,"loc":{"start":{"line":227,"column":54},"end":{"line":227,"column":55},"identifierName":"i"},"name":"i"}],"body":{"type":"BlockStatement","start":8411,"end":8435,"loc":{"start":{"line":227,"column":56},"end":{"line":229,"column":3}},"body":[{"type":"ReturnStatement","start":8416,"end":8431,"loc":{"start":{"line":228,"column":3},"end":{"line":228,"column":18}},"argument":{"type":"CallExpression","start":8423,"end":8431,"loc":{"start":{"line":228,"column":10},"end":{"line":228,"column":18}},"callee":{"type":"MemberExpression","start":8423,"end":8428,"loc":{"start":{"line":228,"column":10},"end":{"line":228,"column":15}},"object":{"type":"Identifier","start":8423,"end":8424,"loc":{"start":{"line":228,"column":10},"end":{"line":228,"column":11},"identifierName":"g"},"name":"g"},"property":{"type":"Identifier","start":8425,"end":8428,"loc":{"start":{"line":228,"column":12},"end":{"line":228,"column":15},"identifierName":"i2p"},"name":"i2p"},"computed":false},"arguments":[{"type":"Identifier","start":8429,"end":8430,"loc":{"start":{"line":228,"column":16},"end":{"line":228,"column":17},"identifierName":"i"},"name":"i"}]}}],"directives":[]}}]}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The neigh method returns the neighborhood of a pixel p. This function\n\t * uses array coordinates as input and output arguments, but internally\n\t * calls a method 'neighi' which computes neighborhoods using index-\n\t * coordinates. Since neighborhoods depend on the coordinate system, the\n\t * 'neighi' method is defined in the extension class for that specific\n\t * coordinate system.\n\t * @param {ArrayCoordinate} p array coordinates of a specific pixel\n\t * @param {boolean[]} torus are borders of the grid linked so that a cell\n\t * leaving on the right re-enters the grid on the left?\n\t * @return {ArrayCoordinate[]} an array of neighbors of pixel p, where each\n\t * element contains the array coordinates of the neighbor in question.\n\t * ","start":7566,"end":8308,"loc":{"start":{"line":213,"column":1},"end":{"line":224,"column":6}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a value is valid on this type of grid.\n\t * This function forbids trying to set forbidden (negative/float) values\n\t * on an integer grid, which could cause bugs if the setpix(i) methods try\n\t * to set such a value unnoticed.\n\t * @private\n\t * @param {number} t - the value that would be stored on the grid.\n\t * @param {number} [tol=1e-6] - numeric tolerance for comparing a number\n\t * with its rounded version, to check if it is integer (e.g. setting\n\t * a value 1.5 on an integer grid would throw an error, but setting\n\t * 1.000000000001 would not if the tolerance is 1e-6.\n\t * @return {void} - return without problem or throw an error when an\n\t * incorrect value is set.\n\t * ","start":8443,"end":9133,"loc":{"start":{"line":232,"column":1},"end":{"line":244,"column":6}}}]},{"type":"ClassMethod","start":9135,"end":9356,"loc":{"start":{"line":245,"column":1},"end":{"line":251,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":9135,"end":9148,"loc":{"start":{"line":245,"column":1},"end":{"line":245,"column":14},"identifierName":"_isValidValue"},"name":"_isValidValue","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":9151,"end":9152,"loc":{"start":{"line":245,"column":17},"end":{"line":245,"column":18},"identifierName":"t"},"name":"t"},{"type":"AssignmentPattern","start":9154,"end":9164,"loc":{"start":{"line":245,"column":20},"end":{"line":245,"column":30}},"left":{"type":"Identifier","start":9154,"end":9157,"loc":{"start":{"line":245,"column":20},"end":{"line":245,"column":23},"identifierName":"tol"},"name":"tol"},"right":{"type":"NumericLiteral","start":9160,"end":9164,"loc":{"start":{"line":245,"column":26},"end":{"line":245,"column":30}},"extra":{"rawValue":0.000001,"raw":"1e-6"},"value":0.000001}}],"body":{"type":"BlockStatement","start":9167,"end":9356,"loc":{"start":{"line":245,"column":33},"end":{"line":251,"column":2}},"body":[{"type":"IfStatement","start":9171,"end":9353,"loc":{"start":{"line":246,"column":2},"end":{"line":250,"column":3}},"test":{"type":"BinaryExpression","start":9175,"end":9201,"loc":{"start":{"line":246,"column":6},"end":{"line":246,"column":32}},"left":{"type":"MemberExpression","start":9175,"end":9188,"loc":{"start":{"line":246,"column":6},"end":{"line":246,"column":19}},"object":{"type":"ThisExpression","start":9175,"end":9179,"loc":{"start":{"line":246,"column":6},"end":{"line":246,"column":10}}},"property":{"type":"Identifier","start":9180,"end":9188,"loc":{"start":{"line":246,"column":11},"end":{"line":246,"column":19},"identifierName":"datatype"},"name":"datatype"},"computed":false},"operator":"===","right":{"type":"StringLiteral","start":9193,"end":9201,"loc":{"start":{"line":246,"column":24},"end":{"line":246,"column":32}},"extra":{"rawValue":"Uint16","raw":"\"Uint16\""},"value":"Uint16"}},"consequent":{"type":"BlockStatement","start":9203,"end":9353,"loc":{"start":{"line":246,"column":34},"end":{"line":250,"column":3}},"body":[{"type":"IfStatement","start":9208,"end":9349,"loc":{"start":{"line":247,"column":3},"end":{"line":249,"column":4}},"test":{"type":"LogicalExpression","start":9212,"end":9256,"loc":{"start":{"line":247,"column":7},"end":{"line":247,"column":51}},"left":{"type":"BinaryExpression","start":9212,"end":9217,"loc":{"start":{"line":247,"column":7},"end":{"line":247,"column":12}},"left":{"type":"Identifier","start":9212,"end":9213,"loc":{"start":{"line":247,"column":7},"end":{"line":247,"column":8},"identifierName":"t"},"name":"t"},"operator":"<","right":{"type":"NumericLiteral","start":9216,"end":9217,"loc":{"start":{"line":247,"column":11},"end":{"line":247,"column":12}},"extra":{"rawValue":0,"raw":"0"},"value":0}},"operator":"||","right":{"type":"BinaryExpression","start":9221,"end":9256,"loc":{"start":{"line":247,"column":16},"end":{"line":247,"column":51}},"left":{"type":"CallExpression","start":9221,"end":9250,"loc":{"start":{"line":247,"column":16},"end":{"line":247,"column":45}},"callee":{"type":"MemberExpression","start":9221,"end":9229,"loc":{"start":{"line":247,"column":16},"end":{"line":247,"column":24}},"object":{"type":"Identifier","start":9221,"end":9225,"loc":{"start":{"line":247,"column":16},"end":{"line":247,"column":20},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":9226,"end":9229,"loc":{"start":{"line":247,"column":21},"end":{"line":247,"column":24},"identifierName":"abs"},"name":"abs"},"computed":false},"arguments":[{"type":"BinaryExpression","start":9231,"end":9248,"loc":{"start":{"line":247,"column":26},"end":{"line":247,"column":43}},"left":{"type":"Identifier","start":9231,"end":9232,"loc":{"start":{"line":247,"column":26},"end":{"line":247,"column":27},"identifierName":"t"},"name":"t"},"operator":"-","right":{"type":"CallExpression","start":9235,"end":9248,"loc":{"start":{"line":247,"column":30},"end":{"line":247,"column":43}},"callee":{"type":"MemberExpression","start":9235,"end":9245,"loc":{"start":{"line":247,"column":30},"end":{"line":247,"column":40}},"object":{"type":"Identifier","start":9235,"end":9239,"loc":{"start":{"line":247,"column":30},"end":{"line":247,"column":34},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":9240,"end":9245,"loc":{"start":{"line":247,"column":35},"end":{"line":247,"column":40},"identifierName":"round"},"name":"round"},"computed":false},"arguments":[{"type":"Identifier","start":9246,"end":9247,"loc":{"start":{"line":247,"column":41},"end":{"line":247,"column":42},"identifierName":"t"},"name":"t"}]}}]},"operator":">","right":{"type":"Identifier","start":9253,"end":9256,"loc":{"start":{"line":247,"column":48},"end":{"line":247,"column":51},"identifierName":"tol"},"name":"tol"}}},"consequent":{"type":"BlockStatement","start":9259,"end":9349,"loc":{"start":{"line":247,"column":54},"end":{"line":249,"column":4}},"body":[{"type":"ThrowStatement","start":9265,"end":9344,"loc":{"start":{"line":248,"column":4},"end":{"line":248,"column":83}},"argument":{"type":"StringLiteral","start":9272,"end":9342,"loc":{"start":{"line":248,"column":11},"end":{"line":248,"column":81}},"extra":{"rawValue":"You cannot set a negative or floating point number to a Uint16 grid!","raw":"\"You cannot set a negative or floating point number to a Uint16 grid!\"","parenthesized":true,"parenStart":9270},"value":"You cannot set a negative or floating point number to a Uint16 grid!"}}],"directives":[]},"alternate":null}],"directives":[]},"alternate":null}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if a value is valid on this type of grid.\n\t * This function forbids trying to set forbidden (negative/float) values\n\t * on an integer grid, which could cause bugs if the setpix(i) methods try\n\t * to set such a value unnoticed.\n\t * @private\n\t * @param {number} t - the value that would be stored on the grid.\n\t * @param {number} [tol=1e-6] - numeric tolerance for comparing a number\n\t * with its rounded version, to check if it is integer (e.g. setting\n\t * a value 1.5 on an integer grid would throw an error, but setting\n\t * 1.000000000001 would not if the tolerance is 1e-6.\n\t * @return {void} - return without problem or throw an error when an\n\t * incorrect value is set.\n\t * ","start":8443,"end":9133,"loc":{"start":{"line":232,"column":1},"end":{"line":244,"column":6}}}],"trailingComments":[{"type":"CommentBlock","value":"* The setpix method changes the value of a pixel p on the grid to t.\n\t * @param {ArrayCoordinate} p array coordinates of the pixel to change the\n\t * value of\n\t * @param {number} t the value to assign to this pixel. This can\n\t * be integers or floating point numbers, depending on the grid subclass\n\t * used (see eg Grid2D). ","start":9359,"end":9687,"loc":{"start":{"line":253,"column":1},"end":{"line":258,"column":28}}}]},{"type":"ClassMethod","start":9689,"end":9763,"loc":{"start":{"line":259,"column":1},"end":{"line":262,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":9689,"end":9695,"loc":{"start":{"line":259,"column":1},"end":{"line":259,"column":7},"identifierName":"setpix"},"name":"setpix","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":9697,"end":9698,"loc":{"start":{"line":259,"column":9},"end":{"line":259,"column":10},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":9700,"end":9701,"loc":{"start":{"line":259,"column":12},"end":{"line":259,"column":13},"identifierName":"t"},"name":"t"}],"body":{"type":"BlockStatement","start":9703,"end":9763,"loc":{"start":{"line":259,"column":15},"end":{"line":262,"column":2}},"body":[{"type":"ExpressionStatement","start":9707,"end":9728,"loc":{"start":{"line":260,"column":2},"end":{"line":260,"column":23}},"expression":{"type":"CallExpression","start":9707,"end":9728,"loc":{"start":{"line":260,"column":2},"end":{"line":260,"column":23}},"callee":{"type":"MemberExpression","start":9707,"end":9725,"loc":{"start":{"line":260,"column":2},"end":{"line":260,"column":20}},"object":{"type":"ThisExpression","start":9707,"end":9711,"loc":{"start":{"line":260,"column":2},"end":{"line":260,"column":6}}},"property":{"type":"Identifier","start":9712,"end":9725,"loc":{"start":{"line":260,"column":7},"end":{"line":260,"column":20},"identifierName":"_isValidValue"},"name":"_isValidValue"},"computed":false},"arguments":[{"type":"Identifier","start":9726,"end":9727,"loc":{"start":{"line":260,"column":21},"end":{"line":260,"column":22},"identifierName":"t"},"name":"t"}]}},{"type":"ExpressionStatement","start":9731,"end":9760,"loc":{"start":{"line":261,"column":2},"end":{"line":261,"column":31}},"expression":{"type":"AssignmentExpression","start":9731,"end":9760,"loc":{"start":{"line":261,"column":2},"end":{"line":261,"column":31}},"operator":"=","left":{"type":"MemberExpression","start":9731,"end":9756,"loc":{"start":{"line":261,"column":2},"end":{"line":261,"column":27}},"object":{"type":"MemberExpression","start":9731,"end":9743,"loc":{"start":{"line":261,"column":2},"end":{"line":261,"column":14}},"object":{"type":"ThisExpression","start":9731,"end":9735,"loc":{"start":{"line":261,"column":2},"end":{"line":261,"column":6}}},"property":{"type":"Identifier","start":9736,"end":9743,"loc":{"start":{"line":261,"column":7},"end":{"line":261,"column":14},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"CallExpression","start":9744,"end":9755,"loc":{"start":{"line":261,"column":15},"end":{"line":261,"column":26}},"callee":{"type":"MemberExpression","start":9744,"end":9752,"loc":{"start":{"line":261,"column":15},"end":{"line":261,"column":23}},"object":{"type":"ThisExpression","start":9744,"end":9748,"loc":{"start":{"line":261,"column":15},"end":{"line":261,"column":19}}},"property":{"type":"Identifier","start":9749,"end":9752,"loc":{"start":{"line":261,"column":20},"end":{"line":261,"column":23},"identifierName":"p2i"},"name":"p2i"},"computed":false},"arguments":[{"type":"Identifier","start":9753,"end":9754,"loc":{"start":{"line":261,"column":24},"end":{"line":261,"column":25},"identifierName":"p"},"name":"p"}]},"computed":true},"right":{"type":"Identifier","start":9759,"end":9760,"loc":{"start":{"line":261,"column":30},"end":{"line":261,"column":31},"identifierName":"t"},"name":"t"}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The setpix method changes the value of a pixel p on the grid to t.\n\t * @param {ArrayCoordinate} p array coordinates of the pixel to change the\n\t * value of\n\t * @param {number} t the value to assign to this pixel. This can\n\t * be integers or floating point numbers, depending on the grid subclass\n\t * used (see eg Grid2D). ","start":9359,"end":9687,"loc":{"start":{"line":253,"column":1},"end":{"line":258,"column":28}}}],"trailingComments":[{"type":"CommentBlock","value":"* The setpixi method changes the value of a pixel i on the grid to t.\n\t * @param {IndexCoordinate} i index coordinates of the pixel to change the\n\t * value of\n\t * @param {number} t the value to assign to this pixel. This can be integers\n\t * or floating point numbers, depending on the grid subclass used\n\t * (see eg Grid2D).\n\t * ","start":9766,"end":10099,"loc":{"start":{"line":264,"column":1},"end":{"line":270,"column":6}}}]},{"type":"ClassMethod","start":10101,"end":10166,"loc":{"start":{"line":271,"column":1},"end":{"line":274,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":10101,"end":10108,"loc":{"start":{"line":271,"column":1},"end":{"line":271,"column":8},"identifierName":"setpixi"},"name":"setpixi","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":10110,"end":10111,"loc":{"start":{"line":271,"column":10},"end":{"line":271,"column":11},"identifierName":"i"},"name":"i"},{"type":"Identifier","start":10113,"end":10114,"loc":{"start":{"line":271,"column":13},"end":{"line":271,"column":14},"identifierName":"t"},"name":"t"}],"body":{"type":"BlockStatement","start":10116,"end":10166,"loc":{"start":{"line":271,"column":16},"end":{"line":274,"column":2}},"body":[{"type":"ExpressionStatement","start":10120,"end":10141,"loc":{"start":{"line":272,"column":2},"end":{"line":272,"column":23}},"expression":{"type":"CallExpression","start":10120,"end":10141,"loc":{"start":{"line":272,"column":2},"end":{"line":272,"column":23}},"callee":{"type":"MemberExpression","start":10120,"end":10138,"loc":{"start":{"line":272,"column":2},"end":{"line":272,"column":20}},"object":{"type":"ThisExpression","start":10120,"end":10124,"loc":{"start":{"line":272,"column":2},"end":{"line":272,"column":6}}},"property":{"type":"Identifier","start":10125,"end":10138,"loc":{"start":{"line":272,"column":7},"end":{"line":272,"column":20},"identifierName":"_isValidValue"},"name":"_isValidValue"},"computed":false},"arguments":[{"type":"Identifier","start":10139,"end":10140,"loc":{"start":{"line":272,"column":21},"end":{"line":272,"column":22},"identifierName":"t"},"name":"t"}]}},{"type":"ExpressionStatement","start":10144,"end":10163,"loc":{"start":{"line":273,"column":2},"end":{"line":273,"column":21}},"expression":{"type":"AssignmentExpression","start":10144,"end":10163,"loc":{"start":{"line":273,"column":2},"end":{"line":273,"column":21}},"operator":"=","left":{"type":"MemberExpression","start":10144,"end":10159,"loc":{"start":{"line":273,"column":2},"end":{"line":273,"column":17}},"object":{"type":"MemberExpression","start":10144,"end":10156,"loc":{"start":{"line":273,"column":2},"end":{"line":273,"column":14}},"object":{"type":"ThisExpression","start":10144,"end":10148,"loc":{"start":{"line":273,"column":2},"end":{"line":273,"column":6}}},"property":{"type":"Identifier","start":10149,"end":10156,"loc":{"start":{"line":273,"column":7},"end":{"line":273,"column":14},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"Identifier","start":10157,"end":10158,"loc":{"start":{"line":273,"column":15},"end":{"line":273,"column":16},"identifierName":"i"},"name":"i"},"computed":true},"right":{"type":"Identifier","start":10162,"end":10163,"loc":{"start":{"line":273,"column":20},"end":{"line":273,"column":21},"identifierName":"t"},"name":"t"}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The setpixi method changes the value of a pixel i on the grid to t.\n\t * @param {IndexCoordinate} i index coordinates of the pixel to change the\n\t * value of\n\t * @param {number} t the value to assign to this pixel. This can be integers\n\t * or floating point numbers, depending on the grid subclass used\n\t * (see eg Grid2D).\n\t * ","start":9766,"end":10099,"loc":{"start":{"line":264,"column":1},"end":{"line":270,"column":6}}}],"trailingComments":[{"type":"CommentBlock","value":"* The pixt method finds the current value of a pixel p on the grid.\n\t * @param {ArrayCoordinate} p array coordinates of the pixel to find the\n\t * value of\n\t * @return {number} t the value of p on the grid. This can be integers or\n\t * floating point numbers, depending on the grid subclass used (see eg\n\t * Grid2D).\n\t ","start":10169,"end":10490,"loc":{"start":{"line":276,"column":1},"end":{"line":282,"column":4}}}]},{"type":"ClassMethod","start":10492,"end":10540,"loc":{"start":{"line":283,"column":1},"end":{"line":285,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":10492,"end":10496,"loc":{"start":{"line":283,"column":1},"end":{"line":283,"column":5},"identifierName":"pixt"},"name":"pixt","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":10498,"end":10499,"loc":{"start":{"line":283,"column":7},"end":{"line":283,"column":8},"identifierName":"p"},"name":"p"}],"body":{"type":"BlockStatement","start":10501,"end":10540,"loc":{"start":{"line":283,"column":10},"end":{"line":285,"column":2}},"body":[{"type":"ReturnStatement","start":10505,"end":10537,"loc":{"start":{"line":284,"column":2},"end":{"line":284,"column":34}},"argument":{"type":"MemberExpression","start":10512,"end":10537,"loc":{"start":{"line":284,"column":9},"end":{"line":284,"column":34}},"object":{"type":"MemberExpression","start":10512,"end":10524,"loc":{"start":{"line":284,"column":9},"end":{"line":284,"column":21}},"object":{"type":"ThisExpression","start":10512,"end":10516,"loc":{"start":{"line":284,"column":9},"end":{"line":284,"column":13}}},"property":{"type":"Identifier","start":10517,"end":10524,"loc":{"start":{"line":284,"column":14},"end":{"line":284,"column":21},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"CallExpression","start":10525,"end":10536,"loc":{"start":{"line":284,"column":22},"end":{"line":284,"column":33}},"callee":{"type":"MemberExpression","start":10525,"end":10533,"loc":{"start":{"line":284,"column":22},"end":{"line":284,"column":30}},"object":{"type":"ThisExpression","start":10525,"end":10529,"loc":{"start":{"line":284,"column":22},"end":{"line":284,"column":26}}},"property":{"type":"Identifier","start":10530,"end":10533,"loc":{"start":{"line":284,"column":27},"end":{"line":284,"column":30},"identifierName":"p2i"},"name":"p2i"},"computed":false},"arguments":[{"type":"Identifier","start":10534,"end":10535,"loc":{"start":{"line":284,"column":31},"end":{"line":284,"column":32},"identifierName":"p"},"name":"p"}]},"computed":true}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The pixt method finds the current value of a pixel p on the grid.\n\t * @param {ArrayCoordinate} p array coordinates of the pixel to find the\n\t * value of\n\t * @return {number} t the value of p on the grid. This can be integers or\n\t * floating point numbers, depending on the grid subclass used (see eg\n\t * Grid2D).\n\t ","start":10169,"end":10490,"loc":{"start":{"line":276,"column":1},"end":{"line":282,"column":4}}}],"trailingComments":[{"type":"CommentBlock","value":"* The pixti method finds the current value of a pixel i on the grid.\n\t * @param {IndexCoordinate} i index coordinates of the pixel to find the\n\t * value of\n\t * @return {number} t the value of i on the grid. This can be integers or\n\t * floating point numbers, depending on the grid subclass used (see eg\n\t * Grid2D).\n\t","start":10543,"end":10864,"loc":{"start":{"line":287,"column":1},"end":{"line":293,"column":3}}}]},{"type":"ClassMethod","start":10866,"end":10905,"loc":{"start":{"line":294,"column":1},"end":{"line":296,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":10866,"end":10871,"loc":{"start":{"line":294,"column":1},"end":{"line":294,"column":6},"identifierName":"pixti"},"name":"pixti","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":10873,"end":10874,"loc":{"start":{"line":294,"column":8},"end":{"line":294,"column":9},"identifierName":"i"},"name":"i"}],"body":{"type":"BlockStatement","start":10876,"end":10905,"loc":{"start":{"line":294,"column":11},"end":{"line":296,"column":2}},"body":[{"type":"ReturnStatement","start":10880,"end":10902,"loc":{"start":{"line":295,"column":2},"end":{"line":295,"column":24}},"argument":{"type":"MemberExpression","start":10887,"end":10902,"loc":{"start":{"line":295,"column":9},"end":{"line":295,"column":24}},"object":{"type":"MemberExpression","start":10887,"end":10899,"loc":{"start":{"line":295,"column":9},"end":{"line":295,"column":21}},"object":{"type":"ThisExpression","start":10887,"end":10891,"loc":{"start":{"line":295,"column":9},"end":{"line":295,"column":13}}},"property":{"type":"Identifier","start":10892,"end":10899,"loc":{"start":{"line":295,"column":14},"end":{"line":295,"column":21},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"Identifier","start":10900,"end":10901,"loc":{"start":{"line":295,"column":22},"end":{"line":295,"column":23},"identifierName":"i"},"name":"i"},"computed":true}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The pixti method finds the current value of a pixel i on the grid.\n\t * @param {IndexCoordinate} i index coordinates of the pixel to find the\n\t * value of\n\t * @return {number} t the value of i on the grid. This can be integers or\n\t * floating point numbers, depending on the grid subclass used (see eg\n\t * Grid2D).\n\t","start":10543,"end":10864,"loc":{"start":{"line":287,"column":1},"end":{"line":293,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* A pixel on the grid.\n\t * @typedef {Object[]} Pixel\n\t * @property {ArrayCoordinate} Pixel[0] - pixel coordinate\n\t * @property {number} Pixel[1] - pixel value\n\t * ","start":10908,"end":11075,"loc":{"start":{"line":298,"column":1},"end":{"line":302,"column":6}}},{"type":"CommentBlock","value":" /** A pixel on the grid.\n\t * @typedef {Object[]} iPixel\n\t * @property {IndexCoordinate} Pixel[0] - pixel coordinate\n\t * @property {number} Pixel[1] - pixel value\n\t * ","start":11079,"end":11250,"loc":{"start":{"line":304,"column":1},"end":{"line":308,"column":6}}},{"type":"CommentBlock","value":"* This iterator returns locations and values of all non-zero pixels.\n\t * This method isn't actually called because the subclasses implement\n\t * it themselves due to efficiency reasons. It serves as a template to\n\t * document the functionality.\n\t * @abstract\n\t * @return {Pixel} for each pixel, return an array [p,v] where p are\n\t * the pixel's array coordinates on the grid, and v its value.","start":11253,"end":11648,"loc":{"start":{"line":310,"column":1},"end":{"line":316,"column":65}}},{"type":"CommentLine","value":"eslint-disable-next-line require-yield","start":11650,"end":11690,"loc":{"start":{"line":317,"column":1},"end":{"line":317,"column":41}}}]},{"type":"ClassMethod","start":11692,"end":11926,"loc":{"start":{"line":318,"column":1},"end":{"line":329,"column":2}},"static":false,"kind":"method","computed":false,"key":{"type":"Identifier","start":11694,"end":11700,"loc":{"start":{"line":318,"column":3},"end":{"line":318,"column":9},"identifierName":"pixels"},"name":"pixels","leadingComments":null},"id":null,"generator":true,"expression":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":11703,"end":11926,"loc":{"start":{"line":318,"column":12},"end":{"line":329,"column":2}},"body":[{"type":"ThrowStatement","start":11740,"end":11783,"loc":{"start":{"line":320,"column":2},"end":{"line":320,"column":45}},"argument":{"type":"StringLiteral","start":11746,"end":11782,"loc":{"start":{"line":320,"column":8},"end":{"line":320,"column":44}},"extra":{"rawValue":"Iterator 'pixels' not implemented!","raw":"\"Iterator 'pixels' not implemented!\"","parenthesized":true,"parenStart":11745},"value":"Iterator 'pixels' not implemented!","leadingComments":null},"leadingComments":[{"type":"CommentLine","value":"noinspection JSValidateTypes","start":11707,"end":11737,"loc":{"start":{"line":319,"column":2},"end":{"line":319,"column":32}}}],"trailingComments":[{"type":"CommentBlock","value":"\n\t\t// example code:\n\t\tfor( let i of this.pixelsi() ){\n\t\t\tif( this._pixels[i] > 0 ){\n\t\t\t\tyield [this.i2p(i),this._pixels[i]]\n\t\t\t}\n\t\t}","start":11787,"end":11923,"loc":{"start":{"line":322,"column":2},"end":{"line":328,"column":5}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* A pixel on the grid.\n\t * @typedef {Object[]} Pixel\n\t * @property {ArrayCoordinate} Pixel[0] - pixel coordinate\n\t * @property {number} Pixel[1] - pixel value\n\t * ","start":10908,"end":11075,"loc":{"start":{"line":298,"column":1},"end":{"line":302,"column":6}}},{"type":"CommentBlock","value":" /** A pixel on the grid.\n\t * @typedef {Object[]} iPixel\n\t * @property {IndexCoordinate} Pixel[0] - pixel coordinate\n\t * @property {number} Pixel[1] - pixel value\n\t * ","start":11079,"end":11250,"loc":{"start":{"line":304,"column":1},"end":{"line":308,"column":6}}},{"type":"CommentBlock","value":"* This iterator returns locations and values of all non-zero pixels.\n\t * This method isn't actually called because the subclasses implement\n\t * it themselves due to efficiency reasons. It serves as a template to\n\t * document the functionality.\n\t * @abstract\n\t * @return {Pixel} for each pixel, return an array [p,v] where p are\n\t * the pixel's array coordinates on the grid, and v its value.","start":11253,"end":11648,"loc":{"start":{"line":310,"column":1},"end":{"line":316,"column":65}}},{"type":"CommentLine","value":"eslint-disable-next-line require-yield","start":11650,"end":11690,"loc":{"start":{"line":317,"column":1},"end":{"line":317,"column":41}}}],"trailingComments":[{"type":"CommentBlock","value":"* This iterator returns locations all pixels including background.\n\t * This method isn't actually called because the subclasses implement\n\t * it themselves due to efficiency reasons. It serves as a template to\n\t * document the functionality.\n\t * @abstract\n\t * @return {IndexCoordinate} for each pixel, because this method should be\n\t * implemented in a grid subclass.\n\t * ","start":11929,"end":12305,"loc":{"start":{"line":331,"column":1},"end":{"line":338,"column":6}}},{"type":"CommentLine","value":"eslint-disable-next-line require-yield","start":12307,"end":12347,"loc":{"start":{"line":339,"column":1},"end":{"line":339,"column":41}}}]},{"type":"ClassMethod","start":12349,"end":12432,"loc":{"start":{"line":340,"column":1},"end":{"line":343,"column":2}},"static":false,"kind":"method","computed":false,"key":{"type":"Identifier","start":12351,"end":12358,"loc":{"start":{"line":340,"column":3},"end":{"line":340,"column":10},"identifierName":"pixelsi"},"name":"pixelsi","leadingComments":null},"id":null,"generator":true,"expression":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":12361,"end":12432,"loc":{"start":{"line":340,"column":13},"end":{"line":343,"column":2}},"body":[{"type":"ThrowStatement","start":12365,"end":12409,"loc":{"start":{"line":341,"column":2},"end":{"line":341,"column":46}},"argument":{"type":"StringLiteral","start":12371,"end":12408,"loc":{"start":{"line":341,"column":8},"end":{"line":341,"column":45}},"extra":{"rawValue":"Iterator 'pixelsi' not implemented!","raw":"\"Iterator 'pixelsi' not implemented!\"","parenthesized":true,"parenStart":12370},"value":"Iterator 'pixelsi' not implemented!"},"trailingComments":[{"type":"CommentLine","value":"yield undefined","start":12412,"end":12429,"loc":{"start":{"line":342,"column":2},"end":{"line":342,"column":19}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* This iterator returns locations all pixels including background.\n\t * This method isn't actually called because the subclasses implement\n\t * it themselves due to efficiency reasons. It serves as a template to\n\t * document the functionality.\n\t * @abstract\n\t * @return {IndexCoordinate} for each pixel, because this method should be\n\t * implemented in a grid subclass.\n\t * ","start":11929,"end":12305,"loc":{"start":{"line":331,"column":1},"end":{"line":338,"column":6}}},{"type":"CommentLine","value":"eslint-disable-next-line require-yield","start":12307,"end":12347,"loc":{"start":{"line":339,"column":1},"end":{"line":339,"column":41}}}],"trailingComments":[{"type":"CommentBlock","value":"* This method pre-allocates an array of the correct datatype to make\n\t * a copy of the current pixel values. Values are not actually copied yet.\n\t * @return {Uint16Array|Float32Array} an array with an element for each\n\t * pixel. The datatype is determined by the datatype of this._pixels\n\t * (implemented in the subclass), which can be either Uint16Array or\n\t * Float32Array. ","start":12435,"end":12815,"loc":{"start":{"line":345,"column":1},"end":{"line":350,"column":20}}}]},{"type":"ClassMethod","start":12817,"end":13327,"loc":{"start":{"line":351,"column":1},"end":{"line":365,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":12817,"end":12829,"loc":{"start":{"line":351,"column":1},"end":{"line":351,"column":13},"identifierName":"pixelsBuffer"},"name":"pixelsBuffer","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":12832,"end":13327,"loc":{"start":{"line":351,"column":16},"end":{"line":365,"column":2}},"body":[{"type":"ExpressionStatement","start":12970,"end":13027,"loc":{"start":{"line":356,"column":2},"end":{"line":356,"column":59}},"expression":{"type":"AssignmentExpression","start":12970,"end":13027,"loc":{"start":{"line":356,"column":2},"end":{"line":356,"column":59}},"operator":"=","left":{"type":"MemberExpression","start":12970,"end":12988,"loc":{"start":{"line":356,"column":2},"end":{"line":356,"column":20}},"object":{"type":"ThisExpression","start":12970,"end":12974,"loc":{"start":{"line":356,"column":2},"end":{"line":356,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":12975,"end":12988,"loc":{"start":{"line":356,"column":7},"end":{"line":356,"column":20},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false,"leadingComments":null},"right":{"type":"NewExpression","start":12991,"end":13027,"loc":{"start":{"line":356,"column":23},"end":{"line":356,"column":59}},"callee":{"type":"Identifier","start":12995,"end":13006,"loc":{"start":{"line":356,"column":27},"end":{"line":356,"column":38},"identifierName":"Uint16Array"},"name":"Uint16Array"},"arguments":[{"type":"MemberExpression","start":13007,"end":13026,"loc":{"start":{"line":356,"column":39},"end":{"line":356,"column":58}},"object":{"type":"MemberExpression","start":13007,"end":13019,"loc":{"start":{"line":356,"column":39},"end":{"line":356,"column":51}},"object":{"type":"ThisExpression","start":13007,"end":13011,"loc":{"start":{"line":356,"column":39},"end":{"line":356,"column":43}}},"property":{"type":"Identifier","start":13012,"end":13019,"loc":{"start":{"line":356,"column":44},"end":{"line":356,"column":51},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"Identifier","start":13020,"end":13026,"loc":{"start":{"line":356,"column":52},"end":{"line":356,"column":58},"identifierName":"length"},"name":"length"},"computed":false}]},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* For storing a copy of all pixel values; eg for synchronous updating\n\t\t * of some sort.\n\t\t * @type {Uint16Array|Float32Array}","start":12837,"end":12967,"loc":{"start":{"line":353,"column":2},"end":{"line":355,"column":39}}}]},{"type":"IfStatement","start":13032,"end":13324,"loc":{"start":{"line":358,"column":2},"end":{"line":364,"column":3}},"test":{"type":"BinaryExpression","start":13036,"end":13071,"loc":{"start":{"line":358,"column":6},"end":{"line":358,"column":41}},"left":{"type":"MemberExpression","start":13036,"end":13048,"loc":{"start":{"line":358,"column":6},"end":{"line":358,"column":18}},"object":{"type":"ThisExpression","start":13036,"end":13040,"loc":{"start":{"line":358,"column":6},"end":{"line":358,"column":10}}},"property":{"type":"Identifier","start":13041,"end":13048,"loc":{"start":{"line":358,"column":11},"end":{"line":358,"column":18},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"operator":"instanceof","right":{"type":"Identifier","start":13060,"end":13071,"loc":{"start":{"line":358,"column":30},"end":{"line":358,"column":41},"identifierName":"Uint16Array"},"name":"Uint16Array"}},"consequent":{"type":"BlockStatement","start":13073,"end":13139,"loc":{"start":{"line":358,"column":43},"end":{"line":360,"column":3}},"body":[{"type":"ExpressionStatement","start":13078,"end":13135,"loc":{"start":{"line":359,"column":3},"end":{"line":359,"column":60}},"expression":{"type":"AssignmentExpression","start":13078,"end":13135,"loc":{"start":{"line":359,"column":3},"end":{"line":359,"column":60}},"operator":"=","left":{"type":"MemberExpression","start":13078,"end":13096,"loc":{"start":{"line":359,"column":3},"end":{"line":359,"column":21}},"object":{"type":"ThisExpression","start":13078,"end":13082,"loc":{"start":{"line":359,"column":3},"end":{"line":359,"column":7}}},"property":{"type":"Identifier","start":13083,"end":13096,"loc":{"start":{"line":359,"column":8},"end":{"line":359,"column":21},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false},"right":{"type":"NewExpression","start":13099,"end":13135,"loc":{"start":{"line":359,"column":24},"end":{"line":359,"column":60}},"callee":{"type":"Identifier","start":13103,"end":13114,"loc":{"start":{"line":359,"column":28},"end":{"line":359,"column":39},"identifierName":"Uint16Array"},"name":"Uint16Array"},"arguments":[{"type":"MemberExpression","start":13115,"end":13134,"loc":{"start":{"line":359,"column":40},"end":{"line":359,"column":59}},"object":{"type":"MemberExpression","start":13115,"end":13127,"loc":{"start":{"line":359,"column":40},"end":{"line":359,"column":52}},"object":{"type":"ThisExpression","start":13115,"end":13119,"loc":{"start":{"line":359,"column":40},"end":{"line":359,"column":44}}},"property":{"type":"Identifier","start":13120,"end":13127,"loc":{"start":{"line":359,"column":45},"end":{"line":359,"column":52},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"Identifier","start":13128,"end":13134,"loc":{"start":{"line":359,"column":53},"end":{"line":359,"column":59},"identifierName":"length"},"name":"length"},"computed":false}]}}}],"directives":[]},"alternate":{"type":"IfStatement","start":13145,"end":13324,"loc":{"start":{"line":360,"column":9},"end":{"line":364,"column":3}},"test":{"type":"BinaryExpression","start":13149,"end":13185,"loc":{"start":{"line":360,"column":13},"end":{"line":360,"column":49}},"left":{"type":"MemberExpression","start":13149,"end":13161,"loc":{"start":{"line":360,"column":13},"end":{"line":360,"column":25}},"object":{"type":"ThisExpression","start":13149,"end":13153,"loc":{"start":{"line":360,"column":13},"end":{"line":360,"column":17}}},"property":{"type":"Identifier","start":13154,"end":13161,"loc":{"start":{"line":360,"column":18},"end":{"line":360,"column":25},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"operator":"instanceof","right":{"type":"Identifier","start":13173,"end":13185,"loc":{"start":{"line":360,"column":37},"end":{"line":360,"column":49},"identifierName":"Float32Array"},"name":"Float32Array"}},"consequent":{"type":"BlockStatement","start":13187,"end":13254,"loc":{"start":{"line":360,"column":51},"end":{"line":362,"column":3}},"body":[{"type":"ExpressionStatement","start":13192,"end":13250,"loc":{"start":{"line":361,"column":3},"end":{"line":361,"column":61}},"expression":{"type":"AssignmentExpression","start":13192,"end":13250,"loc":{"start":{"line":361,"column":3},"end":{"line":361,"column":61}},"operator":"=","left":{"type":"MemberExpression","start":13192,"end":13210,"loc":{"start":{"line":361,"column":3},"end":{"line":361,"column":21}},"object":{"type":"ThisExpression","start":13192,"end":13196,"loc":{"start":{"line":361,"column":3},"end":{"line":361,"column":7}}},"property":{"type":"Identifier","start":13197,"end":13210,"loc":{"start":{"line":361,"column":8},"end":{"line":361,"column":21},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false},"right":{"type":"NewExpression","start":13213,"end":13250,"loc":{"start":{"line":361,"column":24},"end":{"line":361,"column":61}},"callee":{"type":"Identifier","start":13217,"end":13229,"loc":{"start":{"line":361,"column":28},"end":{"line":361,"column":40},"identifierName":"Float32Array"},"name":"Float32Array"},"arguments":[{"type":"MemberExpression","start":13230,"end":13249,"loc":{"start":{"line":361,"column":41},"end":{"line":361,"column":60}},"object":{"type":"MemberExpression","start":13230,"end":13242,"loc":{"start":{"line":361,"column":41},"end":{"line":361,"column":53}},"object":{"type":"ThisExpression","start":13230,"end":13234,"loc":{"start":{"line":361,"column":41},"end":{"line":361,"column":45}}},"property":{"type":"Identifier","start":13235,"end":13242,"loc":{"start":{"line":361,"column":46},"end":{"line":361,"column":53},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"Identifier","start":13243,"end":13249,"loc":{"start":{"line":361,"column":54},"end":{"line":361,"column":60},"identifierName":"length"},"name":"length"},"computed":false}]}}}],"directives":[]},"alternate":{"type":"BlockStatement","start":13260,"end":13324,"loc":{"start":{"line":362,"column":9},"end":{"line":364,"column":3}},"body":[{"type":"ThrowStatement","start":13265,"end":13320,"loc":{"start":{"line":363,"column":3},"end":{"line":363,"column":58}},"argument":{"type":"BinaryExpression","start":13271,"end":13319,"loc":{"start":{"line":363,"column":9},"end":{"line":363,"column":57}},"left":{"type":"StringLiteral","start":13271,"end":13295,"loc":{"start":{"line":363,"column":9},"end":{"line":363,"column":33}},"extra":{"rawValue":"unsupported datatype: ","raw":"\"unsupported datatype: \""},"value":"unsupported datatype: "},"operator":"+","right":{"type":"UnaryExpression","start":13299,"end":13318,"loc":{"start":{"line":363,"column":37},"end":{"line":363,"column":56}},"operator":"typeof","prefix":true,"argument":{"type":"MemberExpression","start":13306,"end":13318,"loc":{"start":{"line":363,"column":44},"end":{"line":363,"column":56}},"object":{"type":"ThisExpression","start":13306,"end":13310,"loc":{"start":{"line":363,"column":44},"end":{"line":363,"column":48}}},"property":{"type":"Identifier","start":13311,"end":13318,"loc":{"start":{"line":363,"column":49},"end":{"line":363,"column":56},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"extra":{"parenthesizedArgument":false,"parenthesized":true,"parenStart":13298}},"extra":{"parenthesized":true,"parenStart":13270}}}],"directives":[]}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* This method pre-allocates an array of the correct datatype to make\n\t * a copy of the current pixel values. Values are not actually copied yet.\n\t * @return {Uint16Array|Float32Array} an array with an element for each\n\t * pixel. The datatype is determined by the datatype of this._pixels\n\t * (implemented in the subclass), which can be either Uint16Array or\n\t * Float32Array. ","start":12435,"end":12815,"loc":{"start":{"line":345,"column":1},"end":{"line":350,"column":20}}}],"trailingComments":[{"type":"CommentBlock","value":"* Template method to compute the gradient at location i on the grid\n\t * (location given in index coordinates).\n\t * This method throws an error, which is overwritten when a subclass\n\t * implements a gradienti method.\n\t * @param {IndexCoordinate} i index coordinate of a pixel to compute the\n\t * gradient at.\n\t * @return {number[]} the gradient\n\t * @see https://en.wikipedia.org/wiki/Gradient","start":13330,"end":13724,"loc":{"start":{"line":367,"column":1},"end":{"line":374,"column":49}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":13726,"end":13767,"loc":{"start":{"line":375,"column":1},"end":{"line":375,"column":42}}}]},{"type":"ClassMethod","start":13769,"end":13835,"loc":{"start":{"line":376,"column":1},"end":{"line":378,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":13769,"end":13778,"loc":{"start":{"line":376,"column":1},"end":{"line":376,"column":10},"identifierName":"gradienti"},"name":"gradienti","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":13780,"end":13781,"loc":{"start":{"line":376,"column":12},"end":{"line":376,"column":13},"identifierName":"i"},"name":"i"}],"body":{"type":"BlockStatement","start":13783,"end":13835,"loc":{"start":{"line":376,"column":15},"end":{"line":378,"column":2}},"body":[{"type":"ThrowStatement","start":13787,"end":13832,"loc":{"start":{"line":377,"column":2},"end":{"line":377,"column":47}},"argument":{"type":"StringLiteral","start":13793,"end":13831,"loc":{"start":{"line":377,"column":8},"end":{"line":377,"column":46}},"extra":{"rawValue":"method 'gradienti' not implemented! ","raw":"\"method 'gradienti' not implemented! \"","parenthesized":true,"parenStart":13792},"value":"method 'gradienti' not implemented! "}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Template method to compute the gradient at location i on the grid\n\t * (location given in index coordinates).\n\t * This method throws an error, which is overwritten when a subclass\n\t * implements a gradienti method.\n\t * @param {IndexCoordinate} i index coordinate of a pixel to compute the\n\t * gradient at.\n\t * @return {number[]} the gradient\n\t * @see https://en.wikipedia.org/wiki/Gradient","start":13330,"end":13724,"loc":{"start":{"line":367,"column":1},"end":{"line":374,"column":49}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":13726,"end":13767,"loc":{"start":{"line":375,"column":1},"end":{"line":375,"column":42}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method to compute the gradient at location p on the grid (location\n\t * given in array coordinates). It internally calls the gradienti\n\t * method using index coordinates, which should be implemented in the grid\n\t * subclass.\n\t * @param {ArrayCoordinate} p array coordinates of a pixel p to compute\n\t * the gradient at\n\t * @return {number} the gradient at position p.\n\t * @see https://en.wikipedia.org/wiki/Gradient","start":13838,"end":14257,"loc":{"start":{"line":380,"column":1},"end":{"line":387,"column":49}}}]},{"type":"ClassMethod","start":14259,"end":14350,"loc":{"start":{"line":388,"column":1},"end":{"line":391,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":14259,"end":14267,"loc":{"start":{"line":388,"column":1},"end":{"line":388,"column":9},"identifierName":"gradient"},"name":"gradient","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":14269,"end":14270,"loc":{"start":{"line":388,"column":11},"end":{"line":388,"column":12},"identifierName":"p"},"name":"p"}],"body":{"type":"BlockStatement","start":14272,"end":14350,"loc":{"start":{"line":388,"column":14},"end":{"line":391,"column":2}},"body":[{"type":"ReturnStatement","start":14309,"end":14347,"loc":{"start":{"line":390,"column":2},"end":{"line":390,"column":40}},"argument":{"type":"CallExpression","start":14316,"end":14347,"loc":{"start":{"line":390,"column":9},"end":{"line":390,"column":40}},"callee":{"type":"MemberExpression","start":14316,"end":14330,"loc":{"start":{"line":390,"column":9},"end":{"line":390,"column":23}},"object":{"type":"ThisExpression","start":14316,"end":14320,"loc":{"start":{"line":390,"column":9},"end":{"line":390,"column":13}},"leadingComments":null},"property":{"type":"Identifier","start":14321,"end":14330,"loc":{"start":{"line":390,"column":14},"end":{"line":390,"column":23},"identifierName":"gradienti"},"name":"gradienti"},"computed":false,"leadingComments":null},"arguments":[{"type":"CallExpression","start":14332,"end":14345,"loc":{"start":{"line":390,"column":25},"end":{"line":390,"column":38}},"callee":{"type":"MemberExpression","start":14332,"end":14340,"loc":{"start":{"line":390,"column":25},"end":{"line":390,"column":33}},"object":{"type":"ThisExpression","start":14332,"end":14336,"loc":{"start":{"line":390,"column":25},"end":{"line":390,"column":29}}},"property":{"type":"Identifier","start":14337,"end":14340,"loc":{"start":{"line":390,"column":30},"end":{"line":390,"column":33},"identifierName":"p2i"},"name":"p2i"},"computed":false},"arguments":[{"type":"Identifier","start":14342,"end":14343,"loc":{"start":{"line":390,"column":35},"end":{"line":390,"column":36},"identifierName":"p"},"name":"p"}]}],"leadingComments":null},"leadingComments":[{"type":"CommentLine","value":"noinspection JSValidateTypes","start":14276,"end":14306,"loc":{"start":{"line":389,"column":2},"end":{"line":389,"column":32}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method to compute the gradient at location p on the grid (location\n\t * given in array coordinates). It internally calls the gradienti\n\t * method using index coordinates, which should be implemented in the grid\n\t * subclass.\n\t * @param {ArrayCoordinate} p array coordinates of a pixel p to compute\n\t * the gradient at\n\t * @return {number} the gradient at position p.\n\t * @see https://en.wikipedia.org/wiki/Gradient","start":13838,"end":14257,"loc":{"start":{"line":380,"column":1},"end":{"line":387,"column":49}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method to compute the laplacian at location p on the grid\n\t * (location given in array coordinates). It internally calls the laplaciani\n\t * method that does the same but uses index coordinates.\n\t * @param {ArrayCoordinate} p array coordinates of a pixel p to compute the\n\t * laplacian at\n\t * @return {number} the laplacian at position p.\n\t * @see https://en.wikipedia.org/wiki/Laplace_operator#Coordinate_expressions ","start":14353,"end":14776,"loc":{"start":{"line":393,"column":1},"end":{"line":399,"column":81}}}]},{"type":"ClassMethod","start":14778,"end":14838,"loc":{"start":{"line":400,"column":1},"end":{"line":402,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":14778,"end":14787,"loc":{"start":{"line":400,"column":1},"end":{"line":400,"column":10},"identifierName":"laplacian"},"name":"laplacian","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":14789,"end":14790,"loc":{"start":{"line":400,"column":12},"end":{"line":400,"column":13},"identifierName":"p"},"name":"p"}],"body":{"type":"BlockStatement","start":14792,"end":14838,"loc":{"start":{"line":400,"column":15},"end":{"line":402,"column":2}},"body":[{"type":"ReturnStatement","start":14796,"end":14835,"loc":{"start":{"line":401,"column":2},"end":{"line":401,"column":41}},"argument":{"type":"CallExpression","start":14803,"end":14835,"loc":{"start":{"line":401,"column":9},"end":{"line":401,"column":41}},"callee":{"type":"MemberExpression","start":14803,"end":14818,"loc":{"start":{"line":401,"column":9},"end":{"line":401,"column":24}},"object":{"type":"ThisExpression","start":14803,"end":14807,"loc":{"start":{"line":401,"column":9},"end":{"line":401,"column":13}}},"property":{"type":"Identifier","start":14808,"end":14818,"loc":{"start":{"line":401,"column":14},"end":{"line":401,"column":24},"identifierName":"laplaciani"},"name":"laplaciani"},"computed":false},"arguments":[{"type":"CallExpression","start":14820,"end":14833,"loc":{"start":{"line":401,"column":26},"end":{"line":401,"column":39}},"callee":{"type":"MemberExpression","start":14820,"end":14828,"loc":{"start":{"line":401,"column":26},"end":{"line":401,"column":34}},"object":{"type":"ThisExpression","start":14820,"end":14824,"loc":{"start":{"line":401,"column":26},"end":{"line":401,"column":30}}},"property":{"type":"Identifier","start":14825,"end":14828,"loc":{"start":{"line":401,"column":31},"end":{"line":401,"column":34},"identifierName":"p2i"},"name":"p2i"},"computed":false},"arguments":[{"type":"Identifier","start":14830,"end":14831,"loc":{"start":{"line":401,"column":36},"end":{"line":401,"column":37},"identifierName":"p"},"name":"p"}]}]}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method to compute the laplacian at location p on the grid\n\t * (location given in array coordinates). It internally calls the laplaciani\n\t * method that does the same but uses index coordinates.\n\t * @param {ArrayCoordinate} p array coordinates of a pixel p to compute the\n\t * laplacian at\n\t * @return {number} the laplacian at position p.\n\t * @see https://en.wikipedia.org/wiki/Laplace_operator#Coordinate_expressions ","start":14353,"end":14776,"loc":{"start":{"line":393,"column":1},"end":{"line":399,"column":81}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n\t * A method to compute the Neumann neighborhood should be implemented in the\n\t * Grid subclass if the laplacian (see below) is used.\n\t * This mock function ensures that an error is thrown when there is no\n\t * method called neighNeumanni in the grid subclass.\n\t * @abstract\n\t * @see https://en.wikipedia.org/wiki/Von_Neumann_neighborhood\n\t * @param {IndexCoordinate} i - location of the pixel to get neighbors of.\n\t * @param {boolean[]} [torus=[true,true]] - does the grid have linked\n\t * borders? Defaults to the setting on this grid, see {@link torus}\n\t * @return {IndexCoordinate[]} - an array of coordinates for all the neighbors of i.\n\t ","start":14841,"end":15489,"loc":{"start":{"line":404,"column":1},"end":{"line":415,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars,require-yield","start":15491,"end":15546,"loc":{"start":{"line":416,"column":1},"end":{"line":416,"column":56}}}]},{"type":"ClassMethod","start":15548,"end":15730,"loc":{"start":{"line":417,"column":1},"end":{"line":420,"column":2}},"static":false,"kind":"method","computed":false,"key":{"type":"Identifier","start":15550,"end":15563,"loc":{"start":{"line":417,"column":3},"end":{"line":417,"column":16},"identifierName":"neighNeumanni"},"name":"neighNeumanni","leadingComments":null},"id":null,"generator":true,"expression":false,"async":false,"params":[{"type":"Identifier","start":15566,"end":15567,"loc":{"start":{"line":417,"column":19},"end":{"line":417,"column":20},"identifierName":"i"},"name":"i"},{"type":"AssignmentPattern","start":15569,"end":15587,"loc":{"start":{"line":417,"column":22},"end":{"line":417,"column":40}},"left":{"type":"Identifier","start":15569,"end":15574,"loc":{"start":{"line":417,"column":22},"end":{"line":417,"column":27},"identifierName":"torus"},"name":"torus"},"right":{"type":"MemberExpression","start":15577,"end":15587,"loc":{"start":{"line":417,"column":30},"end":{"line":417,"column":40}},"object":{"type":"ThisExpression","start":15577,"end":15581,"loc":{"start":{"line":417,"column":30},"end":{"line":417,"column":34}}},"property":{"type":"Identifier","start":15582,"end":15587,"loc":{"start":{"line":417,"column":35},"end":{"line":417,"column":40},"identifierName":"torus"},"name":"torus"},"computed":false}}],"body":{"type":"BlockStatement","start":15589,"end":15730,"loc":{"start":{"line":417,"column":42},"end":{"line":420,"column":2}},"body":[{"type":"ThrowStatement","start":15593,"end":15727,"loc":{"start":{"line":418,"column":2},"end":{"line":419,"column":65}},"argument":{"type":"BinaryExpression","start":15600,"end":15726,"loc":{"start":{"line":418,"column":9},"end":{"line":419,"column":64}},"left":{"type":"StringLiteral","start":15600,"end":15659,"loc":{"start":{"line":418,"column":9},"end":{"line":418,"column":68}},"extra":{"rawValue":"Trying to call the method neighNeumanni, but you haven't ","raw":"\"Trying to call the method neighNeumanni, but you haven't \""},"value":"Trying to call the method neighNeumanni, but you haven't "},"operator":"+","right":{"type":"StringLiteral","start":15665,"end":15726,"loc":{"start":{"line":419,"column":3},"end":{"line":419,"column":64}},"extra":{"rawValue":"implemented this method in the Grid subclass you are using!","raw":"\"implemented this method in the Grid subclass you are using!\""},"value":"implemented this method in the Grid subclass you are using!"},"extra":{"parenthesized":true,"parenStart":15598}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"*\n\t * A method to compute the Neumann neighborhood should be implemented in the\n\t * Grid subclass if the laplacian (see below) is used.\n\t * This mock function ensures that an error is thrown when there is no\n\t * method called neighNeumanni in the grid subclass.\n\t * @abstract\n\t * @see https://en.wikipedia.org/wiki/Von_Neumann_neighborhood\n\t * @param {IndexCoordinate} i - location of the pixel to get neighbors of.\n\t * @param {boolean[]} [torus=[true,true]] - does the grid have linked\n\t * borders? Defaults to the setting on this grid, see {@link torus}\n\t * @return {IndexCoordinate[]} - an array of coordinates for all the neighbors of i.\n\t ","start":14841,"end":15489,"loc":{"start":{"line":404,"column":1},"end":{"line":415,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars,require-yield","start":15491,"end":15546,"loc":{"start":{"line":416,"column":1},"end":{"line":416,"column":56}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method to compute the laplacian at location i on the grid (location\n\t * given in index coordinates). It internally uses the neighNeumanni method\n\t * to compute a Neumann neighborhood, which should be implemented in the\n\t * grid subclass. It then uses the finite difference method (see link) with\n\t * h = 1.\n\t * @param {IndexCoordinate} i index coordinates of a pixel to compute the\n\t * laplacian at\n\t * @return {number} the laplacian at position p.\n\t * @see https://en.wikipedia.org/wiki/Laplace_operator#Coordinate_expressions\n\t * @see https://en.wikipedia.org/wiki/Discrete_Laplace_operator#Finite_differences\n\t * ","start":15733,"end":16355,"loc":{"start":{"line":422,"column":1},"end":{"line":432,"column":6}}}]},{"type":"ClassMethod","start":16357,"end":17001,"loc":{"start":{"line":433,"column":1},"end":{"line":451,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":16357,"end":16367,"loc":{"start":{"line":433,"column":1},"end":{"line":433,"column":11},"identifierName":"laplaciani"},"name":"laplaciani","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":16369,"end":16370,"loc":{"start":{"line":433,"column":13},"end":{"line":433,"column":14},"identifierName":"i"},"name":"i"}],"body":{"type":"BlockStatement","start":16372,"end":17001,"loc":{"start":{"line":433,"column":16},"end":{"line":451,"column":2}},"body":[{"type":"VariableDeclaration","start":16376,"end":16392,"loc":{"start":{"line":434,"column":2},"end":{"line":434,"column":18}},"declarations":[{"type":"VariableDeclarator","start":16380,"end":16385,"loc":{"start":{"line":434,"column":6},"end":{"line":434,"column":11}},"id":{"type":"Identifier","start":16380,"end":16381,"loc":{"start":{"line":434,"column":6},"end":{"line":434,"column":7},"identifierName":"L"},"name":"L"},"init":{"type":"NumericLiteral","start":16384,"end":16385,"loc":{"start":{"line":434,"column":10},"end":{"line":434,"column":11}},"extra":{"rawValue":0,"raw":"0"},"value":0}},{"type":"VariableDeclarator","start":16387,"end":16392,"loc":{"start":{"line":434,"column":13},"end":{"line":434,"column":18}},"id":{"type":"Identifier","start":16387,"end":16388,"loc":{"start":{"line":434,"column":13},"end":{"line":434,"column":14},"identifierName":"n"},"name":"n"},"init":{"type":"NumericLiteral","start":16391,"end":16392,"loc":{"start":{"line":434,"column":17},"end":{"line":434,"column":18}},"extra":{"rawValue":0,"raw":"0"},"value":0,"leadingComments":null,"trailingComments":null},"trailingComments":null}],"kind":"let","trailingComments":[{"type":"CommentLine","value":" For now: forbid computing a laplacian on an integer grid as it makes","start":16396,"end":16467,"loc":{"start":{"line":436,"column":2},"end":{"line":436,"column":73}}},{"type":"CommentLine","value":" no sense and could happen by accident if you forget to specify the","start":16470,"end":16539,"loc":{"start":{"line":437,"column":2},"end":{"line":437,"column":71}}},{"type":"CommentLine","value":" datatype.","start":16542,"end":16554,"loc":{"start":{"line":438,"column":2},"end":{"line":438,"column":14}}},{"type":"CommentLine","value":" If this is too strict, we can set an option to overrule this error.","start":16557,"end":16627,"loc":{"start":{"line":439,"column":2},"end":{"line":439,"column":72}}},{"type":"CommentLine","value":" This way you still get to see it if you try this by accident.","start":16630,"end":16694,"loc":{"start":{"line":440,"column":2},"end":{"line":440,"column":66}}}]},{"type":"IfStatement","start":16697,"end":16850,"loc":{"start":{"line":441,"column":2},"end":{"line":444,"column":3}},"test":{"type":"BinaryExpression","start":16701,"end":16727,"loc":{"start":{"line":441,"column":6},"end":{"line":441,"column":32}},"left":{"type":"MemberExpression","start":16701,"end":16714,"loc":{"start":{"line":441,"column":6},"end":{"line":441,"column":19}},"object":{"type":"ThisExpression","start":16701,"end":16705,"loc":{"start":{"line":441,"column":6},"end":{"line":441,"column":10}},"leadingComments":null},"property":{"type":"Identifier","start":16706,"end":16714,"loc":{"start":{"line":441,"column":11},"end":{"line":441,"column":19},"identifierName":"datatype"},"name":"datatype"},"computed":false,"leadingComments":null},"operator":"===","right":{"type":"StringLiteral","start":16719,"end":16727,"loc":{"start":{"line":441,"column":24},"end":{"line":441,"column":32}},"extra":{"rawValue":"Uint16","raw":"\"Uint16\""},"value":"Uint16"},"leadingComments":null},"consequent":{"type":"BlockStatement","start":16729,"end":16850,"loc":{"start":{"line":441,"column":34},"end":{"line":444,"column":3}},"body":[{"type":"ThrowStatement","start":16734,"end":16846,"loc":{"start":{"line":442,"column":3},"end":{"line":443,"column":43}},"argument":{"type":"BinaryExpression","start":16740,"end":16845,"loc":{"start":{"line":442,"column":9},"end":{"line":443,"column":42}},"left":{"type":"StringLiteral","start":16740,"end":16800,"loc":{"start":{"line":442,"column":9},"end":{"line":442,"column":69}},"extra":{"rawValue":"Diffusion/laplacian methods do not work on a Uint16 grid! ","raw":"\"Diffusion/laplacian methods do not work on a Uint16 grid! \""},"value":"Diffusion/laplacian methods do not work on a Uint16 grid! "},"operator":"+","right":{"type":"StringLiteral","start":16807,"end":16845,"loc":{"start":{"line":443,"column":4},"end":{"line":443,"column":42}},"extra":{"rawValue":"Consider setting datatype='Float32'.","raw":"\"Consider setting datatype='Float32'.\""},"value":"Consider setting datatype='Float32'."},"extra":{"parenthesized":true,"parenStart":16739}}}],"directives":[],"trailingComments":null},"alternate":null,"leadingComments":[{"type":"CommentLine","value":" For now: forbid computing a laplacian on an integer grid as it makes","start":16396,"end":16467,"loc":{"start":{"line":436,"column":2},"end":{"line":436,"column":73}}},{"type":"CommentLine","value":" no sense and could happen by accident if you forget to specify the","start":16470,"end":16539,"loc":{"start":{"line":437,"column":2},"end":{"line":437,"column":71}}},{"type":"CommentLine","value":" datatype.","start":16542,"end":16554,"loc":{"start":{"line":438,"column":2},"end":{"line":438,"column":14}}},{"type":"CommentLine","value":" If this is too strict, we can set an option to overrule this error.","start":16557,"end":16627,"loc":{"start":{"line":439,"column":2},"end":{"line":439,"column":72}}},{"type":"CommentLine","value":" This way you still get to see it if you try this by accident.","start":16630,"end":16694,"loc":{"start":{"line":440,"column":2},"end":{"line":440,"column":66}}}],"trailingComments":[{"type":"CommentLine","value":"noinspection JSUnresolvedFunction","start":16854,"end":16889,"loc":{"start":{"line":446,"column":2},"end":{"line":446,"column":37}}}]},{"type":"ForOfStatement","start":16892,"end":16964,"loc":{"start":{"line":447,"column":2},"end":{"line":449,"column":3}},"left":{"type":"VariableDeclaration","start":16897,"end":16902,"loc":{"start":{"line":447,"column":7},"end":{"line":447,"column":12}},"declarations":[{"type":"VariableDeclarator","start":16901,"end":16902,"loc":{"start":{"line":447,"column":11},"end":{"line":447,"column":12}},"id":{"type":"Identifier","start":16901,"end":16902,"loc":{"start":{"line":447,"column":11},"end":{"line":447,"column":12},"identifierName":"x"},"name":"x","leadingComments":null},"init":null,"leadingComments":null}],"kind":"let","leadingComments":null},"right":{"type":"CallExpression","start":16906,"end":16927,"loc":{"start":{"line":447,"column":16},"end":{"line":447,"column":37}},"callee":{"type":"MemberExpression","start":16906,"end":16924,"loc":{"start":{"line":447,"column":16},"end":{"line":447,"column":34}},"object":{"type":"ThisExpression","start":16906,"end":16910,"loc":{"start":{"line":447,"column":16},"end":{"line":447,"column":20}}},"property":{"type":"Identifier","start":16911,"end":16924,"loc":{"start":{"line":447,"column":21},"end":{"line":447,"column":34},"identifierName":"neighNeumanni"},"name":"neighNeumanni"},"computed":false},"arguments":[{"type":"Identifier","start":16925,"end":16926,"loc":{"start":{"line":447,"column":35},"end":{"line":447,"column":36},"identifierName":"i"},"name":"i"}]},"body":{"type":"BlockStatement","start":16929,"end":16964,"loc":{"start":{"line":447,"column":39},"end":{"line":449,"column":3}},"body":[{"type":"ExpressionStatement","start":16934,"end":16955,"loc":{"start":{"line":448,"column":3},"end":{"line":448,"column":24}},"expression":{"type":"AssignmentExpression","start":16934,"end":16954,"loc":{"start":{"line":448,"column":3},"end":{"line":448,"column":23}},"operator":"+=","left":{"type":"Identifier","start":16934,"end":16935,"loc":{"start":{"line":448,"column":3},"end":{"line":448,"column":4},"identifierName":"L"},"name":"L"},"right":{"type":"CallExpression","start":16939,"end":16954,"loc":{"start":{"line":448,"column":8},"end":{"line":448,"column":23}},"callee":{"type":"MemberExpression","start":16939,"end":16949,"loc":{"start":{"line":448,"column":8},"end":{"line":448,"column":18}},"object":{"type":"ThisExpression","start":16939,"end":16943,"loc":{"start":{"line":448,"column":8},"end":{"line":448,"column":12}}},"property":{"type":"Identifier","start":16944,"end":16949,"loc":{"start":{"line":448,"column":13},"end":{"line":448,"column":18},"identifierName":"pixti"},"name":"pixti"},"computed":false},"arguments":[{"type":"Identifier","start":16951,"end":16952,"loc":{"start":{"line":448,"column":20},"end":{"line":448,"column":21},"identifierName":"x"},"name":"x"}]}}},{"type":"ExpressionStatement","start":16956,"end":16960,"loc":{"start":{"line":448,"column":25},"end":{"line":448,"column":29}},"expression":{"type":"UpdateExpression","start":16956,"end":16960,"loc":{"start":{"line":448,"column":25},"end":{"line":448,"column":29}},"operator":"++","prefix":false,"argument":{"type":"Identifier","start":16956,"end":16957,"loc":{"start":{"line":448,"column":25},"end":{"line":448,"column":26},"identifierName":"n"},"name":"n"}}}],"directives":[]},"leadingComments":[{"type":"CommentLine","value":"noinspection JSUnresolvedFunction","start":16854,"end":16889,"loc":{"start":{"line":446,"column":2},"end":{"line":446,"column":37}}}]},{"type":"ReturnStatement","start":16968,"end":16998,"loc":{"start":{"line":450,"column":2},"end":{"line":450,"column":32}},"argument":{"type":"BinaryExpression","start":16975,"end":16998,"loc":{"start":{"line":450,"column":9},"end":{"line":450,"column":32}},"left":{"type":"Identifier","start":16975,"end":16976,"loc":{"start":{"line":450,"column":9},"end":{"line":450,"column":10},"identifierName":"L"},"name":"L"},"operator":"-","right":{"type":"BinaryExpression","start":16979,"end":16998,"loc":{"start":{"line":450,"column":13},"end":{"line":450,"column":32}},"left":{"type":"Identifier","start":16979,"end":16980,"loc":{"start":{"line":450,"column":13},"end":{"line":450,"column":14},"identifierName":"n"},"name":"n"},"operator":"*","right":{"type":"CallExpression","start":16983,"end":16998,"loc":{"start":{"line":450,"column":17},"end":{"line":450,"column":32}},"callee":{"type":"MemberExpression","start":16983,"end":16993,"loc":{"start":{"line":450,"column":17},"end":{"line":450,"column":27}},"object":{"type":"ThisExpression","start":16983,"end":16987,"loc":{"start":{"line":450,"column":17},"end":{"line":450,"column":21}}},"property":{"type":"Identifier","start":16988,"end":16993,"loc":{"start":{"line":450,"column":22},"end":{"line":450,"column":27},"identifierName":"pixti"},"name":"pixti"},"computed":false},"arguments":[{"type":"Identifier","start":16995,"end":16996,"loc":{"start":{"line":450,"column":29},"end":{"line":450,"column":30},"identifierName":"i"},"name":"i"}]}}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method to compute the laplacian at location i on the grid (location\n\t * given in index coordinates). It internally uses the neighNeumanni method\n\t * to compute a Neumann neighborhood, which should be implemented in the\n\t * grid subclass. It then uses the finite difference method (see link) with\n\t * h = 1.\n\t * @param {IndexCoordinate} i index coordinates of a pixel to compute the\n\t * laplacian at\n\t * @return {number} the laplacian at position p.\n\t * @see https://en.wikipedia.org/wiki/Laplace_operator#Coordinate_expressions\n\t * @see https://en.wikipedia.org/wiki/Discrete_Laplace_operator#Finite_differences\n\t * ","start":15733,"end":16355,"loc":{"start":{"line":422,"column":1},"end":{"line":432,"column":6}}}],"trailingComments":[{"type":"CommentBlock","value":"* Perform a diffusion step on the grid, updating the values of all pixels\n\t * according to Fick's second law of diffusion.\n\t * @param {number} D diffusion coefficient\n\t * @see https://en.wikipedia.org/wiki/Diffusion#Fick's_law_and_equations\n\t * @see https://en.wikipedia.org/wiki/Discrete_Laplace_operator#Mesh_Laplacians\n\t * ","start":17004,"end":17334,"loc":{"start":{"line":453,"column":1},"end":{"line":458,"column":6}}}]},{"type":"ClassMethod","start":17336,"end":17856,"loc":{"start":{"line":459,"column":1},"end":{"line":470,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":17336,"end":17345,"loc":{"start":{"line":459,"column":1},"end":{"line":459,"column":10},"identifierName":"diffusion"},"name":"diffusion","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":17347,"end":17348,"loc":{"start":{"line":459,"column":12},"end":{"line":459,"column":13},"identifierName":"D"},"name":"D"}],"body":{"type":"BlockStatement","start":17350,"end":17856,"loc":{"start":{"line":459,"column":15},"end":{"line":470,"column":2}},"body":[{"type":"IfStatement","start":17457,"end":17503,"loc":{"start":{"line":462,"column":2},"end":{"line":462,"column":48}},"test":{"type":"UnaryExpression","start":17461,"end":17481,"loc":{"start":{"line":462,"column":6},"end":{"line":462,"column":26}},"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":17463,"end":17481,"loc":{"start":{"line":462,"column":8},"end":{"line":462,"column":26}},"object":{"type":"ThisExpression","start":17463,"end":17467,"loc":{"start":{"line":462,"column":8},"end":{"line":462,"column":12}},"leadingComments":null},"property":{"type":"Identifier","start":17468,"end":17481,"loc":{"start":{"line":462,"column":13},"end":{"line":462,"column":26},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false,"leadingComments":null},"extra":{"parenthesizedArgument":false},"leadingComments":null},"consequent":{"type":"ExpressionStatement","start":17484,"end":17503,"loc":{"start":{"line":462,"column":29},"end":{"line":462,"column":48}},"expression":{"type":"CallExpression","start":17484,"end":17503,"loc":{"start":{"line":462,"column":29},"end":{"line":462,"column":48}},"callee":{"type":"MemberExpression","start":17484,"end":17501,"loc":{"start":{"line":462,"column":29},"end":{"line":462,"column":46}},"object":{"type":"ThisExpression","start":17484,"end":17488,"loc":{"start":{"line":462,"column":29},"end":{"line":462,"column":33}}},"property":{"type":"Identifier","start":17489,"end":17501,"loc":{"start":{"line":462,"column":34},"end":{"line":462,"column":46},"identifierName":"pixelsBuffer"},"name":"pixelsBuffer"},"computed":false},"arguments":[]}},"alternate":null,"leadingComments":[{"type":"CommentLine","value":" For synchronous updating of the grid: compute updated values in a copy","start":17354,"end":17427,"loc":{"start":{"line":460,"column":2},"end":{"line":460,"column":75}}},{"type":"CommentLine","value":" of the current pixels","start":17430,"end":17454,"loc":{"start":{"line":461,"column":2},"end":{"line":461,"column":26}}}]},{"type":"ForOfStatement","start":17506,"end":17743,"loc":{"start":{"line":463,"column":2},"end":{"line":467,"column":3}},"left":{"type":"VariableDeclaration","start":17511,"end":17516,"loc":{"start":{"line":463,"column":7},"end":{"line":463,"column":12}},"declarations":[{"type":"VariableDeclarator","start":17515,"end":17516,"loc":{"start":{"line":463,"column":11},"end":{"line":463,"column":12}},"id":{"type":"Identifier","start":17515,"end":17516,"loc":{"start":{"line":463,"column":11},"end":{"line":463,"column":12},"identifierName":"i"},"name":"i"},"init":null}],"kind":"let"},"right":{"type":"CallExpression","start":17520,"end":17534,"loc":{"start":{"line":463,"column":16},"end":{"line":463,"column":30}},"callee":{"type":"MemberExpression","start":17520,"end":17532,"loc":{"start":{"line":463,"column":16},"end":{"line":463,"column":28}},"object":{"type":"ThisExpression","start":17520,"end":17524,"loc":{"start":{"line":463,"column":16},"end":{"line":463,"column":20}}},"property":{"type":"Identifier","start":17525,"end":17532,"loc":{"start":{"line":463,"column":21},"end":{"line":463,"column":28},"identifierName":"pixelsi"},"name":"pixelsi"},"computed":false},"arguments":[]},"body":{"type":"BlockStatement","start":17536,"end":17743,"loc":{"start":{"line":463,"column":32},"end":{"line":467,"column":3}},"body":[{"type":"ExpressionStatement","start":17673,"end":17739,"loc":{"start":{"line":466,"column":3},"end":{"line":466,"column":69}},"expression":{"type":"AssignmentExpression","start":17673,"end":17739,"loc":{"start":{"line":466,"column":3},"end":{"line":466,"column":69}},"operator":"=","left":{"type":"MemberExpression","start":17673,"end":17694,"loc":{"start":{"line":466,"column":3},"end":{"line":466,"column":24}},"object":{"type":"MemberExpression","start":17673,"end":17691,"loc":{"start":{"line":466,"column":3},"end":{"line":466,"column":21}},"object":{"type":"ThisExpression","start":17673,"end":17677,"loc":{"start":{"line":466,"column":3},"end":{"line":466,"column":7}},"leadingComments":null},"property":{"type":"Identifier","start":17678,"end":17691,"loc":{"start":{"line":466,"column":8},"end":{"line":466,"column":21},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false,"leadingComments":null},"property":{"type":"Identifier","start":17692,"end":17693,"loc":{"start":{"line":466,"column":22},"end":{"line":466,"column":23},"identifierName":"i"},"name":"i"},"computed":true,"leadingComments":null},"right":{"type":"BinaryExpression","start":17697,"end":17739,"loc":{"start":{"line":466,"column":27},"end":{"line":466,"column":69}},"left":{"type":"CallExpression","start":17697,"end":17712,"loc":{"start":{"line":466,"column":27},"end":{"line":466,"column":42}},"callee":{"type":"MemberExpression","start":17697,"end":17707,"loc":{"start":{"line":466,"column":27},"end":{"line":466,"column":37}},"object":{"type":"ThisExpression","start":17697,"end":17701,"loc":{"start":{"line":466,"column":27},"end":{"line":466,"column":31}}},"property":{"type":"Identifier","start":17702,"end":17707,"loc":{"start":{"line":466,"column":32},"end":{"line":466,"column":37},"identifierName":"pixti"},"name":"pixti"},"computed":false},"arguments":[{"type":"Identifier","start":17709,"end":17710,"loc":{"start":{"line":466,"column":39},"end":{"line":466,"column":40},"identifierName":"i"},"name":"i"}]},"operator":"+","right":{"type":"BinaryExpression","start":17715,"end":17739,"loc":{"start":{"line":466,"column":45},"end":{"line":466,"column":69}},"left":{"type":"Identifier","start":17715,"end":17716,"loc":{"start":{"line":466,"column":45},"end":{"line":466,"column":46},"identifierName":"D"},"name":"D"},"operator":"*","right":{"type":"CallExpression","start":17719,"end":17739,"loc":{"start":{"line":466,"column":49},"end":{"line":466,"column":69}},"callee":{"type":"MemberExpression","start":17719,"end":17734,"loc":{"start":{"line":466,"column":49},"end":{"line":466,"column":64}},"object":{"type":"ThisExpression","start":17719,"end":17723,"loc":{"start":{"line":466,"column":49},"end":{"line":466,"column":53}}},"property":{"type":"Identifier","start":17724,"end":17734,"loc":{"start":{"line":466,"column":54},"end":{"line":466,"column":64},"identifierName":"laplaciani"},"name":"laplaciani"},"computed":false},"arguments":[{"type":"Identifier","start":17736,"end":17737,"loc":{"start":{"line":466,"column":66},"end":{"line":466,"column":67},"identifierName":"i"},"name":"i"}]}}},"leadingComments":null},"leadingComments":[{"type":"CommentLine","value":" Diffusion: new value is current value + change.","start":17541,"end":17591,"loc":{"start":{"line":464,"column":3},"end":{"line":464,"column":53}}},{"type":"CommentLine","value":" the change is given by the diffusion coefficient D times the laplacian.","start":17595,"end":17669,"loc":{"start":{"line":465,"column":3},"end":{"line":465,"column":77}}}]}],"directives":[],"trailingComments":null},"trailingComments":[{"type":"CommentLine","value":" swap the copy and the original","start":17746,"end":17779,"loc":{"start":{"line":468,"column":2},"end":{"line":468,"column":35}}}]},{"type":"ExpressionStatement","start":17782,"end":17853,"loc":{"start":{"line":469,"column":2},"end":{"line":469,"column":73}},"expression":{"type":"AssignmentExpression","start":17782,"end":17853,"loc":{"start":{"line":469,"column":2},"end":{"line":469,"column":73}},"operator":"=","left":{"type":"ArrayPattern","start":17782,"end":17816,"loc":{"start":{"line":469,"column":2},"end":{"line":469,"column":36}},"elements":[{"type":"MemberExpression","start":17783,"end":17801,"loc":{"start":{"line":469,"column":3},"end":{"line":469,"column":21}},"object":{"type":"ThisExpression","start":17783,"end":17787,"loc":{"start":{"line":469,"column":3},"end":{"line":469,"column":7}},"leadingComments":null},"property":{"type":"Identifier","start":17788,"end":17801,"loc":{"start":{"line":469,"column":8},"end":{"line":469,"column":21},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false,"leadingComments":null},{"type":"MemberExpression","start":17803,"end":17815,"loc":{"start":{"line":469,"column":23},"end":{"line":469,"column":35}},"object":{"type":"ThisExpression","start":17803,"end":17807,"loc":{"start":{"line":469,"column":23},"end":{"line":469,"column":27}}},"property":{"type":"Identifier","start":17808,"end":17815,"loc":{"start":{"line":469,"column":28},"end":{"line":469,"column":35},"identifierName":"_pixels"},"name":"_pixels"},"computed":false}],"leadingComments":null},"right":{"type":"ArrayExpression","start":17819,"end":17853,"loc":{"start":{"line":469,"column":39},"end":{"line":469,"column":73}},"elements":[{"type":"MemberExpression","start":17820,"end":17832,"loc":{"start":{"line":469,"column":40},"end":{"line":469,"column":52}},"object":{"type":"ThisExpression","start":17820,"end":17824,"loc":{"start":{"line":469,"column":40},"end":{"line":469,"column":44}}},"property":{"type":"Identifier","start":17825,"end":17832,"loc":{"start":{"line":469,"column":45},"end":{"line":469,"column":52},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},{"type":"MemberExpression","start":17834,"end":17852,"loc":{"start":{"line":469,"column":54},"end":{"line":469,"column":72}},"object":{"type":"ThisExpression","start":17834,"end":17838,"loc":{"start":{"line":469,"column":54},"end":{"line":469,"column":58}}},"property":{"type":"Identifier","start":17839,"end":17852,"loc":{"start":{"line":469,"column":59},"end":{"line":469,"column":72},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false}]},"leadingComments":null},"leadingComments":[{"type":"CommentLine","value":" swap the copy and the original","start":17746,"end":17779,"loc":{"start":{"line":468,"column":2},"end":{"line":468,"column":35}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Perform a diffusion step on the grid, updating the values of all pixels\n\t * according to Fick's second law of diffusion.\n\t * @param {number} D diffusion coefficient\n\t * @see https://en.wikipedia.org/wiki/Diffusion#Fick's_law_and_equations\n\t * @see https://en.wikipedia.org/wiki/Discrete_Laplace_operator#Mesh_Laplacians\n\t * ","start":17004,"end":17334,"loc":{"start":{"line":453,"column":1},"end":{"line":458,"column":6}}}],"trailingComments":[{"type":"CommentBlock","value":"* Function that updates a gridpoint depending on its current value and\n\t * that of its neighbors.\n\t * @typedef {function} updatePixelFunction\n\t * @param {ArrayCoordinate} p - pixel to update\n\t * @param {ArrayCoordinate[]} neighbors - coordinates of neighbors of p\n\t * @return {number} value - the updated value, based on the current value\n\t * of p and its neighbors.\n\t ","start":17861,"end":18234,"loc":{"start":{"line":473,"column":1},"end":{"line":480,"column":4}}},{"type":"CommentBlock","value":"* Apply a function to all pixel values on the grid. It acts on\n\t * this._pixels, which is implemented in the grid subclass.\n\t * @param {updatePixelFunction} f - the function to apply to each pixel. ","start":18237,"end":18439,"loc":{"start":{"line":482,"column":1},"end":{"line":484,"column":76}}}]},{"type":"ClassMethod","start":18441,"end":18696,"loc":{"start":{"line":485,"column":1},"end":{"line":492,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":18441,"end":18453,"loc":{"start":{"line":485,"column":1},"end":{"line":485,"column":13},"identifierName":"applyLocally"},"name":"applyLocally","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":18455,"end":18456,"loc":{"start":{"line":485,"column":15},"end":{"line":485,"column":16},"identifierName":"f"},"name":"f"}],"body":{"type":"BlockStatement","start":18458,"end":18696,"loc":{"start":{"line":485,"column":18},"end":{"line":492,"column":2}},"body":[{"type":"IfStatement","start":18462,"end":18508,"loc":{"start":{"line":486,"column":2},"end":{"line":486,"column":48}},"test":{"type":"UnaryExpression","start":18466,"end":18486,"loc":{"start":{"line":486,"column":6},"end":{"line":486,"column":26}},"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":18468,"end":18486,"loc":{"start":{"line":486,"column":8},"end":{"line":486,"column":26}},"object":{"type":"ThisExpression","start":18468,"end":18472,"loc":{"start":{"line":486,"column":8},"end":{"line":486,"column":12}}},"property":{"type":"Identifier","start":18473,"end":18486,"loc":{"start":{"line":486,"column":13},"end":{"line":486,"column":26},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"ExpressionStatement","start":18489,"end":18508,"loc":{"start":{"line":486,"column":29},"end":{"line":486,"column":48}},"expression":{"type":"CallExpression","start":18489,"end":18508,"loc":{"start":{"line":486,"column":29},"end":{"line":486,"column":48}},"callee":{"type":"MemberExpression","start":18489,"end":18506,"loc":{"start":{"line":486,"column":29},"end":{"line":486,"column":46}},"object":{"type":"ThisExpression","start":18489,"end":18493,"loc":{"start":{"line":486,"column":29},"end":{"line":486,"column":33}}},"property":{"type":"Identifier","start":18494,"end":18506,"loc":{"start":{"line":486,"column":34},"end":{"line":486,"column":46},"identifierName":"pixelsBuffer"},"name":"pixelsBuffer"},"computed":false},"arguments":[]}},"alternate":null},{"type":"ForOfStatement","start":18511,"end":18619,"loc":{"start":{"line":487,"column":2},"end":{"line":490,"column":3}},"left":{"type":"VariableDeclaration","start":18516,"end":18521,"loc":{"start":{"line":487,"column":7},"end":{"line":487,"column":12}},"declarations":[{"type":"VariableDeclarator","start":18520,"end":18521,"loc":{"start":{"line":487,"column":11},"end":{"line":487,"column":12}},"id":{"type":"Identifier","start":18520,"end":18521,"loc":{"start":{"line":487,"column":11},"end":{"line":487,"column":12},"identifierName":"i"},"name":"i"},"init":null}],"kind":"let"},"right":{"type":"CallExpression","start":18525,"end":18539,"loc":{"start":{"line":487,"column":16},"end":{"line":487,"column":30}},"callee":{"type":"MemberExpression","start":18525,"end":18537,"loc":{"start":{"line":487,"column":16},"end":{"line":487,"column":28}},"object":{"type":"ThisExpression","start":18525,"end":18529,"loc":{"start":{"line":487,"column":16},"end":{"line":487,"column":20}}},"property":{"type":"Identifier","start":18530,"end":18537,"loc":{"start":{"line":487,"column":21},"end":{"line":487,"column":28},"identifierName":"pixelsi"},"name":"pixelsi"},"computed":false},"arguments":[]},"body":{"type":"BlockStatement","start":18541,"end":18619,"loc":{"start":{"line":487,"column":32},"end":{"line":490,"column":3}},"body":[{"type":"VariableDeclaration","start":18546,"end":18565,"loc":{"start":{"line":488,"column":3},"end":{"line":488,"column":22}},"declarations":[{"type":"VariableDeclarator","start":18550,"end":18565,"loc":{"start":{"line":488,"column":7},"end":{"line":488,"column":22}},"id":{"type":"Identifier","start":18550,"end":18551,"loc":{"start":{"line":488,"column":7},"end":{"line":488,"column":8},"identifierName":"p"},"name":"p"},"init":{"type":"CallExpression","start":18554,"end":18565,"loc":{"start":{"line":488,"column":11},"end":{"line":488,"column":22}},"callee":{"type":"MemberExpression","start":18554,"end":18562,"loc":{"start":{"line":488,"column":11},"end":{"line":488,"column":19}},"object":{"type":"ThisExpression","start":18554,"end":18558,"loc":{"start":{"line":488,"column":11},"end":{"line":488,"column":15}}},"property":{"type":"Identifier","start":18559,"end":18562,"loc":{"start":{"line":488,"column":16},"end":{"line":488,"column":19},"identifierName":"i2p"},"name":"i2p"},"computed":false},"arguments":[{"type":"Identifier","start":18563,"end":18564,"loc":{"start":{"line":488,"column":20},"end":{"line":488,"column":21},"identifierName":"i"},"name":"i"}]}}],"kind":"let"},{"type":"ExpressionStatement","start":18569,"end":18614,"loc":{"start":{"line":489,"column":3},"end":{"line":489,"column":48}},"expression":{"type":"AssignmentExpression","start":18569,"end":18614,"loc":{"start":{"line":489,"column":3},"end":{"line":489,"column":48}},"operator":"=","left":{"type":"MemberExpression","start":18569,"end":18590,"loc":{"start":{"line":489,"column":3},"end":{"line":489,"column":24}},"object":{"type":"MemberExpression","start":18569,"end":18587,"loc":{"start":{"line":489,"column":3},"end":{"line":489,"column":21}},"object":{"type":"ThisExpression","start":18569,"end":18573,"loc":{"start":{"line":489,"column":3},"end":{"line":489,"column":7}}},"property":{"type":"Identifier","start":18574,"end":18587,"loc":{"start":{"line":489,"column":8},"end":{"line":489,"column":21},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false},"property":{"type":"Identifier","start":18588,"end":18589,"loc":{"start":{"line":489,"column":22},"end":{"line":489,"column":23},"identifierName":"i"},"name":"i"},"computed":true},"right":{"type":"CallExpression","start":18593,"end":18614,"loc":{"start":{"line":489,"column":27},"end":{"line":489,"column":48}},"callee":{"type":"Identifier","start":18593,"end":18594,"loc":{"start":{"line":489,"column":27},"end":{"line":489,"column":28},"identifierName":"f"},"name":"f"},"arguments":[{"type":"Identifier","start":18596,"end":18597,"loc":{"start":{"line":489,"column":30},"end":{"line":489,"column":31},"identifierName":"p"},"name":"p"},{"type":"CallExpression","start":18599,"end":18612,"loc":{"start":{"line":489,"column":33},"end":{"line":489,"column":46}},"callee":{"type":"MemberExpression","start":18599,"end":18609,"loc":{"start":{"line":489,"column":33},"end":{"line":489,"column":43}},"object":{"type":"ThisExpression","start":18599,"end":18603,"loc":{"start":{"line":489,"column":33},"end":{"line":489,"column":37}}},"property":{"type":"Identifier","start":18604,"end":18609,"loc":{"start":{"line":489,"column":38},"end":{"line":489,"column":43},"identifierName":"neigh"},"name":"neigh"},"computed":false},"arguments":[{"type":"Identifier","start":18610,"end":18611,"loc":{"start":{"line":489,"column":44},"end":{"line":489,"column":45},"identifierName":"p"},"name":"p"}]}]}}}],"directives":[]}},{"type":"ExpressionStatement","start":18622,"end":18693,"loc":{"start":{"line":491,"column":2},"end":{"line":491,"column":73}},"expression":{"type":"AssignmentExpression","start":18622,"end":18693,"loc":{"start":{"line":491,"column":2},"end":{"line":491,"column":73}},"operator":"=","left":{"type":"ArrayPattern","start":18622,"end":18656,"loc":{"start":{"line":491,"column":2},"end":{"line":491,"column":36}},"elements":[{"type":"MemberExpression","start":18623,"end":18641,"loc":{"start":{"line":491,"column":3},"end":{"line":491,"column":21}},"object":{"type":"ThisExpression","start":18623,"end":18627,"loc":{"start":{"line":491,"column":3},"end":{"line":491,"column":7}}},"property":{"type":"Identifier","start":18628,"end":18641,"loc":{"start":{"line":491,"column":8},"end":{"line":491,"column":21},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false},{"type":"MemberExpression","start":18643,"end":18655,"loc":{"start":{"line":491,"column":23},"end":{"line":491,"column":35}},"object":{"type":"ThisExpression","start":18643,"end":18647,"loc":{"start":{"line":491,"column":23},"end":{"line":491,"column":27}}},"property":{"type":"Identifier","start":18648,"end":18655,"loc":{"start":{"line":491,"column":28},"end":{"line":491,"column":35},"identifierName":"_pixels"},"name":"_pixels"},"computed":false}]},"right":{"type":"ArrayExpression","start":18659,"end":18693,"loc":{"start":{"line":491,"column":39},"end":{"line":491,"column":73}},"elements":[{"type":"MemberExpression","start":18660,"end":18672,"loc":{"start":{"line":491,"column":40},"end":{"line":491,"column":52}},"object":{"type":"ThisExpression","start":18660,"end":18664,"loc":{"start":{"line":491,"column":40},"end":{"line":491,"column":44}}},"property":{"type":"Identifier","start":18665,"end":18672,"loc":{"start":{"line":491,"column":45},"end":{"line":491,"column":52},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},{"type":"MemberExpression","start":18674,"end":18692,"loc":{"start":{"line":491,"column":54},"end":{"line":491,"column":72}},"object":{"type":"ThisExpression","start":18674,"end":18678,"loc":{"start":{"line":491,"column":54},"end":{"line":491,"column":58}}},"property":{"type":"Identifier","start":18679,"end":18692,"loc":{"start":{"line":491,"column":59},"end":{"line":491,"column":72},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false}]}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Function that updates a gridpoint depending on its current value and\n\t * that of its neighbors.\n\t * @typedef {function} updatePixelFunction\n\t * @param {ArrayCoordinate} p - pixel to update\n\t * @param {ArrayCoordinate[]} neighbors - coordinates of neighbors of p\n\t * @return {number} value - the updated value, based on the current value\n\t * of p and its neighbors.\n\t ","start":17861,"end":18234,"loc":{"start":{"line":473,"column":1},"end":{"line":480,"column":4}}},{"type":"CommentBlock","value":"* Apply a function to all pixel values on the grid. It acts on\n\t * this._pixels, which is implemented in the grid subclass.\n\t * @param {updatePixelFunction} f - the function to apply to each pixel. ","start":18237,"end":18439,"loc":{"start":{"line":482,"column":1},"end":{"line":484,"column":76}}}],"trailingComments":[{"type":"CommentBlock","value":"* Multiply all pixel values on the grid with a constant factor r.\n\t * This method acts on this._pixels, which is implemented in the grid\n\t * subclass.\n\t * @param {number} r the multiplication factor. ","start":18700,"end":18904,"loc":{"start":{"line":494,"column":1},"end":{"line":497,"column":51}}}]},{"type":"ClassMethod","start":18906,"end":18987,"loc":{"start":{"line":498,"column":1},"end":{"line":502,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":18906,"end":18916,"loc":{"start":{"line":498,"column":1},"end":{"line":498,"column":11},"identifierName":"multiplyBy"},"name":"multiplyBy","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":18918,"end":18919,"loc":{"start":{"line":498,"column":13},"end":{"line":498,"column":14},"identifierName":"r"},"name":"r"}],"body":{"type":"BlockStatement","start":18921,"end":18987,"loc":{"start":{"line":498,"column":16},"end":{"line":502,"column":2}},"body":[{"type":"ForOfStatement","start":18925,"end":18984,"loc":{"start":{"line":499,"column":2},"end":{"line":501,"column":3}},"left":{"type":"VariableDeclaration","start":18930,"end":18935,"loc":{"start":{"line":499,"column":7},"end":{"line":499,"column":12}},"declarations":[{"type":"VariableDeclarator","start":18934,"end":18935,"loc":{"start":{"line":499,"column":11},"end":{"line":499,"column":12}},"id":{"type":"Identifier","start":18934,"end":18935,"loc":{"start":{"line":499,"column":11},"end":{"line":499,"column":12},"identifierName":"i"},"name":"i"},"init":null}],"kind":"let"},"right":{"type":"CallExpression","start":18939,"end":18953,"loc":{"start":{"line":499,"column":16},"end":{"line":499,"column":30}},"callee":{"type":"MemberExpression","start":18939,"end":18951,"loc":{"start":{"line":499,"column":16},"end":{"line":499,"column":28}},"object":{"type":"ThisExpression","start":18939,"end":18943,"loc":{"start":{"line":499,"column":16},"end":{"line":499,"column":20}}},"property":{"type":"Identifier","start":18944,"end":18951,"loc":{"start":{"line":499,"column":21},"end":{"line":499,"column":28},"identifierName":"pixelsi"},"name":"pixelsi"},"computed":false},"arguments":[]},"body":{"type":"BlockStatement","start":18955,"end":18984,"loc":{"start":{"line":499,"column":32},"end":{"line":501,"column":3}},"body":[{"type":"ExpressionStatement","start":18960,"end":18980,"loc":{"start":{"line":500,"column":3},"end":{"line":500,"column":23}},"expression":{"type":"AssignmentExpression","start":18960,"end":18980,"loc":{"start":{"line":500,"column":3},"end":{"line":500,"column":23}},"operator":"*=","left":{"type":"MemberExpression","start":18960,"end":18975,"loc":{"start":{"line":500,"column":3},"end":{"line":500,"column":18}},"object":{"type":"MemberExpression","start":18960,"end":18972,"loc":{"start":{"line":500,"column":3},"end":{"line":500,"column":15}},"object":{"type":"ThisExpression","start":18960,"end":18964,"loc":{"start":{"line":500,"column":3},"end":{"line":500,"column":7}}},"property":{"type":"Identifier","start":18965,"end":18972,"loc":{"start":{"line":500,"column":8},"end":{"line":500,"column":15},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"Identifier","start":18973,"end":18974,"loc":{"start":{"line":500,"column":16},"end":{"line":500,"column":17},"identifierName":"i"},"name":"i"},"computed":true},"right":{"type":"Identifier","start":18979,"end":18980,"loc":{"start":{"line":500,"column":22},"end":{"line":500,"column":23},"identifierName":"r"},"name":"r"}}}],"directives":[]}}],"directives":[]},"leadingComments":[{"type":"CommentBlock","value":"* Multiply all pixel values on the grid with a constant factor r.\n\t * This method acts on this._pixels, which is implemented in the grid\n\t * subclass.\n\t * @param {number} r the multiplication factor. ","start":18700,"end":18904,"loc":{"start":{"line":494,"column":1},"end":{"line":497,"column":51}}}]}]},"leadingComments":[],"name":"_","trailingComments":[]},{"type":"Identifier","start":18992,"end":19011,"loc":{"start":{"line":506,"column":0},"end":{"line":506,"column":19}},"declaration":{"type":"Identifier","start":19007,"end":19011,"loc":{"start":{"line":506,"column":15},"end":{"line":506,"column":19},"identifierName":"Grid"},"name":"Grid"},"name":"_","leadingComments":[],"trailingComments":[]},{"type":"ExportDefaultDeclaration","start":18992,"end":19011,"loc":{"start":{"line":506,"column":0},"end":{"line":506,"column":19}},"declaration":{"type":"ClassDeclaration","start":399,"end":18990,"loc":{"start":{"line":7,"column":0},"end":{"line":504,"column":1}},"id":{"type":"Identifier","start":405,"end":409,"loc":{"start":{"line":7,"column":6},"end":{"line":7,"column":10},"identifierName":"Grid"},"name":"Grid","leadingComments":null},"superClass":null,"body":{"type":"ClassBody","start":410,"end":18990,"loc":{"start":{"line":7,"column":11},"end":{"line":504,"column":1}},"body":[{"type":"ClassMethod","start":1037,"end":3305,"loc":{"start":{"line":19,"column":1},"end":{"line":81,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":1037,"end":1048,"loc":{"start":{"line":19,"column":1},"end":{"line":19,"column":12},"identifierName":"constructor"},"name":"constructor","leadingComments":null},"kind":"constructor","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":1050,"end":1060,"loc":{"start":{"line":19,"column":14},"end":{"line":19,"column":24},"identifierName":"field_size"},"name":"field_size"},{"type":"Identifier","start":1062,"end":1067,"loc":{"start":{"line":19,"column":26},"end":{"line":19,"column":31},"identifierName":"torus"},"name":"torus"}],"body":{"type":"BlockStatement","start":1069,"end":3305,"loc":{"start":{"line":19,"column":33},"end":{"line":81,"column":2}},"body":[{"type":"ExpressionStatement","start":1075,"end":1094,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":21}},"expression":{"type":"AssignmentExpression","start":1075,"end":1094,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":21}},"operator":"=","left":{"type":"Identifier","start":1075,"end":1080,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":7},"identifierName":"torus"},"name":"torus"},"right":{"type":"LogicalExpression","start":1083,"end":1094,"loc":{"start":{"line":21,"column":10},"end":{"line":21,"column":21}},"left":{"type":"Identifier","start":1083,"end":1088,"loc":{"start":{"line":21,"column":10},"end":{"line":21,"column":15},"identifierName":"torus"},"name":"torus"},"operator":"||","right":{"type":"ArrayExpression","start":1092,"end":1094,"loc":{"start":{"line":21,"column":19},"end":{"line":21,"column":21}},"elements":[],"leadingComments":null,"trailingComments":null},"trailingComments":null},"trailingComments":null},"trailingComments":[{"type":"CommentBlock","value":"* field_size array of field size in each dimension. E.g. [100,200]\n\t\t * for a grid that is 100 pixels wide and 200 pixels high. Entries must\n\t\t * be positive integer numbers.\n\t\t * @type {GridSize}","start":1099,"end":1299,"loc":{"start":{"line":23,"column":2},"end":{"line":26,"column":23}}}]},{"type":"ExpressionStatement","start":1302,"end":1327,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":27}},"expression":{"type":"AssignmentExpression","start":1302,"end":1327,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":27}},"operator":"=","left":{"type":"MemberExpression","start":1302,"end":1314,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":14}},"object":{"type":"ThisExpression","start":1302,"end":1306,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":1307,"end":1314,"loc":{"start":{"line":27,"column":7},"end":{"line":27,"column":14},"identifierName":"extents"},"name":"extents"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":1317,"end":1327,"loc":{"start":{"line":27,"column":17},"end":{"line":27,"column":27},"identifierName":"field_size"},"name":"field_size","leadingComments":null,"trailingComments":null},"leadingComments":null,"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* field_size array of field size in each dimension. E.g. [100,200]\n\t\t * for a grid that is 100 pixels wide and 200 pixels high. Entries must\n\t\t * be positive integer numbers.\n\t\t * @type {GridSize}","start":1099,"end":1299,"loc":{"start":{"line":23,"column":2},"end":{"line":26,"column":23}}}],"trailingComments":[{"type":"CommentBlock","value":"* Number of dimensions of the grid.\n\t\t * @type {number}","start":1333,"end":1392,"loc":{"start":{"line":29,"column":2},"end":{"line":30,"column":21}}}]},{"type":"ExpressionStatement","start":1395,"end":1426,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":33}},"expression":{"type":"AssignmentExpression","start":1395,"end":1426,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":33}},"operator":"=","left":{"type":"MemberExpression","start":1395,"end":1404,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":11}},"object":{"type":"ThisExpression","start":1395,"end":1399,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":1400,"end":1404,"loc":{"start":{"line":31,"column":7},"end":{"line":31,"column":11},"identifierName":"ndim"},"name":"ndim"},"computed":false,"leadingComments":null},"right":{"type":"MemberExpression","start":1407,"end":1426,"loc":{"start":{"line":31,"column":14},"end":{"line":31,"column":33}},"object":{"type":"MemberExpression","start":1407,"end":1419,"loc":{"start":{"line":31,"column":14},"end":{"line":31,"column":26}},"object":{"type":"ThisExpression","start":1407,"end":1411,"loc":{"start":{"line":31,"column":14},"end":{"line":31,"column":18}}},"property":{"type":"Identifier","start":1412,"end":1419,"loc":{"start":{"line":31,"column":19},"end":{"line":31,"column":26},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":1420,"end":1426,"loc":{"start":{"line":31,"column":27},"end":{"line":31,"column":33},"identifierName":"length"},"name":"length"},"computed":false},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Number of dimensions of the grid.\n\t\t * @type {number}","start":1333,"end":1392,"loc":{"start":{"line":29,"column":2},"end":{"line":30,"column":21}}}]},{"type":"IfStatement","start":1435,"end":1661,"loc":{"start":{"line":34,"column":2},"end":{"line":41,"column":3}},"test":{"type":"BinaryExpression","start":1439,"end":1457,"loc":{"start":{"line":34,"column":6},"end":{"line":34,"column":24}},"left":{"type":"MemberExpression","start":1439,"end":1451,"loc":{"start":{"line":34,"column":6},"end":{"line":34,"column":18}},"object":{"type":"Identifier","start":1439,"end":1444,"loc":{"start":{"line":34,"column":6},"end":{"line":34,"column":11},"identifierName":"torus"},"name":"torus"},"property":{"type":"Identifier","start":1445,"end":1451,"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":18},"identifierName":"length"},"name":"length"},"computed":false},"operator":"===","right":{"type":"NumericLiteral","start":1456,"end":1457,"loc":{"start":{"line":34,"column":23},"end":{"line":34,"column":24}},"extra":{"rawValue":0,"raw":"0"},"value":0}},"consequent":{"type":"BlockStatement","start":1459,"end":1533,"loc":{"start":{"line":34,"column":26},"end":{"line":38,"column":3}},"body":[{"type":"ForStatement","start":1464,"end":1529,"loc":{"start":{"line":35,"column":3},"end":{"line":37,"column":4}},"init":{"type":"VariableDeclaration","start":1469,"end":1478,"loc":{"start":{"line":35,"column":8},"end":{"line":35,"column":17}},"declarations":[{"type":"VariableDeclarator","start":1473,"end":1478,"loc":{"start":{"line":35,"column":12},"end":{"line":35,"column":17}},"id":{"type":"Identifier","start":1473,"end":1474,"loc":{"start":{"line":35,"column":12},"end":{"line":35,"column":13},"identifierName":"d"},"name":"d"},"init":{"type":"NumericLiteral","start":1477,"end":1478,"loc":{"start":{"line":35,"column":16},"end":{"line":35,"column":17}},"extra":{"rawValue":0,"raw":"0"},"value":0}}],"kind":"let"},"test":{"type":"BinaryExpression","start":1480,"end":1493,"loc":{"start":{"line":35,"column":19},"end":{"line":35,"column":32}},"left":{"type":"Identifier","start":1480,"end":1481,"loc":{"start":{"line":35,"column":19},"end":{"line":35,"column":20},"identifierName":"d"},"name":"d"},"operator":"<","right":{"type":"MemberExpression","start":1484,"end":1493,"loc":{"start":{"line":35,"column":23},"end":{"line":35,"column":32}},"object":{"type":"ThisExpression","start":1484,"end":1488,"loc":{"start":{"line":35,"column":23},"end":{"line":35,"column":27}}},"property":{"type":"Identifier","start":1489,"end":1493,"loc":{"start":{"line":35,"column":28},"end":{"line":35,"column":32},"identifierName":"ndim"},"name":"ndim"},"computed":false}},"update":{"type":"UpdateExpression","start":1495,"end":1498,"loc":{"start":{"line":35,"column":34},"end":{"line":35,"column":37}},"operator":"++","prefix":false,"argument":{"type":"Identifier","start":1495,"end":1496,"loc":{"start":{"line":35,"column":34},"end":{"line":35,"column":35},"identifierName":"d"},"name":"d"}},"body":{"type":"BlockStatement","start":1500,"end":1529,"loc":{"start":{"line":35,"column":39},"end":{"line":37,"column":4}},"body":[{"type":"ExpressionStatement","start":1506,"end":1524,"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":22}},"expression":{"type":"CallExpression","start":1506,"end":1524,"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":22}},"callee":{"type":"MemberExpression","start":1506,"end":1516,"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":14}},"object":{"type":"Identifier","start":1506,"end":1511,"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":9},"identifierName":"torus"},"name":"torus"},"property":{"type":"Identifier","start":1512,"end":1516,"loc":{"start":{"line":36,"column":10},"end":{"line":36,"column":14},"identifierName":"push"},"name":"push"},"computed":false},"arguments":[{"type":"BooleanLiteral","start":1518,"end":1522,"loc":{"start":{"line":36,"column":16},"end":{"line":36,"column":20}},"value":true}]}}],"directives":[]}}],"directives":[]},"alternate":{"type":"IfStatement","start":1539,"end":1661,"loc":{"start":{"line":38,"column":9},"end":{"line":41,"column":3}},"test":{"type":"BinaryExpression","start":1544,"end":1570,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":40}},"left":{"type":"MemberExpression","start":1544,"end":1556,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":26}},"object":{"type":"Identifier","start":1544,"end":1549,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":19},"identifierName":"torus"},"name":"torus"},"property":{"type":"Identifier","start":1550,"end":1556,"loc":{"start":{"line":38,"column":20},"end":{"line":38,"column":26},"identifierName":"length"},"name":"length"},"computed":false},"operator":"!==","right":{"type":"MemberExpression","start":1561,"end":1570,"loc":{"start":{"line":38,"column":31},"end":{"line":38,"column":40}},"object":{"type":"ThisExpression","start":1561,"end":1565,"loc":{"start":{"line":38,"column":31},"end":{"line":38,"column":35}}},"property":{"type":"Identifier","start":1566,"end":1570,"loc":{"start":{"line":38,"column":36},"end":{"line":38,"column":40},"identifierName":"ndim"},"name":"ndim"},"computed":false}},"consequent":{"type":"BlockStatement","start":1572,"end":1661,"loc":{"start":{"line":38,"column":42},"end":{"line":41,"column":3}},"body":[{"type":"ThrowStatement","start":1577,"end":1657,"loc":{"start":{"line":39,"column":3},"end":{"line":40,"column":15}},"argument":{"type":"BinaryExpression","start":1584,"end":1655,"loc":{"start":{"line":39,"column":10},"end":{"line":40,"column":13}},"left":{"type":"StringLiteral","start":1584,"end":1639,"loc":{"start":{"line":39,"column":10},"end":{"line":39,"column":65}},"extra":{"rawValue":"Torus should be specified for each dimension, or not ","raw":"\"Torus should be specified for each dimension, or not \""},"value":"Torus should be specified for each dimension, or not "},"operator":"+","right":{"type":"StringLiteral","start":1646,"end":1655,"loc":{"start":{"line":40,"column":4},"end":{"line":40,"column":13}},"extra":{"rawValue":"at all!","raw":"\"at all!\""},"value":"at all!"},"extra":{"parenthesized":true,"parenStart":1582}}}],"directives":[],"trailingComments":null},"alternate":null,"trailingComments":null},"trailingComments":[{"type":"CommentBlock","value":"* Should the borders of the grid be linked, so that a cell moving\n\t\t * out on the left reappears on the right? Warning: setting to false\n\t\t * can give artifacts if done incorrectly. If torus is set to false,\n\t\t * artifacts arise because\n\t\t * cells at the border have fewer neighbors. Cells will then stick to\n\t\t * the grid borders where they have fewer neighbors to get adhesion and/or\n\t\t * perimeter penalties from. You will need to specify how to handle the\n\t\t * borders explicitly; see the examples/ folder for details on how to\n\t\t * do this.\n\t\t * Torus can be specified for\n\t\t * each dimension separately.\n\t\t * @type {boolean[]}","start":1664,"end":2300,"loc":{"start":{"line":42,"column":2},"end":{"line":53,"column":24}}}]},{"type":"ExpressionStatement","start":2303,"end":2321,"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":20}},"expression":{"type":"AssignmentExpression","start":2303,"end":2321,"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":20}},"operator":"=","left":{"type":"MemberExpression","start":2303,"end":2313,"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":12}},"object":{"type":"ThisExpression","start":2303,"end":2307,"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":2308,"end":2313,"loc":{"start":{"line":54,"column":7},"end":{"line":54,"column":12},"identifierName":"torus"},"name":"torus"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":2316,"end":2321,"loc":{"start":{"line":54,"column":15},"end":{"line":54,"column":20},"identifierName":"torus"},"name":"torus","leadingComments":null,"trailingComments":null},"leadingComments":null,"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Should the borders of the grid be linked, so that a cell moving\n\t\t * out on the left reappears on the right? Warning: setting to false\n\t\t * can give artifacts if done incorrectly. If torus is set to false,\n\t\t * artifacts arise because\n\t\t * cells at the border have fewer neighbors. Cells will then stick to\n\t\t * the grid borders where they have fewer neighbors to get adhesion and/or\n\t\t * perimeter penalties from. You will need to specify how to handle the\n\t\t * borders explicitly; see the examples/ folder for details on how to\n\t\t * do this.\n\t\t * Torus can be specified for\n\t\t * each dimension separately.\n\t\t * @type {boolean[]}","start":1664,"end":2300,"loc":{"start":{"line":42,"column":2},"end":{"line":53,"column":24}}}],"trailingComments":[{"type":"CommentBlock","value":"* Array with values for each pixel stored at the position of its\n\t\t * \t{@link IndexCoordinate}. E.g. the value of pixel with coordinate\n\t\t * \ti is stored as this._pixels[i]. This should be implemented in\n\t\t * \tthe grid subclass; see e.g. {@link Grid2D#_pixelArray}.\n\t\t * \tNote that this array is accessed indirectly via the\n\t\t * {@link _pixels} set- and get methods.\n\t\t * \t@private\n\t\t * \t","start":2325,"end":2717,"loc":{"start":{"line":56,"column":2},"end":{"line":63,"column":8}}}]},{"type":"ExpressionStatement","start":2720,"end":2748,"loc":{"start":{"line":64,"column":2},"end":{"line":64,"column":30}},"expression":{"type":"AssignmentExpression","start":2720,"end":2748,"loc":{"start":{"line":64,"column":2},"end":{"line":64,"column":30}},"operator":"=","left":{"type":"MemberExpression","start":2720,"end":2736,"loc":{"start":{"line":64,"column":2},"end":{"line":64,"column":18}},"object":{"type":"ThisExpression","start":2720,"end":2724,"loc":{"start":{"line":64,"column":2},"end":{"line":64,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":2725,"end":2736,"loc":{"start":{"line":64,"column":7},"end":{"line":64,"column":18},"identifierName":"_pixelArray"},"name":"_pixelArray"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":2739,"end":2748,"loc":{"start":{"line":64,"column":21},"end":{"line":64,"column":30},"identifierName":"undefined"},"name":"undefined"},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Array with values for each pixel stored at the position of its\n\t\t * \t{@link IndexCoordinate}. E.g. the value of pixel with coordinate\n\t\t * \ti is stored as this._pixels[i]. This should be implemented in\n\t\t * \tthe grid subclass; see e.g. {@link Grid2D#_pixelArray}.\n\t\t * \tNote that this array is accessed indirectly via the\n\t\t * {@link _pixels} set- and get methods.\n\t\t * \t@private\n\t\t * \t","start":2325,"end":2717,"loc":{"start":{"line":56,"column":2},"end":{"line":63,"column":8}}}]},{"type":"ExpressionStatement","start":2751,"end":2776,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":27}},"expression":{"type":"AssignmentExpression","start":2751,"end":2776,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":27}},"operator":"=","left":{"type":"MemberExpression","start":2751,"end":2764,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":15}},"object":{"type":"ThisExpression","start":2751,"end":2755,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":6}}},"property":{"type":"Identifier","start":2756,"end":2764,"loc":{"start":{"line":65,"column":7},"end":{"line":65,"column":15},"identifierName":"datatype"},"name":"datatype"},"computed":false},"right":{"type":"Identifier","start":2767,"end":2776,"loc":{"start":{"line":65,"column":18},"end":{"line":65,"column":27},"identifierName":"undefined"},"name":"undefined","leadingComments":null,"trailingComments":null},"trailingComments":null},"trailingComments":[{"type":"CommentBlock","value":" These are used for rapid conversion between array and index\n\t\tcoordinates, but not documented as they should not be used from outside.\n\t\t","start":2782,"end":2924,"loc":{"start":{"line":67,"column":2},"end":{"line":69,"column":4}}},{"type":"CommentBlock","value":"* @ignore ","start":2927,"end":2941,"loc":{"start":{"line":70,"column":2},"end":{"line":70,"column":16}}}]},{"type":"ExpressionStatement","start":2944,"end":3006,"loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":64}},"expression":{"type":"AssignmentExpression","start":2944,"end":3006,"loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":64}},"operator":"=","left":{"type":"MemberExpression","start":2944,"end":2955,"loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":13}},"object":{"type":"ThisExpression","start":2944,"end":2948,"loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":2949,"end":2955,"loc":{"start":{"line":71,"column":7},"end":{"line":71,"column":13},"identifierName":"X_BITS"},"name":"X_BITS"},"computed":false,"leadingComments":null},"right":{"type":"BinaryExpression","start":2958,"end":3006,"loc":{"start":{"line":71,"column":16},"end":{"line":71,"column":64}},"left":{"type":"NumericLiteral","start":2958,"end":2959,"loc":{"start":{"line":71,"column":16},"end":{"line":71,"column":17}},"extra":{"rawValue":1,"raw":"1"},"value":1},"operator":"+","right":{"type":"CallExpression","start":2960,"end":3006,"loc":{"start":{"line":71,"column":18},"end":{"line":71,"column":64}},"callee":{"type":"MemberExpression","start":2960,"end":2970,"loc":{"start":{"line":71,"column":18},"end":{"line":71,"column":28}},"object":{"type":"Identifier","start":2960,"end":2964,"loc":{"start":{"line":71,"column":18},"end":{"line":71,"column":22},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":2965,"end":2970,"loc":{"start":{"line":71,"column":23},"end":{"line":71,"column":28},"identifierName":"floor"},"name":"floor"},"computed":false},"arguments":[{"type":"CallExpression","start":2972,"end":3004,"loc":{"start":{"line":71,"column":30},"end":{"line":71,"column":62}},"callee":{"type":"MemberExpression","start":2972,"end":2981,"loc":{"start":{"line":71,"column":30},"end":{"line":71,"column":39}},"object":{"type":"Identifier","start":2972,"end":2976,"loc":{"start":{"line":71,"column":30},"end":{"line":71,"column":34},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":2977,"end":2981,"loc":{"start":{"line":71,"column":35},"end":{"line":71,"column":39},"identifierName":"log2"},"name":"log2"},"computed":false},"arguments":[{"type":"BinaryExpression","start":2983,"end":3002,"loc":{"start":{"line":71,"column":41},"end":{"line":71,"column":60}},"left":{"type":"MemberExpression","start":2983,"end":2998,"loc":{"start":{"line":71,"column":41},"end":{"line":71,"column":56}},"object":{"type":"MemberExpression","start":2983,"end":2995,"loc":{"start":{"line":71,"column":41},"end":{"line":71,"column":53}},"object":{"type":"ThisExpression","start":2983,"end":2987,"loc":{"start":{"line":71,"column":41},"end":{"line":71,"column":45}}},"property":{"type":"Identifier","start":2988,"end":2995,"loc":{"start":{"line":71,"column":46},"end":{"line":71,"column":53},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"NumericLiteral","start":2996,"end":2997,"loc":{"start":{"line":71,"column":54},"end":{"line":71,"column":55}},"extra":{"rawValue":0,"raw":"0"},"value":0},"computed":true},"operator":"-","right":{"type":"NumericLiteral","start":3001,"end":3002,"loc":{"start":{"line":71,"column":59},"end":{"line":71,"column":60}},"extra":{"rawValue":1,"raw":"1"},"value":1}}]}],"trailingComments":null},"trailingComments":null},"leadingComments":null,"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":" These are used for rapid conversion between array and index\n\t\tcoordinates, but not documented as they should not be used from outside.\n\t\t","start":2782,"end":2924,"loc":{"start":{"line":67,"column":2},"end":{"line":69,"column":4}}},{"type":"CommentBlock","value":"* @ignore ","start":2927,"end":2941,"loc":{"start":{"line":70,"column":2},"end":{"line":70,"column":16}}}],"trailingComments":[{"type":"CommentBlock","value":"* @ignore ","start":3009,"end":3023,"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":16}}}]},{"type":"ExpressionStatement","start":3026,"end":3088,"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":64}},"expression":{"type":"AssignmentExpression","start":3026,"end":3088,"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":64}},"operator":"=","left":{"type":"MemberExpression","start":3026,"end":3037,"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":13}},"object":{"type":"ThisExpression","start":3026,"end":3030,"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":3031,"end":3037,"loc":{"start":{"line":73,"column":7},"end":{"line":73,"column":13},"identifierName":"Y_BITS"},"name":"Y_BITS"},"computed":false,"leadingComments":null},"right":{"type":"BinaryExpression","start":3040,"end":3088,"loc":{"start":{"line":73,"column":16},"end":{"line":73,"column":64}},"left":{"type":"NumericLiteral","start":3040,"end":3041,"loc":{"start":{"line":73,"column":16},"end":{"line":73,"column":17}},"extra":{"rawValue":1,"raw":"1"},"value":1},"operator":"+","right":{"type":"CallExpression","start":3042,"end":3088,"loc":{"start":{"line":73,"column":18},"end":{"line":73,"column":64}},"callee":{"type":"MemberExpression","start":3042,"end":3052,"loc":{"start":{"line":73,"column":18},"end":{"line":73,"column":28}},"object":{"type":"Identifier","start":3042,"end":3046,"loc":{"start":{"line":73,"column":18},"end":{"line":73,"column":22},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":3047,"end":3052,"loc":{"start":{"line":73,"column":23},"end":{"line":73,"column":28},"identifierName":"floor"},"name":"floor"},"computed":false},"arguments":[{"type":"CallExpression","start":3054,"end":3086,"loc":{"start":{"line":73,"column":30},"end":{"line":73,"column":62}},"callee":{"type":"MemberExpression","start":3054,"end":3063,"loc":{"start":{"line":73,"column":30},"end":{"line":73,"column":39}},"object":{"type":"Identifier","start":3054,"end":3058,"loc":{"start":{"line":73,"column":30},"end":{"line":73,"column":34},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":3059,"end":3063,"loc":{"start":{"line":73,"column":35},"end":{"line":73,"column":39},"identifierName":"log2"},"name":"log2"},"computed":false},"arguments":[{"type":"BinaryExpression","start":3065,"end":3084,"loc":{"start":{"line":73,"column":41},"end":{"line":73,"column":60}},"left":{"type":"MemberExpression","start":3065,"end":3080,"loc":{"start":{"line":73,"column":41},"end":{"line":73,"column":56}},"object":{"type":"MemberExpression","start":3065,"end":3077,"loc":{"start":{"line":73,"column":41},"end":{"line":73,"column":53}},"object":{"type":"ThisExpression","start":3065,"end":3069,"loc":{"start":{"line":73,"column":41},"end":{"line":73,"column":45}}},"property":{"type":"Identifier","start":3070,"end":3077,"loc":{"start":{"line":73,"column":46},"end":{"line":73,"column":53},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"NumericLiteral","start":3078,"end":3079,"loc":{"start":{"line":73,"column":54},"end":{"line":73,"column":55}},"extra":{"rawValue":1,"raw":"1"},"value":1},"computed":true},"operator":"-","right":{"type":"NumericLiteral","start":3083,"end":3084,"loc":{"start":{"line":73,"column":59},"end":{"line":73,"column":60}},"extra":{"rawValue":1,"raw":"1"},"value":1}}]}],"trailingComments":null},"trailingComments":null},"leadingComments":null,"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* @ignore ","start":3009,"end":3023,"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":16}}}],"trailingComments":[{"type":"CommentBlock","value":"* @ignore ","start":3091,"end":3105,"loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":16}}}]},{"type":"ExpressionStatement","start":3108,"end":3142,"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":36}},"expression":{"type":"AssignmentExpression","start":3108,"end":3142,"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":36}},"operator":"=","left":{"type":"MemberExpression","start":3108,"end":3119,"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":13}},"object":{"type":"ThisExpression","start":3108,"end":3112,"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":3113,"end":3119,"loc":{"start":{"line":75,"column":7},"end":{"line":75,"column":13},"identifierName":"Y_MASK"},"name":"Y_MASK"},"computed":false,"leadingComments":null},"right":{"type":"BinaryExpression","start":3122,"end":3142,"loc":{"start":{"line":75,"column":16},"end":{"line":75,"column":36}},"left":{"type":"BinaryExpression","start":3123,"end":3139,"loc":{"start":{"line":75,"column":17},"end":{"line":75,"column":33}},"left":{"type":"NumericLiteral","start":3123,"end":3124,"loc":{"start":{"line":75,"column":17},"end":{"line":75,"column":18}},"extra":{"rawValue":1,"raw":"1"},"value":1},"operator":"<<","right":{"type":"MemberExpression","start":3128,"end":3139,"loc":{"start":{"line":75,"column":22},"end":{"line":75,"column":33}},"object":{"type":"ThisExpression","start":3128,"end":3132,"loc":{"start":{"line":75,"column":22},"end":{"line":75,"column":26}}},"property":{"type":"Identifier","start":3133,"end":3139,"loc":{"start":{"line":75,"column":27},"end":{"line":75,"column":33},"identifierName":"Y_BITS"},"name":"Y_BITS"},"computed":false},"extra":{"parenthesized":true,"parenStart":3122}},"operator":"-","right":{"type":"NumericLiteral","start":3141,"end":3142,"loc":{"start":{"line":75,"column":35},"end":{"line":75,"column":36}},"extra":{"rawValue":1,"raw":"1"},"value":1,"leadingComments":null,"trailingComments":null},"trailingComments":null},"leadingComments":null,"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* @ignore ","start":3091,"end":3105,"loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":16}}}],"trailingComments":[{"type":"CommentBlock","value":"* Array coordinates to the middle pixel on the grid.\n\t\t * @type {ArrayCoordinate}\n\t\t * ","start":3148,"end":3239,"loc":{"start":{"line":77,"column":2},"end":{"line":79,"column":7}}}]},{"type":"ExpressionStatement","start":3242,"end":3302,"loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":62}},"expression":{"type":"AssignmentExpression","start":3242,"end":3302,"loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":62}},"operator":"=","left":{"type":"MemberExpression","start":3242,"end":3255,"loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":15}},"object":{"type":"ThisExpression","start":3242,"end":3246,"loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":3247,"end":3255,"loc":{"start":{"line":80,"column":7},"end":{"line":80,"column":15},"identifierName":"midpoint"},"name":"midpoint"},"computed":false,"leadingComments":null},"right":{"type":"CallExpression","start":3258,"end":3302,"loc":{"start":{"line":80,"column":18},"end":{"line":80,"column":62}},"callee":{"type":"MemberExpression","start":3258,"end":3274,"loc":{"start":{"line":80,"column":18},"end":{"line":80,"column":34}},"object":{"type":"MemberExpression","start":3258,"end":3270,"loc":{"start":{"line":80,"column":18},"end":{"line":80,"column":30}},"object":{"type":"ThisExpression","start":3258,"end":3262,"loc":{"start":{"line":80,"column":18},"end":{"line":80,"column":22}}},"property":{"type":"Identifier","start":3263,"end":3270,"loc":{"start":{"line":80,"column":23},"end":{"line":80,"column":30},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":3271,"end":3274,"loc":{"start":{"line":80,"column":31},"end":{"line":80,"column":34},"identifierName":"map"},"name":"map"},"computed":false},"arguments":[{"type":"ArrowFunctionExpression","start":3276,"end":3300,"loc":{"start":{"line":80,"column":36},"end":{"line":80,"column":60}},"id":null,"generator":false,"expression":true,"async":false,"params":[{"type":"Identifier","start":3276,"end":3277,"loc":{"start":{"line":80,"column":36},"end":{"line":80,"column":37},"identifierName":"i"},"name":"i"}],"body":{"type":"CallExpression","start":3281,"end":3300,"loc":{"start":{"line":80,"column":41},"end":{"line":80,"column":60}},"callee":{"type":"MemberExpression","start":3281,"end":3291,"loc":{"start":{"line":80,"column":41},"end":{"line":80,"column":51}},"object":{"type":"Identifier","start":3281,"end":3285,"loc":{"start":{"line":80,"column":41},"end":{"line":80,"column":45},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":3286,"end":3291,"loc":{"start":{"line":80,"column":46},"end":{"line":80,"column":51},"identifierName":"round"},"name":"round"},"computed":false},"arguments":[{"type":"BinaryExpression","start":3292,"end":3299,"loc":{"start":{"line":80,"column":52},"end":{"line":80,"column":59}},"left":{"type":"BinaryExpression","start":3293,"end":3296,"loc":{"start":{"line":80,"column":53},"end":{"line":80,"column":56}},"left":{"type":"Identifier","start":3293,"end":3294,"loc":{"start":{"line":80,"column":53},"end":{"line":80,"column":54},"identifierName":"i"},"name":"i"},"operator":"-","right":{"type":"NumericLiteral","start":3295,"end":3296,"loc":{"start":{"line":80,"column":55},"end":{"line":80,"column":56}},"extra":{"rawValue":1,"raw":"1"},"value":1},"extra":{"parenthesized":true,"parenStart":3292}},"operator":"/","right":{"type":"NumericLiteral","start":3298,"end":3299,"loc":{"start":{"line":80,"column":58},"end":{"line":80,"column":59}},"extra":{"rawValue":2,"raw":"2"},"value":2}}]}}]},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Array coordinates to the middle pixel on the grid.\n\t\t * @type {ArrayCoordinate}\n\t\t * ","start":3148,"end":3239,"loc":{"start":{"line":77,"column":2},"end":{"line":79,"column":7}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The grid constructor.\n\t * @param {GridSize} field_size array of field size in each dimension.\n\t * E.g. [100,200] for a grid that is 100 pixels wide and 200 pixels high.\n\t * Entries must be positive integer numbers.\n\t * @param {boolean[]} [torus=[true,true,...]] - should the borders of the\n\t * grid be linked, so that a cell moving out on the left reappears on the\n\t * right? Should be an array specifying whether the torus holds in each\n\t * dimension; eg [true,false] for a torus in x but not y dimension.\n\t * Warning: setting the torus to false can give artifacts if not done\n\t * properly, see {@link Grid#torus}.","start":414,"end":1035,"loc":{"start":{"line":9,"column":1},"end":{"line":18,"column":39}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n\t * Return the array this._pixelArray, which should be set in the grid\n\t * subclass.\n\t * @returns {Uint16Array|Float32Array}\n\t * @private\n\t ","start":3308,"end":3454,"loc":{"start":{"line":83,"column":1},"end":{"line":88,"column":4}}}]},{"type":"ClassMethod","start":3456,"end":3679,"loc":{"start":{"line":89,"column":1},"end":{"line":95,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":3460,"end":3467,"loc":{"start":{"line":89,"column":5},"end":{"line":89,"column":12},"identifierName":"_pixels"},"name":"_pixels"},"kind":"get","id":null,"generator":false,"expression":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":3469,"end":3679,"loc":{"start":{"line":89,"column":14},"end":{"line":95,"column":2}},"body":[{"type":"IfStatement","start":3473,"end":3542,"loc":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"test":{"type":"BinaryExpression","start":3478,"end":3508,"loc":{"start":{"line":90,"column":7},"end":{"line":90,"column":37}},"left":{"type":"MemberExpression","start":3478,"end":3494,"loc":{"start":{"line":90,"column":7},"end":{"line":90,"column":23}},"object":{"type":"ThisExpression","start":3478,"end":3482,"loc":{"start":{"line":90,"column":7},"end":{"line":90,"column":11}}},"property":{"type":"Identifier","start":3483,"end":3494,"loc":{"start":{"line":90,"column":12},"end":{"line":90,"column":23},"identifierName":"_pixelArray"},"name":"_pixelArray"},"computed":false},"operator":"!==","right":{"type":"Identifier","start":3499,"end":3508,"loc":{"start":{"line":90,"column":28},"end":{"line":90,"column":37},"identifierName":"undefined"},"name":"undefined"}},"consequent":{"type":"BlockStatement","start":3510,"end":3542,"loc":{"start":{"line":90,"column":39},"end":{"line":92,"column":3}},"body":[{"type":"ReturnStatement","start":3515,"end":3538,"loc":{"start":{"line":91,"column":3},"end":{"line":91,"column":26}},"argument":{"type":"MemberExpression","start":3522,"end":3538,"loc":{"start":{"line":91,"column":10},"end":{"line":91,"column":26}},"object":{"type":"ThisExpression","start":3522,"end":3526,"loc":{"start":{"line":91,"column":10},"end":{"line":91,"column":14}}},"property":{"type":"Identifier","start":3527,"end":3538,"loc":{"start":{"line":91,"column":15},"end":{"line":91,"column":26},"identifierName":"_pixelArray"},"name":"_pixelArray"},"computed":false}}],"directives":[]},"alternate":null},{"type":"ThrowStatement","start":3545,"end":3676,"loc":{"start":{"line":93,"column":2},"end":{"line":94,"column":56}},"argument":{"type":"BinaryExpression","start":3551,"end":3675,"loc":{"start":{"line":93,"column":8},"end":{"line":94,"column":55}},"left":{"type":"StringLiteral","start":3551,"end":3617,"loc":{"start":{"line":93,"column":8},"end":{"line":93,"column":74}},"extra":{"rawValue":"A private array this._pixelArray needs to be generated in every ","raw":"\"A private array this._pixelArray needs to be generated in every \""},"value":"A private array this._pixelArray needs to be generated in every "},"operator":"+","right":{"type":"StringLiteral","start":3623,"end":3675,"loc":{"start":{"line":94,"column":3},"end":{"line":94,"column":55}},"extra":{"rawValue":" Grid subclass! See its documentation for details.","raw":"\" Grid subclass! See its documentation for details.\""},"value":" Grid subclass! See its documentation for details."},"extra":{"parenthesized":true,"parenStart":3550}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"*\n\t * Return the array this._pixelArray, which should be set in the grid\n\t * subclass.\n\t * @returns {Uint16Array|Float32Array}\n\t * @private\n\t ","start":3308,"end":3454,"loc":{"start":{"line":83,"column":1},"end":{"line":88,"column":4}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n\t * Set or update the private this._pixelArray.\n\t * @param {Uint16Array|Float32Array} pixels - array of pixels to set.\n\t * @private\n\t ","start":3682,"end":3822,"loc":{"start":{"line":97,"column":1},"end":{"line":101,"column":4}}}]},{"type":"ClassMethod","start":3824,"end":3910,"loc":{"start":{"line":102,"column":1},"end":{"line":105,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":3828,"end":3835,"loc":{"start":{"line":102,"column":5},"end":{"line":102,"column":12},"identifierName":"_pixels"},"name":"_pixels"},"kind":"set","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":3837,"end":3843,"loc":{"start":{"line":102,"column":14},"end":{"line":102,"column":20},"identifierName":"pixels"},"name":"pixels"}],"body":{"type":"BlockStatement","start":3845,"end":3910,"loc":{"start":{"line":102,"column":22},"end":{"line":105,"column":2}},"body":[{"type":"ExpressionStatement","start":3882,"end":3907,"loc":{"start":{"line":104,"column":2},"end":{"line":104,"column":27}},"expression":{"type":"AssignmentExpression","start":3882,"end":3907,"loc":{"start":{"line":104,"column":2},"end":{"line":104,"column":27}},"operator":"=","left":{"type":"MemberExpression","start":3882,"end":3898,"loc":{"start":{"line":104,"column":2},"end":{"line":104,"column":18}},"object":{"type":"ThisExpression","start":3882,"end":3886,"loc":{"start":{"line":104,"column":2},"end":{"line":104,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":3887,"end":3898,"loc":{"start":{"line":104,"column":7},"end":{"line":104,"column":18},"identifierName":"_pixelArray"},"name":"_pixelArray"},"computed":false,"leadingComments":null},"right":{"type":"Identifier","start":3901,"end":3907,"loc":{"start":{"line":104,"column":21},"end":{"line":104,"column":27},"identifierName":"pixels"},"name":"pixels"},"leadingComments":null},"leadingComments":[{"type":"CommentLine","value":"noinspection JSValidateTypes","start":3849,"end":3879,"loc":{"start":{"line":103,"column":2},"end":{"line":103,"column":32}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"*\n\t * Set or update the private this._pixelArray.\n\t * @param {Uint16Array|Float32Array} pixels - array of pixels to set.\n\t * @private\n\t ","start":3682,"end":3822,"loc":{"start":{"line":97,"column":1},"end":{"line":101,"column":4}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method to check if a given {@link ArrayCoordinate} falls within the\n\t * bounds of this grid. Returns an error if this is not the case.\n\t * @param {ArrayCoordinate} p - the coordinate to check.\n\t ","start":3913,"end":4114,"loc":{"start":{"line":107,"column":1},"end":{"line":110,"column":4}}}]},{"type":"ClassMethod","start":4116,"end":4589,"loc":{"start":{"line":111,"column":1},"end":{"line":122,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":4116,"end":4127,"loc":{"start":{"line":111,"column":1},"end":{"line":111,"column":12},"identifierName":"checkOnGrid"},"name":"checkOnGrid","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":4129,"end":4130,"loc":{"start":{"line":111,"column":14},"end":{"line":111,"column":15},"identifierName":"p"},"name":"p"}],"body":{"type":"BlockStatement","start":4132,"end":4589,"loc":{"start":{"line":111,"column":17},"end":{"line":122,"column":2}},"body":[{"type":"ForStatement","start":4136,"end":4586,"loc":{"start":{"line":112,"column":2},"end":{"line":121,"column":3}},"init":{"type":"VariableDeclaration","start":4141,"end":4150,"loc":{"start":{"line":112,"column":7},"end":{"line":112,"column":16}},"declarations":[{"type":"VariableDeclarator","start":4145,"end":4150,"loc":{"start":{"line":112,"column":11},"end":{"line":112,"column":16}},"id":{"type":"Identifier","start":4145,"end":4146,"loc":{"start":{"line":112,"column":11},"end":{"line":112,"column":12},"identifierName":"d"},"name":"d"},"init":{"type":"NumericLiteral","start":4149,"end":4150,"loc":{"start":{"line":112,"column":15},"end":{"line":112,"column":16}},"extra":{"rawValue":0,"raw":"0"},"value":0}}],"kind":"let"},"test":{"type":"BinaryExpression","start":4152,"end":4164,"loc":{"start":{"line":112,"column":18},"end":{"line":112,"column":30}},"left":{"type":"Identifier","start":4152,"end":4153,"loc":{"start":{"line":112,"column":18},"end":{"line":112,"column":19},"identifierName":"d"},"name":"d"},"operator":"<","right":{"type":"MemberExpression","start":4156,"end":4164,"loc":{"start":{"line":112,"column":22},"end":{"line":112,"column":30}},"object":{"type":"Identifier","start":4156,"end":4157,"loc":{"start":{"line":112,"column":22},"end":{"line":112,"column":23},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":4158,"end":4164,"loc":{"start":{"line":112,"column":24},"end":{"line":112,"column":30},"identifierName":"length"},"name":"length"},"computed":false}},"update":{"type":"UpdateExpression","start":4166,"end":4169,"loc":{"start":{"line":112,"column":32},"end":{"line":112,"column":35}},"operator":"++","prefix":false,"argument":{"type":"Identifier","start":4166,"end":4167,"loc":{"start":{"line":112,"column":32},"end":{"line":112,"column":33},"identifierName":"d"},"name":"d"}},"body":{"type":"BlockStatement","start":4171,"end":4586,"loc":{"start":{"line":112,"column":37},"end":{"line":121,"column":3}},"body":[{"type":"IfStatement","start":4176,"end":4582,"loc":{"start":{"line":113,"column":3},"end":{"line":120,"column":4}},"test":{"type":"LogicalExpression","start":4180,"end":4215,"loc":{"start":{"line":113,"column":7},"end":{"line":113,"column":42}},"left":{"type":"BinaryExpression","start":4180,"end":4188,"loc":{"start":{"line":113,"column":7},"end":{"line":113,"column":15}},"left":{"type":"MemberExpression","start":4180,"end":4184,"loc":{"start":{"line":113,"column":7},"end":{"line":113,"column":11}},"object":{"type":"Identifier","start":4180,"end":4181,"loc":{"start":{"line":113,"column":7},"end":{"line":113,"column":8},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":4182,"end":4183,"loc":{"start":{"line":113,"column":9},"end":{"line":113,"column":10},"identifierName":"d"},"name":"d"},"computed":true},"operator":"<","right":{"type":"NumericLiteral","start":4187,"end":4188,"loc":{"start":{"line":113,"column":14},"end":{"line":113,"column":15}},"extra":{"rawValue":0,"raw":"0"},"value":0}},"operator":"||","right":{"type":"BinaryExpression","start":4192,"end":4215,"loc":{"start":{"line":113,"column":19},"end":{"line":113,"column":42}},"left":{"type":"MemberExpression","start":4192,"end":4196,"loc":{"start":{"line":113,"column":19},"end":{"line":113,"column":23}},"object":{"type":"Identifier","start":4192,"end":4193,"loc":{"start":{"line":113,"column":19},"end":{"line":113,"column":20},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":4194,"end":4195,"loc":{"start":{"line":113,"column":21},"end":{"line":113,"column":22},"identifierName":"d"},"name":"d"},"computed":true},"operator":">=","right":{"type":"MemberExpression","start":4200,"end":4215,"loc":{"start":{"line":113,"column":27},"end":{"line":113,"column":42}},"object":{"type":"MemberExpression","start":4200,"end":4212,"loc":{"start":{"line":113,"column":27},"end":{"line":113,"column":39}},"object":{"type":"ThisExpression","start":4200,"end":4204,"loc":{"start":{"line":113,"column":27},"end":{"line":113,"column":31}}},"property":{"type":"Identifier","start":4205,"end":4212,"loc":{"start":{"line":113,"column":32},"end":{"line":113,"column":39},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":4213,"end":4214,"loc":{"start":{"line":113,"column":40},"end":{"line":113,"column":41},"identifierName":"d"},"name":"d"},"computed":true}}},"consequent":{"type":"BlockStatement","start":4217,"end":4582,"loc":{"start":{"line":113,"column":44},"end":{"line":120,"column":4}},"body":[{"type":"ThrowStatement","start":4223,"end":4577,"loc":{"start":{"line":114,"column":4},"end":{"line":119,"column":20}},"argument":{"type":"BinaryExpression","start":4229,"end":4576,"loc":{"start":{"line":114,"column":10},"end":{"line":119,"column":19}},"left":{"type":"BinaryExpression","start":4229,"end":4554,"loc":{"start":{"line":114,"column":10},"end":{"line":118,"column":61}},"left":{"type":"BinaryExpression","start":4229,"end":4490,"loc":{"start":{"line":114,"column":10},"end":{"line":117,"column":64}},"left":{"type":"BinaryExpression","start":4229,"end":4423,"loc":{"start":{"line":114,"column":10},"end":{"line":116,"column":67}},"left":{"type":"BinaryExpression","start":4229,"end":4353,"loc":{"start":{"line":114,"column":10},"end":{"line":115,"column":63}},"left":{"type":"StringLiteral","start":4229,"end":4287,"loc":{"start":{"line":114,"column":10},"end":{"line":114,"column":68}},"extra":{"rawValue":"You are trying to access a coordinate that does not seem","raw":"\"You are trying to access a coordinate that does not seem\""},"value":"You are trying to access a coordinate that does not seem"},"operator":"+","right":{"type":"StringLiteral","start":4295,"end":4353,"loc":{"start":{"line":115,"column":5},"end":{"line":115,"column":63}},"extra":{"rawValue":"to lie on the grid! I am expecting values between 0 and ","raw":"\"to lie on the grid! I am expecting values between 0 and \""},"value":"to lie on the grid! I am expecting values between 0 and "}},"operator":"+","right":{"type":"StringLiteral","start":4361,"end":4423,"loc":{"start":{"line":116,"column":5},"end":{"line":116,"column":67}},"extra":{"rawValue":"the grid dimension specified in field_size. (If this is your","raw":"\"the grid dimension specified in field_size. (If this is your\""},"value":"the grid dimension specified in field_size. (If this is your"}},"operator":"+","right":{"type":"StringLiteral","start":4431,"end":4490,"loc":{"start":{"line":117,"column":5},"end":{"line":117,"column":64}},"extra":{"rawValue":"own grid implementation and this assumption is not valid,","raw":"\"own grid implementation and this assumption is not valid,\""},"value":"own grid implementation and this assumption is not valid,"}},"operator":"+","right":{"type":"StringLiteral","start":4498,"end":4554,"loc":{"start":{"line":118,"column":5},"end":{"line":118,"column":61}},"extra":{"rawValue":"please overwrite the liesOnGrid() function in your own","raw":"\"please overwrite the liesOnGrid() function in your own\""},"value":"please overwrite the liesOnGrid() function in your own"}},"operator":"+","right":{"type":"StringLiteral","start":4562,"end":4576,"loc":{"start":{"line":119,"column":5},"end":{"line":119,"column":19}},"extra":{"rawValue":"grid class).","raw":"\"grid class).\""},"value":"grid class)."},"extra":{"parenthesized":true,"parenStart":4228}}}],"directives":[]},"alternate":null}],"directives":[]}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method to check if a given {@link ArrayCoordinate} falls within the\n\t * bounds of this grid. Returns an error if this is not the case.\n\t * @param {ArrayCoordinate} p - the coordinate to check.\n\t ","start":3913,"end":4114,"loc":{"start":{"line":107,"column":1},"end":{"line":110,"column":4}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method to correct an {@link ArrayCoordinate} outside the grid dimensions when\n\t * the grid is wrapped (torus = true). If the coordinate falls inside the grid,\n\t * it is returned unchanged. If it falls outside the grid and the grid is periodic\n\t * in that dimension, a corrected coordinate is returned. If the pixel falls outside\n\t * the grid which is not periodic in that dimension, the function returns\n\t * 'undefined'.\n\t * @param {ArrayCoordinate} p - the coordinate of the pixel to correct\n\t * @return {ArrayCoordinate} the corrected coordinate.\n\t ","start":4595,"end":5152,"loc":{"start":{"line":125,"column":1},"end":{"line":133,"column":4}}}]},{"type":"ClassMethod","start":5154,"end":5974,"loc":{"start":{"line":134,"column":1},"end":{"line":169,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":5154,"end":5169,"loc":{"start":{"line":134,"column":1},"end":{"line":134,"column":16},"identifierName":"correctPosition"},"name":"correctPosition","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":5171,"end":5172,"loc":{"start":{"line":134,"column":18},"end":{"line":134,"column":19},"identifierName":"p"},"name":"p"}],"body":{"type":"BlockStatement","start":5174,"end":5974,"loc":{"start":{"line":134,"column":21},"end":{"line":169,"column":2}},"body":[{"type":"VariableDeclaration","start":5180,"end":5193,"loc":{"start":{"line":136,"column":2},"end":{"line":136,"column":15}},"declarations":[{"type":"VariableDeclarator","start":5184,"end":5193,"loc":{"start":{"line":136,"column":6},"end":{"line":136,"column":15}},"id":{"type":"Identifier","start":5184,"end":5188,"loc":{"start":{"line":136,"column":6},"end":{"line":136,"column":10},"identifierName":"pnew"},"name":"pnew"},"init":{"type":"ArrayExpression","start":5191,"end":5193,"loc":{"start":{"line":136,"column":13},"end":{"line":136,"column":15}},"elements":[]}}],"kind":"let"},{"type":"VariableDeclaration","start":5196,"end":5214,"loc":{"start":{"line":137,"column":2},"end":{"line":137,"column":20}},"declarations":[{"type":"VariableDeclarator","start":5200,"end":5214,"loc":{"start":{"line":137,"column":6},"end":{"line":137,"column":20}},"id":{"type":"Identifier","start":5200,"end":5206,"loc":{"start":{"line":137,"column":6},"end":{"line":137,"column":12},"identifierName":"ignore"},"name":"ignore"},"init":{"type":"BooleanLiteral","start":5209,"end":5214,"loc":{"start":{"line":137,"column":15},"end":{"line":137,"column":20}},"value":false,"leadingComments":null,"trailingComments":null},"trailingComments":null}],"kind":"let","trailingComments":[{"type":"CommentLine","value":" ignore pixels that fall off the grid when non-periodic grid","start":5215,"end":5277,"loc":{"start":{"line":137,"column":21},"end":{"line":137,"column":83}}},{"type":"CommentLine","value":" Loop over the x, y, (z) dimensions","start":5282,"end":5319,"loc":{"start":{"line":139,"column":2},"end":{"line":139,"column":39}}}]},{"type":"ForStatement","start":5322,"end":5899,"loc":{"start":{"line":140,"column":2},"end":{"line":161,"column":3}},"init":{"type":"VariableDeclaration","start":5327,"end":5336,"loc":{"start":{"line":140,"column":7},"end":{"line":140,"column":16}},"declarations":[{"type":"VariableDeclarator","start":5331,"end":5336,"loc":{"start":{"line":140,"column":11},"end":{"line":140,"column":16}},"id":{"type":"Identifier","start":5331,"end":5332,"loc":{"start":{"line":140,"column":11},"end":{"line":140,"column":12},"identifierName":"d"},"name":"d","leadingComments":null},"init":{"type":"NumericLiteral","start":5335,"end":5336,"loc":{"start":{"line":140,"column":15},"end":{"line":140,"column":16}},"extra":{"rawValue":0,"raw":"0"},"value":0},"leadingComments":null}],"kind":"let","leadingComments":null},"test":{"type":"BinaryExpression","start":5338,"end":5351,"loc":{"start":{"line":140,"column":18},"end":{"line":140,"column":31}},"left":{"type":"Identifier","start":5338,"end":5339,"loc":{"start":{"line":140,"column":18},"end":{"line":140,"column":19},"identifierName":"d"},"name":"d"},"operator":"<","right":{"type":"MemberExpression","start":5342,"end":5351,"loc":{"start":{"line":140,"column":22},"end":{"line":140,"column":31}},"object":{"type":"ThisExpression","start":5342,"end":5346,"loc":{"start":{"line":140,"column":22},"end":{"line":140,"column":26}}},"property":{"type":"Identifier","start":5347,"end":5351,"loc":{"start":{"line":140,"column":27},"end":{"line":140,"column":31},"identifierName":"ndim"},"name":"ndim"},"computed":false}},"update":{"type":"UpdateExpression","start":5353,"end":5356,"loc":{"start":{"line":140,"column":33},"end":{"line":140,"column":36}},"operator":"++","prefix":false,"argument":{"type":"Identifier","start":5353,"end":5354,"loc":{"start":{"line":140,"column":33},"end":{"line":140,"column":34},"identifierName":"d"},"name":"d"}},"body":{"type":"BlockStatement","start":5358,"end":5899,"loc":{"start":{"line":140,"column":38},"end":{"line":161,"column":3}},"body":[{"type":"IfStatement","start":5479,"end":5895,"loc":{"start":{"line":144,"column":3},"end":{"line":160,"column":4}},"test":{"type":"BinaryExpression","start":5483,"end":5491,"loc":{"start":{"line":144,"column":7},"end":{"line":144,"column":15}},"left":{"type":"MemberExpression","start":5483,"end":5487,"loc":{"start":{"line":144,"column":7},"end":{"line":144,"column":11}},"object":{"type":"Identifier","start":5483,"end":5484,"loc":{"start":{"line":144,"column":7},"end":{"line":144,"column":8},"identifierName":"p"},"name":"p","leadingComments":null},"property":{"type":"Identifier","start":5485,"end":5486,"loc":{"start":{"line":144,"column":9},"end":{"line":144,"column":10},"identifierName":"d"},"name":"d"},"computed":true,"leadingComments":null},"operator":"<","right":{"type":"NumericLiteral","start":5490,"end":5491,"loc":{"start":{"line":144,"column":14},"end":{"line":144,"column":15}},"extra":{"rawValue":0,"raw":"0"},"value":0},"leadingComments":null},"consequent":{"type":"BlockStatement","start":5493,"end":5715,"loc":{"start":{"line":144,"column":17},"end":{"line":152,"column":4}},"body":[{"type":"IfStatement","start":5611,"end":5710,"loc":{"start":{"line":147,"column":4},"end":{"line":151,"column":5}},"test":{"type":"MemberExpression","start":5615,"end":5628,"loc":{"start":{"line":147,"column":8},"end":{"line":147,"column":21}},"object":{"type":"MemberExpression","start":5615,"end":5625,"loc":{"start":{"line":147,"column":8},"end":{"line":147,"column":18}},"object":{"type":"ThisExpression","start":5615,"end":5619,"loc":{"start":{"line":147,"column":8},"end":{"line":147,"column":12}},"leadingComments":null},"property":{"type":"Identifier","start":5620,"end":5625,"loc":{"start":{"line":147,"column":13},"end":{"line":147,"column":18},"identifierName":"torus"},"name":"torus"},"computed":false,"leadingComments":null},"property":{"type":"Identifier","start":5626,"end":5627,"loc":{"start":{"line":147,"column":19},"end":{"line":147,"column":20},"identifierName":"d"},"name":"d"},"computed":true,"leadingComments":null},"consequent":{"type":"BlockStatement","start":5630,"end":5678,"loc":{"start":{"line":147,"column":23},"end":{"line":149,"column":5}},"body":[{"type":"ExpressionStatement","start":5637,"end":5672,"loc":{"start":{"line":148,"column":5},"end":{"line":148,"column":40}},"expression":{"type":"CallExpression","start":5637,"end":5672,"loc":{"start":{"line":148,"column":5},"end":{"line":148,"column":40}},"callee":{"type":"MemberExpression","start":5637,"end":5646,"loc":{"start":{"line":148,"column":5},"end":{"line":148,"column":14}},"object":{"type":"Identifier","start":5637,"end":5641,"loc":{"start":{"line":148,"column":5},"end":{"line":148,"column":9},"identifierName":"pnew"},"name":"pnew"},"property":{"type":"Identifier","start":5642,"end":5646,"loc":{"start":{"line":148,"column":10},"end":{"line":148,"column":14},"identifierName":"push"},"name":"push"},"computed":false},"arguments":[{"type":"BinaryExpression","start":5648,"end":5670,"loc":{"start":{"line":148,"column":16},"end":{"line":148,"column":38}},"left":{"type":"MemberExpression","start":5648,"end":5652,"loc":{"start":{"line":148,"column":16},"end":{"line":148,"column":20}},"object":{"type":"Identifier","start":5648,"end":5649,"loc":{"start":{"line":148,"column":16},"end":{"line":148,"column":17},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":5650,"end":5651,"loc":{"start":{"line":148,"column":18},"end":{"line":148,"column":19},"identifierName":"d"},"name":"d"},"computed":true},"operator":"+","right":{"type":"MemberExpression","start":5655,"end":5670,"loc":{"start":{"line":148,"column":23},"end":{"line":148,"column":38}},"object":{"type":"MemberExpression","start":5655,"end":5667,"loc":{"start":{"line":148,"column":23},"end":{"line":148,"column":35}},"object":{"type":"ThisExpression","start":5655,"end":5659,"loc":{"start":{"line":148,"column":23},"end":{"line":148,"column":27}}},"property":{"type":"Identifier","start":5660,"end":5667,"loc":{"start":{"line":148,"column":28},"end":{"line":148,"column":35},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":5668,"end":5669,"loc":{"start":{"line":148,"column":36},"end":{"line":148,"column":37},"identifierName":"d"},"name":"d"},"computed":true}}]}}],"directives":[]},"alternate":{"type":"BlockStatement","start":5684,"end":5710,"loc":{"start":{"line":149,"column":11},"end":{"line":151,"column":5}},"body":[{"type":"ExpressionStatement","start":5691,"end":5704,"loc":{"start":{"line":150,"column":5},"end":{"line":150,"column":18}},"expression":{"type":"AssignmentExpression","start":5691,"end":5704,"loc":{"start":{"line":150,"column":5},"end":{"line":150,"column":18}},"operator":"=","left":{"type":"Identifier","start":5691,"end":5697,"loc":{"start":{"line":150,"column":5},"end":{"line":150,"column":11},"identifierName":"ignore"},"name":"ignore"},"right":{"type":"BooleanLiteral","start":5700,"end":5704,"loc":{"start":{"line":150,"column":14},"end":{"line":150,"column":18}},"value":true}}}],"directives":[]},"leadingComments":[{"type":"CommentLine","value":" If there is a torus in this dimension, correct the position and return.","start":5499,"end":5573,"loc":{"start":{"line":145,"column":4},"end":{"line":145,"column":78}}},{"type":"CommentLine","value":" otherwise just ignore it.","start":5578,"end":5606,"loc":{"start":{"line":146,"column":4},"end":{"line":146,"column":32}}}]}],"directives":[]},"alternate":{"type":"IfStatement","start":5721,"end":5895,"loc":{"start":{"line":152,"column":10},"end":{"line":160,"column":4}},"test":{"type":"BinaryExpression","start":5726,"end":5749,"loc":{"start":{"line":152,"column":15},"end":{"line":152,"column":38}},"left":{"type":"MemberExpression","start":5726,"end":5730,"loc":{"start":{"line":152,"column":15},"end":{"line":152,"column":19}},"object":{"type":"Identifier","start":5726,"end":5727,"loc":{"start":{"line":152,"column":15},"end":{"line":152,"column":16},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":5728,"end":5729,"loc":{"start":{"line":152,"column":17},"end":{"line":152,"column":18},"identifierName":"d"},"name":"d"},"computed":true},"operator":">=","right":{"type":"MemberExpression","start":5734,"end":5749,"loc":{"start":{"line":152,"column":23},"end":{"line":152,"column":38}},"object":{"type":"MemberExpression","start":5734,"end":5746,"loc":{"start":{"line":152,"column":23},"end":{"line":152,"column":35}},"object":{"type":"ThisExpression","start":5734,"end":5738,"loc":{"start":{"line":152,"column":23},"end":{"line":152,"column":27}}},"property":{"type":"Identifier","start":5739,"end":5746,"loc":{"start":{"line":152,"column":28},"end":{"line":152,"column":35},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":5747,"end":5748,"loc":{"start":{"line":152,"column":36},"end":{"line":152,"column":37},"identifierName":"d"},"name":"d"},"computed":true}},"consequent":{"type":"BlockStatement","start":5751,"end":5861,"loc":{"start":{"line":152,"column":40},"end":{"line":158,"column":4}},"body":[{"type":"IfStatement","start":5757,"end":5856,"loc":{"start":{"line":153,"column":4},"end":{"line":157,"column":5}},"test":{"type":"MemberExpression","start":5761,"end":5774,"loc":{"start":{"line":153,"column":8},"end":{"line":153,"column":21}},"object":{"type":"MemberExpression","start":5761,"end":5771,"loc":{"start":{"line":153,"column":8},"end":{"line":153,"column":18}},"object":{"type":"ThisExpression","start":5761,"end":5765,"loc":{"start":{"line":153,"column":8},"end":{"line":153,"column":12}}},"property":{"type":"Identifier","start":5766,"end":5771,"loc":{"start":{"line":153,"column":13},"end":{"line":153,"column":18},"identifierName":"torus"},"name":"torus"},"computed":false},"property":{"type":"Identifier","start":5772,"end":5773,"loc":{"start":{"line":153,"column":19},"end":{"line":153,"column":20},"identifierName":"d"},"name":"d"},"computed":true},"consequent":{"type":"BlockStatement","start":5776,"end":5824,"loc":{"start":{"line":153,"column":23},"end":{"line":155,"column":5}},"body":[{"type":"ExpressionStatement","start":5783,"end":5818,"loc":{"start":{"line":154,"column":5},"end":{"line":154,"column":40}},"expression":{"type":"CallExpression","start":5783,"end":5818,"loc":{"start":{"line":154,"column":5},"end":{"line":154,"column":40}},"callee":{"type":"MemberExpression","start":5783,"end":5792,"loc":{"start":{"line":154,"column":5},"end":{"line":154,"column":14}},"object":{"type":"Identifier","start":5783,"end":5787,"loc":{"start":{"line":154,"column":5},"end":{"line":154,"column":9},"identifierName":"pnew"},"name":"pnew"},"property":{"type":"Identifier","start":5788,"end":5792,"loc":{"start":{"line":154,"column":10},"end":{"line":154,"column":14},"identifierName":"push"},"name":"push"},"computed":false},"arguments":[{"type":"BinaryExpression","start":5794,"end":5816,"loc":{"start":{"line":154,"column":16},"end":{"line":154,"column":38}},"left":{"type":"MemberExpression","start":5794,"end":5798,"loc":{"start":{"line":154,"column":16},"end":{"line":154,"column":20}},"object":{"type":"Identifier","start":5794,"end":5795,"loc":{"start":{"line":154,"column":16},"end":{"line":154,"column":17},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":5796,"end":5797,"loc":{"start":{"line":154,"column":18},"end":{"line":154,"column":19},"identifierName":"d"},"name":"d"},"computed":true},"operator":"-","right":{"type":"MemberExpression","start":5801,"end":5816,"loc":{"start":{"line":154,"column":23},"end":{"line":154,"column":38}},"object":{"type":"MemberExpression","start":5801,"end":5813,"loc":{"start":{"line":154,"column":23},"end":{"line":154,"column":35}},"object":{"type":"ThisExpression","start":5801,"end":5805,"loc":{"start":{"line":154,"column":23},"end":{"line":154,"column":27}}},"property":{"type":"Identifier","start":5806,"end":5813,"loc":{"start":{"line":154,"column":28},"end":{"line":154,"column":35},"identifierName":"extents"},"name":"extents"},"computed":false},"property":{"type":"Identifier","start":5814,"end":5815,"loc":{"start":{"line":154,"column":36},"end":{"line":154,"column":37},"identifierName":"d"},"name":"d"},"computed":true}}]}}],"directives":[]},"alternate":{"type":"BlockStatement","start":5830,"end":5856,"loc":{"start":{"line":155,"column":11},"end":{"line":157,"column":5}},"body":[{"type":"ExpressionStatement","start":5837,"end":5850,"loc":{"start":{"line":156,"column":5},"end":{"line":156,"column":18}},"expression":{"type":"AssignmentExpression","start":5837,"end":5850,"loc":{"start":{"line":156,"column":5},"end":{"line":156,"column":18}},"operator":"=","left":{"type":"Identifier","start":5837,"end":5843,"loc":{"start":{"line":156,"column":5},"end":{"line":156,"column":11},"identifierName":"ignore"},"name":"ignore"},"right":{"type":"BooleanLiteral","start":5846,"end":5850,"loc":{"start":{"line":156,"column":14},"end":{"line":156,"column":18}},"value":true}}}],"directives":[]}}],"directives":[]},"alternate":{"type":"BlockStatement","start":5867,"end":5895,"loc":{"start":{"line":158,"column":10},"end":{"line":160,"column":4}},"body":[{"type":"ExpressionStatement","start":5873,"end":5890,"loc":{"start":{"line":159,"column":4},"end":{"line":159,"column":21}},"expression":{"type":"CallExpression","start":5873,"end":5890,"loc":{"start":{"line":159,"column":4},"end":{"line":159,"column":21}},"callee":{"type":"MemberExpression","start":5873,"end":5882,"loc":{"start":{"line":159,"column":4},"end":{"line":159,"column":13}},"object":{"type":"Identifier","start":5873,"end":5877,"loc":{"start":{"line":159,"column":4},"end":{"line":159,"column":8},"identifierName":"pnew"},"name":"pnew"},"property":{"type":"Identifier","start":5878,"end":5882,"loc":{"start":{"line":159,"column":9},"end":{"line":159,"column":13},"identifierName":"push"},"name":"push"},"computed":false},"arguments":[{"type":"MemberExpression","start":5884,"end":5888,"loc":{"start":{"line":159,"column":15},"end":{"line":159,"column":19}},"object":{"type":"Identifier","start":5884,"end":5885,"loc":{"start":{"line":159,"column":15},"end":{"line":159,"column":16},"identifierName":"p"},"name":"p"},"property":{"type":"Identifier","start":5886,"end":5887,"loc":{"start":{"line":159,"column":17},"end":{"line":159,"column":18},"identifierName":"d"},"name":"d"},"computed":true}]}}],"directives":[]}},"leadingComments":[{"type":"CommentLine","value":" If position is outside the grid dimensions, action depends on whether","start":5365,"end":5437,"loc":{"start":{"line":142,"column":3},"end":{"line":142,"column":75}}},{"type":"CommentLine","value":" grid is periodic or not (torus)","start":5441,"end":5475,"loc":{"start":{"line":143,"column":3},"end":{"line":143,"column":37}}}]}],"directives":[]},"leadingComments":[{"type":"CommentLine","value":" ignore pixels that fall off the grid when non-periodic grid","start":5215,"end":5277,"loc":{"start":{"line":137,"column":21},"end":{"line":137,"column":83}}},{"type":"CommentLine","value":" Loop over the x, y, (z) dimensions","start":5282,"end":5319,"loc":{"start":{"line":139,"column":2},"end":{"line":139,"column":39}}}]},{"type":"IfStatement","start":5904,"end":5969,"loc":{"start":{"line":163,"column":2},"end":{"line":167,"column":3}},"test":{"type":"UnaryExpression","start":5908,"end":5915,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":13}},"operator":"!","prefix":true,"argument":{"type":"Identifier","start":5909,"end":5915,"loc":{"start":{"line":163,"column":7},"end":{"line":163,"column":13},"identifierName":"ignore"},"name":"ignore"},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"BlockStatement","start":5917,"end":5938,"loc":{"start":{"line":163,"column":15},"end":{"line":165,"column":3}},"body":[{"type":"ReturnStatement","start":5923,"end":5934,"loc":{"start":{"line":164,"column":3},"end":{"line":164,"column":14}},"argument":{"type":"Identifier","start":5930,"end":5934,"loc":{"start":{"line":164,"column":10},"end":{"line":164,"column":14},"identifierName":"pnew"},"name":"pnew"}}],"directives":[]},"alternate":{"type":"BlockStatement","start":5944,"end":5969,"loc":{"start":{"line":165,"column":9},"end":{"line":167,"column":3}},"body":[{"type":"ReturnStatement","start":5949,"end":5965,"loc":{"start":{"line":166,"column":3},"end":{"line":166,"column":19}},"argument":{"type":"Identifier","start":5956,"end":5965,"loc":{"start":{"line":166,"column":10},"end":{"line":166,"column":19},"identifierName":"undefined"},"name":"undefined"}}],"directives":[]}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method to correct an {@link ArrayCoordinate} outside the grid dimensions when\n\t * the grid is wrapped (torus = true). If the coordinate falls inside the grid,\n\t * it is returned unchanged. If it falls outside the grid and the grid is periodic\n\t * in that dimension, a corrected coordinate is returned. If the pixel falls outside\n\t * the grid which is not periodic in that dimension, the function returns\n\t * 'undefined'.\n\t * @param {ArrayCoordinate} p - the coordinate of the pixel to correct\n\t * @return {ArrayCoordinate} the corrected coordinate.\n\t ","start":4595,"end":5152,"loc":{"start":{"line":125,"column":1},"end":{"line":133,"column":4}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method for conversion from an {@link ArrayCoordinate} to an\n\t * {@link IndexCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#p2i} for an example.\n\t * @abstract\n\t * @param {ArrayCoordinate} p - the coordinate of the pixel to convert\n\t * @return {IndexCoordinate} the converted coordinate.\n\t ","start":5977,"end":6314,"loc":{"start":{"line":171,"column":1},"end":{"line":178,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":6316,"end":6357,"loc":{"start":{"line":179,"column":1},"end":{"line":179,"column":42}}}]},{"type":"ClassMethod","start":6359,"end":6443,"loc":{"start":{"line":180,"column":1},"end":{"line":182,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":6359,"end":6362,"loc":{"start":{"line":180,"column":1},"end":{"line":180,"column":4},"identifierName":"p2i"},"name":"p2i","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":6365,"end":6366,"loc":{"start":{"line":180,"column":7},"end":{"line":180,"column":8},"identifierName":"p"},"name":"p"}],"body":{"type":"BlockStatement","start":6368,"end":6443,"loc":{"start":{"line":180,"column":10},"end":{"line":182,"column":2}},"body":[{"type":"ThrowStatement","start":6372,"end":6440,"loc":{"start":{"line":181,"column":2},"end":{"line":181,"column":70}},"argument":{"type":"StringLiteral","start":6379,"end":6439,"loc":{"start":{"line":181,"column":9},"end":{"line":181,"column":69}},"extra":{"rawValue":"A p2i method should be implemented in every Grid subclass!","raw":"\"A p2i method should be implemented in every Grid subclass!\"","parenthesized":true,"parenStart":6377},"value":"A p2i method should be implemented in every Grid subclass!"}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method for conversion from an {@link ArrayCoordinate} to an\n\t * {@link IndexCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#p2i} for an example.\n\t * @abstract\n\t * @param {ArrayCoordinate} p - the coordinate of the pixel to convert\n\t * @return {IndexCoordinate} the converted coordinate.\n\t ","start":5977,"end":6314,"loc":{"start":{"line":171,"column":1},"end":{"line":178,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":6316,"end":6357,"loc":{"start":{"line":179,"column":1},"end":{"line":179,"column":42}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method for conversion from an {@link IndexCoordinate} to an\n\t * {@link ArrayCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#i2p} for an example.\n\t * @abstract\n\t * @param {IndexCoordinate} i - the coordinate of the pixel to convert\n\t * @return {ArrayCoordinate} the converted coordinate.\n\t ","start":6446,"end":6783,"loc":{"start":{"line":184,"column":1},"end":{"line":191,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":6785,"end":6826,"loc":{"start":{"line":192,"column":1},"end":{"line":192,"column":42}}}]},{"type":"ClassMethod","start":6828,"end":6913,"loc":{"start":{"line":193,"column":1},"end":{"line":195,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":6828,"end":6831,"loc":{"start":{"line":193,"column":1},"end":{"line":193,"column":4},"identifierName":"i2p"},"name":"i2p","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":6834,"end":6835,"loc":{"start":{"line":193,"column":7},"end":{"line":193,"column":8},"identifierName":"i"},"name":"i"}],"body":{"type":"BlockStatement","start":6837,"end":6913,"loc":{"start":{"line":193,"column":10},"end":{"line":195,"column":2}},"body":[{"type":"ThrowStatement","start":6841,"end":6910,"loc":{"start":{"line":194,"column":2},"end":{"line":194,"column":71}},"argument":{"type":"StringLiteral","start":6848,"end":6909,"loc":{"start":{"line":194,"column":9},"end":{"line":194,"column":70}},"extra":{"rawValue":"An i2p method should be implemented in every Grid subclass!","raw":"\"An i2p method should be implemented in every Grid subclass!\"","parenthesized":true,"parenStart":6846},"value":"An i2p method should be implemented in every Grid subclass!"}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method for conversion from an {@link IndexCoordinate} to an\n\t * {@link ArrayCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#i2p} for an example.\n\t * @abstract\n\t * @param {IndexCoordinate} i - the coordinate of the pixel to convert\n\t * @return {ArrayCoordinate} the converted coordinate.\n\t ","start":6446,"end":6783,"loc":{"start":{"line":184,"column":1},"end":{"line":191,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":6785,"end":6826,"loc":{"start":{"line":192,"column":1},"end":{"line":192,"column":42}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method returning the (Moore) neighborhood of a pixel based on its\n\t * {@link IndexCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#neighi} for an example.\n\t * @abstract\n\t * @param {IndexCoordinate} i - the coordinate of the pixel to get neighbors\n\t * for.\n\t * @param {boolean[]} torus are borders of the grid linked so that a cell\n\t * leaving on the right re-enters the grid on the left?\n\t * @return {IndexCoordinate[]} an array of neighbors.\n\t ","start":6916,"end":7408,"loc":{"start":{"line":197,"column":1},"end":{"line":207,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":7410,"end":7451,"loc":{"start":{"line":208,"column":1},"end":{"line":208,"column":42}}}]},{"type":"ClassMethod","start":7453,"end":7563,"loc":{"start":{"line":209,"column":1},"end":{"line":211,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":7453,"end":7459,"loc":{"start":{"line":209,"column":1},"end":{"line":209,"column":7},"identifierName":"neighi"},"name":"neighi","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":7462,"end":7463,"loc":{"start":{"line":209,"column":10},"end":{"line":209,"column":11},"identifierName":"i"},"name":"i"},{"type":"AssignmentPattern","start":7465,"end":7483,"loc":{"start":{"line":209,"column":13},"end":{"line":209,"column":31}},"left":{"type":"Identifier","start":7465,"end":7470,"loc":{"start":{"line":209,"column":13},"end":{"line":209,"column":18},"identifierName":"torus"},"name":"torus"},"right":{"type":"MemberExpression","start":7473,"end":7483,"loc":{"start":{"line":209,"column":21},"end":{"line":209,"column":31}},"object":{"type":"ThisExpression","start":7473,"end":7477,"loc":{"start":{"line":209,"column":21},"end":{"line":209,"column":25}}},"property":{"type":"Identifier","start":7478,"end":7483,"loc":{"start":{"line":209,"column":26},"end":{"line":209,"column":31},"identifierName":"torus"},"name":"torus"},"computed":false}}],"body":{"type":"BlockStatement","start":7485,"end":7563,"loc":{"start":{"line":209,"column":33},"end":{"line":211,"column":2}},"body":[{"type":"ThrowStatement","start":7489,"end":7560,"loc":{"start":{"line":210,"column":2},"end":{"line":210,"column":73}},"argument":{"type":"StringLiteral","start":7496,"end":7559,"loc":{"start":{"line":210,"column":9},"end":{"line":210,"column":72}},"extra":{"rawValue":"A neighi method should be implemented in every Grid subclass!","raw":"\"A neighi method should be implemented in every Grid subclass!\"","parenthesized":true,"parenStart":7494},"value":"A neighi method should be implemented in every Grid subclass!"}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method returning the (Moore) neighborhood of a pixel based on its\n\t * {@link IndexCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#neighi} for an example.\n\t * @abstract\n\t * @param {IndexCoordinate} i - the coordinate of the pixel to get neighbors\n\t * for.\n\t * @param {boolean[]} torus are borders of the grid linked so that a cell\n\t * leaving on the right re-enters the grid on the left?\n\t * @return {IndexCoordinate[]} an array of neighbors.\n\t ","start":6916,"end":7408,"loc":{"start":{"line":197,"column":1},"end":{"line":207,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":7410,"end":7451,"loc":{"start":{"line":208,"column":1},"end":{"line":208,"column":42}}}],"trailingComments":[{"type":"CommentBlock","value":"* The neigh method returns the neighborhood of a pixel p. This function\n\t * uses array coordinates as input and output arguments, but internally\n\t * calls a method 'neighi' which computes neighborhoods using index-\n\t * coordinates. Since neighborhoods depend on the coordinate system, the\n\t * 'neighi' method is defined in the extension class for that specific\n\t * coordinate system.\n\t * @param {ArrayCoordinate} p array coordinates of a specific pixel\n\t * @param {boolean[]} torus are borders of the grid linked so that a cell\n\t * leaving on the right re-enters the grid on the left?\n\t * @return {ArrayCoordinate[]} an array of neighbors of pixel p, where each\n\t * element contains the array coordinates of the neighbor in question.\n\t * ","start":7566,"end":8308,"loc":{"start":{"line":213,"column":1},"end":{"line":224,"column":6}}}]},{"type":"ClassMethod","start":8310,"end":8440,"loc":{"start":{"line":225,"column":1},"end":{"line":230,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":8310,"end":8315,"loc":{"start":{"line":225,"column":1},"end":{"line":225,"column":6},"identifierName":"neigh"},"name":"neigh","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":8316,"end":8317,"loc":{"start":{"line":225,"column":7},"end":{"line":225,"column":8},"identifierName":"p"},"name":"p"},{"type":"AssignmentPattern","start":8319,"end":8337,"loc":{"start":{"line":225,"column":10},"end":{"line":225,"column":28}},"left":{"type":"Identifier","start":8319,"end":8324,"loc":{"start":{"line":225,"column":10},"end":{"line":225,"column":15},"identifierName":"torus"},"name":"torus"},"right":{"type":"MemberExpression","start":8327,"end":8337,"loc":{"start":{"line":225,"column":18},"end":{"line":225,"column":28}},"object":{"type":"ThisExpression","start":8327,"end":8331,"loc":{"start":{"line":225,"column":18},"end":{"line":225,"column":22}}},"property":{"type":"Identifier","start":8332,"end":8337,"loc":{"start":{"line":225,"column":23},"end":{"line":225,"column":28},"identifierName":"torus"},"name":"torus"},"computed":false}}],"body":{"type":"BlockStatement","start":8338,"end":8440,"loc":{"start":{"line":225,"column":29},"end":{"line":230,"column":2}},"body":[{"type":"VariableDeclaration","start":8342,"end":8354,"loc":{"start":{"line":226,"column":2},"end":{"line":226,"column":14}},"declarations":[{"type":"VariableDeclarator","start":8346,"end":8354,"loc":{"start":{"line":226,"column":6},"end":{"line":226,"column":14}},"id":{"type":"Identifier","start":8346,"end":8347,"loc":{"start":{"line":226,"column":6},"end":{"line":226,"column":7},"identifierName":"g"},"name":"g"},"init":{"type":"ThisExpression","start":8350,"end":8354,"loc":{"start":{"line":226,"column":10},"end":{"line":226,"column":14}}}}],"kind":"let"},{"type":"ReturnStatement","start":8357,"end":8437,"loc":{"start":{"line":227,"column":2},"end":{"line":229,"column":5}},"argument":{"type":"CallExpression","start":8364,"end":8437,"loc":{"start":{"line":227,"column":9},"end":{"line":229,"column":5}},"callee":{"type":"MemberExpression","start":8364,"end":8398,"loc":{"start":{"line":227,"column":9},"end":{"line":227,"column":43}},"object":{"type":"CallExpression","start":8364,"end":8394,"loc":{"start":{"line":227,"column":9},"end":{"line":227,"column":39}},"callee":{"type":"MemberExpression","start":8364,"end":8372,"loc":{"start":{"line":227,"column":9},"end":{"line":227,"column":17}},"object":{"type":"Identifier","start":8364,"end":8365,"loc":{"start":{"line":227,"column":9},"end":{"line":227,"column":10},"identifierName":"g"},"name":"g"},"property":{"type":"Identifier","start":8366,"end":8372,"loc":{"start":{"line":227,"column":11},"end":{"line":227,"column":17},"identifierName":"neighi"},"name":"neighi"},"computed":false},"arguments":[{"type":"CallExpression","start":8374,"end":8385,"loc":{"start":{"line":227,"column":19},"end":{"line":227,"column":30}},"callee":{"type":"MemberExpression","start":8374,"end":8382,"loc":{"start":{"line":227,"column":19},"end":{"line":227,"column":27}},"object":{"type":"ThisExpression","start":8374,"end":8378,"loc":{"start":{"line":227,"column":19},"end":{"line":227,"column":23}}},"property":{"type":"Identifier","start":8379,"end":8382,"loc":{"start":{"line":227,"column":24},"end":{"line":227,"column":27},"identifierName":"p2i"},"name":"p2i"},"computed":false},"arguments":[{"type":"Identifier","start":8383,"end":8384,"loc":{"start":{"line":227,"column":28},"end":{"line":227,"column":29},"identifierName":"p"},"name":"p"}]},{"type":"Identifier","start":8387,"end":8392,"loc":{"start":{"line":227,"column":32},"end":{"line":227,"column":37},"identifierName":"torus"},"name":"torus"}]},"property":{"type":"Identifier","start":8395,"end":8398,"loc":{"start":{"line":227,"column":40},"end":{"line":227,"column":43},"identifierName":"map"},"name":"map"},"computed":false},"arguments":[{"type":"FunctionExpression","start":8400,"end":8435,"loc":{"start":{"line":227,"column":45},"end":{"line":229,"column":3}},"id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":8409,"end":8410,"loc":{"start":{"line":227,"column":54},"end":{"line":227,"column":55},"identifierName":"i"},"name":"i"}],"body":{"type":"BlockStatement","start":8411,"end":8435,"loc":{"start":{"line":227,"column":56},"end":{"line":229,"column":3}},"body":[{"type":"ReturnStatement","start":8416,"end":8431,"loc":{"start":{"line":228,"column":3},"end":{"line":228,"column":18}},"argument":{"type":"CallExpression","start":8423,"end":8431,"loc":{"start":{"line":228,"column":10},"end":{"line":228,"column":18}},"callee":{"type":"MemberExpression","start":8423,"end":8428,"loc":{"start":{"line":228,"column":10},"end":{"line":228,"column":15}},"object":{"type":"Identifier","start":8423,"end":8424,"loc":{"start":{"line":228,"column":10},"end":{"line":228,"column":11},"identifierName":"g"},"name":"g"},"property":{"type":"Identifier","start":8425,"end":8428,"loc":{"start":{"line":228,"column":12},"end":{"line":228,"column":15},"identifierName":"i2p"},"name":"i2p"},"computed":false},"arguments":[{"type":"Identifier","start":8429,"end":8430,"loc":{"start":{"line":228,"column":16},"end":{"line":228,"column":17},"identifierName":"i"},"name":"i"}]}}],"directives":[]}}]}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The neigh method returns the neighborhood of a pixel p. This function\n\t * uses array coordinates as input and output arguments, but internally\n\t * calls a method 'neighi' which computes neighborhoods using index-\n\t * coordinates. Since neighborhoods depend on the coordinate system, the\n\t * 'neighi' method is defined in the extension class for that specific\n\t * coordinate system.\n\t * @param {ArrayCoordinate} p array coordinates of a specific pixel\n\t * @param {boolean[]} torus are borders of the grid linked so that a cell\n\t * leaving on the right re-enters the grid on the left?\n\t * @return {ArrayCoordinate[]} an array of neighbors of pixel p, where each\n\t * element contains the array coordinates of the neighbor in question.\n\t * ","start":7566,"end":8308,"loc":{"start":{"line":213,"column":1},"end":{"line":224,"column":6}}}],"trailingComments":[{"type":"CommentBlock","value":"* Check if a value is valid on this type of grid.\n\t * This function forbids trying to set forbidden (negative/float) values\n\t * on an integer grid, which could cause bugs if the setpix(i) methods try\n\t * to set such a value unnoticed.\n\t * @private\n\t * @param {number} t - the value that would be stored on the grid.\n\t * @param {number} [tol=1e-6] - numeric tolerance for comparing a number\n\t * with its rounded version, to check if it is integer (e.g. setting\n\t * a value 1.5 on an integer grid would throw an error, but setting\n\t * 1.000000000001 would not if the tolerance is 1e-6.\n\t * @return {void} - return without problem or throw an error when an\n\t * incorrect value is set.\n\t * ","start":8443,"end":9133,"loc":{"start":{"line":232,"column":1},"end":{"line":244,"column":6}}}]},{"type":"ClassMethod","start":9135,"end":9356,"loc":{"start":{"line":245,"column":1},"end":{"line":251,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":9135,"end":9148,"loc":{"start":{"line":245,"column":1},"end":{"line":245,"column":14},"identifierName":"_isValidValue"},"name":"_isValidValue","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":9151,"end":9152,"loc":{"start":{"line":245,"column":17},"end":{"line":245,"column":18},"identifierName":"t"},"name":"t"},{"type":"AssignmentPattern","start":9154,"end":9164,"loc":{"start":{"line":245,"column":20},"end":{"line":245,"column":30}},"left":{"type":"Identifier","start":9154,"end":9157,"loc":{"start":{"line":245,"column":20},"end":{"line":245,"column":23},"identifierName":"tol"},"name":"tol"},"right":{"type":"NumericLiteral","start":9160,"end":9164,"loc":{"start":{"line":245,"column":26},"end":{"line":245,"column":30}},"extra":{"rawValue":0.000001,"raw":"1e-6"},"value":0.000001}}],"body":{"type":"BlockStatement","start":9167,"end":9356,"loc":{"start":{"line":245,"column":33},"end":{"line":251,"column":2}},"body":[{"type":"IfStatement","start":9171,"end":9353,"loc":{"start":{"line":246,"column":2},"end":{"line":250,"column":3}},"test":{"type":"BinaryExpression","start":9175,"end":9201,"loc":{"start":{"line":246,"column":6},"end":{"line":246,"column":32}},"left":{"type":"MemberExpression","start":9175,"end":9188,"loc":{"start":{"line":246,"column":6},"end":{"line":246,"column":19}},"object":{"type":"ThisExpression","start":9175,"end":9179,"loc":{"start":{"line":246,"column":6},"end":{"line":246,"column":10}}},"property":{"type":"Identifier","start":9180,"end":9188,"loc":{"start":{"line":246,"column":11},"end":{"line":246,"column":19},"identifierName":"datatype"},"name":"datatype"},"computed":false},"operator":"===","right":{"type":"StringLiteral","start":9193,"end":9201,"loc":{"start":{"line":246,"column":24},"end":{"line":246,"column":32}},"extra":{"rawValue":"Uint16","raw":"\"Uint16\""},"value":"Uint16"}},"consequent":{"type":"BlockStatement","start":9203,"end":9353,"loc":{"start":{"line":246,"column":34},"end":{"line":250,"column":3}},"body":[{"type":"IfStatement","start":9208,"end":9349,"loc":{"start":{"line":247,"column":3},"end":{"line":249,"column":4}},"test":{"type":"LogicalExpression","start":9212,"end":9256,"loc":{"start":{"line":247,"column":7},"end":{"line":247,"column":51}},"left":{"type":"BinaryExpression","start":9212,"end":9217,"loc":{"start":{"line":247,"column":7},"end":{"line":247,"column":12}},"left":{"type":"Identifier","start":9212,"end":9213,"loc":{"start":{"line":247,"column":7},"end":{"line":247,"column":8},"identifierName":"t"},"name":"t"},"operator":"<","right":{"type":"NumericLiteral","start":9216,"end":9217,"loc":{"start":{"line":247,"column":11},"end":{"line":247,"column":12}},"extra":{"rawValue":0,"raw":"0"},"value":0}},"operator":"||","right":{"type":"BinaryExpression","start":9221,"end":9256,"loc":{"start":{"line":247,"column":16},"end":{"line":247,"column":51}},"left":{"type":"CallExpression","start":9221,"end":9250,"loc":{"start":{"line":247,"column":16},"end":{"line":247,"column":45}},"callee":{"type":"MemberExpression","start":9221,"end":9229,"loc":{"start":{"line":247,"column":16},"end":{"line":247,"column":24}},"object":{"type":"Identifier","start":9221,"end":9225,"loc":{"start":{"line":247,"column":16},"end":{"line":247,"column":20},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":9226,"end":9229,"loc":{"start":{"line":247,"column":21},"end":{"line":247,"column":24},"identifierName":"abs"},"name":"abs"},"computed":false},"arguments":[{"type":"BinaryExpression","start":9231,"end":9248,"loc":{"start":{"line":247,"column":26},"end":{"line":247,"column":43}},"left":{"type":"Identifier","start":9231,"end":9232,"loc":{"start":{"line":247,"column":26},"end":{"line":247,"column":27},"identifierName":"t"},"name":"t"},"operator":"-","right":{"type":"CallExpression","start":9235,"end":9248,"loc":{"start":{"line":247,"column":30},"end":{"line":247,"column":43}},"callee":{"type":"MemberExpression","start":9235,"end":9245,"loc":{"start":{"line":247,"column":30},"end":{"line":247,"column":40}},"object":{"type":"Identifier","start":9235,"end":9239,"loc":{"start":{"line":247,"column":30},"end":{"line":247,"column":34},"identifierName":"Math"},"name":"Math"},"property":{"type":"Identifier","start":9240,"end":9245,"loc":{"start":{"line":247,"column":35},"end":{"line":247,"column":40},"identifierName":"round"},"name":"round"},"computed":false},"arguments":[{"type":"Identifier","start":9246,"end":9247,"loc":{"start":{"line":247,"column":41},"end":{"line":247,"column":42},"identifierName":"t"},"name":"t"}]}}]},"operator":">","right":{"type":"Identifier","start":9253,"end":9256,"loc":{"start":{"line":247,"column":48},"end":{"line":247,"column":51},"identifierName":"tol"},"name":"tol"}}},"consequent":{"type":"BlockStatement","start":9259,"end":9349,"loc":{"start":{"line":247,"column":54},"end":{"line":249,"column":4}},"body":[{"type":"ThrowStatement","start":9265,"end":9344,"loc":{"start":{"line":248,"column":4},"end":{"line":248,"column":83}},"argument":{"type":"StringLiteral","start":9272,"end":9342,"loc":{"start":{"line":248,"column":11},"end":{"line":248,"column":81}},"extra":{"rawValue":"You cannot set a negative or floating point number to a Uint16 grid!","raw":"\"You cannot set a negative or floating point number to a Uint16 grid!\"","parenthesized":true,"parenStart":9270},"value":"You cannot set a negative or floating point number to a Uint16 grid!"}}],"directives":[]},"alternate":null}],"directives":[]},"alternate":null}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Check if a value is valid on this type of grid.\n\t * This function forbids trying to set forbidden (negative/float) values\n\t * on an integer grid, which could cause bugs if the setpix(i) methods try\n\t * to set such a value unnoticed.\n\t * @private\n\t * @param {number} t - the value that would be stored on the grid.\n\t * @param {number} [tol=1e-6] - numeric tolerance for comparing a number\n\t * with its rounded version, to check if it is integer (e.g. setting\n\t * a value 1.5 on an integer grid would throw an error, but setting\n\t * 1.000000000001 would not if the tolerance is 1e-6.\n\t * @return {void} - return without problem or throw an error when an\n\t * incorrect value is set.\n\t * ","start":8443,"end":9133,"loc":{"start":{"line":232,"column":1},"end":{"line":244,"column":6}}}],"trailingComments":[{"type":"CommentBlock","value":"* The setpix method changes the value of a pixel p on the grid to t.\n\t * @param {ArrayCoordinate} p array coordinates of the pixel to change the\n\t * value of\n\t * @param {number} t the value to assign to this pixel. This can\n\t * be integers or floating point numbers, depending on the grid subclass\n\t * used (see eg Grid2D). ","start":9359,"end":9687,"loc":{"start":{"line":253,"column":1},"end":{"line":258,"column":28}}}]},{"type":"ClassMethod","start":9689,"end":9763,"loc":{"start":{"line":259,"column":1},"end":{"line":262,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":9689,"end":9695,"loc":{"start":{"line":259,"column":1},"end":{"line":259,"column":7},"identifierName":"setpix"},"name":"setpix","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":9697,"end":9698,"loc":{"start":{"line":259,"column":9},"end":{"line":259,"column":10},"identifierName":"p"},"name":"p"},{"type":"Identifier","start":9700,"end":9701,"loc":{"start":{"line":259,"column":12},"end":{"line":259,"column":13},"identifierName":"t"},"name":"t"}],"body":{"type":"BlockStatement","start":9703,"end":9763,"loc":{"start":{"line":259,"column":15},"end":{"line":262,"column":2}},"body":[{"type":"ExpressionStatement","start":9707,"end":9728,"loc":{"start":{"line":260,"column":2},"end":{"line":260,"column":23}},"expression":{"type":"CallExpression","start":9707,"end":9728,"loc":{"start":{"line":260,"column":2},"end":{"line":260,"column":23}},"callee":{"type":"MemberExpression","start":9707,"end":9725,"loc":{"start":{"line":260,"column":2},"end":{"line":260,"column":20}},"object":{"type":"ThisExpression","start":9707,"end":9711,"loc":{"start":{"line":260,"column":2},"end":{"line":260,"column":6}}},"property":{"type":"Identifier","start":9712,"end":9725,"loc":{"start":{"line":260,"column":7},"end":{"line":260,"column":20},"identifierName":"_isValidValue"},"name":"_isValidValue"},"computed":false},"arguments":[{"type":"Identifier","start":9726,"end":9727,"loc":{"start":{"line":260,"column":21},"end":{"line":260,"column":22},"identifierName":"t"},"name":"t"}]}},{"type":"ExpressionStatement","start":9731,"end":9760,"loc":{"start":{"line":261,"column":2},"end":{"line":261,"column":31}},"expression":{"type":"AssignmentExpression","start":9731,"end":9760,"loc":{"start":{"line":261,"column":2},"end":{"line":261,"column":31}},"operator":"=","left":{"type":"MemberExpression","start":9731,"end":9756,"loc":{"start":{"line":261,"column":2},"end":{"line":261,"column":27}},"object":{"type":"MemberExpression","start":9731,"end":9743,"loc":{"start":{"line":261,"column":2},"end":{"line":261,"column":14}},"object":{"type":"ThisExpression","start":9731,"end":9735,"loc":{"start":{"line":261,"column":2},"end":{"line":261,"column":6}}},"property":{"type":"Identifier","start":9736,"end":9743,"loc":{"start":{"line":261,"column":7},"end":{"line":261,"column":14},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"CallExpression","start":9744,"end":9755,"loc":{"start":{"line":261,"column":15},"end":{"line":261,"column":26}},"callee":{"type":"MemberExpression","start":9744,"end":9752,"loc":{"start":{"line":261,"column":15},"end":{"line":261,"column":23}},"object":{"type":"ThisExpression","start":9744,"end":9748,"loc":{"start":{"line":261,"column":15},"end":{"line":261,"column":19}}},"property":{"type":"Identifier","start":9749,"end":9752,"loc":{"start":{"line":261,"column":20},"end":{"line":261,"column":23},"identifierName":"p2i"},"name":"p2i"},"computed":false},"arguments":[{"type":"Identifier","start":9753,"end":9754,"loc":{"start":{"line":261,"column":24},"end":{"line":261,"column":25},"identifierName":"p"},"name":"p"}]},"computed":true},"right":{"type":"Identifier","start":9759,"end":9760,"loc":{"start":{"line":261,"column":30},"end":{"line":261,"column":31},"identifierName":"t"},"name":"t"}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The setpix method changes the value of a pixel p on the grid to t.\n\t * @param {ArrayCoordinate} p array coordinates of the pixel to change the\n\t * value of\n\t * @param {number} t the value to assign to this pixel. This can\n\t * be integers or floating point numbers, depending on the grid subclass\n\t * used (see eg Grid2D). ","start":9359,"end":9687,"loc":{"start":{"line":253,"column":1},"end":{"line":258,"column":28}}}],"trailingComments":[{"type":"CommentBlock","value":"* The setpixi method changes the value of a pixel i on the grid to t.\n\t * @param {IndexCoordinate} i index coordinates of the pixel to change the\n\t * value of\n\t * @param {number} t the value to assign to this pixel. This can be integers\n\t * or floating point numbers, depending on the grid subclass used\n\t * (see eg Grid2D).\n\t * ","start":9766,"end":10099,"loc":{"start":{"line":264,"column":1},"end":{"line":270,"column":6}}}]},{"type":"ClassMethod","start":10101,"end":10166,"loc":{"start":{"line":271,"column":1},"end":{"line":274,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":10101,"end":10108,"loc":{"start":{"line":271,"column":1},"end":{"line":271,"column":8},"identifierName":"setpixi"},"name":"setpixi","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":10110,"end":10111,"loc":{"start":{"line":271,"column":10},"end":{"line":271,"column":11},"identifierName":"i"},"name":"i"},{"type":"Identifier","start":10113,"end":10114,"loc":{"start":{"line":271,"column":13},"end":{"line":271,"column":14},"identifierName":"t"},"name":"t"}],"body":{"type":"BlockStatement","start":10116,"end":10166,"loc":{"start":{"line":271,"column":16},"end":{"line":274,"column":2}},"body":[{"type":"ExpressionStatement","start":10120,"end":10141,"loc":{"start":{"line":272,"column":2},"end":{"line":272,"column":23}},"expression":{"type":"CallExpression","start":10120,"end":10141,"loc":{"start":{"line":272,"column":2},"end":{"line":272,"column":23}},"callee":{"type":"MemberExpression","start":10120,"end":10138,"loc":{"start":{"line":272,"column":2},"end":{"line":272,"column":20}},"object":{"type":"ThisExpression","start":10120,"end":10124,"loc":{"start":{"line":272,"column":2},"end":{"line":272,"column":6}}},"property":{"type":"Identifier","start":10125,"end":10138,"loc":{"start":{"line":272,"column":7},"end":{"line":272,"column":20},"identifierName":"_isValidValue"},"name":"_isValidValue"},"computed":false},"arguments":[{"type":"Identifier","start":10139,"end":10140,"loc":{"start":{"line":272,"column":21},"end":{"line":272,"column":22},"identifierName":"t"},"name":"t"}]}},{"type":"ExpressionStatement","start":10144,"end":10163,"loc":{"start":{"line":273,"column":2},"end":{"line":273,"column":21}},"expression":{"type":"AssignmentExpression","start":10144,"end":10163,"loc":{"start":{"line":273,"column":2},"end":{"line":273,"column":21}},"operator":"=","left":{"type":"MemberExpression","start":10144,"end":10159,"loc":{"start":{"line":273,"column":2},"end":{"line":273,"column":17}},"object":{"type":"MemberExpression","start":10144,"end":10156,"loc":{"start":{"line":273,"column":2},"end":{"line":273,"column":14}},"object":{"type":"ThisExpression","start":10144,"end":10148,"loc":{"start":{"line":273,"column":2},"end":{"line":273,"column":6}}},"property":{"type":"Identifier","start":10149,"end":10156,"loc":{"start":{"line":273,"column":7},"end":{"line":273,"column":14},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"Identifier","start":10157,"end":10158,"loc":{"start":{"line":273,"column":15},"end":{"line":273,"column":16},"identifierName":"i"},"name":"i"},"computed":true},"right":{"type":"Identifier","start":10162,"end":10163,"loc":{"start":{"line":273,"column":20},"end":{"line":273,"column":21},"identifierName":"t"},"name":"t"}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The setpixi method changes the value of a pixel i on the grid to t.\n\t * @param {IndexCoordinate} i index coordinates of the pixel to change the\n\t * value of\n\t * @param {number} t the value to assign to this pixel. This can be integers\n\t * or floating point numbers, depending on the grid subclass used\n\t * (see eg Grid2D).\n\t * ","start":9766,"end":10099,"loc":{"start":{"line":264,"column":1},"end":{"line":270,"column":6}}}],"trailingComments":[{"type":"CommentBlock","value":"* The pixt method finds the current value of a pixel p on the grid.\n\t * @param {ArrayCoordinate} p array coordinates of the pixel to find the\n\t * value of\n\t * @return {number} t the value of p on the grid. This can be integers or\n\t * floating point numbers, depending on the grid subclass used (see eg\n\t * Grid2D).\n\t ","start":10169,"end":10490,"loc":{"start":{"line":276,"column":1},"end":{"line":282,"column":4}}}]},{"type":"ClassMethod","start":10492,"end":10540,"loc":{"start":{"line":283,"column":1},"end":{"line":285,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":10492,"end":10496,"loc":{"start":{"line":283,"column":1},"end":{"line":283,"column":5},"identifierName":"pixt"},"name":"pixt","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":10498,"end":10499,"loc":{"start":{"line":283,"column":7},"end":{"line":283,"column":8},"identifierName":"p"},"name":"p"}],"body":{"type":"BlockStatement","start":10501,"end":10540,"loc":{"start":{"line":283,"column":10},"end":{"line":285,"column":2}},"body":[{"type":"ReturnStatement","start":10505,"end":10537,"loc":{"start":{"line":284,"column":2},"end":{"line":284,"column":34}},"argument":{"type":"MemberExpression","start":10512,"end":10537,"loc":{"start":{"line":284,"column":9},"end":{"line":284,"column":34}},"object":{"type":"MemberExpression","start":10512,"end":10524,"loc":{"start":{"line":284,"column":9},"end":{"line":284,"column":21}},"object":{"type":"ThisExpression","start":10512,"end":10516,"loc":{"start":{"line":284,"column":9},"end":{"line":284,"column":13}}},"property":{"type":"Identifier","start":10517,"end":10524,"loc":{"start":{"line":284,"column":14},"end":{"line":284,"column":21},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"CallExpression","start":10525,"end":10536,"loc":{"start":{"line":284,"column":22},"end":{"line":284,"column":33}},"callee":{"type":"MemberExpression","start":10525,"end":10533,"loc":{"start":{"line":284,"column":22},"end":{"line":284,"column":30}},"object":{"type":"ThisExpression","start":10525,"end":10529,"loc":{"start":{"line":284,"column":22},"end":{"line":284,"column":26}}},"property":{"type":"Identifier","start":10530,"end":10533,"loc":{"start":{"line":284,"column":27},"end":{"line":284,"column":30},"identifierName":"p2i"},"name":"p2i"},"computed":false},"arguments":[{"type":"Identifier","start":10534,"end":10535,"loc":{"start":{"line":284,"column":31},"end":{"line":284,"column":32},"identifierName":"p"},"name":"p"}]},"computed":true}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The pixt method finds the current value of a pixel p on the grid.\n\t * @param {ArrayCoordinate} p array coordinates of the pixel to find the\n\t * value of\n\t * @return {number} t the value of p on the grid. This can be integers or\n\t * floating point numbers, depending on the grid subclass used (see eg\n\t * Grid2D).\n\t ","start":10169,"end":10490,"loc":{"start":{"line":276,"column":1},"end":{"line":282,"column":4}}}],"trailingComments":[{"type":"CommentBlock","value":"* The pixti method finds the current value of a pixel i on the grid.\n\t * @param {IndexCoordinate} i index coordinates of the pixel to find the\n\t * value of\n\t * @return {number} t the value of i on the grid. This can be integers or\n\t * floating point numbers, depending on the grid subclass used (see eg\n\t * Grid2D).\n\t","start":10543,"end":10864,"loc":{"start":{"line":287,"column":1},"end":{"line":293,"column":3}}}]},{"type":"ClassMethod","start":10866,"end":10905,"loc":{"start":{"line":294,"column":1},"end":{"line":296,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":10866,"end":10871,"loc":{"start":{"line":294,"column":1},"end":{"line":294,"column":6},"identifierName":"pixti"},"name":"pixti","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":10873,"end":10874,"loc":{"start":{"line":294,"column":8},"end":{"line":294,"column":9},"identifierName":"i"},"name":"i"}],"body":{"type":"BlockStatement","start":10876,"end":10905,"loc":{"start":{"line":294,"column":11},"end":{"line":296,"column":2}},"body":[{"type":"ReturnStatement","start":10880,"end":10902,"loc":{"start":{"line":295,"column":2},"end":{"line":295,"column":24}},"argument":{"type":"MemberExpression","start":10887,"end":10902,"loc":{"start":{"line":295,"column":9},"end":{"line":295,"column":24}},"object":{"type":"MemberExpression","start":10887,"end":10899,"loc":{"start":{"line":295,"column":9},"end":{"line":295,"column":21}},"object":{"type":"ThisExpression","start":10887,"end":10891,"loc":{"start":{"line":295,"column":9},"end":{"line":295,"column":13}}},"property":{"type":"Identifier","start":10892,"end":10899,"loc":{"start":{"line":295,"column":14},"end":{"line":295,"column":21},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"Identifier","start":10900,"end":10901,"loc":{"start":{"line":295,"column":22},"end":{"line":295,"column":23},"identifierName":"i"},"name":"i"},"computed":true}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* The pixti method finds the current value of a pixel i on the grid.\n\t * @param {IndexCoordinate} i index coordinates of the pixel to find the\n\t * value of\n\t * @return {number} t the value of i on the grid. This can be integers or\n\t * floating point numbers, depending on the grid subclass used (see eg\n\t * Grid2D).\n\t","start":10543,"end":10864,"loc":{"start":{"line":287,"column":1},"end":{"line":293,"column":3}}}],"trailingComments":[{"type":"CommentBlock","value":"* A pixel on the grid.\n\t * @typedef {Object[]} Pixel\n\t * @property {ArrayCoordinate} Pixel[0] - pixel coordinate\n\t * @property {number} Pixel[1] - pixel value\n\t * ","start":10908,"end":11075,"loc":{"start":{"line":298,"column":1},"end":{"line":302,"column":6}}},{"type":"CommentBlock","value":" /** A pixel on the grid.\n\t * @typedef {Object[]} iPixel\n\t * @property {IndexCoordinate} Pixel[0] - pixel coordinate\n\t * @property {number} Pixel[1] - pixel value\n\t * ","start":11079,"end":11250,"loc":{"start":{"line":304,"column":1},"end":{"line":308,"column":6}}},{"type":"CommentBlock","value":"* This iterator returns locations and values of all non-zero pixels.\n\t * This method isn't actually called because the subclasses implement\n\t * it themselves due to efficiency reasons. It serves as a template to\n\t * document the functionality.\n\t * @abstract\n\t * @return {Pixel} for each pixel, return an array [p,v] where p are\n\t * the pixel's array coordinates on the grid, and v its value.","start":11253,"end":11648,"loc":{"start":{"line":310,"column":1},"end":{"line":316,"column":65}}},{"type":"CommentLine","value":"eslint-disable-next-line require-yield","start":11650,"end":11690,"loc":{"start":{"line":317,"column":1},"end":{"line":317,"column":41}}}]},{"type":"ClassMethod","start":11692,"end":11926,"loc":{"start":{"line":318,"column":1},"end":{"line":329,"column":2}},"static":false,"kind":"method","computed":false,"key":{"type":"Identifier","start":11694,"end":11700,"loc":{"start":{"line":318,"column":3},"end":{"line":318,"column":9},"identifierName":"pixels"},"name":"pixels","leadingComments":null},"id":null,"generator":true,"expression":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":11703,"end":11926,"loc":{"start":{"line":318,"column":12},"end":{"line":329,"column":2}},"body":[{"type":"ThrowStatement","start":11740,"end":11783,"loc":{"start":{"line":320,"column":2},"end":{"line":320,"column":45}},"argument":{"type":"StringLiteral","start":11746,"end":11782,"loc":{"start":{"line":320,"column":8},"end":{"line":320,"column":44}},"extra":{"rawValue":"Iterator 'pixels' not implemented!","raw":"\"Iterator 'pixels' not implemented!\"","parenthesized":true,"parenStart":11745},"value":"Iterator 'pixels' not implemented!","leadingComments":null},"leadingComments":[{"type":"CommentLine","value":"noinspection JSValidateTypes","start":11707,"end":11737,"loc":{"start":{"line":319,"column":2},"end":{"line":319,"column":32}}}],"trailingComments":[{"type":"CommentBlock","value":"\n\t\t// example code:\n\t\tfor( let i of this.pixelsi() ){\n\t\t\tif( this._pixels[i] > 0 ){\n\t\t\t\tyield [this.i2p(i),this._pixels[i]]\n\t\t\t}\n\t\t}","start":11787,"end":11923,"loc":{"start":{"line":322,"column":2},"end":{"line":328,"column":5}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* A pixel on the grid.\n\t * @typedef {Object[]} Pixel\n\t * @property {ArrayCoordinate} Pixel[0] - pixel coordinate\n\t * @property {number} Pixel[1] - pixel value\n\t * ","start":10908,"end":11075,"loc":{"start":{"line":298,"column":1},"end":{"line":302,"column":6}}},{"type":"CommentBlock","value":" /** A pixel on the grid.\n\t * @typedef {Object[]} iPixel\n\t * @property {IndexCoordinate} Pixel[0] - pixel coordinate\n\t * @property {number} Pixel[1] - pixel value\n\t * ","start":11079,"end":11250,"loc":{"start":{"line":304,"column":1},"end":{"line":308,"column":6}}},{"type":"CommentBlock","value":"* This iterator returns locations and values of all non-zero pixels.\n\t * This method isn't actually called because the subclasses implement\n\t * it themselves due to efficiency reasons. It serves as a template to\n\t * document the functionality.\n\t * @abstract\n\t * @return {Pixel} for each pixel, return an array [p,v] where p are\n\t * the pixel's array coordinates on the grid, and v its value.","start":11253,"end":11648,"loc":{"start":{"line":310,"column":1},"end":{"line":316,"column":65}}},{"type":"CommentLine","value":"eslint-disable-next-line require-yield","start":11650,"end":11690,"loc":{"start":{"line":317,"column":1},"end":{"line":317,"column":41}}}],"trailingComments":[{"type":"CommentBlock","value":"* This iterator returns locations all pixels including background.\n\t * This method isn't actually called because the subclasses implement\n\t * it themselves due to efficiency reasons. It serves as a template to\n\t * document the functionality.\n\t * @abstract\n\t * @return {IndexCoordinate} for each pixel, because this method should be\n\t * implemented in a grid subclass.\n\t * ","start":11929,"end":12305,"loc":{"start":{"line":331,"column":1},"end":{"line":338,"column":6}}},{"type":"CommentLine","value":"eslint-disable-next-line require-yield","start":12307,"end":12347,"loc":{"start":{"line":339,"column":1},"end":{"line":339,"column":41}}}]},{"type":"ClassMethod","start":12349,"end":12432,"loc":{"start":{"line":340,"column":1},"end":{"line":343,"column":2}},"static":false,"kind":"method","computed":false,"key":{"type":"Identifier","start":12351,"end":12358,"loc":{"start":{"line":340,"column":3},"end":{"line":340,"column":10},"identifierName":"pixelsi"},"name":"pixelsi","leadingComments":null},"id":null,"generator":true,"expression":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":12361,"end":12432,"loc":{"start":{"line":340,"column":13},"end":{"line":343,"column":2}},"body":[{"type":"ThrowStatement","start":12365,"end":12409,"loc":{"start":{"line":341,"column":2},"end":{"line":341,"column":46}},"argument":{"type":"StringLiteral","start":12371,"end":12408,"loc":{"start":{"line":341,"column":8},"end":{"line":341,"column":45}},"extra":{"rawValue":"Iterator 'pixelsi' not implemented!","raw":"\"Iterator 'pixelsi' not implemented!\"","parenthesized":true,"parenStart":12370},"value":"Iterator 'pixelsi' not implemented!"},"trailingComments":[{"type":"CommentLine","value":"yield undefined","start":12412,"end":12429,"loc":{"start":{"line":342,"column":2},"end":{"line":342,"column":19}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* This iterator returns locations all pixels including background.\n\t * This method isn't actually called because the subclasses implement\n\t * it themselves due to efficiency reasons. It serves as a template to\n\t * document the functionality.\n\t * @abstract\n\t * @return {IndexCoordinate} for each pixel, because this method should be\n\t * implemented in a grid subclass.\n\t * ","start":11929,"end":12305,"loc":{"start":{"line":331,"column":1},"end":{"line":338,"column":6}}},{"type":"CommentLine","value":"eslint-disable-next-line require-yield","start":12307,"end":12347,"loc":{"start":{"line":339,"column":1},"end":{"line":339,"column":41}}}],"trailingComments":[{"type":"CommentBlock","value":"* This method pre-allocates an array of the correct datatype to make\n\t * a copy of the current pixel values. Values are not actually copied yet.\n\t * @return {Uint16Array|Float32Array} an array with an element for each\n\t * pixel. The datatype is determined by the datatype of this._pixels\n\t * (implemented in the subclass), which can be either Uint16Array or\n\t * Float32Array. ","start":12435,"end":12815,"loc":{"start":{"line":345,"column":1},"end":{"line":350,"column":20}}}]},{"type":"ClassMethod","start":12817,"end":13327,"loc":{"start":{"line":351,"column":1},"end":{"line":365,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":12817,"end":12829,"loc":{"start":{"line":351,"column":1},"end":{"line":351,"column":13},"identifierName":"pixelsBuffer"},"name":"pixelsBuffer","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":12832,"end":13327,"loc":{"start":{"line":351,"column":16},"end":{"line":365,"column":2}},"body":[{"type":"ExpressionStatement","start":12970,"end":13027,"loc":{"start":{"line":356,"column":2},"end":{"line":356,"column":59}},"expression":{"type":"AssignmentExpression","start":12970,"end":13027,"loc":{"start":{"line":356,"column":2},"end":{"line":356,"column":59}},"operator":"=","left":{"type":"MemberExpression","start":12970,"end":12988,"loc":{"start":{"line":356,"column":2},"end":{"line":356,"column":20}},"object":{"type":"ThisExpression","start":12970,"end":12974,"loc":{"start":{"line":356,"column":2},"end":{"line":356,"column":6}},"leadingComments":null},"property":{"type":"Identifier","start":12975,"end":12988,"loc":{"start":{"line":356,"column":7},"end":{"line":356,"column":20},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false,"leadingComments":null},"right":{"type":"NewExpression","start":12991,"end":13027,"loc":{"start":{"line":356,"column":23},"end":{"line":356,"column":59}},"callee":{"type":"Identifier","start":12995,"end":13006,"loc":{"start":{"line":356,"column":27},"end":{"line":356,"column":38},"identifierName":"Uint16Array"},"name":"Uint16Array"},"arguments":[{"type":"MemberExpression","start":13007,"end":13026,"loc":{"start":{"line":356,"column":39},"end":{"line":356,"column":58}},"object":{"type":"MemberExpression","start":13007,"end":13019,"loc":{"start":{"line":356,"column":39},"end":{"line":356,"column":51}},"object":{"type":"ThisExpression","start":13007,"end":13011,"loc":{"start":{"line":356,"column":39},"end":{"line":356,"column":43}}},"property":{"type":"Identifier","start":13012,"end":13019,"loc":{"start":{"line":356,"column":44},"end":{"line":356,"column":51},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"Identifier","start":13020,"end":13026,"loc":{"start":{"line":356,"column":52},"end":{"line":356,"column":58},"identifierName":"length"},"name":"length"},"computed":false}]},"leadingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* For storing a copy of all pixel values; eg for synchronous updating\n\t\t * of some sort.\n\t\t * @type {Uint16Array|Float32Array}","start":12837,"end":12967,"loc":{"start":{"line":353,"column":2},"end":{"line":355,"column":39}}}]},{"type":"IfStatement","start":13032,"end":13324,"loc":{"start":{"line":358,"column":2},"end":{"line":364,"column":3}},"test":{"type":"BinaryExpression","start":13036,"end":13071,"loc":{"start":{"line":358,"column":6},"end":{"line":358,"column":41}},"left":{"type":"MemberExpression","start":13036,"end":13048,"loc":{"start":{"line":358,"column":6},"end":{"line":358,"column":18}},"object":{"type":"ThisExpression","start":13036,"end":13040,"loc":{"start":{"line":358,"column":6},"end":{"line":358,"column":10}}},"property":{"type":"Identifier","start":13041,"end":13048,"loc":{"start":{"line":358,"column":11},"end":{"line":358,"column":18},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"operator":"instanceof","right":{"type":"Identifier","start":13060,"end":13071,"loc":{"start":{"line":358,"column":30},"end":{"line":358,"column":41},"identifierName":"Uint16Array"},"name":"Uint16Array"}},"consequent":{"type":"BlockStatement","start":13073,"end":13139,"loc":{"start":{"line":358,"column":43},"end":{"line":360,"column":3}},"body":[{"type":"ExpressionStatement","start":13078,"end":13135,"loc":{"start":{"line":359,"column":3},"end":{"line":359,"column":60}},"expression":{"type":"AssignmentExpression","start":13078,"end":13135,"loc":{"start":{"line":359,"column":3},"end":{"line":359,"column":60}},"operator":"=","left":{"type":"MemberExpression","start":13078,"end":13096,"loc":{"start":{"line":359,"column":3},"end":{"line":359,"column":21}},"object":{"type":"ThisExpression","start":13078,"end":13082,"loc":{"start":{"line":359,"column":3},"end":{"line":359,"column":7}}},"property":{"type":"Identifier","start":13083,"end":13096,"loc":{"start":{"line":359,"column":8},"end":{"line":359,"column":21},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false},"right":{"type":"NewExpression","start":13099,"end":13135,"loc":{"start":{"line":359,"column":24},"end":{"line":359,"column":60}},"callee":{"type":"Identifier","start":13103,"end":13114,"loc":{"start":{"line":359,"column":28},"end":{"line":359,"column":39},"identifierName":"Uint16Array"},"name":"Uint16Array"},"arguments":[{"type":"MemberExpression","start":13115,"end":13134,"loc":{"start":{"line":359,"column":40},"end":{"line":359,"column":59}},"object":{"type":"MemberExpression","start":13115,"end":13127,"loc":{"start":{"line":359,"column":40},"end":{"line":359,"column":52}},"object":{"type":"ThisExpression","start":13115,"end":13119,"loc":{"start":{"line":359,"column":40},"end":{"line":359,"column":44}}},"property":{"type":"Identifier","start":13120,"end":13127,"loc":{"start":{"line":359,"column":45},"end":{"line":359,"column":52},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"Identifier","start":13128,"end":13134,"loc":{"start":{"line":359,"column":53},"end":{"line":359,"column":59},"identifierName":"length"},"name":"length"},"computed":false}]}}}],"directives":[]},"alternate":{"type":"IfStatement","start":13145,"end":13324,"loc":{"start":{"line":360,"column":9},"end":{"line":364,"column":3}},"test":{"type":"BinaryExpression","start":13149,"end":13185,"loc":{"start":{"line":360,"column":13},"end":{"line":360,"column":49}},"left":{"type":"MemberExpression","start":13149,"end":13161,"loc":{"start":{"line":360,"column":13},"end":{"line":360,"column":25}},"object":{"type":"ThisExpression","start":13149,"end":13153,"loc":{"start":{"line":360,"column":13},"end":{"line":360,"column":17}}},"property":{"type":"Identifier","start":13154,"end":13161,"loc":{"start":{"line":360,"column":18},"end":{"line":360,"column":25},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"operator":"instanceof","right":{"type":"Identifier","start":13173,"end":13185,"loc":{"start":{"line":360,"column":37},"end":{"line":360,"column":49},"identifierName":"Float32Array"},"name":"Float32Array"}},"consequent":{"type":"BlockStatement","start":13187,"end":13254,"loc":{"start":{"line":360,"column":51},"end":{"line":362,"column":3}},"body":[{"type":"ExpressionStatement","start":13192,"end":13250,"loc":{"start":{"line":361,"column":3},"end":{"line":361,"column":61}},"expression":{"type":"AssignmentExpression","start":13192,"end":13250,"loc":{"start":{"line":361,"column":3},"end":{"line":361,"column":61}},"operator":"=","left":{"type":"MemberExpression","start":13192,"end":13210,"loc":{"start":{"line":361,"column":3},"end":{"line":361,"column":21}},"object":{"type":"ThisExpression","start":13192,"end":13196,"loc":{"start":{"line":361,"column":3},"end":{"line":361,"column":7}}},"property":{"type":"Identifier","start":13197,"end":13210,"loc":{"start":{"line":361,"column":8},"end":{"line":361,"column":21},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false},"right":{"type":"NewExpression","start":13213,"end":13250,"loc":{"start":{"line":361,"column":24},"end":{"line":361,"column":61}},"callee":{"type":"Identifier","start":13217,"end":13229,"loc":{"start":{"line":361,"column":28},"end":{"line":361,"column":40},"identifierName":"Float32Array"},"name":"Float32Array"},"arguments":[{"type":"MemberExpression","start":13230,"end":13249,"loc":{"start":{"line":361,"column":41},"end":{"line":361,"column":60}},"object":{"type":"MemberExpression","start":13230,"end":13242,"loc":{"start":{"line":361,"column":41},"end":{"line":361,"column":53}},"object":{"type":"ThisExpression","start":13230,"end":13234,"loc":{"start":{"line":361,"column":41},"end":{"line":361,"column":45}}},"property":{"type":"Identifier","start":13235,"end":13242,"loc":{"start":{"line":361,"column":46},"end":{"line":361,"column":53},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"Identifier","start":13243,"end":13249,"loc":{"start":{"line":361,"column":54},"end":{"line":361,"column":60},"identifierName":"length"},"name":"length"},"computed":false}]}}}],"directives":[]},"alternate":{"type":"BlockStatement","start":13260,"end":13324,"loc":{"start":{"line":362,"column":9},"end":{"line":364,"column":3}},"body":[{"type":"ThrowStatement","start":13265,"end":13320,"loc":{"start":{"line":363,"column":3},"end":{"line":363,"column":58}},"argument":{"type":"BinaryExpression","start":13271,"end":13319,"loc":{"start":{"line":363,"column":9},"end":{"line":363,"column":57}},"left":{"type":"StringLiteral","start":13271,"end":13295,"loc":{"start":{"line":363,"column":9},"end":{"line":363,"column":33}},"extra":{"rawValue":"unsupported datatype: ","raw":"\"unsupported datatype: \""},"value":"unsupported datatype: "},"operator":"+","right":{"type":"UnaryExpression","start":13299,"end":13318,"loc":{"start":{"line":363,"column":37},"end":{"line":363,"column":56}},"operator":"typeof","prefix":true,"argument":{"type":"MemberExpression","start":13306,"end":13318,"loc":{"start":{"line":363,"column":44},"end":{"line":363,"column":56}},"object":{"type":"ThisExpression","start":13306,"end":13310,"loc":{"start":{"line":363,"column":44},"end":{"line":363,"column":48}}},"property":{"type":"Identifier","start":13311,"end":13318,"loc":{"start":{"line":363,"column":49},"end":{"line":363,"column":56},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"extra":{"parenthesizedArgument":false,"parenthesized":true,"parenStart":13298}},"extra":{"parenthesized":true,"parenStart":13270}}}],"directives":[]}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* This method pre-allocates an array of the correct datatype to make\n\t * a copy of the current pixel values. Values are not actually copied yet.\n\t * @return {Uint16Array|Float32Array} an array with an element for each\n\t * pixel. The datatype is determined by the datatype of this._pixels\n\t * (implemented in the subclass), which can be either Uint16Array or\n\t * Float32Array. ","start":12435,"end":12815,"loc":{"start":{"line":345,"column":1},"end":{"line":350,"column":20}}}],"trailingComments":[{"type":"CommentBlock","value":"* Template method to compute the gradient at location i on the grid\n\t * (location given in index coordinates).\n\t * This method throws an error, which is overwritten when a subclass\n\t * implements a gradienti method.\n\t * @param {IndexCoordinate} i index coordinate of a pixel to compute the\n\t * gradient at.\n\t * @return {number[]} the gradient\n\t * @see https://en.wikipedia.org/wiki/Gradient","start":13330,"end":13724,"loc":{"start":{"line":367,"column":1},"end":{"line":374,"column":49}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":13726,"end":13767,"loc":{"start":{"line":375,"column":1},"end":{"line":375,"column":42}}}]},{"type":"ClassMethod","start":13769,"end":13835,"loc":{"start":{"line":376,"column":1},"end":{"line":378,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":13769,"end":13778,"loc":{"start":{"line":376,"column":1},"end":{"line":376,"column":10},"identifierName":"gradienti"},"name":"gradienti","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":13780,"end":13781,"loc":{"start":{"line":376,"column":12},"end":{"line":376,"column":13},"identifierName":"i"},"name":"i"}],"body":{"type":"BlockStatement","start":13783,"end":13835,"loc":{"start":{"line":376,"column":15},"end":{"line":378,"column":2}},"body":[{"type":"ThrowStatement","start":13787,"end":13832,"loc":{"start":{"line":377,"column":2},"end":{"line":377,"column":47}},"argument":{"type":"StringLiteral","start":13793,"end":13831,"loc":{"start":{"line":377,"column":8},"end":{"line":377,"column":46}},"extra":{"rawValue":"method 'gradienti' not implemented! ","raw":"\"method 'gradienti' not implemented! \"","parenthesized":true,"parenStart":13792},"value":"method 'gradienti' not implemented! "}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Template method to compute the gradient at location i on the grid\n\t * (location given in index coordinates).\n\t * This method throws an error, which is overwritten when a subclass\n\t * implements a gradienti method.\n\t * @param {IndexCoordinate} i index coordinate of a pixel to compute the\n\t * gradient at.\n\t * @return {number[]} the gradient\n\t * @see https://en.wikipedia.org/wiki/Gradient","start":13330,"end":13724,"loc":{"start":{"line":367,"column":1},"end":{"line":374,"column":49}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":13726,"end":13767,"loc":{"start":{"line":375,"column":1},"end":{"line":375,"column":42}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method to compute the gradient at location p on the grid (location\n\t * given in array coordinates). It internally calls the gradienti\n\t * method using index coordinates, which should be implemented in the grid\n\t * subclass.\n\t * @param {ArrayCoordinate} p array coordinates of a pixel p to compute\n\t * the gradient at\n\t * @return {number} the gradient at position p.\n\t * @see https://en.wikipedia.org/wiki/Gradient","start":13838,"end":14257,"loc":{"start":{"line":380,"column":1},"end":{"line":387,"column":49}}}]},{"type":"ClassMethod","start":14259,"end":14350,"loc":{"start":{"line":388,"column":1},"end":{"line":391,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":14259,"end":14267,"loc":{"start":{"line":388,"column":1},"end":{"line":388,"column":9},"identifierName":"gradient"},"name":"gradient","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":14269,"end":14270,"loc":{"start":{"line":388,"column":11},"end":{"line":388,"column":12},"identifierName":"p"},"name":"p"}],"body":{"type":"BlockStatement","start":14272,"end":14350,"loc":{"start":{"line":388,"column":14},"end":{"line":391,"column":2}},"body":[{"type":"ReturnStatement","start":14309,"end":14347,"loc":{"start":{"line":390,"column":2},"end":{"line":390,"column":40}},"argument":{"type":"CallExpression","start":14316,"end":14347,"loc":{"start":{"line":390,"column":9},"end":{"line":390,"column":40}},"callee":{"type":"MemberExpression","start":14316,"end":14330,"loc":{"start":{"line":390,"column":9},"end":{"line":390,"column":23}},"object":{"type":"ThisExpression","start":14316,"end":14320,"loc":{"start":{"line":390,"column":9},"end":{"line":390,"column":13}},"leadingComments":null},"property":{"type":"Identifier","start":14321,"end":14330,"loc":{"start":{"line":390,"column":14},"end":{"line":390,"column":23},"identifierName":"gradienti"},"name":"gradienti"},"computed":false,"leadingComments":null},"arguments":[{"type":"CallExpression","start":14332,"end":14345,"loc":{"start":{"line":390,"column":25},"end":{"line":390,"column":38}},"callee":{"type":"MemberExpression","start":14332,"end":14340,"loc":{"start":{"line":390,"column":25},"end":{"line":390,"column":33}},"object":{"type":"ThisExpression","start":14332,"end":14336,"loc":{"start":{"line":390,"column":25},"end":{"line":390,"column":29}}},"property":{"type":"Identifier","start":14337,"end":14340,"loc":{"start":{"line":390,"column":30},"end":{"line":390,"column":33},"identifierName":"p2i"},"name":"p2i"},"computed":false},"arguments":[{"type":"Identifier","start":14342,"end":14343,"loc":{"start":{"line":390,"column":35},"end":{"line":390,"column":36},"identifierName":"p"},"name":"p"}]}],"leadingComments":null},"leadingComments":[{"type":"CommentLine","value":"noinspection JSValidateTypes","start":14276,"end":14306,"loc":{"start":{"line":389,"column":2},"end":{"line":389,"column":32}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method to compute the gradient at location p on the grid (location\n\t * given in array coordinates). It internally calls the gradienti\n\t * method using index coordinates, which should be implemented in the grid\n\t * subclass.\n\t * @param {ArrayCoordinate} p array coordinates of a pixel p to compute\n\t * the gradient at\n\t * @return {number} the gradient at position p.\n\t * @see https://en.wikipedia.org/wiki/Gradient","start":13838,"end":14257,"loc":{"start":{"line":380,"column":1},"end":{"line":387,"column":49}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method to compute the laplacian at location p on the grid\n\t * (location given in array coordinates). It internally calls the laplaciani\n\t * method that does the same but uses index coordinates.\n\t * @param {ArrayCoordinate} p array coordinates of a pixel p to compute the\n\t * laplacian at\n\t * @return {number} the laplacian at position p.\n\t * @see https://en.wikipedia.org/wiki/Laplace_operator#Coordinate_expressions ","start":14353,"end":14776,"loc":{"start":{"line":393,"column":1},"end":{"line":399,"column":81}}}]},{"type":"ClassMethod","start":14778,"end":14838,"loc":{"start":{"line":400,"column":1},"end":{"line":402,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":14778,"end":14787,"loc":{"start":{"line":400,"column":1},"end":{"line":400,"column":10},"identifierName":"laplacian"},"name":"laplacian","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":14789,"end":14790,"loc":{"start":{"line":400,"column":12},"end":{"line":400,"column":13},"identifierName":"p"},"name":"p"}],"body":{"type":"BlockStatement","start":14792,"end":14838,"loc":{"start":{"line":400,"column":15},"end":{"line":402,"column":2}},"body":[{"type":"ReturnStatement","start":14796,"end":14835,"loc":{"start":{"line":401,"column":2},"end":{"line":401,"column":41}},"argument":{"type":"CallExpression","start":14803,"end":14835,"loc":{"start":{"line":401,"column":9},"end":{"line":401,"column":41}},"callee":{"type":"MemberExpression","start":14803,"end":14818,"loc":{"start":{"line":401,"column":9},"end":{"line":401,"column":24}},"object":{"type":"ThisExpression","start":14803,"end":14807,"loc":{"start":{"line":401,"column":9},"end":{"line":401,"column":13}}},"property":{"type":"Identifier","start":14808,"end":14818,"loc":{"start":{"line":401,"column":14},"end":{"line":401,"column":24},"identifierName":"laplaciani"},"name":"laplaciani"},"computed":false},"arguments":[{"type":"CallExpression","start":14820,"end":14833,"loc":{"start":{"line":401,"column":26},"end":{"line":401,"column":39}},"callee":{"type":"MemberExpression","start":14820,"end":14828,"loc":{"start":{"line":401,"column":26},"end":{"line":401,"column":34}},"object":{"type":"ThisExpression","start":14820,"end":14824,"loc":{"start":{"line":401,"column":26},"end":{"line":401,"column":30}}},"property":{"type":"Identifier","start":14825,"end":14828,"loc":{"start":{"line":401,"column":31},"end":{"line":401,"column":34},"identifierName":"p2i"},"name":"p2i"},"computed":false},"arguments":[{"type":"Identifier","start":14830,"end":14831,"loc":{"start":{"line":401,"column":36},"end":{"line":401,"column":37},"identifierName":"p"},"name":"p"}]}]}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method to compute the laplacian at location p on the grid\n\t * (location given in array coordinates). It internally calls the laplaciani\n\t * method that does the same but uses index coordinates.\n\t * @param {ArrayCoordinate} p array coordinates of a pixel p to compute the\n\t * laplacian at\n\t * @return {number} the laplacian at position p.\n\t * @see https://en.wikipedia.org/wiki/Laplace_operator#Coordinate_expressions ","start":14353,"end":14776,"loc":{"start":{"line":393,"column":1},"end":{"line":399,"column":81}}}],"trailingComments":[{"type":"CommentBlock","value":"*\n\t * A method to compute the Neumann neighborhood should be implemented in the\n\t * Grid subclass if the laplacian (see below) is used.\n\t * This mock function ensures that an error is thrown when there is no\n\t * method called neighNeumanni in the grid subclass.\n\t * @abstract\n\t * @see https://en.wikipedia.org/wiki/Von_Neumann_neighborhood\n\t * @param {IndexCoordinate} i - location of the pixel to get neighbors of.\n\t * @param {boolean[]} [torus=[true,true]] - does the grid have linked\n\t * borders? Defaults to the setting on this grid, see {@link torus}\n\t * @return {IndexCoordinate[]} - an array of coordinates for all the neighbors of i.\n\t ","start":14841,"end":15489,"loc":{"start":{"line":404,"column":1},"end":{"line":415,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars,require-yield","start":15491,"end":15546,"loc":{"start":{"line":416,"column":1},"end":{"line":416,"column":56}}}]},{"type":"ClassMethod","start":15548,"end":15730,"loc":{"start":{"line":417,"column":1},"end":{"line":420,"column":2}},"static":false,"kind":"method","computed":false,"key":{"type":"Identifier","start":15550,"end":15563,"loc":{"start":{"line":417,"column":3},"end":{"line":417,"column":16},"identifierName":"neighNeumanni"},"name":"neighNeumanni","leadingComments":null},"id":null,"generator":true,"expression":false,"async":false,"params":[{"type":"Identifier","start":15566,"end":15567,"loc":{"start":{"line":417,"column":19},"end":{"line":417,"column":20},"identifierName":"i"},"name":"i"},{"type":"AssignmentPattern","start":15569,"end":15587,"loc":{"start":{"line":417,"column":22},"end":{"line":417,"column":40}},"left":{"type":"Identifier","start":15569,"end":15574,"loc":{"start":{"line":417,"column":22},"end":{"line":417,"column":27},"identifierName":"torus"},"name":"torus"},"right":{"type":"MemberExpression","start":15577,"end":15587,"loc":{"start":{"line":417,"column":30},"end":{"line":417,"column":40}},"object":{"type":"ThisExpression","start":15577,"end":15581,"loc":{"start":{"line":417,"column":30},"end":{"line":417,"column":34}}},"property":{"type":"Identifier","start":15582,"end":15587,"loc":{"start":{"line":417,"column":35},"end":{"line":417,"column":40},"identifierName":"torus"},"name":"torus"},"computed":false}}],"body":{"type":"BlockStatement","start":15589,"end":15730,"loc":{"start":{"line":417,"column":42},"end":{"line":420,"column":2}},"body":[{"type":"ThrowStatement","start":15593,"end":15727,"loc":{"start":{"line":418,"column":2},"end":{"line":419,"column":65}},"argument":{"type":"BinaryExpression","start":15600,"end":15726,"loc":{"start":{"line":418,"column":9},"end":{"line":419,"column":64}},"left":{"type":"StringLiteral","start":15600,"end":15659,"loc":{"start":{"line":418,"column":9},"end":{"line":418,"column":68}},"extra":{"rawValue":"Trying to call the method neighNeumanni, but you haven't ","raw":"\"Trying to call the method neighNeumanni, but you haven't \""},"value":"Trying to call the method neighNeumanni, but you haven't "},"operator":"+","right":{"type":"StringLiteral","start":15665,"end":15726,"loc":{"start":{"line":419,"column":3},"end":{"line":419,"column":64}},"extra":{"rawValue":"implemented this method in the Grid subclass you are using!","raw":"\"implemented this method in the Grid subclass you are using!\""},"value":"implemented this method in the Grid subclass you are using!"},"extra":{"parenthesized":true,"parenStart":15598}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"*\n\t * A method to compute the Neumann neighborhood should be implemented in the\n\t * Grid subclass if the laplacian (see below) is used.\n\t * This mock function ensures that an error is thrown when there is no\n\t * method called neighNeumanni in the grid subclass.\n\t * @abstract\n\t * @see https://en.wikipedia.org/wiki/Von_Neumann_neighborhood\n\t * @param {IndexCoordinate} i - location of the pixel to get neighbors of.\n\t * @param {boolean[]} [torus=[true,true]] - does the grid have linked\n\t * borders? Defaults to the setting on this grid, see {@link torus}\n\t * @return {IndexCoordinate[]} - an array of coordinates for all the neighbors of i.\n\t ","start":14841,"end":15489,"loc":{"start":{"line":404,"column":1},"end":{"line":415,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars,require-yield","start":15491,"end":15546,"loc":{"start":{"line":416,"column":1},"end":{"line":416,"column":56}}}],"trailingComments":[{"type":"CommentBlock","value":"* Method to compute the laplacian at location i on the grid (location\n\t * given in index coordinates). It internally uses the neighNeumanni method\n\t * to compute a Neumann neighborhood, which should be implemented in the\n\t * grid subclass. It then uses the finite difference method (see link) with\n\t * h = 1.\n\t * @param {IndexCoordinate} i index coordinates of a pixel to compute the\n\t * laplacian at\n\t * @return {number} the laplacian at position p.\n\t * @see https://en.wikipedia.org/wiki/Laplace_operator#Coordinate_expressions\n\t * @see https://en.wikipedia.org/wiki/Discrete_Laplace_operator#Finite_differences\n\t * ","start":15733,"end":16355,"loc":{"start":{"line":422,"column":1},"end":{"line":432,"column":6}}}]},{"type":"ClassMethod","start":16357,"end":17001,"loc":{"start":{"line":433,"column":1},"end":{"line":451,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":16357,"end":16367,"loc":{"start":{"line":433,"column":1},"end":{"line":433,"column":11},"identifierName":"laplaciani"},"name":"laplaciani","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":16369,"end":16370,"loc":{"start":{"line":433,"column":13},"end":{"line":433,"column":14},"identifierName":"i"},"name":"i"}],"body":{"type":"BlockStatement","start":16372,"end":17001,"loc":{"start":{"line":433,"column":16},"end":{"line":451,"column":2}},"body":[{"type":"VariableDeclaration","start":16376,"end":16392,"loc":{"start":{"line":434,"column":2},"end":{"line":434,"column":18}},"declarations":[{"type":"VariableDeclarator","start":16380,"end":16385,"loc":{"start":{"line":434,"column":6},"end":{"line":434,"column":11}},"id":{"type":"Identifier","start":16380,"end":16381,"loc":{"start":{"line":434,"column":6},"end":{"line":434,"column":7},"identifierName":"L"},"name":"L"},"init":{"type":"NumericLiteral","start":16384,"end":16385,"loc":{"start":{"line":434,"column":10},"end":{"line":434,"column":11}},"extra":{"rawValue":0,"raw":"0"},"value":0}},{"type":"VariableDeclarator","start":16387,"end":16392,"loc":{"start":{"line":434,"column":13},"end":{"line":434,"column":18}},"id":{"type":"Identifier","start":16387,"end":16388,"loc":{"start":{"line":434,"column":13},"end":{"line":434,"column":14},"identifierName":"n"},"name":"n"},"init":{"type":"NumericLiteral","start":16391,"end":16392,"loc":{"start":{"line":434,"column":17},"end":{"line":434,"column":18}},"extra":{"rawValue":0,"raw":"0"},"value":0,"leadingComments":null,"trailingComments":null},"trailingComments":null}],"kind":"let","trailingComments":[{"type":"CommentLine","value":" For now: forbid computing a laplacian on an integer grid as it makes","start":16396,"end":16467,"loc":{"start":{"line":436,"column":2},"end":{"line":436,"column":73}}},{"type":"CommentLine","value":" no sense and could happen by accident if you forget to specify the","start":16470,"end":16539,"loc":{"start":{"line":437,"column":2},"end":{"line":437,"column":71}}},{"type":"CommentLine","value":" datatype.","start":16542,"end":16554,"loc":{"start":{"line":438,"column":2},"end":{"line":438,"column":14}}},{"type":"CommentLine","value":" If this is too strict, we can set an option to overrule this error.","start":16557,"end":16627,"loc":{"start":{"line":439,"column":2},"end":{"line":439,"column":72}}},{"type":"CommentLine","value":" This way you still get to see it if you try this by accident.","start":16630,"end":16694,"loc":{"start":{"line":440,"column":2},"end":{"line":440,"column":66}}}]},{"type":"IfStatement","start":16697,"end":16850,"loc":{"start":{"line":441,"column":2},"end":{"line":444,"column":3}},"test":{"type":"BinaryExpression","start":16701,"end":16727,"loc":{"start":{"line":441,"column":6},"end":{"line":441,"column":32}},"left":{"type":"MemberExpression","start":16701,"end":16714,"loc":{"start":{"line":441,"column":6},"end":{"line":441,"column":19}},"object":{"type":"ThisExpression","start":16701,"end":16705,"loc":{"start":{"line":441,"column":6},"end":{"line":441,"column":10}},"leadingComments":null},"property":{"type":"Identifier","start":16706,"end":16714,"loc":{"start":{"line":441,"column":11},"end":{"line":441,"column":19},"identifierName":"datatype"},"name":"datatype"},"computed":false,"leadingComments":null},"operator":"===","right":{"type":"StringLiteral","start":16719,"end":16727,"loc":{"start":{"line":441,"column":24},"end":{"line":441,"column":32}},"extra":{"rawValue":"Uint16","raw":"\"Uint16\""},"value":"Uint16"},"leadingComments":null},"consequent":{"type":"BlockStatement","start":16729,"end":16850,"loc":{"start":{"line":441,"column":34},"end":{"line":444,"column":3}},"body":[{"type":"ThrowStatement","start":16734,"end":16846,"loc":{"start":{"line":442,"column":3},"end":{"line":443,"column":43}},"argument":{"type":"BinaryExpression","start":16740,"end":16845,"loc":{"start":{"line":442,"column":9},"end":{"line":443,"column":42}},"left":{"type":"StringLiteral","start":16740,"end":16800,"loc":{"start":{"line":442,"column":9},"end":{"line":442,"column":69}},"extra":{"rawValue":"Diffusion/laplacian methods do not work on a Uint16 grid! ","raw":"\"Diffusion/laplacian methods do not work on a Uint16 grid! \""},"value":"Diffusion/laplacian methods do not work on a Uint16 grid! "},"operator":"+","right":{"type":"StringLiteral","start":16807,"end":16845,"loc":{"start":{"line":443,"column":4},"end":{"line":443,"column":42}},"extra":{"rawValue":"Consider setting datatype='Float32'.","raw":"\"Consider setting datatype='Float32'.\""},"value":"Consider setting datatype='Float32'."},"extra":{"parenthesized":true,"parenStart":16739}}}],"directives":[],"trailingComments":null},"alternate":null,"leadingComments":[{"type":"CommentLine","value":" For now: forbid computing a laplacian on an integer grid as it makes","start":16396,"end":16467,"loc":{"start":{"line":436,"column":2},"end":{"line":436,"column":73}}},{"type":"CommentLine","value":" no sense and could happen by accident if you forget to specify the","start":16470,"end":16539,"loc":{"start":{"line":437,"column":2},"end":{"line":437,"column":71}}},{"type":"CommentLine","value":" datatype.","start":16542,"end":16554,"loc":{"start":{"line":438,"column":2},"end":{"line":438,"column":14}}},{"type":"CommentLine","value":" If this is too strict, we can set an option to overrule this error.","start":16557,"end":16627,"loc":{"start":{"line":439,"column":2},"end":{"line":439,"column":72}}},{"type":"CommentLine","value":" This way you still get to see it if you try this by accident.","start":16630,"end":16694,"loc":{"start":{"line":440,"column":2},"end":{"line":440,"column":66}}}],"trailingComments":[{"type":"CommentLine","value":"noinspection JSUnresolvedFunction","start":16854,"end":16889,"loc":{"start":{"line":446,"column":2},"end":{"line":446,"column":37}}}]},{"type":"ForOfStatement","start":16892,"end":16964,"loc":{"start":{"line":447,"column":2},"end":{"line":449,"column":3}},"left":{"type":"VariableDeclaration","start":16897,"end":16902,"loc":{"start":{"line":447,"column":7},"end":{"line":447,"column":12}},"declarations":[{"type":"VariableDeclarator","start":16901,"end":16902,"loc":{"start":{"line":447,"column":11},"end":{"line":447,"column":12}},"id":{"type":"Identifier","start":16901,"end":16902,"loc":{"start":{"line":447,"column":11},"end":{"line":447,"column":12},"identifierName":"x"},"name":"x","leadingComments":null},"init":null,"leadingComments":null}],"kind":"let","leadingComments":null},"right":{"type":"CallExpression","start":16906,"end":16927,"loc":{"start":{"line":447,"column":16},"end":{"line":447,"column":37}},"callee":{"type":"MemberExpression","start":16906,"end":16924,"loc":{"start":{"line":447,"column":16},"end":{"line":447,"column":34}},"object":{"type":"ThisExpression","start":16906,"end":16910,"loc":{"start":{"line":447,"column":16},"end":{"line":447,"column":20}}},"property":{"type":"Identifier","start":16911,"end":16924,"loc":{"start":{"line":447,"column":21},"end":{"line":447,"column":34},"identifierName":"neighNeumanni"},"name":"neighNeumanni"},"computed":false},"arguments":[{"type":"Identifier","start":16925,"end":16926,"loc":{"start":{"line":447,"column":35},"end":{"line":447,"column":36},"identifierName":"i"},"name":"i"}]},"body":{"type":"BlockStatement","start":16929,"end":16964,"loc":{"start":{"line":447,"column":39},"end":{"line":449,"column":3}},"body":[{"type":"ExpressionStatement","start":16934,"end":16955,"loc":{"start":{"line":448,"column":3},"end":{"line":448,"column":24}},"expression":{"type":"AssignmentExpression","start":16934,"end":16954,"loc":{"start":{"line":448,"column":3},"end":{"line":448,"column":23}},"operator":"+=","left":{"type":"Identifier","start":16934,"end":16935,"loc":{"start":{"line":448,"column":3},"end":{"line":448,"column":4},"identifierName":"L"},"name":"L"},"right":{"type":"CallExpression","start":16939,"end":16954,"loc":{"start":{"line":448,"column":8},"end":{"line":448,"column":23}},"callee":{"type":"MemberExpression","start":16939,"end":16949,"loc":{"start":{"line":448,"column":8},"end":{"line":448,"column":18}},"object":{"type":"ThisExpression","start":16939,"end":16943,"loc":{"start":{"line":448,"column":8},"end":{"line":448,"column":12}}},"property":{"type":"Identifier","start":16944,"end":16949,"loc":{"start":{"line":448,"column":13},"end":{"line":448,"column":18},"identifierName":"pixti"},"name":"pixti"},"computed":false},"arguments":[{"type":"Identifier","start":16951,"end":16952,"loc":{"start":{"line":448,"column":20},"end":{"line":448,"column":21},"identifierName":"x"},"name":"x"}]}}},{"type":"ExpressionStatement","start":16956,"end":16960,"loc":{"start":{"line":448,"column":25},"end":{"line":448,"column":29}},"expression":{"type":"UpdateExpression","start":16956,"end":16960,"loc":{"start":{"line":448,"column":25},"end":{"line":448,"column":29}},"operator":"++","prefix":false,"argument":{"type":"Identifier","start":16956,"end":16957,"loc":{"start":{"line":448,"column":25},"end":{"line":448,"column":26},"identifierName":"n"},"name":"n"}}}],"directives":[]},"leadingComments":[{"type":"CommentLine","value":"noinspection JSUnresolvedFunction","start":16854,"end":16889,"loc":{"start":{"line":446,"column":2},"end":{"line":446,"column":37}}}]},{"type":"ReturnStatement","start":16968,"end":16998,"loc":{"start":{"line":450,"column":2},"end":{"line":450,"column":32}},"argument":{"type":"BinaryExpression","start":16975,"end":16998,"loc":{"start":{"line":450,"column":9},"end":{"line":450,"column":32}},"left":{"type":"Identifier","start":16975,"end":16976,"loc":{"start":{"line":450,"column":9},"end":{"line":450,"column":10},"identifierName":"L"},"name":"L"},"operator":"-","right":{"type":"BinaryExpression","start":16979,"end":16998,"loc":{"start":{"line":450,"column":13},"end":{"line":450,"column":32}},"left":{"type":"Identifier","start":16979,"end":16980,"loc":{"start":{"line":450,"column":13},"end":{"line":450,"column":14},"identifierName":"n"},"name":"n"},"operator":"*","right":{"type":"CallExpression","start":16983,"end":16998,"loc":{"start":{"line":450,"column":17},"end":{"line":450,"column":32}},"callee":{"type":"MemberExpression","start":16983,"end":16993,"loc":{"start":{"line":450,"column":17},"end":{"line":450,"column":27}},"object":{"type":"ThisExpression","start":16983,"end":16987,"loc":{"start":{"line":450,"column":17},"end":{"line":450,"column":21}}},"property":{"type":"Identifier","start":16988,"end":16993,"loc":{"start":{"line":450,"column":22},"end":{"line":450,"column":27},"identifierName":"pixti"},"name":"pixti"},"computed":false},"arguments":[{"type":"Identifier","start":16995,"end":16996,"loc":{"start":{"line":450,"column":29},"end":{"line":450,"column":30},"identifierName":"i"},"name":"i"}]}}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Method to compute the laplacian at location i on the grid (location\n\t * given in index coordinates). It internally uses the neighNeumanni method\n\t * to compute a Neumann neighborhood, which should be implemented in the\n\t * grid subclass. It then uses the finite difference method (see link) with\n\t * h = 1.\n\t * @param {IndexCoordinate} i index coordinates of a pixel to compute the\n\t * laplacian at\n\t * @return {number} the laplacian at position p.\n\t * @see https://en.wikipedia.org/wiki/Laplace_operator#Coordinate_expressions\n\t * @see https://en.wikipedia.org/wiki/Discrete_Laplace_operator#Finite_differences\n\t * ","start":15733,"end":16355,"loc":{"start":{"line":422,"column":1},"end":{"line":432,"column":6}}}],"trailingComments":[{"type":"CommentBlock","value":"* Perform a diffusion step on the grid, updating the values of all pixels\n\t * according to Fick's second law of diffusion.\n\t * @param {number} D diffusion coefficient\n\t * @see https://en.wikipedia.org/wiki/Diffusion#Fick's_law_and_equations\n\t * @see https://en.wikipedia.org/wiki/Discrete_Laplace_operator#Mesh_Laplacians\n\t * ","start":17004,"end":17334,"loc":{"start":{"line":453,"column":1},"end":{"line":458,"column":6}}}]},{"type":"ClassMethod","start":17336,"end":17856,"loc":{"start":{"line":459,"column":1},"end":{"line":470,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":17336,"end":17345,"loc":{"start":{"line":459,"column":1},"end":{"line":459,"column":10},"identifierName":"diffusion"},"name":"diffusion","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":17347,"end":17348,"loc":{"start":{"line":459,"column":12},"end":{"line":459,"column":13},"identifierName":"D"},"name":"D"}],"body":{"type":"BlockStatement","start":17350,"end":17856,"loc":{"start":{"line":459,"column":15},"end":{"line":470,"column":2}},"body":[{"type":"IfStatement","start":17457,"end":17503,"loc":{"start":{"line":462,"column":2},"end":{"line":462,"column":48}},"test":{"type":"UnaryExpression","start":17461,"end":17481,"loc":{"start":{"line":462,"column":6},"end":{"line":462,"column":26}},"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":17463,"end":17481,"loc":{"start":{"line":462,"column":8},"end":{"line":462,"column":26}},"object":{"type":"ThisExpression","start":17463,"end":17467,"loc":{"start":{"line":462,"column":8},"end":{"line":462,"column":12}},"leadingComments":null},"property":{"type":"Identifier","start":17468,"end":17481,"loc":{"start":{"line":462,"column":13},"end":{"line":462,"column":26},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false,"leadingComments":null},"extra":{"parenthesizedArgument":false},"leadingComments":null},"consequent":{"type":"ExpressionStatement","start":17484,"end":17503,"loc":{"start":{"line":462,"column":29},"end":{"line":462,"column":48}},"expression":{"type":"CallExpression","start":17484,"end":17503,"loc":{"start":{"line":462,"column":29},"end":{"line":462,"column":48}},"callee":{"type":"MemberExpression","start":17484,"end":17501,"loc":{"start":{"line":462,"column":29},"end":{"line":462,"column":46}},"object":{"type":"ThisExpression","start":17484,"end":17488,"loc":{"start":{"line":462,"column":29},"end":{"line":462,"column":33}}},"property":{"type":"Identifier","start":17489,"end":17501,"loc":{"start":{"line":462,"column":34},"end":{"line":462,"column":46},"identifierName":"pixelsBuffer"},"name":"pixelsBuffer"},"computed":false},"arguments":[]}},"alternate":null,"leadingComments":[{"type":"CommentLine","value":" For synchronous updating of the grid: compute updated values in a copy","start":17354,"end":17427,"loc":{"start":{"line":460,"column":2},"end":{"line":460,"column":75}}},{"type":"CommentLine","value":" of the current pixels","start":17430,"end":17454,"loc":{"start":{"line":461,"column":2},"end":{"line":461,"column":26}}}]},{"type":"ForOfStatement","start":17506,"end":17743,"loc":{"start":{"line":463,"column":2},"end":{"line":467,"column":3}},"left":{"type":"VariableDeclaration","start":17511,"end":17516,"loc":{"start":{"line":463,"column":7},"end":{"line":463,"column":12}},"declarations":[{"type":"VariableDeclarator","start":17515,"end":17516,"loc":{"start":{"line":463,"column":11},"end":{"line":463,"column":12}},"id":{"type":"Identifier","start":17515,"end":17516,"loc":{"start":{"line":463,"column":11},"end":{"line":463,"column":12},"identifierName":"i"},"name":"i"},"init":null}],"kind":"let"},"right":{"type":"CallExpression","start":17520,"end":17534,"loc":{"start":{"line":463,"column":16},"end":{"line":463,"column":30}},"callee":{"type":"MemberExpression","start":17520,"end":17532,"loc":{"start":{"line":463,"column":16},"end":{"line":463,"column":28}},"object":{"type":"ThisExpression","start":17520,"end":17524,"loc":{"start":{"line":463,"column":16},"end":{"line":463,"column":20}}},"property":{"type":"Identifier","start":17525,"end":17532,"loc":{"start":{"line":463,"column":21},"end":{"line":463,"column":28},"identifierName":"pixelsi"},"name":"pixelsi"},"computed":false},"arguments":[]},"body":{"type":"BlockStatement","start":17536,"end":17743,"loc":{"start":{"line":463,"column":32},"end":{"line":467,"column":3}},"body":[{"type":"ExpressionStatement","start":17673,"end":17739,"loc":{"start":{"line":466,"column":3},"end":{"line":466,"column":69}},"expression":{"type":"AssignmentExpression","start":17673,"end":17739,"loc":{"start":{"line":466,"column":3},"end":{"line":466,"column":69}},"operator":"=","left":{"type":"MemberExpression","start":17673,"end":17694,"loc":{"start":{"line":466,"column":3},"end":{"line":466,"column":24}},"object":{"type":"MemberExpression","start":17673,"end":17691,"loc":{"start":{"line":466,"column":3},"end":{"line":466,"column":21}},"object":{"type":"ThisExpression","start":17673,"end":17677,"loc":{"start":{"line":466,"column":3},"end":{"line":466,"column":7}},"leadingComments":null},"property":{"type":"Identifier","start":17678,"end":17691,"loc":{"start":{"line":466,"column":8},"end":{"line":466,"column":21},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false,"leadingComments":null},"property":{"type":"Identifier","start":17692,"end":17693,"loc":{"start":{"line":466,"column":22},"end":{"line":466,"column":23},"identifierName":"i"},"name":"i"},"computed":true,"leadingComments":null},"right":{"type":"BinaryExpression","start":17697,"end":17739,"loc":{"start":{"line":466,"column":27},"end":{"line":466,"column":69}},"left":{"type":"CallExpression","start":17697,"end":17712,"loc":{"start":{"line":466,"column":27},"end":{"line":466,"column":42}},"callee":{"type":"MemberExpression","start":17697,"end":17707,"loc":{"start":{"line":466,"column":27},"end":{"line":466,"column":37}},"object":{"type":"ThisExpression","start":17697,"end":17701,"loc":{"start":{"line":466,"column":27},"end":{"line":466,"column":31}}},"property":{"type":"Identifier","start":17702,"end":17707,"loc":{"start":{"line":466,"column":32},"end":{"line":466,"column":37},"identifierName":"pixti"},"name":"pixti"},"computed":false},"arguments":[{"type":"Identifier","start":17709,"end":17710,"loc":{"start":{"line":466,"column":39},"end":{"line":466,"column":40},"identifierName":"i"},"name":"i"}]},"operator":"+","right":{"type":"BinaryExpression","start":17715,"end":17739,"loc":{"start":{"line":466,"column":45},"end":{"line":466,"column":69}},"left":{"type":"Identifier","start":17715,"end":17716,"loc":{"start":{"line":466,"column":45},"end":{"line":466,"column":46},"identifierName":"D"},"name":"D"},"operator":"*","right":{"type":"CallExpression","start":17719,"end":17739,"loc":{"start":{"line":466,"column":49},"end":{"line":466,"column":69}},"callee":{"type":"MemberExpression","start":17719,"end":17734,"loc":{"start":{"line":466,"column":49},"end":{"line":466,"column":64}},"object":{"type":"ThisExpression","start":17719,"end":17723,"loc":{"start":{"line":466,"column":49},"end":{"line":466,"column":53}}},"property":{"type":"Identifier","start":17724,"end":17734,"loc":{"start":{"line":466,"column":54},"end":{"line":466,"column":64},"identifierName":"laplaciani"},"name":"laplaciani"},"computed":false},"arguments":[{"type":"Identifier","start":17736,"end":17737,"loc":{"start":{"line":466,"column":66},"end":{"line":466,"column":67},"identifierName":"i"},"name":"i"}]}}},"leadingComments":null},"leadingComments":[{"type":"CommentLine","value":" Diffusion: new value is current value + change.","start":17541,"end":17591,"loc":{"start":{"line":464,"column":3},"end":{"line":464,"column":53}}},{"type":"CommentLine","value":" the change is given by the diffusion coefficient D times the laplacian.","start":17595,"end":17669,"loc":{"start":{"line":465,"column":3},"end":{"line":465,"column":77}}}]}],"directives":[],"trailingComments":null},"trailingComments":[{"type":"CommentLine","value":" swap the copy and the original","start":17746,"end":17779,"loc":{"start":{"line":468,"column":2},"end":{"line":468,"column":35}}}]},{"type":"ExpressionStatement","start":17782,"end":17853,"loc":{"start":{"line":469,"column":2},"end":{"line":469,"column":73}},"expression":{"type":"AssignmentExpression","start":17782,"end":17853,"loc":{"start":{"line":469,"column":2},"end":{"line":469,"column":73}},"operator":"=","left":{"type":"ArrayPattern","start":17782,"end":17816,"loc":{"start":{"line":469,"column":2},"end":{"line":469,"column":36}},"elements":[{"type":"MemberExpression","start":17783,"end":17801,"loc":{"start":{"line":469,"column":3},"end":{"line":469,"column":21}},"object":{"type":"ThisExpression","start":17783,"end":17787,"loc":{"start":{"line":469,"column":3},"end":{"line":469,"column":7}},"leadingComments":null},"property":{"type":"Identifier","start":17788,"end":17801,"loc":{"start":{"line":469,"column":8},"end":{"line":469,"column":21},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false,"leadingComments":null},{"type":"MemberExpression","start":17803,"end":17815,"loc":{"start":{"line":469,"column":23},"end":{"line":469,"column":35}},"object":{"type":"ThisExpression","start":17803,"end":17807,"loc":{"start":{"line":469,"column":23},"end":{"line":469,"column":27}}},"property":{"type":"Identifier","start":17808,"end":17815,"loc":{"start":{"line":469,"column":28},"end":{"line":469,"column":35},"identifierName":"_pixels"},"name":"_pixels"},"computed":false}],"leadingComments":null},"right":{"type":"ArrayExpression","start":17819,"end":17853,"loc":{"start":{"line":469,"column":39},"end":{"line":469,"column":73}},"elements":[{"type":"MemberExpression","start":17820,"end":17832,"loc":{"start":{"line":469,"column":40},"end":{"line":469,"column":52}},"object":{"type":"ThisExpression","start":17820,"end":17824,"loc":{"start":{"line":469,"column":40},"end":{"line":469,"column":44}}},"property":{"type":"Identifier","start":17825,"end":17832,"loc":{"start":{"line":469,"column":45},"end":{"line":469,"column":52},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},{"type":"MemberExpression","start":17834,"end":17852,"loc":{"start":{"line":469,"column":54},"end":{"line":469,"column":72}},"object":{"type":"ThisExpression","start":17834,"end":17838,"loc":{"start":{"line":469,"column":54},"end":{"line":469,"column":58}}},"property":{"type":"Identifier","start":17839,"end":17852,"loc":{"start":{"line":469,"column":59},"end":{"line":469,"column":72},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false}]},"leadingComments":null},"leadingComments":[{"type":"CommentLine","value":" swap the copy and the original","start":17746,"end":17779,"loc":{"start":{"line":468,"column":2},"end":{"line":468,"column":35}}}]}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Perform a diffusion step on the grid, updating the values of all pixels\n\t * according to Fick's second law of diffusion.\n\t * @param {number} D diffusion coefficient\n\t * @see https://en.wikipedia.org/wiki/Diffusion#Fick's_law_and_equations\n\t * @see https://en.wikipedia.org/wiki/Discrete_Laplace_operator#Mesh_Laplacians\n\t * ","start":17004,"end":17334,"loc":{"start":{"line":453,"column":1},"end":{"line":458,"column":6}}}],"trailingComments":[{"type":"CommentBlock","value":"* Function that updates a gridpoint depending on its current value and\n\t * that of its neighbors.\n\t * @typedef {function} updatePixelFunction\n\t * @param {ArrayCoordinate} p - pixel to update\n\t * @param {ArrayCoordinate[]} neighbors - coordinates of neighbors of p\n\t * @return {number} value - the updated value, based on the current value\n\t * of p and its neighbors.\n\t ","start":17861,"end":18234,"loc":{"start":{"line":473,"column":1},"end":{"line":480,"column":4}}},{"type":"CommentBlock","value":"* Apply a function to all pixel values on the grid. It acts on\n\t * this._pixels, which is implemented in the grid subclass.\n\t * @param {updatePixelFunction} f - the function to apply to each pixel. ","start":18237,"end":18439,"loc":{"start":{"line":482,"column":1},"end":{"line":484,"column":76}}}]},{"type":"ClassMethod","start":18441,"end":18696,"loc":{"start":{"line":485,"column":1},"end":{"line":492,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":18441,"end":18453,"loc":{"start":{"line":485,"column":1},"end":{"line":485,"column":13},"identifierName":"applyLocally"},"name":"applyLocally","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":18455,"end":18456,"loc":{"start":{"line":485,"column":15},"end":{"line":485,"column":16},"identifierName":"f"},"name":"f"}],"body":{"type":"BlockStatement","start":18458,"end":18696,"loc":{"start":{"line":485,"column":18},"end":{"line":492,"column":2}},"body":[{"type":"IfStatement","start":18462,"end":18508,"loc":{"start":{"line":486,"column":2},"end":{"line":486,"column":48}},"test":{"type":"UnaryExpression","start":18466,"end":18486,"loc":{"start":{"line":486,"column":6},"end":{"line":486,"column":26}},"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":18468,"end":18486,"loc":{"start":{"line":486,"column":8},"end":{"line":486,"column":26}},"object":{"type":"ThisExpression","start":18468,"end":18472,"loc":{"start":{"line":486,"column":8},"end":{"line":486,"column":12}}},"property":{"type":"Identifier","start":18473,"end":18486,"loc":{"start":{"line":486,"column":13},"end":{"line":486,"column":26},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false},"extra":{"parenthesizedArgument":false}},"consequent":{"type":"ExpressionStatement","start":18489,"end":18508,"loc":{"start":{"line":486,"column":29},"end":{"line":486,"column":48}},"expression":{"type":"CallExpression","start":18489,"end":18508,"loc":{"start":{"line":486,"column":29},"end":{"line":486,"column":48}},"callee":{"type":"MemberExpression","start":18489,"end":18506,"loc":{"start":{"line":486,"column":29},"end":{"line":486,"column":46}},"object":{"type":"ThisExpression","start":18489,"end":18493,"loc":{"start":{"line":486,"column":29},"end":{"line":486,"column":33}}},"property":{"type":"Identifier","start":18494,"end":18506,"loc":{"start":{"line":486,"column":34},"end":{"line":486,"column":46},"identifierName":"pixelsBuffer"},"name":"pixelsBuffer"},"computed":false},"arguments":[]}},"alternate":null},{"type":"ForOfStatement","start":18511,"end":18619,"loc":{"start":{"line":487,"column":2},"end":{"line":490,"column":3}},"left":{"type":"VariableDeclaration","start":18516,"end":18521,"loc":{"start":{"line":487,"column":7},"end":{"line":487,"column":12}},"declarations":[{"type":"VariableDeclarator","start":18520,"end":18521,"loc":{"start":{"line":487,"column":11},"end":{"line":487,"column":12}},"id":{"type":"Identifier","start":18520,"end":18521,"loc":{"start":{"line":487,"column":11},"end":{"line":487,"column":12},"identifierName":"i"},"name":"i"},"init":null}],"kind":"let"},"right":{"type":"CallExpression","start":18525,"end":18539,"loc":{"start":{"line":487,"column":16},"end":{"line":487,"column":30}},"callee":{"type":"MemberExpression","start":18525,"end":18537,"loc":{"start":{"line":487,"column":16},"end":{"line":487,"column":28}},"object":{"type":"ThisExpression","start":18525,"end":18529,"loc":{"start":{"line":487,"column":16},"end":{"line":487,"column":20}}},"property":{"type":"Identifier","start":18530,"end":18537,"loc":{"start":{"line":487,"column":21},"end":{"line":487,"column":28},"identifierName":"pixelsi"},"name":"pixelsi"},"computed":false},"arguments":[]},"body":{"type":"BlockStatement","start":18541,"end":18619,"loc":{"start":{"line":487,"column":32},"end":{"line":490,"column":3}},"body":[{"type":"VariableDeclaration","start":18546,"end":18565,"loc":{"start":{"line":488,"column":3},"end":{"line":488,"column":22}},"declarations":[{"type":"VariableDeclarator","start":18550,"end":18565,"loc":{"start":{"line":488,"column":7},"end":{"line":488,"column":22}},"id":{"type":"Identifier","start":18550,"end":18551,"loc":{"start":{"line":488,"column":7},"end":{"line":488,"column":8},"identifierName":"p"},"name":"p"},"init":{"type":"CallExpression","start":18554,"end":18565,"loc":{"start":{"line":488,"column":11},"end":{"line":488,"column":22}},"callee":{"type":"MemberExpression","start":18554,"end":18562,"loc":{"start":{"line":488,"column":11},"end":{"line":488,"column":19}},"object":{"type":"ThisExpression","start":18554,"end":18558,"loc":{"start":{"line":488,"column":11},"end":{"line":488,"column":15}}},"property":{"type":"Identifier","start":18559,"end":18562,"loc":{"start":{"line":488,"column":16},"end":{"line":488,"column":19},"identifierName":"i2p"},"name":"i2p"},"computed":false},"arguments":[{"type":"Identifier","start":18563,"end":18564,"loc":{"start":{"line":488,"column":20},"end":{"line":488,"column":21},"identifierName":"i"},"name":"i"}]}}],"kind":"let"},{"type":"ExpressionStatement","start":18569,"end":18614,"loc":{"start":{"line":489,"column":3},"end":{"line":489,"column":48}},"expression":{"type":"AssignmentExpression","start":18569,"end":18614,"loc":{"start":{"line":489,"column":3},"end":{"line":489,"column":48}},"operator":"=","left":{"type":"MemberExpression","start":18569,"end":18590,"loc":{"start":{"line":489,"column":3},"end":{"line":489,"column":24}},"object":{"type":"MemberExpression","start":18569,"end":18587,"loc":{"start":{"line":489,"column":3},"end":{"line":489,"column":21}},"object":{"type":"ThisExpression","start":18569,"end":18573,"loc":{"start":{"line":489,"column":3},"end":{"line":489,"column":7}}},"property":{"type":"Identifier","start":18574,"end":18587,"loc":{"start":{"line":489,"column":8},"end":{"line":489,"column":21},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false},"property":{"type":"Identifier","start":18588,"end":18589,"loc":{"start":{"line":489,"column":22},"end":{"line":489,"column":23},"identifierName":"i"},"name":"i"},"computed":true},"right":{"type":"CallExpression","start":18593,"end":18614,"loc":{"start":{"line":489,"column":27},"end":{"line":489,"column":48}},"callee":{"type":"Identifier","start":18593,"end":18594,"loc":{"start":{"line":489,"column":27},"end":{"line":489,"column":28},"identifierName":"f"},"name":"f"},"arguments":[{"type":"Identifier","start":18596,"end":18597,"loc":{"start":{"line":489,"column":30},"end":{"line":489,"column":31},"identifierName":"p"},"name":"p"},{"type":"CallExpression","start":18599,"end":18612,"loc":{"start":{"line":489,"column":33},"end":{"line":489,"column":46}},"callee":{"type":"MemberExpression","start":18599,"end":18609,"loc":{"start":{"line":489,"column":33},"end":{"line":489,"column":43}},"object":{"type":"ThisExpression","start":18599,"end":18603,"loc":{"start":{"line":489,"column":33},"end":{"line":489,"column":37}}},"property":{"type":"Identifier","start":18604,"end":18609,"loc":{"start":{"line":489,"column":38},"end":{"line":489,"column":43},"identifierName":"neigh"},"name":"neigh"},"computed":false},"arguments":[{"type":"Identifier","start":18610,"end":18611,"loc":{"start":{"line":489,"column":44},"end":{"line":489,"column":45},"identifierName":"p"},"name":"p"}]}]}}}],"directives":[]}},{"type":"ExpressionStatement","start":18622,"end":18693,"loc":{"start":{"line":491,"column":2},"end":{"line":491,"column":73}},"expression":{"type":"AssignmentExpression","start":18622,"end":18693,"loc":{"start":{"line":491,"column":2},"end":{"line":491,"column":73}},"operator":"=","left":{"type":"ArrayPattern","start":18622,"end":18656,"loc":{"start":{"line":491,"column":2},"end":{"line":491,"column":36}},"elements":[{"type":"MemberExpression","start":18623,"end":18641,"loc":{"start":{"line":491,"column":3},"end":{"line":491,"column":21}},"object":{"type":"ThisExpression","start":18623,"end":18627,"loc":{"start":{"line":491,"column":3},"end":{"line":491,"column":7}}},"property":{"type":"Identifier","start":18628,"end":18641,"loc":{"start":{"line":491,"column":8},"end":{"line":491,"column":21},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false},{"type":"MemberExpression","start":18643,"end":18655,"loc":{"start":{"line":491,"column":23},"end":{"line":491,"column":35}},"object":{"type":"ThisExpression","start":18643,"end":18647,"loc":{"start":{"line":491,"column":23},"end":{"line":491,"column":27}}},"property":{"type":"Identifier","start":18648,"end":18655,"loc":{"start":{"line":491,"column":28},"end":{"line":491,"column":35},"identifierName":"_pixels"},"name":"_pixels"},"computed":false}]},"right":{"type":"ArrayExpression","start":18659,"end":18693,"loc":{"start":{"line":491,"column":39},"end":{"line":491,"column":73}},"elements":[{"type":"MemberExpression","start":18660,"end":18672,"loc":{"start":{"line":491,"column":40},"end":{"line":491,"column":52}},"object":{"type":"ThisExpression","start":18660,"end":18664,"loc":{"start":{"line":491,"column":40},"end":{"line":491,"column":44}}},"property":{"type":"Identifier","start":18665,"end":18672,"loc":{"start":{"line":491,"column":45},"end":{"line":491,"column":52},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},{"type":"MemberExpression","start":18674,"end":18692,"loc":{"start":{"line":491,"column":54},"end":{"line":491,"column":72}},"object":{"type":"ThisExpression","start":18674,"end":18678,"loc":{"start":{"line":491,"column":54},"end":{"line":491,"column":58}}},"property":{"type":"Identifier","start":18679,"end":18692,"loc":{"start":{"line":491,"column":59},"end":{"line":491,"column":72},"identifierName":"_pixelsbuffer"},"name":"_pixelsbuffer"},"computed":false}]}}}],"directives":[],"trailingComments":null},"leadingComments":[{"type":"CommentBlock","value":"* Function that updates a gridpoint depending on its current value and\n\t * that of its neighbors.\n\t * @typedef {function} updatePixelFunction\n\t * @param {ArrayCoordinate} p - pixel to update\n\t * @param {ArrayCoordinate[]} neighbors - coordinates of neighbors of p\n\t * @return {number} value - the updated value, based on the current value\n\t * of p and its neighbors.\n\t ","start":17861,"end":18234,"loc":{"start":{"line":473,"column":1},"end":{"line":480,"column":4}}},{"type":"CommentBlock","value":"* Apply a function to all pixel values on the grid. It acts on\n\t * this._pixels, which is implemented in the grid subclass.\n\t * @param {updatePixelFunction} f - the function to apply to each pixel. ","start":18237,"end":18439,"loc":{"start":{"line":482,"column":1},"end":{"line":484,"column":76}}}],"trailingComments":[{"type":"CommentBlock","value":"* Multiply all pixel values on the grid with a constant factor r.\n\t * This method acts on this._pixels, which is implemented in the grid\n\t * subclass.\n\t * @param {number} r the multiplication factor. ","start":18700,"end":18904,"loc":{"start":{"line":494,"column":1},"end":{"line":497,"column":51}}}]},{"type":"ClassMethod","start":18906,"end":18987,"loc":{"start":{"line":498,"column":1},"end":{"line":502,"column":2}},"static":false,"computed":false,"key":{"type":"Identifier","start":18906,"end":18916,"loc":{"start":{"line":498,"column":1},"end":{"line":498,"column":11},"identifierName":"multiplyBy"},"name":"multiplyBy","leadingComments":null},"kind":"method","id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":18918,"end":18919,"loc":{"start":{"line":498,"column":13},"end":{"line":498,"column":14},"identifierName":"r"},"name":"r"}],"body":{"type":"BlockStatement","start":18921,"end":18987,"loc":{"start":{"line":498,"column":16},"end":{"line":502,"column":2}},"body":[{"type":"ForOfStatement","start":18925,"end":18984,"loc":{"start":{"line":499,"column":2},"end":{"line":501,"column":3}},"left":{"type":"VariableDeclaration","start":18930,"end":18935,"loc":{"start":{"line":499,"column":7},"end":{"line":499,"column":12}},"declarations":[{"type":"VariableDeclarator","start":18934,"end":18935,"loc":{"start":{"line":499,"column":11},"end":{"line":499,"column":12}},"id":{"type":"Identifier","start":18934,"end":18935,"loc":{"start":{"line":499,"column":11},"end":{"line":499,"column":12},"identifierName":"i"},"name":"i"},"init":null}],"kind":"let"},"right":{"type":"CallExpression","start":18939,"end":18953,"loc":{"start":{"line":499,"column":16},"end":{"line":499,"column":30}},"callee":{"type":"MemberExpression","start":18939,"end":18951,"loc":{"start":{"line":499,"column":16},"end":{"line":499,"column":28}},"object":{"type":"ThisExpression","start":18939,"end":18943,"loc":{"start":{"line":499,"column":16},"end":{"line":499,"column":20}}},"property":{"type":"Identifier","start":18944,"end":18951,"loc":{"start":{"line":499,"column":21},"end":{"line":499,"column":28},"identifierName":"pixelsi"},"name":"pixelsi"},"computed":false},"arguments":[]},"body":{"type":"BlockStatement","start":18955,"end":18984,"loc":{"start":{"line":499,"column":32},"end":{"line":501,"column":3}},"body":[{"type":"ExpressionStatement","start":18960,"end":18980,"loc":{"start":{"line":500,"column":3},"end":{"line":500,"column":23}},"expression":{"type":"AssignmentExpression","start":18960,"end":18980,"loc":{"start":{"line":500,"column":3},"end":{"line":500,"column":23}},"operator":"*=","left":{"type":"MemberExpression","start":18960,"end":18975,"loc":{"start":{"line":500,"column":3},"end":{"line":500,"column":18}},"object":{"type":"MemberExpression","start":18960,"end":18972,"loc":{"start":{"line":500,"column":3},"end":{"line":500,"column":15}},"object":{"type":"ThisExpression","start":18960,"end":18964,"loc":{"start":{"line":500,"column":3},"end":{"line":500,"column":7}}},"property":{"type":"Identifier","start":18965,"end":18972,"loc":{"start":{"line":500,"column":8},"end":{"line":500,"column":15},"identifierName":"_pixels"},"name":"_pixels"},"computed":false},"property":{"type":"Identifier","start":18973,"end":18974,"loc":{"start":{"line":500,"column":16},"end":{"line":500,"column":17},"identifierName":"i"},"name":"i"},"computed":true},"right":{"type":"Identifier","start":18979,"end":18980,"loc":{"start":{"line":500,"column":22},"end":{"line":500,"column":23},"identifierName":"r"},"name":"r"}}}],"directives":[]}}],"directives":[]},"leadingComments":[{"type":"CommentBlock","value":"* Multiply all pixel values on the grid with a constant factor r.\n\t * This method acts on this._pixels, which is implemented in the grid\n\t * subclass.\n\t * @param {number} r the multiplication factor. ","start":18700,"end":18904,"loc":{"start":{"line":494,"column":1},"end":{"line":497,"column":51}}}]}]},"leadingComments":[{"type":"CommentBlock","value":"* This base class defines a general grid and provides grid methods that do\n * not depend on the coordinate system used. This class is never used on its\n * own, as it does not yet contain methods for neighborhood computation etc\n * (which depend on the coordinate system).\n * Coordinate system-dependent methods are implemented in extensions of the\n * Grid class, for example Grid2D and Grid3D. ","start":0,"end":398,"loc":{"start":{"line":1,"column":0},"end":{"line":6,"column":48}}}],"__PseudoExport__":false,"trailingComments":[]},"leadingComments":null}],"directives":[]},"comments":[{"type":"CommentBlock","value":"* This base class defines a general grid and provides grid methods that do\n * not depend on the coordinate system used. This class is never used on its\n * own, as it does not yet contain methods for neighborhood computation etc\n * (which depend on the coordinate system).\n * Coordinate system-dependent methods are implemented in extensions of the\n * Grid class, for example Grid2D and Grid3D. ","start":0,"end":398,"loc":{"start":{"line":1,"column":0},"end":{"line":6,"column":48}}},{"type":"CommentBlock","value":"* The grid constructor.\n\t * @param {GridSize} field_size array of field size in each dimension.\n\t * E.g. [100,200] for a grid that is 100 pixels wide and 200 pixels high.\n\t * Entries must be positive integer numbers.\n\t * @param {boolean[]} [torus=[true,true,...]] - should the borders of the\n\t * grid be linked, so that a cell moving out on the left reappears on the\n\t * right? Should be an array specifying whether the torus holds in each\n\t * dimension; eg [true,false] for a torus in x but not y dimension.\n\t * Warning: setting the torus to false can give artifacts if not done\n\t * properly, see {@link Grid#torus}.","start":414,"end":1035,"loc":{"start":{"line":9,"column":1},"end":{"line":18,"column":39}}},{"type":"CommentBlock","value":"* field_size array of field size in each dimension. E.g. [100,200]\n\t\t * for a grid that is 100 pixels wide and 200 pixels high. Entries must\n\t\t * be positive integer numbers.\n\t\t * @type {GridSize}","start":1099,"end":1299,"loc":{"start":{"line":23,"column":2},"end":{"line":26,"column":23}}},{"type":"CommentBlock","value":"* Number of dimensions of the grid.\n\t\t * @type {number}","start":1333,"end":1392,"loc":{"start":{"line":29,"column":2},"end":{"line":30,"column":21}}},{"type":"CommentBlock","value":"* Should the borders of the grid be linked, so that a cell moving\n\t\t * out on the left reappears on the right? Warning: setting to false\n\t\t * can give artifacts if done incorrectly. If torus is set to false,\n\t\t * artifacts arise because\n\t\t * cells at the border have fewer neighbors. Cells will then stick to\n\t\t * the grid borders where they have fewer neighbors to get adhesion and/or\n\t\t * perimeter penalties from. You will need to specify how to handle the\n\t\t * borders explicitly; see the examples/ folder for details on how to\n\t\t * do this.\n\t\t * Torus can be specified for\n\t\t * each dimension separately.\n\t\t * @type {boolean[]}","start":1664,"end":2300,"loc":{"start":{"line":42,"column":2},"end":{"line":53,"column":24}}},{"type":"CommentBlock","value":"* Array with values for each pixel stored at the position of its\n\t\t * \t{@link IndexCoordinate}. E.g. the value of pixel with coordinate\n\t\t * \ti is stored as this._pixels[i]. This should be implemented in\n\t\t * \tthe grid subclass; see e.g. {@link Grid2D#_pixelArray}.\n\t\t * \tNote that this array is accessed indirectly via the\n\t\t * {@link _pixels} set- and get methods.\n\t\t * \t@private\n\t\t * \t","start":2325,"end":2717,"loc":{"start":{"line":56,"column":2},"end":{"line":63,"column":8}}},{"type":"CommentBlock","value":" These are used for rapid conversion between array and index\n\t\tcoordinates, but not documented as they should not be used from outside.\n\t\t","start":2782,"end":2924,"loc":{"start":{"line":67,"column":2},"end":{"line":69,"column":4}}},{"type":"CommentBlock","value":"* @ignore ","start":2927,"end":2941,"loc":{"start":{"line":70,"column":2},"end":{"line":70,"column":16}}},{"type":"CommentBlock","value":"* @ignore ","start":3009,"end":3023,"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":16}}},{"type":"CommentBlock","value":"* @ignore ","start":3091,"end":3105,"loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":16}}},{"type":"CommentBlock","value":"* Array coordinates to the middle pixel on the grid.\n\t\t * @type {ArrayCoordinate}\n\t\t * ","start":3148,"end":3239,"loc":{"start":{"line":77,"column":2},"end":{"line":79,"column":7}}},{"type":"CommentBlock","value":"*\n\t * Return the array this._pixelArray, which should be set in the grid\n\t * subclass.\n\t * @returns {Uint16Array|Float32Array}\n\t * @private\n\t ","start":3308,"end":3454,"loc":{"start":{"line":83,"column":1},"end":{"line":88,"column":4}}},{"type":"CommentBlock","value":"*\n\t * Set or update the private this._pixelArray.\n\t * @param {Uint16Array|Float32Array} pixels - array of pixels to set.\n\t * @private\n\t ","start":3682,"end":3822,"loc":{"start":{"line":97,"column":1},"end":{"line":101,"column":4}}},{"type":"CommentLine","value":"noinspection JSValidateTypes","start":3849,"end":3879,"loc":{"start":{"line":103,"column":2},"end":{"line":103,"column":32}}},{"type":"CommentBlock","value":"* Method to check if a given {@link ArrayCoordinate} falls within the\n\t * bounds of this grid. Returns an error if this is not the case.\n\t * @param {ArrayCoordinate} p - the coordinate to check.\n\t ","start":3913,"end":4114,"loc":{"start":{"line":107,"column":1},"end":{"line":110,"column":4}}},{"type":"CommentBlock","value":"* Method to correct an {@link ArrayCoordinate} outside the grid dimensions when\n\t * the grid is wrapped (torus = true). If the coordinate falls inside the grid,\n\t * it is returned unchanged. If it falls outside the grid and the grid is periodic\n\t * in that dimension, a corrected coordinate is returned. If the pixel falls outside\n\t * the grid which is not periodic in that dimension, the function returns\n\t * 'undefined'.\n\t * @param {ArrayCoordinate} p - the coordinate of the pixel to correct\n\t * @return {ArrayCoordinate} the corrected coordinate.\n\t ","start":4595,"end":5152,"loc":{"start":{"line":125,"column":1},"end":{"line":133,"column":4}}},{"type":"CommentLine","value":" ignore pixels that fall off the grid when non-periodic grid","start":5215,"end":5277,"loc":{"start":{"line":137,"column":21},"end":{"line":137,"column":83}}},{"type":"CommentLine","value":" Loop over the x, y, (z) dimensions","start":5282,"end":5319,"loc":{"start":{"line":139,"column":2},"end":{"line":139,"column":39}}},{"type":"CommentLine","value":" If position is outside the grid dimensions, action depends on whether","start":5365,"end":5437,"loc":{"start":{"line":142,"column":3},"end":{"line":142,"column":75}}},{"type":"CommentLine","value":" grid is periodic or not (torus)","start":5441,"end":5475,"loc":{"start":{"line":143,"column":3},"end":{"line":143,"column":37}}},{"type":"CommentLine","value":" If there is a torus in this dimension, correct the position and return.","start":5499,"end":5573,"loc":{"start":{"line":145,"column":4},"end":{"line":145,"column":78}}},{"type":"CommentLine","value":" otherwise just ignore it.","start":5578,"end":5606,"loc":{"start":{"line":146,"column":4},"end":{"line":146,"column":32}}},{"type":"CommentBlock","value":"* Method for conversion from an {@link ArrayCoordinate} to an\n\t * {@link IndexCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#p2i} for an example.\n\t * @abstract\n\t * @param {ArrayCoordinate} p - the coordinate of the pixel to convert\n\t * @return {IndexCoordinate} the converted coordinate.\n\t ","start":5977,"end":6314,"loc":{"start":{"line":171,"column":1},"end":{"line":178,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":6316,"end":6357,"loc":{"start":{"line":179,"column":1},"end":{"line":179,"column":42}}},{"type":"CommentBlock","value":"* Method for conversion from an {@link IndexCoordinate} to an\n\t * {@link ArrayCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#i2p} for an example.\n\t * @abstract\n\t * @param {IndexCoordinate} i - the coordinate of the pixel to convert\n\t * @return {ArrayCoordinate} the converted coordinate.\n\t ","start":6446,"end":6783,"loc":{"start":{"line":184,"column":1},"end":{"line":191,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":6785,"end":6826,"loc":{"start":{"line":192,"column":1},"end":{"line":192,"column":42}}},{"type":"CommentBlock","value":"* Method returning the (Moore) neighborhood of a pixel based on its\n\t * {@link IndexCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#neighi} for an example.\n\t * @abstract\n\t * @param {IndexCoordinate} i - the coordinate of the pixel to get neighbors\n\t * for.\n\t * @param {boolean[]} torus are borders of the grid linked so that a cell\n\t * leaving on the right re-enters the grid on the left?\n\t * @return {IndexCoordinate[]} an array of neighbors.\n\t ","start":6916,"end":7408,"loc":{"start":{"line":197,"column":1},"end":{"line":207,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":7410,"end":7451,"loc":{"start":{"line":208,"column":1},"end":{"line":208,"column":42}}},{"type":"CommentBlock","value":"* The neigh method returns the neighborhood of a pixel p. This function\n\t * uses array coordinates as input and output arguments, but internally\n\t * calls a method 'neighi' which computes neighborhoods using index-\n\t * coordinates. Since neighborhoods depend on the coordinate system, the\n\t * 'neighi' method is defined in the extension class for that specific\n\t * coordinate system.\n\t * @param {ArrayCoordinate} p array coordinates of a specific pixel\n\t * @param {boolean[]} torus are borders of the grid linked so that a cell\n\t * leaving on the right re-enters the grid on the left?\n\t * @return {ArrayCoordinate[]} an array of neighbors of pixel p, where each\n\t * element contains the array coordinates of the neighbor in question.\n\t * ","start":7566,"end":8308,"loc":{"start":{"line":213,"column":1},"end":{"line":224,"column":6}}},{"type":"CommentBlock","value":"* Check if a value is valid on this type of grid.\n\t * This function forbids trying to set forbidden (negative/float) values\n\t * on an integer grid, which could cause bugs if the setpix(i) methods try\n\t * to set such a value unnoticed.\n\t * @private\n\t * @param {number} t - the value that would be stored on the grid.\n\t * @param {number} [tol=1e-6] - numeric tolerance for comparing a number\n\t * with its rounded version, to check if it is integer (e.g. setting\n\t * a value 1.5 on an integer grid would throw an error, but setting\n\t * 1.000000000001 would not if the tolerance is 1e-6.\n\t * @return {void} - return without problem or throw an error when an\n\t * incorrect value is set.\n\t * ","start":8443,"end":9133,"loc":{"start":{"line":232,"column":1},"end":{"line":244,"column":6}}},{"type":"CommentBlock","value":"* The setpix method changes the value of a pixel p on the grid to t.\n\t * @param {ArrayCoordinate} p array coordinates of the pixel to change the\n\t * value of\n\t * @param {number} t the value to assign to this pixel. This can\n\t * be integers or floating point numbers, depending on the grid subclass\n\t * used (see eg Grid2D). ","start":9359,"end":9687,"loc":{"start":{"line":253,"column":1},"end":{"line":258,"column":28}}},{"type":"CommentBlock","value":"* The setpixi method changes the value of a pixel i on the grid to t.\n\t * @param {IndexCoordinate} i index coordinates of the pixel to change the\n\t * value of\n\t * @param {number} t the value to assign to this pixel. This can be integers\n\t * or floating point numbers, depending on the grid subclass used\n\t * (see eg Grid2D).\n\t * ","start":9766,"end":10099,"loc":{"start":{"line":264,"column":1},"end":{"line":270,"column":6}}},{"type":"CommentBlock","value":"* The pixt method finds the current value of a pixel p on the grid.\n\t * @param {ArrayCoordinate} p array coordinates of the pixel to find the\n\t * value of\n\t * @return {number} t the value of p on the grid. This can be integers or\n\t * floating point numbers, depending on the grid subclass used (see eg\n\t * Grid2D).\n\t ","start":10169,"end":10490,"loc":{"start":{"line":276,"column":1},"end":{"line":282,"column":4}}},{"type":"CommentBlock","value":"* The pixti method finds the current value of a pixel i on the grid.\n\t * @param {IndexCoordinate} i index coordinates of the pixel to find the\n\t * value of\n\t * @return {number} t the value of i on the grid. This can be integers or\n\t * floating point numbers, depending on the grid subclass used (see eg\n\t * Grid2D).\n\t","start":10543,"end":10864,"loc":{"start":{"line":287,"column":1},"end":{"line":293,"column":3}}},{"type":"CommentBlock","value":"* A pixel on the grid.\n\t * @typedef {Object[]} Pixel\n\t * @property {ArrayCoordinate} Pixel[0] - pixel coordinate\n\t * @property {number} Pixel[1] - pixel value\n\t * ","start":10908,"end":11075,"loc":{"start":{"line":298,"column":1},"end":{"line":302,"column":6}}},{"type":"CommentBlock","value":" /** A pixel on the grid.\n\t * @typedef {Object[]} iPixel\n\t * @property {IndexCoordinate} Pixel[0] - pixel coordinate\n\t * @property {number} Pixel[1] - pixel value\n\t * ","start":11079,"end":11250,"loc":{"start":{"line":304,"column":1},"end":{"line":308,"column":6}}},{"type":"CommentBlock","value":"* This iterator returns locations and values of all non-zero pixels.\n\t * This method isn't actually called because the subclasses implement\n\t * it themselves due to efficiency reasons. It serves as a template to\n\t * document the functionality.\n\t * @abstract\n\t * @return {Pixel} for each pixel, return an array [p,v] where p are\n\t * the pixel's array coordinates on the grid, and v its value.","start":11253,"end":11648,"loc":{"start":{"line":310,"column":1},"end":{"line":316,"column":65}}},{"type":"CommentLine","value":"eslint-disable-next-line require-yield","start":11650,"end":11690,"loc":{"start":{"line":317,"column":1},"end":{"line":317,"column":41}}},{"type":"CommentLine","value":"noinspection JSValidateTypes","start":11707,"end":11737,"loc":{"start":{"line":319,"column":2},"end":{"line":319,"column":32}}},{"type":"CommentBlock","value":"\n\t\t// example code:\n\t\tfor( let i of this.pixelsi() ){\n\t\t\tif( this._pixels[i] > 0 ){\n\t\t\t\tyield [this.i2p(i),this._pixels[i]]\n\t\t\t}\n\t\t}","start":11787,"end":11923,"loc":{"start":{"line":322,"column":2},"end":{"line":328,"column":5}}},{"type":"CommentBlock","value":"* This iterator returns locations all pixels including background.\n\t * This method isn't actually called because the subclasses implement\n\t * it themselves due to efficiency reasons. It serves as a template to\n\t * document the functionality.\n\t * @abstract\n\t * @return {IndexCoordinate} for each pixel, because this method should be\n\t * implemented in a grid subclass.\n\t * ","start":11929,"end":12305,"loc":{"start":{"line":331,"column":1},"end":{"line":338,"column":6}}},{"type":"CommentLine","value":"eslint-disable-next-line require-yield","start":12307,"end":12347,"loc":{"start":{"line":339,"column":1},"end":{"line":339,"column":41}}},{"type":"CommentLine","value":"yield undefined","start":12412,"end":12429,"loc":{"start":{"line":342,"column":2},"end":{"line":342,"column":19}}},{"type":"CommentBlock","value":"* This method pre-allocates an array of the correct datatype to make\n\t * a copy of the current pixel values. Values are not actually copied yet.\n\t * @return {Uint16Array|Float32Array} an array with an element for each\n\t * pixel. The datatype is determined by the datatype of this._pixels\n\t * (implemented in the subclass), which can be either Uint16Array or\n\t * Float32Array. ","start":12435,"end":12815,"loc":{"start":{"line":345,"column":1},"end":{"line":350,"column":20}}},{"type":"CommentBlock","value":"* For storing a copy of all pixel values; eg for synchronous updating\n\t\t * of some sort.\n\t\t * @type {Uint16Array|Float32Array}","start":12837,"end":12967,"loc":{"start":{"line":353,"column":2},"end":{"line":355,"column":39}}},{"type":"CommentBlock","value":"* Template method to compute the gradient at location i on the grid\n\t * (location given in index coordinates).\n\t * This method throws an error, which is overwritten when a subclass\n\t * implements a gradienti method.\n\t * @param {IndexCoordinate} i index coordinate of a pixel to compute the\n\t * gradient at.\n\t * @return {number[]} the gradient\n\t * @see https://en.wikipedia.org/wiki/Gradient","start":13330,"end":13724,"loc":{"start":{"line":367,"column":1},"end":{"line":374,"column":49}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":13726,"end":13767,"loc":{"start":{"line":375,"column":1},"end":{"line":375,"column":42}}},{"type":"CommentBlock","value":"* Method to compute the gradient at location p on the grid (location\n\t * given in array coordinates). It internally calls the gradienti\n\t * method using index coordinates, which should be implemented in the grid\n\t * subclass.\n\t * @param {ArrayCoordinate} p array coordinates of a pixel p to compute\n\t * the gradient at\n\t * @return {number} the gradient at position p.\n\t * @see https://en.wikipedia.org/wiki/Gradient","start":13838,"end":14257,"loc":{"start":{"line":380,"column":1},"end":{"line":387,"column":49}}},{"type":"CommentLine","value":"noinspection JSValidateTypes","start":14276,"end":14306,"loc":{"start":{"line":389,"column":2},"end":{"line":389,"column":32}}},{"type":"CommentBlock","value":"* Method to compute the laplacian at location p on the grid\n\t * (location given in array coordinates). It internally calls the laplaciani\n\t * method that does the same but uses index coordinates.\n\t * @param {ArrayCoordinate} p array coordinates of a pixel p to compute the\n\t * laplacian at\n\t * @return {number} the laplacian at position p.\n\t * @see https://en.wikipedia.org/wiki/Laplace_operator#Coordinate_expressions ","start":14353,"end":14776,"loc":{"start":{"line":393,"column":1},"end":{"line":399,"column":81}}},{"type":"CommentBlock","value":"*\n\t * A method to compute the Neumann neighborhood should be implemented in the\n\t * Grid subclass if the laplacian (see below) is used.\n\t * This mock function ensures that an error is thrown when there is no\n\t * method called neighNeumanni in the grid subclass.\n\t * @abstract\n\t * @see https://en.wikipedia.org/wiki/Von_Neumann_neighborhood\n\t * @param {IndexCoordinate} i - location of the pixel to get neighbors of.\n\t * @param {boolean[]} [torus=[true,true]] - does the grid have linked\n\t * borders? Defaults to the setting on this grid, see {@link torus}\n\t * @return {IndexCoordinate[]} - an array of coordinates for all the neighbors of i.\n\t ","start":14841,"end":15489,"loc":{"start":{"line":404,"column":1},"end":{"line":415,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars,require-yield","start":15491,"end":15546,"loc":{"start":{"line":416,"column":1},"end":{"line":416,"column":56}}},{"type":"CommentBlock","value":"* Method to compute the laplacian at location i on the grid (location\n\t * given in index coordinates). It internally uses the neighNeumanni method\n\t * to compute a Neumann neighborhood, which should be implemented in the\n\t * grid subclass. It then uses the finite difference method (see link) with\n\t * h = 1.\n\t * @param {IndexCoordinate} i index coordinates of a pixel to compute the\n\t * laplacian at\n\t * @return {number} the laplacian at position p.\n\t * @see https://en.wikipedia.org/wiki/Laplace_operator#Coordinate_expressions\n\t * @see https://en.wikipedia.org/wiki/Discrete_Laplace_operator#Finite_differences\n\t * ","start":15733,"end":16355,"loc":{"start":{"line":422,"column":1},"end":{"line":432,"column":6}}},{"type":"CommentLine","value":" For now: forbid computing a laplacian on an integer grid as it makes","start":16396,"end":16467,"loc":{"start":{"line":436,"column":2},"end":{"line":436,"column":73}}},{"type":"CommentLine","value":" no sense and could happen by accident if you forget to specify the","start":16470,"end":16539,"loc":{"start":{"line":437,"column":2},"end":{"line":437,"column":71}}},{"type":"CommentLine","value":" datatype.","start":16542,"end":16554,"loc":{"start":{"line":438,"column":2},"end":{"line":438,"column":14}}},{"type":"CommentLine","value":" If this is too strict, we can set an option to overrule this error.","start":16557,"end":16627,"loc":{"start":{"line":439,"column":2},"end":{"line":439,"column":72}}},{"type":"CommentLine","value":" This way you still get to see it if you try this by accident.","start":16630,"end":16694,"loc":{"start":{"line":440,"column":2},"end":{"line":440,"column":66}}},{"type":"CommentLine","value":"noinspection JSUnresolvedFunction","start":16854,"end":16889,"loc":{"start":{"line":446,"column":2},"end":{"line":446,"column":37}}},{"type":"CommentBlock","value":"* Perform a diffusion step on the grid, updating the values of all pixels\n\t * according to Fick's second law of diffusion.\n\t * @param {number} D diffusion coefficient\n\t * @see https://en.wikipedia.org/wiki/Diffusion#Fick's_law_and_equations\n\t * @see https://en.wikipedia.org/wiki/Discrete_Laplace_operator#Mesh_Laplacians\n\t * ","start":17004,"end":17334,"loc":{"start":{"line":453,"column":1},"end":{"line":458,"column":6}}},{"type":"CommentLine","value":" For synchronous updating of the grid: compute updated values in a copy","start":17354,"end":17427,"loc":{"start":{"line":460,"column":2},"end":{"line":460,"column":75}}},{"type":"CommentLine","value":" of the current pixels","start":17430,"end":17454,"loc":{"start":{"line":461,"column":2},"end":{"line":461,"column":26}}},{"type":"CommentLine","value":" Diffusion: new value is current value + change.","start":17541,"end":17591,"loc":{"start":{"line":464,"column":3},"end":{"line":464,"column":53}}},{"type":"CommentLine","value":" the change is given by the diffusion coefficient D times the laplacian.","start":17595,"end":17669,"loc":{"start":{"line":465,"column":3},"end":{"line":465,"column":77}}},{"type":"CommentLine","value":" swap the copy and the original","start":17746,"end":17779,"loc":{"start":{"line":468,"column":2},"end":{"line":468,"column":35}}},{"type":"CommentBlock","value":"* Function that updates a gridpoint depending on its current value and\n\t * that of its neighbors.\n\t * @typedef {function} updatePixelFunction\n\t * @param {ArrayCoordinate} p - pixel to update\n\t * @param {ArrayCoordinate[]} neighbors - coordinates of neighbors of p\n\t * @return {number} value - the updated value, based on the current value\n\t * of p and its neighbors.\n\t ","start":17861,"end":18234,"loc":{"start":{"line":473,"column":1},"end":{"line":480,"column":4}}},{"type":"CommentBlock","value":"* Apply a function to all pixel values on the grid. It acts on\n\t * this._pixels, which is implemented in the grid subclass.\n\t * @param {updatePixelFunction} f - the function to apply to each pixel. ","start":18237,"end":18439,"loc":{"start":{"line":482,"column":1},"end":{"line":484,"column":76}}},{"type":"CommentBlock","value":"* Multiply all pixel values on the grid with a constant factor r.\n\t * This method acts on this._pixels, which is implemented in the grid\n\t * subclass.\n\t * @param {number} r the multiplication factor. ","start":18700,"end":18904,"loc":{"start":{"line":494,"column":1},"end":{"line":497,"column":51}}}],"tokens":[{"type":"CommentBlock","value":"* This base class defines a general grid and provides grid methods that do\n * not depend on the coordinate system used. This class is never used on its\n * own, as it does not yet contain methods for neighborhood computation etc\n * (which depend on the coordinate system).\n * Coordinate system-dependent methods are implemented in extensions of the\n * Grid class, for example Grid2D and Grid3D. ","start":0,"end":398,"loc":{"start":{"line":1,"column":0},"end":{"line":6,"column":48}}},{"type":{"label":"class","keyword":"class","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"class","start":399,"end":404,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Grid","start":405,"end":409,"loc":{"start":{"line":7,"column":6},"end":{"line":7,"column":10}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":410,"end":411,"loc":{"start":{"line":7,"column":11},"end":{"line":7,"column":12}}},{"type":"CommentBlock","value":"* The grid constructor.\n\t * @param {GridSize} field_size array of field size in each dimension.\n\t * E.g. [100,200] for a grid that is 100 pixels wide and 200 pixels high.\n\t * Entries must be positive integer numbers.\n\t * @param {boolean[]} [torus=[true,true,...]] - should the borders of the\n\t * grid be linked, so that a cell moving out on the left reappears on the\n\t * right? Should be an array specifying whether the torus holds in each\n\t * dimension; eg [true,false] for a torus in x but not y dimension.\n\t * Warning: setting the torus to false can give artifacts if not done\n\t * properly, see {@link Grid#torus}.","start":414,"end":1035,"loc":{"start":{"line":9,"column":1},"end":{"line":18,"column":39}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"constructor","start":1037,"end":1048,"loc":{"start":{"line":19,"column":1},"end":{"line":19,"column":12}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1048,"end":1049,"loc":{"start":{"line":19,"column":12},"end":{"line":19,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"field_size","start":1050,"end":1060,"loc":{"start":{"line":19,"column":14},"end":{"line":19,"column":24}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1060,"end":1061,"loc":{"start":{"line":19,"column":24},"end":{"line":19,"column":25}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":1062,"end":1067,"loc":{"start":{"line":19,"column":26},"end":{"line":19,"column":31}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1068,"end":1069,"loc":{"start":{"line":19,"column":32},"end":{"line":19,"column":33}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1069,"end":1070,"loc":{"start":{"line":19,"column":33},"end":{"line":19,"column":34}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":1075,"end":1080,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":7}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":1081,"end":1082,"loc":{"start":{"line":21,"column":8},"end":{"line":21,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":1083,"end":1088,"loc":{"start":{"line":21,"column":10},"end":{"line":21,"column":15}}},{"type":{"label":"||","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":1,"updateContext":null},"value":"||","start":1089,"end":1091,"loc":{"start":{"line":21,"column":16},"end":{"line":21,"column":18}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1092,"end":1093,"loc":{"start":{"line":21,"column":19},"end":{"line":21,"column":20}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1093,"end":1094,"loc":{"start":{"line":21,"column":20},"end":{"line":21,"column":21}}},{"type":"CommentBlock","value":"* field_size array of field size in each dimension. E.g. [100,200]\n\t\t * for a grid that is 100 pixels wide and 200 pixels high. Entries must\n\t\t * be positive integer numbers.\n\t\t * @type {GridSize}","start":1099,"end":1299,"loc":{"start":{"line":23,"column":2},"end":{"line":26,"column":23}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":1302,"end":1306,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1306,"end":1307,"loc":{"start":{"line":27,"column":6},"end":{"line":27,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"extents","start":1307,"end":1314,"loc":{"start":{"line":27,"column":7},"end":{"line":27,"column":14}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":1315,"end":1316,"loc":{"start":{"line":27,"column":15},"end":{"line":27,"column":16}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"field_size","start":1317,"end":1327,"loc":{"start":{"line":27,"column":17},"end":{"line":27,"column":27}}},{"type":"CommentBlock","value":"* Number of dimensions of the grid.\n\t\t * @type {number}","start":1333,"end":1392,"loc":{"start":{"line":29,"column":2},"end":{"line":30,"column":21}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":1395,"end":1399,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1399,"end":1400,"loc":{"start":{"line":31,"column":6},"end":{"line":31,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"ndim","start":1400,"end":1404,"loc":{"start":{"line":31,"column":7},"end":{"line":31,"column":11}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":1405,"end":1406,"loc":{"start":{"line":31,"column":12},"end":{"line":31,"column":13}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":1407,"end":1411,"loc":{"start":{"line":31,"column":14},"end":{"line":31,"column":18}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1411,"end":1412,"loc":{"start":{"line":31,"column":18},"end":{"line":31,"column":19}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"extents","start":1412,"end":1419,"loc":{"start":{"line":31,"column":19},"end":{"line":31,"column":26}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1419,"end":1420,"loc":{"start":{"line":31,"column":26},"end":{"line":31,"column":27}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":1420,"end":1426,"loc":{"start":{"line":31,"column":27},"end":{"line":31,"column":33}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":1435,"end":1437,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1437,"end":1438,"loc":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":1439,"end":1444,"loc":{"start":{"line":34,"column":6},"end":{"line":34,"column":11}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1444,"end":1445,"loc":{"start":{"line":34,"column":11},"end":{"line":34,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":1445,"end":1451,"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":18}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"===","start":1452,"end":1455,"loc":{"start":{"line":34,"column":19},"end":{"line":34,"column":22}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":1456,"end":1457,"loc":{"start":{"line":34,"column":23},"end":{"line":34,"column":24}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1458,"end":1459,"loc":{"start":{"line":34,"column":25},"end":{"line":34,"column":26}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1459,"end":1460,"loc":{"start":{"line":34,"column":26},"end":{"line":34,"column":27}}},{"type":{"label":"for","keyword":"for","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":true,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"for","start":1464,"end":1467,"loc":{"start":{"line":35,"column":3},"end":{"line":35,"column":6}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1467,"end":1468,"loc":{"start":{"line":35,"column":6},"end":{"line":35,"column":7}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":1469,"end":1472,"loc":{"start":{"line":35,"column":8},"end":{"line":35,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":1473,"end":1474,"loc":{"start":{"line":35,"column":12},"end":{"line":35,"column":13}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":1475,"end":1476,"loc":{"start":{"line":35,"column":14},"end":{"line":35,"column":15}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":1477,"end":1478,"loc":{"start":{"line":35,"column":16},"end":{"line":35,"column":17}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1478,"end":1479,"loc":{"start":{"line":35,"column":17},"end":{"line":35,"column":18}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":1480,"end":1481,"loc":{"start":{"line":35,"column":19},"end":{"line":35,"column":20}}},{"type":{"label":"</>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"<","start":1482,"end":1483,"loc":{"start":{"line":35,"column":21},"end":{"line":35,"column":22}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":1484,"end":1488,"loc":{"start":{"line":35,"column":23},"end":{"line":35,"column":27}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1488,"end":1489,"loc":{"start":{"line":35,"column":27},"end":{"line":35,"column":28}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"ndim","start":1489,"end":1493,"loc":{"start":{"line":35,"column":28},"end":{"line":35,"column":32}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1493,"end":1494,"loc":{"start":{"line":35,"column":32},"end":{"line":35,"column":33}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":1495,"end":1496,"loc":{"start":{"line":35,"column":34},"end":{"line":35,"column":35}}},{"type":{"label":"++/--","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":true,"binop":null},"value":"++","start":1496,"end":1498,"loc":{"start":{"line":35,"column":35},"end":{"line":35,"column":37}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1499,"end":1500,"loc":{"start":{"line":35,"column":38},"end":{"line":35,"column":39}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1500,"end":1501,"loc":{"start":{"line":35,"column":39},"end":{"line":35,"column":40}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":1506,"end":1511,"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":9}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1511,"end":1512,"loc":{"start":{"line":36,"column":9},"end":{"line":36,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"push","start":1512,"end":1516,"loc":{"start":{"line":36,"column":10},"end":{"line":36,"column":14}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1516,"end":1517,"loc":{"start":{"line":36,"column":14},"end":{"line":36,"column":15}}},{"type":{"label":"true","keyword":"true","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"true","start":1518,"end":1522,"loc":{"start":{"line":36,"column":16},"end":{"line":36,"column":20}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1523,"end":1524,"loc":{"start":{"line":36,"column":21},"end":{"line":36,"column":22}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1528,"end":1529,"loc":{"start":{"line":37,"column":3},"end":{"line":37,"column":4}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1532,"end":1533,"loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":1534,"end":1538,"loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":8}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":1539,"end":1541,"loc":{"start":{"line":38,"column":9},"end":{"line":38,"column":11}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1542,"end":1543,"loc":{"start":{"line":38,"column":12},"end":{"line":38,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":1544,"end":1549,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":19}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1549,"end":1550,"loc":{"start":{"line":38,"column":19},"end":{"line":38,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":1550,"end":1556,"loc":{"start":{"line":38,"column":20},"end":{"line":38,"column":26}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"!==","start":1557,"end":1560,"loc":{"start":{"line":38,"column":27},"end":{"line":38,"column":30}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":1561,"end":1565,"loc":{"start":{"line":38,"column":31},"end":{"line":38,"column":35}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1565,"end":1566,"loc":{"start":{"line":38,"column":35},"end":{"line":38,"column":36}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"ndim","start":1566,"end":1570,"loc":{"start":{"line":38,"column":36},"end":{"line":38,"column":40}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1571,"end":1572,"loc":{"start":{"line":38,"column":41},"end":{"line":38,"column":42}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1572,"end":1573,"loc":{"start":{"line":38,"column":42},"end":{"line":38,"column":43}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":1577,"end":1582,"loc":{"start":{"line":39,"column":3},"end":{"line":39,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1582,"end":1583,"loc":{"start":{"line":39,"column":8},"end":{"line":39,"column":9}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Torus should be specified for each dimension, or not ","start":1584,"end":1639,"loc":{"start":{"line":39,"column":10},"end":{"line":39,"column":65}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":1640,"end":1641,"loc":{"start":{"line":39,"column":66},"end":{"line":39,"column":67}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"at all!","start":1646,"end":1655,"loc":{"start":{"line":40,"column":4},"end":{"line":40,"column":13}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1656,"end":1657,"loc":{"start":{"line":40,"column":14},"end":{"line":40,"column":15}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":1660,"end":1661,"loc":{"start":{"line":41,"column":2},"end":{"line":41,"column":3}}},{"type":"CommentBlock","value":"* Should the borders of the grid be linked, so that a cell moving\n\t\t * out on the left reappears on the right? Warning: setting to false\n\t\t * can give artifacts if done incorrectly. If torus is set to false,\n\t\t * artifacts arise because\n\t\t * cells at the border have fewer neighbors. Cells will then stick to\n\t\t * the grid borders where they have fewer neighbors to get adhesion and/or\n\t\t * perimeter penalties from. You will need to specify how to handle the\n\t\t * borders explicitly; see the examples/ folder for details on how to\n\t\t * do this.\n\t\t * Torus can be specified for\n\t\t * each dimension separately.\n\t\t * @type {boolean[]}","start":1664,"end":2300,"loc":{"start":{"line":42,"column":2},"end":{"line":53,"column":24}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":2303,"end":2307,"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2307,"end":2308,"loc":{"start":{"line":54,"column":6},"end":{"line":54,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":2308,"end":2313,"loc":{"start":{"line":54,"column":7},"end":{"line":54,"column":12}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":2314,"end":2315,"loc":{"start":{"line":54,"column":13},"end":{"line":54,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":2316,"end":2321,"loc":{"start":{"line":54,"column":15},"end":{"line":54,"column":20}}},{"type":"CommentBlock","value":"* Array with values for each pixel stored at the position of its\n\t\t * \t{@link IndexCoordinate}. E.g. the value of pixel with coordinate\n\t\t * \ti is stored as this._pixels[i]. This should be implemented in\n\t\t * \tthe grid subclass; see e.g. {@link Grid2D#_pixelArray}.\n\t\t * \tNote that this array is accessed indirectly via the\n\t\t * {@link _pixels} set- and get methods.\n\t\t * \t@private\n\t\t * \t","start":2325,"end":2717,"loc":{"start":{"line":56,"column":2},"end":{"line":63,"column":8}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":2720,"end":2724,"loc":{"start":{"line":64,"column":2},"end":{"line":64,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2724,"end":2725,"loc":{"start":{"line":64,"column":6},"end":{"line":64,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelArray","start":2725,"end":2736,"loc":{"start":{"line":64,"column":7},"end":{"line":64,"column":18}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":2737,"end":2738,"loc":{"start":{"line":64,"column":19},"end":{"line":64,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"undefined","start":2739,"end":2748,"loc":{"start":{"line":64,"column":21},"end":{"line":64,"column":30}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":2751,"end":2755,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2755,"end":2756,"loc":{"start":{"line":65,"column":6},"end":{"line":65,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"datatype","start":2756,"end":2764,"loc":{"start":{"line":65,"column":7},"end":{"line":65,"column":15}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":2765,"end":2766,"loc":{"start":{"line":65,"column":16},"end":{"line":65,"column":17}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"undefined","start":2767,"end":2776,"loc":{"start":{"line":65,"column":18},"end":{"line":65,"column":27}}},{"type":"CommentBlock","value":" These are used for rapid conversion between array and index\n\t\tcoordinates, but not documented as they should not be used from outside.\n\t\t","start":2782,"end":2924,"loc":{"start":{"line":67,"column":2},"end":{"line":69,"column":4}}},{"type":"CommentBlock","value":"* @ignore ","start":2927,"end":2941,"loc":{"start":{"line":70,"column":2},"end":{"line":70,"column":16}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":2944,"end":2948,"loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2948,"end":2949,"loc":{"start":{"line":71,"column":6},"end":{"line":71,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"X_BITS","start":2949,"end":2955,"loc":{"start":{"line":71,"column":7},"end":{"line":71,"column":13}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":2956,"end":2957,"loc":{"start":{"line":71,"column":14},"end":{"line":71,"column":15}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":2958,"end":2959,"loc":{"start":{"line":71,"column":16},"end":{"line":71,"column":17}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":2959,"end":2960,"loc":{"start":{"line":71,"column":17},"end":{"line":71,"column":18}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Math","start":2960,"end":2964,"loc":{"start":{"line":71,"column":18},"end":{"line":71,"column":22}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2964,"end":2965,"loc":{"start":{"line":71,"column":22},"end":{"line":71,"column":23}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"floor","start":2965,"end":2970,"loc":{"start":{"line":71,"column":23},"end":{"line":71,"column":28}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2970,"end":2971,"loc":{"start":{"line":71,"column":28},"end":{"line":71,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Math","start":2972,"end":2976,"loc":{"start":{"line":71,"column":30},"end":{"line":71,"column":34}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2976,"end":2977,"loc":{"start":{"line":71,"column":34},"end":{"line":71,"column":35}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"log2","start":2977,"end":2981,"loc":{"start":{"line":71,"column":35},"end":{"line":71,"column":39}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":2981,"end":2982,"loc":{"start":{"line":71,"column":39},"end":{"line":71,"column":40}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":2983,"end":2987,"loc":{"start":{"line":71,"column":41},"end":{"line":71,"column":45}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2987,"end":2988,"loc":{"start":{"line":71,"column":45},"end":{"line":71,"column":46}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"extents","start":2988,"end":2995,"loc":{"start":{"line":71,"column":46},"end":{"line":71,"column":53}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2995,"end":2996,"loc":{"start":{"line":71,"column":53},"end":{"line":71,"column":54}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":2996,"end":2997,"loc":{"start":{"line":71,"column":54},"end":{"line":71,"column":55}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":2997,"end":2998,"loc":{"start":{"line":71,"column":55},"end":{"line":71,"column":56}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"-","start":2999,"end":3000,"loc":{"start":{"line":71,"column":57},"end":{"line":71,"column":58}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":3001,"end":3002,"loc":{"start":{"line":71,"column":59},"end":{"line":71,"column":60}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3003,"end":3004,"loc":{"start":{"line":71,"column":61},"end":{"line":71,"column":62}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3005,"end":3006,"loc":{"start":{"line":71,"column":63},"end":{"line":71,"column":64}}},{"type":"CommentBlock","value":"* @ignore ","start":3009,"end":3023,"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":16}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3026,"end":3030,"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3030,"end":3031,"loc":{"start":{"line":73,"column":6},"end":{"line":73,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Y_BITS","start":3031,"end":3037,"loc":{"start":{"line":73,"column":7},"end":{"line":73,"column":13}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":3038,"end":3039,"loc":{"start":{"line":73,"column":14},"end":{"line":73,"column":15}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":3040,"end":3041,"loc":{"start":{"line":73,"column":16},"end":{"line":73,"column":17}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":3041,"end":3042,"loc":{"start":{"line":73,"column":17},"end":{"line":73,"column":18}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Math","start":3042,"end":3046,"loc":{"start":{"line":73,"column":18},"end":{"line":73,"column":22}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3046,"end":3047,"loc":{"start":{"line":73,"column":22},"end":{"line":73,"column":23}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"floor","start":3047,"end":3052,"loc":{"start":{"line":73,"column":23},"end":{"line":73,"column":28}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3052,"end":3053,"loc":{"start":{"line":73,"column":28},"end":{"line":73,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Math","start":3054,"end":3058,"loc":{"start":{"line":73,"column":30},"end":{"line":73,"column":34}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3058,"end":3059,"loc":{"start":{"line":73,"column":34},"end":{"line":73,"column":35}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"log2","start":3059,"end":3063,"loc":{"start":{"line":73,"column":35},"end":{"line":73,"column":39}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3063,"end":3064,"loc":{"start":{"line":73,"column":39},"end":{"line":73,"column":40}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3065,"end":3069,"loc":{"start":{"line":73,"column":41},"end":{"line":73,"column":45}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3069,"end":3070,"loc":{"start":{"line":73,"column":45},"end":{"line":73,"column":46}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"extents","start":3070,"end":3077,"loc":{"start":{"line":73,"column":46},"end":{"line":73,"column":53}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3077,"end":3078,"loc":{"start":{"line":73,"column":53},"end":{"line":73,"column":54}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":3078,"end":3079,"loc":{"start":{"line":73,"column":54},"end":{"line":73,"column":55}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3079,"end":3080,"loc":{"start":{"line":73,"column":55},"end":{"line":73,"column":56}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"-","start":3081,"end":3082,"loc":{"start":{"line":73,"column":57},"end":{"line":73,"column":58}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":3083,"end":3084,"loc":{"start":{"line":73,"column":59},"end":{"line":73,"column":60}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3085,"end":3086,"loc":{"start":{"line":73,"column":61},"end":{"line":73,"column":62}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3087,"end":3088,"loc":{"start":{"line":73,"column":63},"end":{"line":73,"column":64}}},{"type":"CommentBlock","value":"* @ignore ","start":3091,"end":3105,"loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":16}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3108,"end":3112,"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3112,"end":3113,"loc":{"start":{"line":75,"column":6},"end":{"line":75,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Y_MASK","start":3113,"end":3119,"loc":{"start":{"line":75,"column":7},"end":{"line":75,"column":13}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":3120,"end":3121,"loc":{"start":{"line":75,"column":14},"end":{"line":75,"column":15}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3122,"end":3123,"loc":{"start":{"line":75,"column":16},"end":{"line":75,"column":17}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":3123,"end":3124,"loc":{"start":{"line":75,"column":17},"end":{"line":75,"column":18}}},{"type":{"label":"<</>>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":8,"updateContext":null},"value":"<<","start":3125,"end":3127,"loc":{"start":{"line":75,"column":19},"end":{"line":75,"column":21}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3128,"end":3132,"loc":{"start":{"line":75,"column":22},"end":{"line":75,"column":26}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3132,"end":3133,"loc":{"start":{"line":75,"column":26},"end":{"line":75,"column":27}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Y_BITS","start":3133,"end":3139,"loc":{"start":{"line":75,"column":27},"end":{"line":75,"column":33}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3139,"end":3140,"loc":{"start":{"line":75,"column":33},"end":{"line":75,"column":34}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"-","start":3140,"end":3141,"loc":{"start":{"line":75,"column":34},"end":{"line":75,"column":35}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":3141,"end":3142,"loc":{"start":{"line":75,"column":35},"end":{"line":75,"column":36}}},{"type":"CommentBlock","value":"* Array coordinates to the middle pixel on the grid.\n\t\t * @type {ArrayCoordinate}\n\t\t * ","start":3148,"end":3239,"loc":{"start":{"line":77,"column":2},"end":{"line":79,"column":7}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3242,"end":3246,"loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3246,"end":3247,"loc":{"start":{"line":80,"column":6},"end":{"line":80,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"midpoint","start":3247,"end":3255,"loc":{"start":{"line":80,"column":7},"end":{"line":80,"column":15}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":3256,"end":3257,"loc":{"start":{"line":80,"column":16},"end":{"line":80,"column":17}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3258,"end":3262,"loc":{"start":{"line":80,"column":18},"end":{"line":80,"column":22}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3262,"end":3263,"loc":{"start":{"line":80,"column":22},"end":{"line":80,"column":23}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"extents","start":3263,"end":3270,"loc":{"start":{"line":80,"column":23},"end":{"line":80,"column":30}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3270,"end":3271,"loc":{"start":{"line":80,"column":30},"end":{"line":80,"column":31}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"map","start":3271,"end":3274,"loc":{"start":{"line":80,"column":31},"end":{"line":80,"column":34}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3274,"end":3275,"loc":{"start":{"line":80,"column":34},"end":{"line":80,"column":35}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":3276,"end":3277,"loc":{"start":{"line":80,"column":36},"end":{"line":80,"column":37}}},{"type":{"label":"=>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3278,"end":3280,"loc":{"start":{"line":80,"column":38},"end":{"line":80,"column":40}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Math","start":3281,"end":3285,"loc":{"start":{"line":80,"column":41},"end":{"line":80,"column":45}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3285,"end":3286,"loc":{"start":{"line":80,"column":45},"end":{"line":80,"column":46}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"round","start":3286,"end":3291,"loc":{"start":{"line":80,"column":46},"end":{"line":80,"column":51}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3291,"end":3292,"loc":{"start":{"line":80,"column":51},"end":{"line":80,"column":52}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3292,"end":3293,"loc":{"start":{"line":80,"column":52},"end":{"line":80,"column":53}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":3293,"end":3294,"loc":{"start":{"line":80,"column":53},"end":{"line":80,"column":54}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"-","start":3294,"end":3295,"loc":{"start":{"line":80,"column":54},"end":{"line":80,"column":55}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":1,"start":3295,"end":3296,"loc":{"start":{"line":80,"column":55},"end":{"line":80,"column":56}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3296,"end":3297,"loc":{"start":{"line":80,"column":56},"end":{"line":80,"column":57}}},{"type":{"label":"/","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":10,"updateContext":null},"value":"/","start":3297,"end":3298,"loc":{"start":{"line":80,"column":57},"end":{"line":80,"column":58}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":2,"start":3298,"end":3299,"loc":{"start":{"line":80,"column":58},"end":{"line":80,"column":59}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3299,"end":3300,"loc":{"start":{"line":80,"column":59},"end":{"line":80,"column":60}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3301,"end":3302,"loc":{"start":{"line":80,"column":61},"end":{"line":80,"column":62}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3304,"end":3305,"loc":{"start":{"line":81,"column":1},"end":{"line":81,"column":2}}},{"type":"CommentBlock","value":"*\n\t * Return the array this._pixelArray, which should be set in the grid\n\t * subclass.\n\t * @returns {Uint16Array|Float32Array}\n\t * @private\n\t ","start":3308,"end":3454,"loc":{"start":{"line":83,"column":1},"end":{"line":88,"column":4}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"get","start":3456,"end":3459,"loc":{"start":{"line":89,"column":1},"end":{"line":89,"column":4}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":3460,"end":3467,"loc":{"start":{"line":89,"column":5},"end":{"line":89,"column":12}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3467,"end":3468,"loc":{"start":{"line":89,"column":12},"end":{"line":89,"column":13}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3468,"end":3469,"loc":{"start":{"line":89,"column":13},"end":{"line":89,"column":14}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3469,"end":3470,"loc":{"start":{"line":89,"column":14},"end":{"line":89,"column":15}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":3473,"end":3475,"loc":{"start":{"line":90,"column":2},"end":{"line":90,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3476,"end":3477,"loc":{"start":{"line":90,"column":5},"end":{"line":90,"column":6}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3478,"end":3482,"loc":{"start":{"line":90,"column":7},"end":{"line":90,"column":11}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3482,"end":3483,"loc":{"start":{"line":90,"column":11},"end":{"line":90,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelArray","start":3483,"end":3494,"loc":{"start":{"line":90,"column":12},"end":{"line":90,"column":23}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"!==","start":3495,"end":3498,"loc":{"start":{"line":90,"column":24},"end":{"line":90,"column":27}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"undefined","start":3499,"end":3508,"loc":{"start":{"line":90,"column":28},"end":{"line":90,"column":37}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3509,"end":3510,"loc":{"start":{"line":90,"column":38},"end":{"line":90,"column":39}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3510,"end":3511,"loc":{"start":{"line":90,"column":39},"end":{"line":90,"column":40}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":3515,"end":3521,"loc":{"start":{"line":91,"column":3},"end":{"line":91,"column":9}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3522,"end":3526,"loc":{"start":{"line":91,"column":10},"end":{"line":91,"column":14}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3526,"end":3527,"loc":{"start":{"line":91,"column":14},"end":{"line":91,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelArray","start":3527,"end":3538,"loc":{"start":{"line":91,"column":15},"end":{"line":91,"column":26}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3541,"end":3542,"loc":{"start":{"line":92,"column":2},"end":{"line":92,"column":3}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":3545,"end":3550,"loc":{"start":{"line":93,"column":2},"end":{"line":93,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3550,"end":3551,"loc":{"start":{"line":93,"column":7},"end":{"line":93,"column":8}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"A private array this._pixelArray needs to be generated in every ","start":3551,"end":3617,"loc":{"start":{"line":93,"column":8},"end":{"line":93,"column":74}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":3618,"end":3619,"loc":{"start":{"line":93,"column":75},"end":{"line":93,"column":76}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":" Grid subclass! See its documentation for details.","start":3623,"end":3675,"loc":{"start":{"line":94,"column":3},"end":{"line":94,"column":55}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3675,"end":3676,"loc":{"start":{"line":94,"column":55},"end":{"line":94,"column":56}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3678,"end":3679,"loc":{"start":{"line":95,"column":1},"end":{"line":95,"column":2}}},{"type":"CommentBlock","value":"*\n\t * Set or update the private this._pixelArray.\n\t * @param {Uint16Array|Float32Array} pixels - array of pixels to set.\n\t * @private\n\t ","start":3682,"end":3822,"loc":{"start":{"line":97,"column":1},"end":{"line":101,"column":4}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"set","start":3824,"end":3827,"loc":{"start":{"line":102,"column":1},"end":{"line":102,"column":4}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":3828,"end":3835,"loc":{"start":{"line":102,"column":5},"end":{"line":102,"column":12}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3835,"end":3836,"loc":{"start":{"line":102,"column":12},"end":{"line":102,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixels","start":3837,"end":3843,"loc":{"start":{"line":102,"column":14},"end":{"line":102,"column":20}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3844,"end":3845,"loc":{"start":{"line":102,"column":21},"end":{"line":102,"column":22}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3845,"end":3846,"loc":{"start":{"line":102,"column":22},"end":{"line":102,"column":23}}},{"type":"CommentLine","value":"noinspection JSValidateTypes","start":3849,"end":3879,"loc":{"start":{"line":103,"column":2},"end":{"line":103,"column":32}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":3882,"end":3886,"loc":{"start":{"line":104,"column":2},"end":{"line":104,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":3886,"end":3887,"loc":{"start":{"line":104,"column":6},"end":{"line":104,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelArray","start":3887,"end":3898,"loc":{"start":{"line":104,"column":7},"end":{"line":104,"column":18}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":3899,"end":3900,"loc":{"start":{"line":104,"column":19},"end":{"line":104,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixels","start":3901,"end":3907,"loc":{"start":{"line":104,"column":21},"end":{"line":104,"column":27}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":3909,"end":3910,"loc":{"start":{"line":105,"column":1},"end":{"line":105,"column":2}}},{"type":"CommentBlock","value":"* Method to check if a given {@link ArrayCoordinate} falls within the\n\t * bounds of this grid. Returns an error if this is not the case.\n\t * @param {ArrayCoordinate} p - the coordinate to check.\n\t ","start":3913,"end":4114,"loc":{"start":{"line":107,"column":1},"end":{"line":110,"column":4}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"checkOnGrid","start":4116,"end":4127,"loc":{"start":{"line":111,"column":1},"end":{"line":111,"column":12}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4127,"end":4128,"loc":{"start":{"line":111,"column":12},"end":{"line":111,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":4129,"end":4130,"loc":{"start":{"line":111,"column":14},"end":{"line":111,"column":15}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4131,"end":4132,"loc":{"start":{"line":111,"column":16},"end":{"line":111,"column":17}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4132,"end":4133,"loc":{"start":{"line":111,"column":17},"end":{"line":111,"column":18}}},{"type":{"label":"for","keyword":"for","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":true,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"for","start":4136,"end":4139,"loc":{"start":{"line":112,"column":2},"end":{"line":112,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4139,"end":4140,"loc":{"start":{"line":112,"column":5},"end":{"line":112,"column":6}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":4141,"end":4144,"loc":{"start":{"line":112,"column":7},"end":{"line":112,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":4145,"end":4146,"loc":{"start":{"line":112,"column":11},"end":{"line":112,"column":12}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":4147,"end":4148,"loc":{"start":{"line":112,"column":13},"end":{"line":112,"column":14}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":4149,"end":4150,"loc":{"start":{"line":112,"column":15},"end":{"line":112,"column":16}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4150,"end":4151,"loc":{"start":{"line":112,"column":16},"end":{"line":112,"column":17}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":4152,"end":4153,"loc":{"start":{"line":112,"column":18},"end":{"line":112,"column":19}}},{"type":{"label":"</>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"<","start":4154,"end":4155,"loc":{"start":{"line":112,"column":20},"end":{"line":112,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":4156,"end":4157,"loc":{"start":{"line":112,"column":22},"end":{"line":112,"column":23}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4157,"end":4158,"loc":{"start":{"line":112,"column":23},"end":{"line":112,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":4158,"end":4164,"loc":{"start":{"line":112,"column":24},"end":{"line":112,"column":30}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4164,"end":4165,"loc":{"start":{"line":112,"column":30},"end":{"line":112,"column":31}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":4166,"end":4167,"loc":{"start":{"line":112,"column":32},"end":{"line":112,"column":33}}},{"type":{"label":"++/--","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":true,"binop":null},"value":"++","start":4167,"end":4169,"loc":{"start":{"line":112,"column":33},"end":{"line":112,"column":35}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4170,"end":4171,"loc":{"start":{"line":112,"column":36},"end":{"line":112,"column":37}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4171,"end":4172,"loc":{"start":{"line":112,"column":37},"end":{"line":112,"column":38}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":4176,"end":4178,"loc":{"start":{"line":113,"column":3},"end":{"line":113,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4178,"end":4179,"loc":{"start":{"line":113,"column":5},"end":{"line":113,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":4180,"end":4181,"loc":{"start":{"line":113,"column":7},"end":{"line":113,"column":8}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4181,"end":4182,"loc":{"start":{"line":113,"column":8},"end":{"line":113,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":4182,"end":4183,"loc":{"start":{"line":113,"column":9},"end":{"line":113,"column":10}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4183,"end":4184,"loc":{"start":{"line":113,"column":10},"end":{"line":113,"column":11}}},{"type":{"label":"</>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"<","start":4185,"end":4186,"loc":{"start":{"line":113,"column":12},"end":{"line":113,"column":13}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":4187,"end":4188,"loc":{"start":{"line":113,"column":14},"end":{"line":113,"column":15}}},{"type":{"label":"||","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":1,"updateContext":null},"value":"||","start":4189,"end":4191,"loc":{"start":{"line":113,"column":16},"end":{"line":113,"column":18}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":4192,"end":4193,"loc":{"start":{"line":113,"column":19},"end":{"line":113,"column":20}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4193,"end":4194,"loc":{"start":{"line":113,"column":20},"end":{"line":113,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":4194,"end":4195,"loc":{"start":{"line":113,"column":21},"end":{"line":113,"column":22}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4195,"end":4196,"loc":{"start":{"line":113,"column":22},"end":{"line":113,"column":23}}},{"type":{"label":"</>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":">=","start":4197,"end":4199,"loc":{"start":{"line":113,"column":24},"end":{"line":113,"column":26}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":4200,"end":4204,"loc":{"start":{"line":113,"column":27},"end":{"line":113,"column":31}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4204,"end":4205,"loc":{"start":{"line":113,"column":31},"end":{"line":113,"column":32}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"extents","start":4205,"end":4212,"loc":{"start":{"line":113,"column":32},"end":{"line":113,"column":39}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4212,"end":4213,"loc":{"start":{"line":113,"column":39},"end":{"line":113,"column":40}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":4213,"end":4214,"loc":{"start":{"line":113,"column":40},"end":{"line":113,"column":41}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":4214,"end":4215,"loc":{"start":{"line":113,"column":41},"end":{"line":113,"column":42}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4216,"end":4217,"loc":{"start":{"line":113,"column":43},"end":{"line":113,"column":44}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4217,"end":4218,"loc":{"start":{"line":113,"column":44},"end":{"line":113,"column":45}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":4223,"end":4228,"loc":{"start":{"line":114,"column":4},"end":{"line":114,"column":9}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4228,"end":4229,"loc":{"start":{"line":114,"column":9},"end":{"line":114,"column":10}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"You are trying to access a coordinate that does not seem","start":4229,"end":4287,"loc":{"start":{"line":114,"column":10},"end":{"line":114,"column":68}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":4288,"end":4289,"loc":{"start":{"line":114,"column":69},"end":{"line":114,"column":70}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"to lie on the grid! I am expecting values between 0 and ","start":4295,"end":4353,"loc":{"start":{"line":115,"column":5},"end":{"line":115,"column":63}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":4354,"end":4355,"loc":{"start":{"line":115,"column":64},"end":{"line":115,"column":65}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"the grid dimension specified in field_size. (If this is your","start":4361,"end":4423,"loc":{"start":{"line":116,"column":5},"end":{"line":116,"column":67}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":4424,"end":4425,"loc":{"start":{"line":116,"column":68},"end":{"line":116,"column":69}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"own grid implementation and this assumption is not valid,","start":4431,"end":4490,"loc":{"start":{"line":117,"column":5},"end":{"line":117,"column":64}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":4491,"end":4492,"loc":{"start":{"line":117,"column":65},"end":{"line":117,"column":66}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"please overwrite the liesOnGrid() function in your own","start":4498,"end":4554,"loc":{"start":{"line":118,"column":5},"end":{"line":118,"column":61}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":4555,"end":4556,"loc":{"start":{"line":118,"column":62},"end":{"line":118,"column":63}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"grid class).","start":4562,"end":4576,"loc":{"start":{"line":119,"column":5},"end":{"line":119,"column":19}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4576,"end":4577,"loc":{"start":{"line":119,"column":19},"end":{"line":119,"column":20}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4581,"end":4582,"loc":{"start":{"line":120,"column":3},"end":{"line":120,"column":4}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4585,"end":4586,"loc":{"start":{"line":121,"column":2},"end":{"line":121,"column":3}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":4588,"end":4589,"loc":{"start":{"line":122,"column":1},"end":{"line":122,"column":2}}},{"type":"CommentBlock","value":"* Method to correct an {@link ArrayCoordinate} outside the grid dimensions when\n\t * the grid is wrapped (torus = true). If the coordinate falls inside the grid,\n\t * it is returned unchanged. If it falls outside the grid and the grid is periodic\n\t * in that dimension, a corrected coordinate is returned. If the pixel falls outside\n\t * the grid which is not periodic in that dimension, the function returns\n\t * 'undefined'.\n\t * @param {ArrayCoordinate} p - the coordinate of the pixel to correct\n\t * @return {ArrayCoordinate} the corrected coordinate.\n\t ","start":4595,"end":5152,"loc":{"start":{"line":125,"column":1},"end":{"line":133,"column":4}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"correctPosition","start":5154,"end":5169,"loc":{"start":{"line":134,"column":1},"end":{"line":134,"column":16}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5169,"end":5170,"loc":{"start":{"line":134,"column":16},"end":{"line":134,"column":17}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":5171,"end":5172,"loc":{"start":{"line":134,"column":18},"end":{"line":134,"column":19}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5173,"end":5174,"loc":{"start":{"line":134,"column":20},"end":{"line":134,"column":21}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5174,"end":5175,"loc":{"start":{"line":134,"column":21},"end":{"line":134,"column":22}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":5180,"end":5183,"loc":{"start":{"line":136,"column":2},"end":{"line":136,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pnew","start":5184,"end":5188,"loc":{"start":{"line":136,"column":6},"end":{"line":136,"column":10}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":5189,"end":5190,"loc":{"start":{"line":136,"column":11},"end":{"line":136,"column":12}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5191,"end":5192,"loc":{"start":{"line":136,"column":13},"end":{"line":136,"column":14}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5192,"end":5193,"loc":{"start":{"line":136,"column":14},"end":{"line":136,"column":15}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":5196,"end":5199,"loc":{"start":{"line":137,"column":2},"end":{"line":137,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"ignore","start":5200,"end":5206,"loc":{"start":{"line":137,"column":6},"end":{"line":137,"column":12}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":5207,"end":5208,"loc":{"start":{"line":137,"column":13},"end":{"line":137,"column":14}}},{"type":{"label":"false","keyword":"false","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"false","start":5209,"end":5214,"loc":{"start":{"line":137,"column":15},"end":{"line":137,"column":20}}},{"type":"CommentLine","value":" ignore pixels that fall off the grid when non-periodic grid","start":5215,"end":5277,"loc":{"start":{"line":137,"column":21},"end":{"line":137,"column":83}}},{"type":"CommentLine","value":" Loop over the x, y, (z) dimensions","start":5282,"end":5319,"loc":{"start":{"line":139,"column":2},"end":{"line":139,"column":39}}},{"type":{"label":"for","keyword":"for","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":true,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"for","start":5322,"end":5325,"loc":{"start":{"line":140,"column":2},"end":{"line":140,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5325,"end":5326,"loc":{"start":{"line":140,"column":5},"end":{"line":140,"column":6}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":5327,"end":5330,"loc":{"start":{"line":140,"column":7},"end":{"line":140,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":5331,"end":5332,"loc":{"start":{"line":140,"column":11},"end":{"line":140,"column":12}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":5333,"end":5334,"loc":{"start":{"line":140,"column":13},"end":{"line":140,"column":14}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":5335,"end":5336,"loc":{"start":{"line":140,"column":15},"end":{"line":140,"column":16}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5336,"end":5337,"loc":{"start":{"line":140,"column":16},"end":{"line":140,"column":17}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":5338,"end":5339,"loc":{"start":{"line":140,"column":18},"end":{"line":140,"column":19}}},{"type":{"label":"</>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"<","start":5340,"end":5341,"loc":{"start":{"line":140,"column":20},"end":{"line":140,"column":21}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":5342,"end":5346,"loc":{"start":{"line":140,"column":22},"end":{"line":140,"column":26}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5346,"end":5347,"loc":{"start":{"line":140,"column":26},"end":{"line":140,"column":27}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"ndim","start":5347,"end":5351,"loc":{"start":{"line":140,"column":27},"end":{"line":140,"column":31}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5351,"end":5352,"loc":{"start":{"line":140,"column":31},"end":{"line":140,"column":32}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":5353,"end":5354,"loc":{"start":{"line":140,"column":33},"end":{"line":140,"column":34}}},{"type":{"label":"++/--","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":true,"binop":null},"value":"++","start":5354,"end":5356,"loc":{"start":{"line":140,"column":34},"end":{"line":140,"column":36}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5357,"end":5358,"loc":{"start":{"line":140,"column":37},"end":{"line":140,"column":38}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5358,"end":5359,"loc":{"start":{"line":140,"column":38},"end":{"line":140,"column":39}}},{"type":"CommentLine","value":" If position is outside the grid dimensions, action depends on whether","start":5365,"end":5437,"loc":{"start":{"line":142,"column":3},"end":{"line":142,"column":75}}},{"type":"CommentLine","value":" grid is periodic or not (torus)","start":5441,"end":5475,"loc":{"start":{"line":143,"column":3},"end":{"line":143,"column":37}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":5479,"end":5481,"loc":{"start":{"line":144,"column":3},"end":{"line":144,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5481,"end":5482,"loc":{"start":{"line":144,"column":5},"end":{"line":144,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":5483,"end":5484,"loc":{"start":{"line":144,"column":7},"end":{"line":144,"column":8}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5484,"end":5485,"loc":{"start":{"line":144,"column":8},"end":{"line":144,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":5485,"end":5486,"loc":{"start":{"line":144,"column":9},"end":{"line":144,"column":10}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5486,"end":5487,"loc":{"start":{"line":144,"column":10},"end":{"line":144,"column":11}}},{"type":{"label":"</>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"<","start":5488,"end":5489,"loc":{"start":{"line":144,"column":12},"end":{"line":144,"column":13}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":5490,"end":5491,"loc":{"start":{"line":144,"column":14},"end":{"line":144,"column":15}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5492,"end":5493,"loc":{"start":{"line":144,"column":16},"end":{"line":144,"column":17}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5493,"end":5494,"loc":{"start":{"line":144,"column":17},"end":{"line":144,"column":18}}},{"type":"CommentLine","value":" If there is a torus in this dimension, correct the position and return.","start":5499,"end":5573,"loc":{"start":{"line":145,"column":4},"end":{"line":145,"column":78}}},{"type":"CommentLine","value":" otherwise just ignore it.","start":5578,"end":5606,"loc":{"start":{"line":146,"column":4},"end":{"line":146,"column":32}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":5611,"end":5613,"loc":{"start":{"line":147,"column":4},"end":{"line":147,"column":6}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5613,"end":5614,"loc":{"start":{"line":147,"column":6},"end":{"line":147,"column":7}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":5615,"end":5619,"loc":{"start":{"line":147,"column":8},"end":{"line":147,"column":12}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5619,"end":5620,"loc":{"start":{"line":147,"column":12},"end":{"line":147,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":5620,"end":5625,"loc":{"start":{"line":147,"column":13},"end":{"line":147,"column":18}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5625,"end":5626,"loc":{"start":{"line":147,"column":18},"end":{"line":147,"column":19}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":5626,"end":5627,"loc":{"start":{"line":147,"column":19},"end":{"line":147,"column":20}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5627,"end":5628,"loc":{"start":{"line":147,"column":20},"end":{"line":147,"column":21}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5629,"end":5630,"loc":{"start":{"line":147,"column":22},"end":{"line":147,"column":23}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5630,"end":5631,"loc":{"start":{"line":147,"column":23},"end":{"line":147,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pnew","start":5637,"end":5641,"loc":{"start":{"line":148,"column":5},"end":{"line":148,"column":9}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5641,"end":5642,"loc":{"start":{"line":148,"column":9},"end":{"line":148,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"push","start":5642,"end":5646,"loc":{"start":{"line":148,"column":10},"end":{"line":148,"column":14}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5646,"end":5647,"loc":{"start":{"line":148,"column":14},"end":{"line":148,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":5648,"end":5649,"loc":{"start":{"line":148,"column":16},"end":{"line":148,"column":17}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5649,"end":5650,"loc":{"start":{"line":148,"column":17},"end":{"line":148,"column":18}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":5650,"end":5651,"loc":{"start":{"line":148,"column":18},"end":{"line":148,"column":19}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5651,"end":5652,"loc":{"start":{"line":148,"column":19},"end":{"line":148,"column":20}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":5653,"end":5654,"loc":{"start":{"line":148,"column":21},"end":{"line":148,"column":22}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":5655,"end":5659,"loc":{"start":{"line":148,"column":23},"end":{"line":148,"column":27}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5659,"end":5660,"loc":{"start":{"line":148,"column":27},"end":{"line":148,"column":28}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"extents","start":5660,"end":5667,"loc":{"start":{"line":148,"column":28},"end":{"line":148,"column":35}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5667,"end":5668,"loc":{"start":{"line":148,"column":35},"end":{"line":148,"column":36}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":5668,"end":5669,"loc":{"start":{"line":148,"column":36},"end":{"line":148,"column":37}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5669,"end":5670,"loc":{"start":{"line":148,"column":37},"end":{"line":148,"column":38}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5671,"end":5672,"loc":{"start":{"line":148,"column":39},"end":{"line":148,"column":40}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5677,"end":5678,"loc":{"start":{"line":149,"column":4},"end":{"line":149,"column":5}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":5679,"end":5683,"loc":{"start":{"line":149,"column":6},"end":{"line":149,"column":10}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5684,"end":5685,"loc":{"start":{"line":149,"column":11},"end":{"line":149,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"ignore","start":5691,"end":5697,"loc":{"start":{"line":150,"column":5},"end":{"line":150,"column":11}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":5698,"end":5699,"loc":{"start":{"line":150,"column":12},"end":{"line":150,"column":13}}},{"type":{"label":"true","keyword":"true","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"true","start":5700,"end":5704,"loc":{"start":{"line":150,"column":14},"end":{"line":150,"column":18}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5709,"end":5710,"loc":{"start":{"line":151,"column":4},"end":{"line":151,"column":5}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5714,"end":5715,"loc":{"start":{"line":152,"column":3},"end":{"line":152,"column":4}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":5716,"end":5720,"loc":{"start":{"line":152,"column":5},"end":{"line":152,"column":9}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":5721,"end":5723,"loc":{"start":{"line":152,"column":10},"end":{"line":152,"column":12}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5724,"end":5725,"loc":{"start":{"line":152,"column":13},"end":{"line":152,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":5726,"end":5727,"loc":{"start":{"line":152,"column":15},"end":{"line":152,"column":16}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5727,"end":5728,"loc":{"start":{"line":152,"column":16},"end":{"line":152,"column":17}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":5728,"end":5729,"loc":{"start":{"line":152,"column":17},"end":{"line":152,"column":18}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5729,"end":5730,"loc":{"start":{"line":152,"column":18},"end":{"line":152,"column":19}}},{"type":{"label":"</>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":">=","start":5731,"end":5733,"loc":{"start":{"line":152,"column":20},"end":{"line":152,"column":22}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":5734,"end":5738,"loc":{"start":{"line":152,"column":23},"end":{"line":152,"column":27}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5738,"end":5739,"loc":{"start":{"line":152,"column":27},"end":{"line":152,"column":28}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"extents","start":5739,"end":5746,"loc":{"start":{"line":152,"column":28},"end":{"line":152,"column":35}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5746,"end":5747,"loc":{"start":{"line":152,"column":35},"end":{"line":152,"column":36}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":5747,"end":5748,"loc":{"start":{"line":152,"column":36},"end":{"line":152,"column":37}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5748,"end":5749,"loc":{"start":{"line":152,"column":37},"end":{"line":152,"column":38}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5750,"end":5751,"loc":{"start":{"line":152,"column":39},"end":{"line":152,"column":40}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5751,"end":5752,"loc":{"start":{"line":152,"column":40},"end":{"line":152,"column":41}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":5757,"end":5759,"loc":{"start":{"line":153,"column":4},"end":{"line":153,"column":6}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5759,"end":5760,"loc":{"start":{"line":153,"column":6},"end":{"line":153,"column":7}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":5761,"end":5765,"loc":{"start":{"line":153,"column":8},"end":{"line":153,"column":12}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5765,"end":5766,"loc":{"start":{"line":153,"column":12},"end":{"line":153,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":5766,"end":5771,"loc":{"start":{"line":153,"column":13},"end":{"line":153,"column":18}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5771,"end":5772,"loc":{"start":{"line":153,"column":18},"end":{"line":153,"column":19}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":5772,"end":5773,"loc":{"start":{"line":153,"column":19},"end":{"line":153,"column":20}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5773,"end":5774,"loc":{"start":{"line":153,"column":20},"end":{"line":153,"column":21}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5775,"end":5776,"loc":{"start":{"line":153,"column":22},"end":{"line":153,"column":23}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5776,"end":5777,"loc":{"start":{"line":153,"column":23},"end":{"line":153,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pnew","start":5783,"end":5787,"loc":{"start":{"line":154,"column":5},"end":{"line":154,"column":9}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5787,"end":5788,"loc":{"start":{"line":154,"column":9},"end":{"line":154,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"push","start":5788,"end":5792,"loc":{"start":{"line":154,"column":10},"end":{"line":154,"column":14}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5792,"end":5793,"loc":{"start":{"line":154,"column":14},"end":{"line":154,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":5794,"end":5795,"loc":{"start":{"line":154,"column":16},"end":{"line":154,"column":17}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5795,"end":5796,"loc":{"start":{"line":154,"column":17},"end":{"line":154,"column":18}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":5796,"end":5797,"loc":{"start":{"line":154,"column":18},"end":{"line":154,"column":19}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5797,"end":5798,"loc":{"start":{"line":154,"column":19},"end":{"line":154,"column":20}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"-","start":5799,"end":5800,"loc":{"start":{"line":154,"column":21},"end":{"line":154,"column":22}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":5801,"end":5805,"loc":{"start":{"line":154,"column":23},"end":{"line":154,"column":27}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5805,"end":5806,"loc":{"start":{"line":154,"column":27},"end":{"line":154,"column":28}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"extents","start":5806,"end":5813,"loc":{"start":{"line":154,"column":28},"end":{"line":154,"column":35}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5813,"end":5814,"loc":{"start":{"line":154,"column":35},"end":{"line":154,"column":36}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":5814,"end":5815,"loc":{"start":{"line":154,"column":36},"end":{"line":154,"column":37}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5815,"end":5816,"loc":{"start":{"line":154,"column":37},"end":{"line":154,"column":38}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5817,"end":5818,"loc":{"start":{"line":154,"column":39},"end":{"line":154,"column":40}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5823,"end":5824,"loc":{"start":{"line":155,"column":4},"end":{"line":155,"column":5}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":5825,"end":5829,"loc":{"start":{"line":155,"column":6},"end":{"line":155,"column":10}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5830,"end":5831,"loc":{"start":{"line":155,"column":11},"end":{"line":155,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"ignore","start":5837,"end":5843,"loc":{"start":{"line":156,"column":5},"end":{"line":156,"column":11}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":5844,"end":5845,"loc":{"start":{"line":156,"column":12},"end":{"line":156,"column":13}}},{"type":{"label":"true","keyword":"true","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"true","start":5846,"end":5850,"loc":{"start":{"line":156,"column":14},"end":{"line":156,"column":18}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5855,"end":5856,"loc":{"start":{"line":157,"column":4},"end":{"line":157,"column":5}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5860,"end":5861,"loc":{"start":{"line":158,"column":3},"end":{"line":158,"column":4}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":5862,"end":5866,"loc":{"start":{"line":158,"column":5},"end":{"line":158,"column":9}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5867,"end":5868,"loc":{"start":{"line":158,"column":10},"end":{"line":158,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pnew","start":5873,"end":5877,"loc":{"start":{"line":159,"column":4},"end":{"line":159,"column":8}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5877,"end":5878,"loc":{"start":{"line":159,"column":8},"end":{"line":159,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"push","start":5878,"end":5882,"loc":{"start":{"line":159,"column":9},"end":{"line":159,"column":13}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5882,"end":5883,"loc":{"start":{"line":159,"column":13},"end":{"line":159,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":5884,"end":5885,"loc":{"start":{"line":159,"column":15},"end":{"line":159,"column":16}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5885,"end":5886,"loc":{"start":{"line":159,"column":16},"end":{"line":159,"column":17}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"d","start":5886,"end":5887,"loc":{"start":{"line":159,"column":17},"end":{"line":159,"column":18}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":5887,"end":5888,"loc":{"start":{"line":159,"column":18},"end":{"line":159,"column":19}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5889,"end":5890,"loc":{"start":{"line":159,"column":20},"end":{"line":159,"column":21}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5894,"end":5895,"loc":{"start":{"line":160,"column":3},"end":{"line":160,"column":4}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5898,"end":5899,"loc":{"start":{"line":161,"column":2},"end":{"line":161,"column":3}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":5904,"end":5906,"loc":{"start":{"line":163,"column":2},"end":{"line":163,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5906,"end":5907,"loc":{"start":{"line":163,"column":4},"end":{"line":163,"column":5}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":5908,"end":5909,"loc":{"start":{"line":163,"column":6},"end":{"line":163,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"ignore","start":5909,"end":5915,"loc":{"start":{"line":163,"column":7},"end":{"line":163,"column":13}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5916,"end":5917,"loc":{"start":{"line":163,"column":14},"end":{"line":163,"column":15}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5917,"end":5918,"loc":{"start":{"line":163,"column":15},"end":{"line":163,"column":16}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":5923,"end":5929,"loc":{"start":{"line":164,"column":3},"end":{"line":164,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pnew","start":5930,"end":5934,"loc":{"start":{"line":164,"column":10},"end":{"line":164,"column":14}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5937,"end":5938,"loc":{"start":{"line":165,"column":2},"end":{"line":165,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":5939,"end":5943,"loc":{"start":{"line":165,"column":4},"end":{"line":165,"column":8}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5944,"end":5945,"loc":{"start":{"line":165,"column":9},"end":{"line":165,"column":10}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":5949,"end":5955,"loc":{"start":{"line":166,"column":3},"end":{"line":166,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"undefined","start":5956,"end":5965,"loc":{"start":{"line":166,"column":10},"end":{"line":166,"column":19}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5968,"end":5969,"loc":{"start":{"line":167,"column":2},"end":{"line":167,"column":3}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":5973,"end":5974,"loc":{"start":{"line":169,"column":1},"end":{"line":169,"column":2}}},{"type":"CommentBlock","value":"* Method for conversion from an {@link ArrayCoordinate} to an\n\t * {@link IndexCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#p2i} for an example.\n\t * @abstract\n\t * @param {ArrayCoordinate} p - the coordinate of the pixel to convert\n\t * @return {IndexCoordinate} the converted coordinate.\n\t ","start":5977,"end":6314,"loc":{"start":{"line":171,"column":1},"end":{"line":178,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":6316,"end":6357,"loc":{"start":{"line":179,"column":1},"end":{"line":179,"column":42}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p2i","start":6359,"end":6362,"loc":{"start":{"line":180,"column":1},"end":{"line":180,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6363,"end":6364,"loc":{"start":{"line":180,"column":5},"end":{"line":180,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":6365,"end":6366,"loc":{"start":{"line":180,"column":7},"end":{"line":180,"column":8}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6367,"end":6368,"loc":{"start":{"line":180,"column":9},"end":{"line":180,"column":10}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6368,"end":6369,"loc":{"start":{"line":180,"column":10},"end":{"line":180,"column":11}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":6372,"end":6377,"loc":{"start":{"line":181,"column":2},"end":{"line":181,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6377,"end":6378,"loc":{"start":{"line":181,"column":7},"end":{"line":181,"column":8}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"A p2i method should be implemented in every Grid subclass!","start":6379,"end":6439,"loc":{"start":{"line":181,"column":9},"end":{"line":181,"column":69}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6439,"end":6440,"loc":{"start":{"line":181,"column":69},"end":{"line":181,"column":70}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6442,"end":6443,"loc":{"start":{"line":182,"column":1},"end":{"line":182,"column":2}}},{"type":"CommentBlock","value":"* Method for conversion from an {@link IndexCoordinate} to an\n\t * {@link ArrayCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#i2p} for an example.\n\t * @abstract\n\t * @param {IndexCoordinate} i - the coordinate of the pixel to convert\n\t * @return {ArrayCoordinate} the converted coordinate.\n\t ","start":6446,"end":6783,"loc":{"start":{"line":184,"column":1},"end":{"line":191,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":6785,"end":6826,"loc":{"start":{"line":192,"column":1},"end":{"line":192,"column":42}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i2p","start":6828,"end":6831,"loc":{"start":{"line":193,"column":1},"end":{"line":193,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6832,"end":6833,"loc":{"start":{"line":193,"column":5},"end":{"line":193,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":6834,"end":6835,"loc":{"start":{"line":193,"column":7},"end":{"line":193,"column":8}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6836,"end":6837,"loc":{"start":{"line":193,"column":9},"end":{"line":193,"column":10}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6837,"end":6838,"loc":{"start":{"line":193,"column":10},"end":{"line":193,"column":11}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":6841,"end":6846,"loc":{"start":{"line":194,"column":2},"end":{"line":194,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6846,"end":6847,"loc":{"start":{"line":194,"column":7},"end":{"line":194,"column":8}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"An i2p method should be implemented in every Grid subclass!","start":6848,"end":6909,"loc":{"start":{"line":194,"column":9},"end":{"line":194,"column":70}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6909,"end":6910,"loc":{"start":{"line":194,"column":70},"end":{"line":194,"column":71}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":6912,"end":6913,"loc":{"start":{"line":195,"column":1},"end":{"line":195,"column":2}}},{"type":"CommentBlock","value":"* Method returning the (Moore) neighborhood of a pixel based on its\n\t * {@link IndexCoordinate}.\n\t * This method should be implemented in the subclass, see\n\t * {@link Grid2D#neighi} for an example.\n\t * @abstract\n\t * @param {IndexCoordinate} i - the coordinate of the pixel to get neighbors\n\t * for.\n\t * @param {boolean[]} torus are borders of the grid linked so that a cell\n\t * leaving on the right re-enters the grid on the left?\n\t * @return {IndexCoordinate[]} an array of neighbors.\n\t ","start":6916,"end":7408,"loc":{"start":{"line":197,"column":1},"end":{"line":207,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":7410,"end":7451,"loc":{"start":{"line":208,"column":1},"end":{"line":208,"column":42}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"neighi","start":7453,"end":7459,"loc":{"start":{"line":209,"column":1},"end":{"line":209,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7460,"end":7461,"loc":{"start":{"line":209,"column":8},"end":{"line":209,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":7462,"end":7463,"loc":{"start":{"line":209,"column":10},"end":{"line":209,"column":11}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7463,"end":7464,"loc":{"start":{"line":209,"column":11},"end":{"line":209,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":7465,"end":7470,"loc":{"start":{"line":209,"column":13},"end":{"line":209,"column":18}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":7471,"end":7472,"loc":{"start":{"line":209,"column":19},"end":{"line":209,"column":20}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":7473,"end":7477,"loc":{"start":{"line":209,"column":21},"end":{"line":209,"column":25}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":7477,"end":7478,"loc":{"start":{"line":209,"column":25},"end":{"line":209,"column":26}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":7478,"end":7483,"loc":{"start":{"line":209,"column":26},"end":{"line":209,"column":31}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7484,"end":7485,"loc":{"start":{"line":209,"column":32},"end":{"line":209,"column":33}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7485,"end":7486,"loc":{"start":{"line":209,"column":33},"end":{"line":209,"column":34}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":7489,"end":7494,"loc":{"start":{"line":210,"column":2},"end":{"line":210,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7494,"end":7495,"loc":{"start":{"line":210,"column":7},"end":{"line":210,"column":8}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"A neighi method should be implemented in every Grid subclass!","start":7496,"end":7559,"loc":{"start":{"line":210,"column":9},"end":{"line":210,"column":72}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7559,"end":7560,"loc":{"start":{"line":210,"column":72},"end":{"line":210,"column":73}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":7562,"end":7563,"loc":{"start":{"line":211,"column":1},"end":{"line":211,"column":2}}},{"type":"CommentBlock","value":"* The neigh method returns the neighborhood of a pixel p. This function\n\t * uses array coordinates as input and output arguments, but internally\n\t * calls a method 'neighi' which computes neighborhoods using index-\n\t * coordinates. Since neighborhoods depend on the coordinate system, the\n\t * 'neighi' method is defined in the extension class for that specific\n\t * coordinate system.\n\t * @param {ArrayCoordinate} p array coordinates of a specific pixel\n\t * @param {boolean[]} torus are borders of the grid linked so that a cell\n\t * leaving on the right re-enters the grid on the left?\n\t * @return {ArrayCoordinate[]} an array of neighbors of pixel p, where each\n\t * element contains the array coordinates of the neighbor in question.\n\t * ","start":7566,"end":8308,"loc":{"start":{"line":213,"column":1},"end":{"line":224,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"neigh","start":8310,"end":8315,"loc":{"start":{"line":225,"column":1},"end":{"line":225,"column":6}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8315,"end":8316,"loc":{"start":{"line":225,"column":6},"end":{"line":225,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":8316,"end":8317,"loc":{"start":{"line":225,"column":7},"end":{"line":225,"column":8}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":8317,"end":8318,"loc":{"start":{"line":225,"column":8},"end":{"line":225,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":8319,"end":8324,"loc":{"start":{"line":225,"column":10},"end":{"line":225,"column":15}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":8325,"end":8326,"loc":{"start":{"line":225,"column":16},"end":{"line":225,"column":17}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":8327,"end":8331,"loc":{"start":{"line":225,"column":18},"end":{"line":225,"column":22}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":8331,"end":8332,"loc":{"start":{"line":225,"column":22},"end":{"line":225,"column":23}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":8332,"end":8337,"loc":{"start":{"line":225,"column":23},"end":{"line":225,"column":28}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8337,"end":8338,"loc":{"start":{"line":225,"column":28},"end":{"line":225,"column":29}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8338,"end":8339,"loc":{"start":{"line":225,"column":29},"end":{"line":225,"column":30}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":8342,"end":8345,"loc":{"start":{"line":226,"column":2},"end":{"line":226,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"g","start":8346,"end":8347,"loc":{"start":{"line":226,"column":6},"end":{"line":226,"column":7}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":8348,"end":8349,"loc":{"start":{"line":226,"column":8},"end":{"line":226,"column":9}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":8350,"end":8354,"loc":{"start":{"line":226,"column":10},"end":{"line":226,"column":14}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":8357,"end":8363,"loc":{"start":{"line":227,"column":2},"end":{"line":227,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"g","start":8364,"end":8365,"loc":{"start":{"line":227,"column":9},"end":{"line":227,"column":10}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":8365,"end":8366,"loc":{"start":{"line":227,"column":10},"end":{"line":227,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"neighi","start":8366,"end":8372,"loc":{"start":{"line":227,"column":11},"end":{"line":227,"column":17}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8372,"end":8373,"loc":{"start":{"line":227,"column":17},"end":{"line":227,"column":18}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":8374,"end":8378,"loc":{"start":{"line":227,"column":19},"end":{"line":227,"column":23}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":8378,"end":8379,"loc":{"start":{"line":227,"column":23},"end":{"line":227,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p2i","start":8379,"end":8382,"loc":{"start":{"line":227,"column":24},"end":{"line":227,"column":27}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8382,"end":8383,"loc":{"start":{"line":227,"column":27},"end":{"line":227,"column":28}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":8383,"end":8384,"loc":{"start":{"line":227,"column":28},"end":{"line":227,"column":29}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8384,"end":8385,"loc":{"start":{"line":227,"column":29},"end":{"line":227,"column":30}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":8385,"end":8386,"loc":{"start":{"line":227,"column":30},"end":{"line":227,"column":31}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":8387,"end":8392,"loc":{"start":{"line":227,"column":32},"end":{"line":227,"column":37}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8393,"end":8394,"loc":{"start":{"line":227,"column":38},"end":{"line":227,"column":39}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":8394,"end":8395,"loc":{"start":{"line":227,"column":39},"end":{"line":227,"column":40}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"map","start":8395,"end":8398,"loc":{"start":{"line":227,"column":40},"end":{"line":227,"column":43}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8398,"end":8399,"loc":{"start":{"line":227,"column":43},"end":{"line":227,"column":44}}},{"type":{"label":"function","keyword":"function","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"function","start":8400,"end":8408,"loc":{"start":{"line":227,"column":45},"end":{"line":227,"column":53}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8408,"end":8409,"loc":{"start":{"line":227,"column":53},"end":{"line":227,"column":54}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":8409,"end":8410,"loc":{"start":{"line":227,"column":54},"end":{"line":227,"column":55}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8410,"end":8411,"loc":{"start":{"line":227,"column":55},"end":{"line":227,"column":56}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8411,"end":8412,"loc":{"start":{"line":227,"column":56},"end":{"line":227,"column":57}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":8416,"end":8422,"loc":{"start":{"line":228,"column":3},"end":{"line":228,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"g","start":8423,"end":8424,"loc":{"start":{"line":228,"column":10},"end":{"line":228,"column":11}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":8424,"end":8425,"loc":{"start":{"line":228,"column":11},"end":{"line":228,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i2p","start":8425,"end":8428,"loc":{"start":{"line":228,"column":12},"end":{"line":228,"column":15}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8428,"end":8429,"loc":{"start":{"line":228,"column":15},"end":{"line":228,"column":16}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":8429,"end":8430,"loc":{"start":{"line":228,"column":16},"end":{"line":228,"column":17}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8430,"end":8431,"loc":{"start":{"line":228,"column":17},"end":{"line":228,"column":18}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8434,"end":8435,"loc":{"start":{"line":229,"column":2},"end":{"line":229,"column":3}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8436,"end":8437,"loc":{"start":{"line":229,"column":4},"end":{"line":229,"column":5}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":8439,"end":8440,"loc":{"start":{"line":230,"column":1},"end":{"line":230,"column":2}}},{"type":"CommentBlock","value":"* Check if a value is valid on this type of grid.\n\t * This function forbids trying to set forbidden (negative/float) values\n\t * on an integer grid, which could cause bugs if the setpix(i) methods try\n\t * to set such a value unnoticed.\n\t * @private\n\t * @param {number} t - the value that would be stored on the grid.\n\t * @param {number} [tol=1e-6] - numeric tolerance for comparing a number\n\t * with its rounded version, to check if it is integer (e.g. setting\n\t * a value 1.5 on an integer grid would throw an error, but setting\n\t * 1.000000000001 would not if the tolerance is 1e-6.\n\t * @return {void} - return without problem or throw an error when an\n\t * incorrect value is set.\n\t * ","start":8443,"end":9133,"loc":{"start":{"line":232,"column":1},"end":{"line":244,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_isValidValue","start":9135,"end":9148,"loc":{"start":{"line":245,"column":1},"end":{"line":245,"column":14}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9149,"end":9150,"loc":{"start":{"line":245,"column":15},"end":{"line":245,"column":16}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"t","start":9151,"end":9152,"loc":{"start":{"line":245,"column":17},"end":{"line":245,"column":18}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":9152,"end":9153,"loc":{"start":{"line":245,"column":18},"end":{"line":245,"column":19}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"tol","start":9154,"end":9157,"loc":{"start":{"line":245,"column":20},"end":{"line":245,"column":23}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":9158,"end":9159,"loc":{"start":{"line":245,"column":24},"end":{"line":245,"column":25}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0.000001,"start":9160,"end":9164,"loc":{"start":{"line":245,"column":26},"end":{"line":245,"column":30}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9165,"end":9166,"loc":{"start":{"line":245,"column":31},"end":{"line":245,"column":32}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9167,"end":9168,"loc":{"start":{"line":245,"column":33},"end":{"line":245,"column":34}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":9171,"end":9173,"loc":{"start":{"line":246,"column":2},"end":{"line":246,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9173,"end":9174,"loc":{"start":{"line":246,"column":4},"end":{"line":246,"column":5}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":9175,"end":9179,"loc":{"start":{"line":246,"column":6},"end":{"line":246,"column":10}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":9179,"end":9180,"loc":{"start":{"line":246,"column":10},"end":{"line":246,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"datatype","start":9180,"end":9188,"loc":{"start":{"line":246,"column":11},"end":{"line":246,"column":19}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"===","start":9189,"end":9192,"loc":{"start":{"line":246,"column":20},"end":{"line":246,"column":23}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Uint16","start":9193,"end":9201,"loc":{"start":{"line":246,"column":24},"end":{"line":246,"column":32}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9202,"end":9203,"loc":{"start":{"line":246,"column":33},"end":{"line":246,"column":34}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9203,"end":9204,"loc":{"start":{"line":246,"column":34},"end":{"line":246,"column":35}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":9208,"end":9210,"loc":{"start":{"line":247,"column":3},"end":{"line":247,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9210,"end":9211,"loc":{"start":{"line":247,"column":5},"end":{"line":247,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"t","start":9212,"end":9213,"loc":{"start":{"line":247,"column":7},"end":{"line":247,"column":8}}},{"type":{"label":"</>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"<","start":9214,"end":9215,"loc":{"start":{"line":247,"column":9},"end":{"line":247,"column":10}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":9216,"end":9217,"loc":{"start":{"line":247,"column":11},"end":{"line":247,"column":12}}},{"type":{"label":"||","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":1,"updateContext":null},"value":"||","start":9218,"end":9220,"loc":{"start":{"line":247,"column":13},"end":{"line":247,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Math","start":9221,"end":9225,"loc":{"start":{"line":247,"column":16},"end":{"line":247,"column":20}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":9225,"end":9226,"loc":{"start":{"line":247,"column":20},"end":{"line":247,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"abs","start":9226,"end":9229,"loc":{"start":{"line":247,"column":21},"end":{"line":247,"column":24}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9229,"end":9230,"loc":{"start":{"line":247,"column":24},"end":{"line":247,"column":25}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"t","start":9231,"end":9232,"loc":{"start":{"line":247,"column":26},"end":{"line":247,"column":27}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"-","start":9233,"end":9234,"loc":{"start":{"line":247,"column":28},"end":{"line":247,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Math","start":9235,"end":9239,"loc":{"start":{"line":247,"column":30},"end":{"line":247,"column":34}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":9239,"end":9240,"loc":{"start":{"line":247,"column":34},"end":{"line":247,"column":35}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"round","start":9240,"end":9245,"loc":{"start":{"line":247,"column":35},"end":{"line":247,"column":40}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9245,"end":9246,"loc":{"start":{"line":247,"column":40},"end":{"line":247,"column":41}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"t","start":9246,"end":9247,"loc":{"start":{"line":247,"column":41},"end":{"line":247,"column":42}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9247,"end":9248,"loc":{"start":{"line":247,"column":42},"end":{"line":247,"column":43}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9249,"end":9250,"loc":{"start":{"line":247,"column":44},"end":{"line":247,"column":45}}},{"type":{"label":"</>","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":">","start":9251,"end":9252,"loc":{"start":{"line":247,"column":46},"end":{"line":247,"column":47}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"tol","start":9253,"end":9256,"loc":{"start":{"line":247,"column":48},"end":{"line":247,"column":51}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9258,"end":9259,"loc":{"start":{"line":247,"column":53},"end":{"line":247,"column":54}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9259,"end":9260,"loc":{"start":{"line":247,"column":54},"end":{"line":247,"column":55}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":9265,"end":9270,"loc":{"start":{"line":248,"column":4},"end":{"line":248,"column":9}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9270,"end":9271,"loc":{"start":{"line":248,"column":9},"end":{"line":248,"column":10}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"You cannot set a negative or floating point number to a Uint16 grid!","start":9272,"end":9342,"loc":{"start":{"line":248,"column":11},"end":{"line":248,"column":81}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9343,"end":9344,"loc":{"start":{"line":248,"column":82},"end":{"line":248,"column":83}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9348,"end":9349,"loc":{"start":{"line":249,"column":3},"end":{"line":249,"column":4}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9352,"end":9353,"loc":{"start":{"line":250,"column":2},"end":{"line":250,"column":3}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9355,"end":9356,"loc":{"start":{"line":251,"column":1},"end":{"line":251,"column":2}}},{"type":"CommentBlock","value":"* The setpix method changes the value of a pixel p on the grid to t.\n\t * @param {ArrayCoordinate} p array coordinates of the pixel to change the\n\t * value of\n\t * @param {number} t the value to assign to this pixel. This can\n\t * be integers or floating point numbers, depending on the grid subclass\n\t * used (see eg Grid2D). ","start":9359,"end":9687,"loc":{"start":{"line":253,"column":1},"end":{"line":258,"column":28}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"setpix","start":9689,"end":9695,"loc":{"start":{"line":259,"column":1},"end":{"line":259,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9695,"end":9696,"loc":{"start":{"line":259,"column":7},"end":{"line":259,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":9697,"end":9698,"loc":{"start":{"line":259,"column":9},"end":{"line":259,"column":10}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":9698,"end":9699,"loc":{"start":{"line":259,"column":10},"end":{"line":259,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"t","start":9700,"end":9701,"loc":{"start":{"line":259,"column":12},"end":{"line":259,"column":13}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9702,"end":9703,"loc":{"start":{"line":259,"column":14},"end":{"line":259,"column":15}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9703,"end":9704,"loc":{"start":{"line":259,"column":15},"end":{"line":259,"column":16}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":9707,"end":9711,"loc":{"start":{"line":260,"column":2},"end":{"line":260,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":9711,"end":9712,"loc":{"start":{"line":260,"column":6},"end":{"line":260,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_isValidValue","start":9712,"end":9725,"loc":{"start":{"line":260,"column":7},"end":{"line":260,"column":20}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9725,"end":9726,"loc":{"start":{"line":260,"column":20},"end":{"line":260,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"t","start":9726,"end":9727,"loc":{"start":{"line":260,"column":21},"end":{"line":260,"column":22}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9727,"end":9728,"loc":{"start":{"line":260,"column":22},"end":{"line":260,"column":23}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":9731,"end":9735,"loc":{"start":{"line":261,"column":2},"end":{"line":261,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":9735,"end":9736,"loc":{"start":{"line":261,"column":6},"end":{"line":261,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":9736,"end":9743,"loc":{"start":{"line":261,"column":7},"end":{"line":261,"column":14}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":9743,"end":9744,"loc":{"start":{"line":261,"column":14},"end":{"line":261,"column":15}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":9744,"end":9748,"loc":{"start":{"line":261,"column":15},"end":{"line":261,"column":19}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":9748,"end":9749,"loc":{"start":{"line":261,"column":19},"end":{"line":261,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p2i","start":9749,"end":9752,"loc":{"start":{"line":261,"column":20},"end":{"line":261,"column":23}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9752,"end":9753,"loc":{"start":{"line":261,"column":23},"end":{"line":261,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":9753,"end":9754,"loc":{"start":{"line":261,"column":24},"end":{"line":261,"column":25}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9754,"end":9755,"loc":{"start":{"line":261,"column":25},"end":{"line":261,"column":26}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":9755,"end":9756,"loc":{"start":{"line":261,"column":26},"end":{"line":261,"column":27}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":9757,"end":9758,"loc":{"start":{"line":261,"column":28},"end":{"line":261,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"t","start":9759,"end":9760,"loc":{"start":{"line":261,"column":30},"end":{"line":261,"column":31}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":9762,"end":9763,"loc":{"start":{"line":262,"column":1},"end":{"line":262,"column":2}}},{"type":"CommentBlock","value":"* The setpixi method changes the value of a pixel i on the grid to t.\n\t * @param {IndexCoordinate} i index coordinates of the pixel to change the\n\t * value of\n\t * @param {number} t the value to assign to this pixel. This can be integers\n\t * or floating point numbers, depending on the grid subclass used\n\t * (see eg Grid2D).\n\t * ","start":9766,"end":10099,"loc":{"start":{"line":264,"column":1},"end":{"line":270,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"setpixi","start":10101,"end":10108,"loc":{"start":{"line":271,"column":1},"end":{"line":271,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10108,"end":10109,"loc":{"start":{"line":271,"column":8},"end":{"line":271,"column":9}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":10110,"end":10111,"loc":{"start":{"line":271,"column":10},"end":{"line":271,"column":11}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10111,"end":10112,"loc":{"start":{"line":271,"column":11},"end":{"line":271,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"t","start":10113,"end":10114,"loc":{"start":{"line":271,"column":13},"end":{"line":271,"column":14}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10115,"end":10116,"loc":{"start":{"line":271,"column":15},"end":{"line":271,"column":16}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10116,"end":10117,"loc":{"start":{"line":271,"column":16},"end":{"line":271,"column":17}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":10120,"end":10124,"loc":{"start":{"line":272,"column":2},"end":{"line":272,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10124,"end":10125,"loc":{"start":{"line":272,"column":6},"end":{"line":272,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_isValidValue","start":10125,"end":10138,"loc":{"start":{"line":272,"column":7},"end":{"line":272,"column":20}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10138,"end":10139,"loc":{"start":{"line":272,"column":20},"end":{"line":272,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"t","start":10139,"end":10140,"loc":{"start":{"line":272,"column":21},"end":{"line":272,"column":22}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10140,"end":10141,"loc":{"start":{"line":272,"column":22},"end":{"line":272,"column":23}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":10144,"end":10148,"loc":{"start":{"line":273,"column":2},"end":{"line":273,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10148,"end":10149,"loc":{"start":{"line":273,"column":6},"end":{"line":273,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":10149,"end":10156,"loc":{"start":{"line":273,"column":7},"end":{"line":273,"column":14}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10156,"end":10157,"loc":{"start":{"line":273,"column":14},"end":{"line":273,"column":15}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":10157,"end":10158,"loc":{"start":{"line":273,"column":15},"end":{"line":273,"column":16}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10158,"end":10159,"loc":{"start":{"line":273,"column":16},"end":{"line":273,"column":17}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":10160,"end":10161,"loc":{"start":{"line":273,"column":18},"end":{"line":273,"column":19}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"t","start":10162,"end":10163,"loc":{"start":{"line":273,"column":20},"end":{"line":273,"column":21}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10165,"end":10166,"loc":{"start":{"line":274,"column":1},"end":{"line":274,"column":2}}},{"type":"CommentBlock","value":"* The pixt method finds the current value of a pixel p on the grid.\n\t * @param {ArrayCoordinate} p array coordinates of the pixel to find the\n\t * value of\n\t * @return {number} t the value of p on the grid. This can be integers or\n\t * floating point numbers, depending on the grid subclass used (see eg\n\t * Grid2D).\n\t ","start":10169,"end":10490,"loc":{"start":{"line":276,"column":1},"end":{"line":282,"column":4}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixt","start":10492,"end":10496,"loc":{"start":{"line":283,"column":1},"end":{"line":283,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10496,"end":10497,"loc":{"start":{"line":283,"column":5},"end":{"line":283,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":10498,"end":10499,"loc":{"start":{"line":283,"column":7},"end":{"line":283,"column":8}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10500,"end":10501,"loc":{"start":{"line":283,"column":9},"end":{"line":283,"column":10}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10501,"end":10502,"loc":{"start":{"line":283,"column":10},"end":{"line":283,"column":11}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":10505,"end":10511,"loc":{"start":{"line":284,"column":2},"end":{"line":284,"column":8}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":10512,"end":10516,"loc":{"start":{"line":284,"column":9},"end":{"line":284,"column":13}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10516,"end":10517,"loc":{"start":{"line":284,"column":13},"end":{"line":284,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":10517,"end":10524,"loc":{"start":{"line":284,"column":14},"end":{"line":284,"column":21}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10524,"end":10525,"loc":{"start":{"line":284,"column":21},"end":{"line":284,"column":22}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":10525,"end":10529,"loc":{"start":{"line":284,"column":22},"end":{"line":284,"column":26}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10529,"end":10530,"loc":{"start":{"line":284,"column":26},"end":{"line":284,"column":27}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p2i","start":10530,"end":10533,"loc":{"start":{"line":284,"column":27},"end":{"line":284,"column":30}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10533,"end":10534,"loc":{"start":{"line":284,"column":30},"end":{"line":284,"column":31}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":10534,"end":10535,"loc":{"start":{"line":284,"column":31},"end":{"line":284,"column":32}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10535,"end":10536,"loc":{"start":{"line":284,"column":32},"end":{"line":284,"column":33}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10536,"end":10537,"loc":{"start":{"line":284,"column":33},"end":{"line":284,"column":34}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10539,"end":10540,"loc":{"start":{"line":285,"column":1},"end":{"line":285,"column":2}}},{"type":"CommentBlock","value":"* The pixti method finds the current value of a pixel i on the grid.\n\t * @param {IndexCoordinate} i index coordinates of the pixel to find the\n\t * value of\n\t * @return {number} t the value of i on the grid. This can be integers or\n\t * floating point numbers, depending on the grid subclass used (see eg\n\t * Grid2D).\n\t","start":10543,"end":10864,"loc":{"start":{"line":287,"column":1},"end":{"line":293,"column":3}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixti","start":10866,"end":10871,"loc":{"start":{"line":294,"column":1},"end":{"line":294,"column":6}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10871,"end":10872,"loc":{"start":{"line":294,"column":6},"end":{"line":294,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":10873,"end":10874,"loc":{"start":{"line":294,"column":8},"end":{"line":294,"column":9}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10875,"end":10876,"loc":{"start":{"line":294,"column":10},"end":{"line":294,"column":11}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10876,"end":10877,"loc":{"start":{"line":294,"column":11},"end":{"line":294,"column":12}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":10880,"end":10886,"loc":{"start":{"line":295,"column":2},"end":{"line":295,"column":8}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":10887,"end":10891,"loc":{"start":{"line":295,"column":9},"end":{"line":295,"column":13}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10891,"end":10892,"loc":{"start":{"line":295,"column":13},"end":{"line":295,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":10892,"end":10899,"loc":{"start":{"line":295,"column":14},"end":{"line":295,"column":21}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10899,"end":10900,"loc":{"start":{"line":295,"column":21},"end":{"line":295,"column":22}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":10900,"end":10901,"loc":{"start":{"line":295,"column":22},"end":{"line":295,"column":23}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":10901,"end":10902,"loc":{"start":{"line":295,"column":23},"end":{"line":295,"column":24}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":10904,"end":10905,"loc":{"start":{"line":296,"column":1},"end":{"line":296,"column":2}}},{"type":"CommentBlock","value":"* A pixel on the grid.\n\t * @typedef {Object[]} Pixel\n\t * @property {ArrayCoordinate} Pixel[0] - pixel coordinate\n\t * @property {number} Pixel[1] - pixel value\n\t * ","start":10908,"end":11075,"loc":{"start":{"line":298,"column":1},"end":{"line":302,"column":6}}},{"type":"CommentBlock","value":" /** A pixel on the grid.\n\t * @typedef {Object[]} iPixel\n\t * @property {IndexCoordinate} Pixel[0] - pixel coordinate\n\t * @property {number} Pixel[1] - pixel value\n\t * ","start":11079,"end":11250,"loc":{"start":{"line":304,"column":1},"end":{"line":308,"column":6}}},{"type":"CommentBlock","value":"* This iterator returns locations and values of all non-zero pixels.\n\t * This method isn't actually called because the subclasses implement\n\t * it themselves due to efficiency reasons. It serves as a template to\n\t * document the functionality.\n\t * @abstract\n\t * @return {Pixel} for each pixel, return an array [p,v] where p are\n\t * the pixel's array coordinates on the grid, and v its value.","start":11253,"end":11648,"loc":{"start":{"line":310,"column":1},"end":{"line":316,"column":65}}},{"type":"CommentLine","value":"eslint-disable-next-line require-yield","start":11650,"end":11690,"loc":{"start":{"line":317,"column":1},"end":{"line":317,"column":41}}},{"type":{"label":"*","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":10,"updateContext":null},"value":"*","start":11692,"end":11693,"loc":{"start":{"line":318,"column":1},"end":{"line":318,"column":2}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixels","start":11694,"end":11700,"loc":{"start":{"line":318,"column":3},"end":{"line":318,"column":9}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11700,"end":11701,"loc":{"start":{"line":318,"column":9},"end":{"line":318,"column":10}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11701,"end":11702,"loc":{"start":{"line":318,"column":10},"end":{"line":318,"column":11}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11703,"end":11704,"loc":{"start":{"line":318,"column":12},"end":{"line":318,"column":13}}},{"type":"CommentLine","value":"noinspection JSValidateTypes","start":11707,"end":11737,"loc":{"start":{"line":319,"column":2},"end":{"line":319,"column":32}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":11740,"end":11745,"loc":{"start":{"line":320,"column":2},"end":{"line":320,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11745,"end":11746,"loc":{"start":{"line":320,"column":7},"end":{"line":320,"column":8}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Iterator 'pixels' not implemented!","start":11746,"end":11782,"loc":{"start":{"line":320,"column":8},"end":{"line":320,"column":44}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11782,"end":11783,"loc":{"start":{"line":320,"column":44},"end":{"line":320,"column":45}}},{"type":"CommentBlock","value":"\n\t\t// example code:\n\t\tfor( let i of this.pixelsi() ){\n\t\t\tif( this._pixels[i] > 0 ){\n\t\t\t\tyield [this.i2p(i),this._pixels[i]]\n\t\t\t}\n\t\t}","start":11787,"end":11923,"loc":{"start":{"line":322,"column":2},"end":{"line":328,"column":5}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":11925,"end":11926,"loc":{"start":{"line":329,"column":1},"end":{"line":329,"column":2}}},{"type":"CommentBlock","value":"* This iterator returns locations all pixels including background.\n\t * This method isn't actually called because the subclasses implement\n\t * it themselves due to efficiency reasons. It serves as a template to\n\t * document the functionality.\n\t * @abstract\n\t * @return {IndexCoordinate} for each pixel, because this method should be\n\t * implemented in a grid subclass.\n\t * ","start":11929,"end":12305,"loc":{"start":{"line":331,"column":1},"end":{"line":338,"column":6}}},{"type":"CommentLine","value":"eslint-disable-next-line require-yield","start":12307,"end":12347,"loc":{"start":{"line":339,"column":1},"end":{"line":339,"column":41}}},{"type":{"label":"*","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":10,"updateContext":null},"value":"*","start":12349,"end":12350,"loc":{"start":{"line":340,"column":1},"end":{"line":340,"column":2}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixelsi","start":12351,"end":12358,"loc":{"start":{"line":340,"column":3},"end":{"line":340,"column":10}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12358,"end":12359,"loc":{"start":{"line":340,"column":10},"end":{"line":340,"column":11}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12359,"end":12360,"loc":{"start":{"line":340,"column":11},"end":{"line":340,"column":12}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12361,"end":12362,"loc":{"start":{"line":340,"column":13},"end":{"line":340,"column":14}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":12365,"end":12370,"loc":{"start":{"line":341,"column":2},"end":{"line":341,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12370,"end":12371,"loc":{"start":{"line":341,"column":7},"end":{"line":341,"column":8}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Iterator 'pixelsi' not implemented!","start":12371,"end":12408,"loc":{"start":{"line":341,"column":8},"end":{"line":341,"column":45}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12408,"end":12409,"loc":{"start":{"line":341,"column":45},"end":{"line":341,"column":46}}},{"type":"CommentLine","value":"yield undefined","start":12412,"end":12429,"loc":{"start":{"line":342,"column":2},"end":{"line":342,"column":19}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12431,"end":12432,"loc":{"start":{"line":343,"column":1},"end":{"line":343,"column":2}}},{"type":"CommentBlock","value":"* This method pre-allocates an array of the correct datatype to make\n\t * a copy of the current pixel values. Values are not actually copied yet.\n\t * @return {Uint16Array|Float32Array} an array with an element for each\n\t * pixel. The datatype is determined by the datatype of this._pixels\n\t * (implemented in the subclass), which can be either Uint16Array or\n\t * Float32Array. ","start":12435,"end":12815,"loc":{"start":{"line":345,"column":1},"end":{"line":350,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixelsBuffer","start":12817,"end":12829,"loc":{"start":{"line":351,"column":1},"end":{"line":351,"column":13}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12829,"end":12830,"loc":{"start":{"line":351,"column":13},"end":{"line":351,"column":14}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12830,"end":12831,"loc":{"start":{"line":351,"column":14},"end":{"line":351,"column":15}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":12832,"end":12833,"loc":{"start":{"line":351,"column":16},"end":{"line":351,"column":17}}},{"type":"CommentBlock","value":"* For storing a copy of all pixel values; eg for synchronous updating\n\t\t * of some sort.\n\t\t * @type {Uint16Array|Float32Array}","start":12837,"end":12967,"loc":{"start":{"line":353,"column":2},"end":{"line":355,"column":39}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":12970,"end":12974,"loc":{"start":{"line":356,"column":2},"end":{"line":356,"column":6}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":12974,"end":12975,"loc":{"start":{"line":356,"column":6},"end":{"line":356,"column":7}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelsbuffer","start":12975,"end":12988,"loc":{"start":{"line":356,"column":7},"end":{"line":356,"column":20}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":12989,"end":12990,"loc":{"start":{"line":356,"column":21},"end":{"line":356,"column":22}}},{"type":{"label":"new","keyword":"new","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"new","start":12991,"end":12994,"loc":{"start":{"line":356,"column":23},"end":{"line":356,"column":26}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Uint16Array","start":12995,"end":13006,"loc":{"start":{"line":356,"column":27},"end":{"line":356,"column":38}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13006,"end":13007,"loc":{"start":{"line":356,"column":38},"end":{"line":356,"column":39}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":13007,"end":13011,"loc":{"start":{"line":356,"column":39},"end":{"line":356,"column":43}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13011,"end":13012,"loc":{"start":{"line":356,"column":43},"end":{"line":356,"column":44}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":13012,"end":13019,"loc":{"start":{"line":356,"column":44},"end":{"line":356,"column":51}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13019,"end":13020,"loc":{"start":{"line":356,"column":51},"end":{"line":356,"column":52}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":13020,"end":13026,"loc":{"start":{"line":356,"column":52},"end":{"line":356,"column":58}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13026,"end":13027,"loc":{"start":{"line":356,"column":58},"end":{"line":356,"column":59}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":13032,"end":13034,"loc":{"start":{"line":358,"column":2},"end":{"line":358,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13034,"end":13035,"loc":{"start":{"line":358,"column":4},"end":{"line":358,"column":5}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":13036,"end":13040,"loc":{"start":{"line":358,"column":6},"end":{"line":358,"column":10}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13040,"end":13041,"loc":{"start":{"line":358,"column":10},"end":{"line":358,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":13041,"end":13048,"loc":{"start":{"line":358,"column":11},"end":{"line":358,"column":18}}},{"type":{"label":"instanceof","keyword":"instanceof","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"instanceof","start":13049,"end":13059,"loc":{"start":{"line":358,"column":19},"end":{"line":358,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Uint16Array","start":13060,"end":13071,"loc":{"start":{"line":358,"column":30},"end":{"line":358,"column":41}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13072,"end":13073,"loc":{"start":{"line":358,"column":42},"end":{"line":358,"column":43}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13073,"end":13074,"loc":{"start":{"line":358,"column":43},"end":{"line":358,"column":44}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":13078,"end":13082,"loc":{"start":{"line":359,"column":3},"end":{"line":359,"column":7}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13082,"end":13083,"loc":{"start":{"line":359,"column":7},"end":{"line":359,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelsbuffer","start":13083,"end":13096,"loc":{"start":{"line":359,"column":8},"end":{"line":359,"column":21}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":13097,"end":13098,"loc":{"start":{"line":359,"column":22},"end":{"line":359,"column":23}}},{"type":{"label":"new","keyword":"new","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"new","start":13099,"end":13102,"loc":{"start":{"line":359,"column":24},"end":{"line":359,"column":27}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Uint16Array","start":13103,"end":13114,"loc":{"start":{"line":359,"column":28},"end":{"line":359,"column":39}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13114,"end":13115,"loc":{"start":{"line":359,"column":39},"end":{"line":359,"column":40}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":13115,"end":13119,"loc":{"start":{"line":359,"column":40},"end":{"line":359,"column":44}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13119,"end":13120,"loc":{"start":{"line":359,"column":44},"end":{"line":359,"column":45}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":13120,"end":13127,"loc":{"start":{"line":359,"column":45},"end":{"line":359,"column":52}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13127,"end":13128,"loc":{"start":{"line":359,"column":52},"end":{"line":359,"column":53}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":13128,"end":13134,"loc":{"start":{"line":359,"column":53},"end":{"line":359,"column":59}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13134,"end":13135,"loc":{"start":{"line":359,"column":59},"end":{"line":359,"column":60}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13138,"end":13139,"loc":{"start":{"line":360,"column":2},"end":{"line":360,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":13140,"end":13144,"loc":{"start":{"line":360,"column":4},"end":{"line":360,"column":8}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":13145,"end":13147,"loc":{"start":{"line":360,"column":9},"end":{"line":360,"column":11}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13147,"end":13148,"loc":{"start":{"line":360,"column":11},"end":{"line":360,"column":12}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":13149,"end":13153,"loc":{"start":{"line":360,"column":13},"end":{"line":360,"column":17}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13153,"end":13154,"loc":{"start":{"line":360,"column":17},"end":{"line":360,"column":18}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":13154,"end":13161,"loc":{"start":{"line":360,"column":18},"end":{"line":360,"column":25}}},{"type":{"label":"instanceof","keyword":"instanceof","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":7,"updateContext":null},"value":"instanceof","start":13162,"end":13172,"loc":{"start":{"line":360,"column":26},"end":{"line":360,"column":36}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Float32Array","start":13173,"end":13185,"loc":{"start":{"line":360,"column":37},"end":{"line":360,"column":49}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13186,"end":13187,"loc":{"start":{"line":360,"column":50},"end":{"line":360,"column":51}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13187,"end":13188,"loc":{"start":{"line":360,"column":51},"end":{"line":360,"column":52}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":13192,"end":13196,"loc":{"start":{"line":361,"column":3},"end":{"line":361,"column":7}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13196,"end":13197,"loc":{"start":{"line":361,"column":7},"end":{"line":361,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelsbuffer","start":13197,"end":13210,"loc":{"start":{"line":361,"column":8},"end":{"line":361,"column":21}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":13211,"end":13212,"loc":{"start":{"line":361,"column":22},"end":{"line":361,"column":23}}},{"type":{"label":"new","keyword":"new","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"new","start":13213,"end":13216,"loc":{"start":{"line":361,"column":24},"end":{"line":361,"column":27}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Float32Array","start":13217,"end":13229,"loc":{"start":{"line":361,"column":28},"end":{"line":361,"column":40}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13229,"end":13230,"loc":{"start":{"line":361,"column":40},"end":{"line":361,"column":41}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":13230,"end":13234,"loc":{"start":{"line":361,"column":41},"end":{"line":361,"column":45}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13234,"end":13235,"loc":{"start":{"line":361,"column":45},"end":{"line":361,"column":46}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":13235,"end":13242,"loc":{"start":{"line":361,"column":46},"end":{"line":361,"column":53}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13242,"end":13243,"loc":{"start":{"line":361,"column":53},"end":{"line":361,"column":54}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"length","start":13243,"end":13249,"loc":{"start":{"line":361,"column":54},"end":{"line":361,"column":60}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13249,"end":13250,"loc":{"start":{"line":361,"column":60},"end":{"line":361,"column":61}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13253,"end":13254,"loc":{"start":{"line":362,"column":2},"end":{"line":362,"column":3}}},{"type":{"label":"else","keyword":"else","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"else","start":13255,"end":13259,"loc":{"start":{"line":362,"column":4},"end":{"line":362,"column":8}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13260,"end":13261,"loc":{"start":{"line":362,"column":9},"end":{"line":362,"column":10}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":13265,"end":13270,"loc":{"start":{"line":363,"column":3},"end":{"line":363,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13270,"end":13271,"loc":{"start":{"line":363,"column":8},"end":{"line":363,"column":9}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"unsupported datatype: ","start":13271,"end":13295,"loc":{"start":{"line":363,"column":9},"end":{"line":363,"column":33}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":13296,"end":13297,"loc":{"start":{"line":363,"column":34},"end":{"line":363,"column":35}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13298,"end":13299,"loc":{"start":{"line":363,"column":36},"end":{"line":363,"column":37}}},{"type":{"label":"typeof","keyword":"typeof","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"typeof","start":13299,"end":13305,"loc":{"start":{"line":363,"column":37},"end":{"line":363,"column":43}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":13306,"end":13310,"loc":{"start":{"line":363,"column":44},"end":{"line":363,"column":48}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":13310,"end":13311,"loc":{"start":{"line":363,"column":48},"end":{"line":363,"column":49}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":13311,"end":13318,"loc":{"start":{"line":363,"column":49},"end":{"line":363,"column":56}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13318,"end":13319,"loc":{"start":{"line":363,"column":56},"end":{"line":363,"column":57}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13319,"end":13320,"loc":{"start":{"line":363,"column":57},"end":{"line":363,"column":58}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13323,"end":13324,"loc":{"start":{"line":364,"column":2},"end":{"line":364,"column":3}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13326,"end":13327,"loc":{"start":{"line":365,"column":1},"end":{"line":365,"column":2}}},{"type":"CommentBlock","value":"* Template method to compute the gradient at location i on the grid\n\t * (location given in index coordinates).\n\t * This method throws an error, which is overwritten when a subclass\n\t * implements a gradienti method.\n\t * @param {IndexCoordinate} i index coordinate of a pixel to compute the\n\t * gradient at.\n\t * @return {number[]} the gradient\n\t * @see https://en.wikipedia.org/wiki/Gradient","start":13330,"end":13724,"loc":{"start":{"line":367,"column":1},"end":{"line":374,"column":49}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars","start":13726,"end":13767,"loc":{"start":{"line":375,"column":1},"end":{"line":375,"column":42}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"gradienti","start":13769,"end":13778,"loc":{"start":{"line":376,"column":1},"end":{"line":376,"column":10}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13778,"end":13779,"loc":{"start":{"line":376,"column":10},"end":{"line":376,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":13780,"end":13781,"loc":{"start":{"line":376,"column":12},"end":{"line":376,"column":13}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13782,"end":13783,"loc":{"start":{"line":376,"column":14},"end":{"line":376,"column":15}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13783,"end":13784,"loc":{"start":{"line":376,"column":15},"end":{"line":376,"column":16}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":13787,"end":13792,"loc":{"start":{"line":377,"column":2},"end":{"line":377,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13792,"end":13793,"loc":{"start":{"line":377,"column":7},"end":{"line":377,"column":8}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"method 'gradienti' not implemented! ","start":13793,"end":13831,"loc":{"start":{"line":377,"column":8},"end":{"line":377,"column":46}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13831,"end":13832,"loc":{"start":{"line":377,"column":46},"end":{"line":377,"column":47}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":13834,"end":13835,"loc":{"start":{"line":378,"column":1},"end":{"line":378,"column":2}}},{"type":"CommentBlock","value":"* Method to compute the gradient at location p on the grid (location\n\t * given in array coordinates). It internally calls the gradienti\n\t * method using index coordinates, which should be implemented in the grid\n\t * subclass.\n\t * @param {ArrayCoordinate} p array coordinates of a pixel p to compute\n\t * the gradient at\n\t * @return {number} the gradient at position p.\n\t * @see https://en.wikipedia.org/wiki/Gradient","start":13838,"end":14257,"loc":{"start":{"line":380,"column":1},"end":{"line":387,"column":49}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"gradient","start":14259,"end":14267,"loc":{"start":{"line":388,"column":1},"end":{"line":388,"column":9}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14267,"end":14268,"loc":{"start":{"line":388,"column":9},"end":{"line":388,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":14269,"end":14270,"loc":{"start":{"line":388,"column":11},"end":{"line":388,"column":12}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14271,"end":14272,"loc":{"start":{"line":388,"column":13},"end":{"line":388,"column":14}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14272,"end":14273,"loc":{"start":{"line":388,"column":14},"end":{"line":388,"column":15}}},{"type":"CommentLine","value":"noinspection JSValidateTypes","start":14276,"end":14306,"loc":{"start":{"line":389,"column":2},"end":{"line":389,"column":32}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":14309,"end":14315,"loc":{"start":{"line":390,"column":2},"end":{"line":390,"column":8}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":14316,"end":14320,"loc":{"start":{"line":390,"column":9},"end":{"line":390,"column":13}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":14320,"end":14321,"loc":{"start":{"line":390,"column":13},"end":{"line":390,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"gradienti","start":14321,"end":14330,"loc":{"start":{"line":390,"column":14},"end":{"line":390,"column":23}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14330,"end":14331,"loc":{"start":{"line":390,"column":23},"end":{"line":390,"column":24}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":14332,"end":14336,"loc":{"start":{"line":390,"column":25},"end":{"line":390,"column":29}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":14336,"end":14337,"loc":{"start":{"line":390,"column":29},"end":{"line":390,"column":30}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p2i","start":14337,"end":14340,"loc":{"start":{"line":390,"column":30},"end":{"line":390,"column":33}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14340,"end":14341,"loc":{"start":{"line":390,"column":33},"end":{"line":390,"column":34}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":14342,"end":14343,"loc":{"start":{"line":390,"column":35},"end":{"line":390,"column":36}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14344,"end":14345,"loc":{"start":{"line":390,"column":37},"end":{"line":390,"column":38}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14346,"end":14347,"loc":{"start":{"line":390,"column":39},"end":{"line":390,"column":40}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14349,"end":14350,"loc":{"start":{"line":391,"column":1},"end":{"line":391,"column":2}}},{"type":"CommentBlock","value":"* Method to compute the laplacian at location p on the grid\n\t * (location given in array coordinates). It internally calls the laplaciani\n\t * method that does the same but uses index coordinates.\n\t * @param {ArrayCoordinate} p array coordinates of a pixel p to compute the\n\t * laplacian at\n\t * @return {number} the laplacian at position p.\n\t * @see https://en.wikipedia.org/wiki/Laplace_operator#Coordinate_expressions ","start":14353,"end":14776,"loc":{"start":{"line":393,"column":1},"end":{"line":399,"column":81}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"laplacian","start":14778,"end":14787,"loc":{"start":{"line":400,"column":1},"end":{"line":400,"column":10}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14787,"end":14788,"loc":{"start":{"line":400,"column":10},"end":{"line":400,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":14789,"end":14790,"loc":{"start":{"line":400,"column":12},"end":{"line":400,"column":13}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14791,"end":14792,"loc":{"start":{"line":400,"column":14},"end":{"line":400,"column":15}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14792,"end":14793,"loc":{"start":{"line":400,"column":15},"end":{"line":400,"column":16}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":14796,"end":14802,"loc":{"start":{"line":401,"column":2},"end":{"line":401,"column":8}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":14803,"end":14807,"loc":{"start":{"line":401,"column":9},"end":{"line":401,"column":13}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":14807,"end":14808,"loc":{"start":{"line":401,"column":13},"end":{"line":401,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"laplaciani","start":14808,"end":14818,"loc":{"start":{"line":401,"column":14},"end":{"line":401,"column":24}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14818,"end":14819,"loc":{"start":{"line":401,"column":24},"end":{"line":401,"column":25}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":14820,"end":14824,"loc":{"start":{"line":401,"column":26},"end":{"line":401,"column":30}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":14824,"end":14825,"loc":{"start":{"line":401,"column":30},"end":{"line":401,"column":31}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p2i","start":14825,"end":14828,"loc":{"start":{"line":401,"column":31},"end":{"line":401,"column":34}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14828,"end":14829,"loc":{"start":{"line":401,"column":34},"end":{"line":401,"column":35}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":14830,"end":14831,"loc":{"start":{"line":401,"column":36},"end":{"line":401,"column":37}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14832,"end":14833,"loc":{"start":{"line":401,"column":38},"end":{"line":401,"column":39}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14834,"end":14835,"loc":{"start":{"line":401,"column":40},"end":{"line":401,"column":41}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":14837,"end":14838,"loc":{"start":{"line":402,"column":1},"end":{"line":402,"column":2}}},{"type":"CommentBlock","value":"*\n\t * A method to compute the Neumann neighborhood should be implemented in the\n\t * Grid subclass if the laplacian (see below) is used.\n\t * This mock function ensures that an error is thrown when there is no\n\t * method called neighNeumanni in the grid subclass.\n\t * @abstract\n\t * @see https://en.wikipedia.org/wiki/Von_Neumann_neighborhood\n\t * @param {IndexCoordinate} i - location of the pixel to get neighbors of.\n\t * @param {boolean[]} [torus=[true,true]] - does the grid have linked\n\t * borders? Defaults to the setting on this grid, see {@link torus}\n\t * @return {IndexCoordinate[]} - an array of coordinates for all the neighbors of i.\n\t ","start":14841,"end":15489,"loc":{"start":{"line":404,"column":1},"end":{"line":415,"column":4}}},{"type":"CommentLine","value":"eslint-disable-next-line no-unused-vars,require-yield","start":15491,"end":15546,"loc":{"start":{"line":416,"column":1},"end":{"line":416,"column":56}}},{"type":{"label":"*","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":10,"updateContext":null},"value":"*","start":15548,"end":15549,"loc":{"start":{"line":417,"column":1},"end":{"line":417,"column":2}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"neighNeumanni","start":15550,"end":15563,"loc":{"start":{"line":417,"column":3},"end":{"line":417,"column":16}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15564,"end":15565,"loc":{"start":{"line":417,"column":17},"end":{"line":417,"column":18}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":15566,"end":15567,"loc":{"start":{"line":417,"column":19},"end":{"line":417,"column":20}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":15567,"end":15568,"loc":{"start":{"line":417,"column":20},"end":{"line":417,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":15569,"end":15574,"loc":{"start":{"line":417,"column":22},"end":{"line":417,"column":27}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":15575,"end":15576,"loc":{"start":{"line":417,"column":28},"end":{"line":417,"column":29}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":15577,"end":15581,"loc":{"start":{"line":417,"column":30},"end":{"line":417,"column":34}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":15581,"end":15582,"loc":{"start":{"line":417,"column":34},"end":{"line":417,"column":35}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"torus","start":15582,"end":15587,"loc":{"start":{"line":417,"column":35},"end":{"line":417,"column":40}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15588,"end":15589,"loc":{"start":{"line":417,"column":41},"end":{"line":417,"column":42}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15589,"end":15590,"loc":{"start":{"line":417,"column":42},"end":{"line":417,"column":43}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":15593,"end":15598,"loc":{"start":{"line":418,"column":2},"end":{"line":418,"column":7}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15598,"end":15599,"loc":{"start":{"line":418,"column":7},"end":{"line":418,"column":8}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Trying to call the method neighNeumanni, but you haven't ","start":15600,"end":15659,"loc":{"start":{"line":418,"column":9},"end":{"line":418,"column":68}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":15660,"end":15661,"loc":{"start":{"line":418,"column":69},"end":{"line":418,"column":70}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"implemented this method in the Grid subclass you are using!","start":15665,"end":15726,"loc":{"start":{"line":419,"column":3},"end":{"line":419,"column":64}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15726,"end":15727,"loc":{"start":{"line":419,"column":64},"end":{"line":419,"column":65}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":15729,"end":15730,"loc":{"start":{"line":420,"column":1},"end":{"line":420,"column":2}}},{"type":"CommentBlock","value":"* Method to compute the laplacian at location i on the grid (location\n\t * given in index coordinates). It internally uses the neighNeumanni method\n\t * to compute a Neumann neighborhood, which should be implemented in the\n\t * grid subclass. It then uses the finite difference method (see link) with\n\t * h = 1.\n\t * @param {IndexCoordinate} i index coordinates of a pixel to compute the\n\t * laplacian at\n\t * @return {number} the laplacian at position p.\n\t * @see https://en.wikipedia.org/wiki/Laplace_operator#Coordinate_expressions\n\t * @see https://en.wikipedia.org/wiki/Discrete_Laplace_operator#Finite_differences\n\t * ","start":15733,"end":16355,"loc":{"start":{"line":422,"column":1},"end":{"line":432,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"laplaciani","start":16357,"end":16367,"loc":{"start":{"line":433,"column":1},"end":{"line":433,"column":11}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16367,"end":16368,"loc":{"start":{"line":433,"column":11},"end":{"line":433,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":16369,"end":16370,"loc":{"start":{"line":433,"column":13},"end":{"line":433,"column":14}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16371,"end":16372,"loc":{"start":{"line":433,"column":15},"end":{"line":433,"column":16}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16372,"end":16373,"loc":{"start":{"line":433,"column":16},"end":{"line":433,"column":17}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":16376,"end":16379,"loc":{"start":{"line":434,"column":2},"end":{"line":434,"column":5}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"L","start":16380,"end":16381,"loc":{"start":{"line":434,"column":6},"end":{"line":434,"column":7}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":16382,"end":16383,"loc":{"start":{"line":434,"column":8},"end":{"line":434,"column":9}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":16384,"end":16385,"loc":{"start":{"line":434,"column":10},"end":{"line":434,"column":11}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16385,"end":16386,"loc":{"start":{"line":434,"column":11},"end":{"line":434,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"n","start":16387,"end":16388,"loc":{"start":{"line":434,"column":13},"end":{"line":434,"column":14}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":16389,"end":16390,"loc":{"start":{"line":434,"column":15},"end":{"line":434,"column":16}}},{"type":{"label":"num","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":0,"start":16391,"end":16392,"loc":{"start":{"line":434,"column":17},"end":{"line":434,"column":18}}},{"type":"CommentLine","value":" For now: forbid computing a laplacian on an integer grid as it makes","start":16396,"end":16467,"loc":{"start":{"line":436,"column":2},"end":{"line":436,"column":73}}},{"type":"CommentLine","value":" no sense and could happen by accident if you forget to specify the","start":16470,"end":16539,"loc":{"start":{"line":437,"column":2},"end":{"line":437,"column":71}}},{"type":"CommentLine","value":" datatype.","start":16542,"end":16554,"loc":{"start":{"line":438,"column":2},"end":{"line":438,"column":14}}},{"type":"CommentLine","value":" If this is too strict, we can set an option to overrule this error.","start":16557,"end":16627,"loc":{"start":{"line":439,"column":2},"end":{"line":439,"column":72}}},{"type":"CommentLine","value":" This way you still get to see it if you try this by accident.","start":16630,"end":16694,"loc":{"start":{"line":440,"column":2},"end":{"line":440,"column":66}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":16697,"end":16699,"loc":{"start":{"line":441,"column":2},"end":{"line":441,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16699,"end":16700,"loc":{"start":{"line":441,"column":4},"end":{"line":441,"column":5}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":16701,"end":16705,"loc":{"start":{"line":441,"column":6},"end":{"line":441,"column":10}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16705,"end":16706,"loc":{"start":{"line":441,"column":10},"end":{"line":441,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"datatype","start":16706,"end":16714,"loc":{"start":{"line":441,"column":11},"end":{"line":441,"column":19}}},{"type":{"label":"==/!=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":6,"updateContext":null},"value":"===","start":16715,"end":16718,"loc":{"start":{"line":441,"column":20},"end":{"line":441,"column":23}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Uint16","start":16719,"end":16727,"loc":{"start":{"line":441,"column":24},"end":{"line":441,"column":32}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16728,"end":16729,"loc":{"start":{"line":441,"column":33},"end":{"line":441,"column":34}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16729,"end":16730,"loc":{"start":{"line":441,"column":34},"end":{"line":441,"column":35}}},{"type":{"label":"throw","keyword":"throw","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"throw","start":16734,"end":16739,"loc":{"start":{"line":442,"column":3},"end":{"line":442,"column":8}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16739,"end":16740,"loc":{"start":{"line":442,"column":8},"end":{"line":442,"column":9}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Diffusion/laplacian methods do not work on a Uint16 grid! ","start":16740,"end":16800,"loc":{"start":{"line":442,"column":9},"end":{"line":442,"column":69}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":16801,"end":16802,"loc":{"start":{"line":442,"column":70},"end":{"line":442,"column":71}}},{"type":{"label":"string","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"Consider setting datatype='Float32'.","start":16807,"end":16845,"loc":{"start":{"line":443,"column":4},"end":{"line":443,"column":42}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16845,"end":16846,"loc":{"start":{"line":443,"column":42},"end":{"line":443,"column":43}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16849,"end":16850,"loc":{"start":{"line":444,"column":2},"end":{"line":444,"column":3}}},{"type":"CommentLine","value":"noinspection JSUnresolvedFunction","start":16854,"end":16889,"loc":{"start":{"line":446,"column":2},"end":{"line":446,"column":37}}},{"type":{"label":"for","keyword":"for","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":true,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"for","start":16892,"end":16895,"loc":{"start":{"line":447,"column":2},"end":{"line":447,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16895,"end":16896,"loc":{"start":{"line":447,"column":5},"end":{"line":447,"column":6}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":16897,"end":16900,"loc":{"start":{"line":447,"column":7},"end":{"line":447,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"x","start":16901,"end":16902,"loc":{"start":{"line":447,"column":11},"end":{"line":447,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"of","start":16903,"end":16905,"loc":{"start":{"line":447,"column":13},"end":{"line":447,"column":15}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":16906,"end":16910,"loc":{"start":{"line":447,"column":16},"end":{"line":447,"column":20}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16910,"end":16911,"loc":{"start":{"line":447,"column":20},"end":{"line":447,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"neighNeumanni","start":16911,"end":16924,"loc":{"start":{"line":447,"column":21},"end":{"line":447,"column":34}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16924,"end":16925,"loc":{"start":{"line":447,"column":34},"end":{"line":447,"column":35}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":16925,"end":16926,"loc":{"start":{"line":447,"column":35},"end":{"line":447,"column":36}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16926,"end":16927,"loc":{"start":{"line":447,"column":36},"end":{"line":447,"column":37}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16928,"end":16929,"loc":{"start":{"line":447,"column":38},"end":{"line":447,"column":39}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16929,"end":16930,"loc":{"start":{"line":447,"column":39},"end":{"line":447,"column":40}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"L","start":16934,"end":16935,"loc":{"start":{"line":448,"column":3},"end":{"line":448,"column":4}}},{"type":{"label":"_=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"+=","start":16936,"end":16938,"loc":{"start":{"line":448,"column":5},"end":{"line":448,"column":7}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":16939,"end":16943,"loc":{"start":{"line":448,"column":8},"end":{"line":448,"column":12}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16943,"end":16944,"loc":{"start":{"line":448,"column":12},"end":{"line":448,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixti","start":16944,"end":16949,"loc":{"start":{"line":448,"column":13},"end":{"line":448,"column":18}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16949,"end":16950,"loc":{"start":{"line":448,"column":18},"end":{"line":448,"column":19}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"x","start":16951,"end":16952,"loc":{"start":{"line":448,"column":20},"end":{"line":448,"column":21}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16953,"end":16954,"loc":{"start":{"line":448,"column":22},"end":{"line":448,"column":23}}},{"type":{"label":";","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16954,"end":16955,"loc":{"start":{"line":448,"column":23},"end":{"line":448,"column":24}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"n","start":16956,"end":16957,"loc":{"start":{"line":448,"column":25},"end":{"line":448,"column":26}}},{"type":{"label":"++/--","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":true,"binop":null},"value":"++","start":16958,"end":16960,"loc":{"start":{"line":448,"column":27},"end":{"line":448,"column":29}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16963,"end":16964,"loc":{"start":{"line":449,"column":2},"end":{"line":449,"column":3}}},{"type":{"label":"return","keyword":"return","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"return","start":16968,"end":16974,"loc":{"start":{"line":450,"column":2},"end":{"line":450,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"L","start":16975,"end":16976,"loc":{"start":{"line":450,"column":9},"end":{"line":450,"column":10}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"-","start":16977,"end":16978,"loc":{"start":{"line":450,"column":11},"end":{"line":450,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"n","start":16979,"end":16980,"loc":{"start":{"line":450,"column":13},"end":{"line":450,"column":14}}},{"type":{"label":"*","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":10,"updateContext":null},"value":"*","start":16981,"end":16982,"loc":{"start":{"line":450,"column":15},"end":{"line":450,"column":16}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":16983,"end":16987,"loc":{"start":{"line":450,"column":17},"end":{"line":450,"column":21}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":16987,"end":16988,"loc":{"start":{"line":450,"column":21},"end":{"line":450,"column":22}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixti","start":16988,"end":16993,"loc":{"start":{"line":450,"column":22},"end":{"line":450,"column":27}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16993,"end":16994,"loc":{"start":{"line":450,"column":27},"end":{"line":450,"column":28}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":16995,"end":16996,"loc":{"start":{"line":450,"column":29},"end":{"line":450,"column":30}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":16997,"end":16998,"loc":{"start":{"line":450,"column":31},"end":{"line":450,"column":32}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17000,"end":17001,"loc":{"start":{"line":451,"column":1},"end":{"line":451,"column":2}}},{"type":"CommentBlock","value":"* Perform a diffusion step on the grid, updating the values of all pixels\n\t * according to Fick's second law of diffusion.\n\t * @param {number} D diffusion coefficient\n\t * @see https://en.wikipedia.org/wiki/Diffusion#Fick's_law_and_equations\n\t * @see https://en.wikipedia.org/wiki/Discrete_Laplace_operator#Mesh_Laplacians\n\t * ","start":17004,"end":17334,"loc":{"start":{"line":453,"column":1},"end":{"line":458,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"diffusion","start":17336,"end":17345,"loc":{"start":{"line":459,"column":1},"end":{"line":459,"column":10}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17345,"end":17346,"loc":{"start":{"line":459,"column":10},"end":{"line":459,"column":11}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"D","start":17347,"end":17348,"loc":{"start":{"line":459,"column":12},"end":{"line":459,"column":13}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17349,"end":17350,"loc":{"start":{"line":459,"column":14},"end":{"line":459,"column":15}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17350,"end":17351,"loc":{"start":{"line":459,"column":15},"end":{"line":459,"column":16}}},{"type":"CommentLine","value":" For synchronous updating of the grid: compute updated values in a copy","start":17354,"end":17427,"loc":{"start":{"line":460,"column":2},"end":{"line":460,"column":75}}},{"type":"CommentLine","value":" of the current pixels","start":17430,"end":17454,"loc":{"start":{"line":461,"column":2},"end":{"line":461,"column":26}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":17457,"end":17459,"loc":{"start":{"line":462,"column":2},"end":{"line":462,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17459,"end":17460,"loc":{"start":{"line":462,"column":4},"end":{"line":462,"column":5}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":17461,"end":17462,"loc":{"start":{"line":462,"column":6},"end":{"line":462,"column":7}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":17463,"end":17467,"loc":{"start":{"line":462,"column":8},"end":{"line":462,"column":12}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17467,"end":17468,"loc":{"start":{"line":462,"column":12},"end":{"line":462,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelsbuffer","start":17468,"end":17481,"loc":{"start":{"line":462,"column":13},"end":{"line":462,"column":26}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17482,"end":17483,"loc":{"start":{"line":462,"column":27},"end":{"line":462,"column":28}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":17484,"end":17488,"loc":{"start":{"line":462,"column":29},"end":{"line":462,"column":33}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17488,"end":17489,"loc":{"start":{"line":462,"column":33},"end":{"line":462,"column":34}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixelsBuffer","start":17489,"end":17501,"loc":{"start":{"line":462,"column":34},"end":{"line":462,"column":46}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17501,"end":17502,"loc":{"start":{"line":462,"column":46},"end":{"line":462,"column":47}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17502,"end":17503,"loc":{"start":{"line":462,"column":47},"end":{"line":462,"column":48}}},{"type":{"label":"for","keyword":"for","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":true,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"for","start":17506,"end":17509,"loc":{"start":{"line":463,"column":2},"end":{"line":463,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17509,"end":17510,"loc":{"start":{"line":463,"column":5},"end":{"line":463,"column":6}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":17511,"end":17514,"loc":{"start":{"line":463,"column":7},"end":{"line":463,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":17515,"end":17516,"loc":{"start":{"line":463,"column":11},"end":{"line":463,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"of","start":17517,"end":17519,"loc":{"start":{"line":463,"column":13},"end":{"line":463,"column":15}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":17520,"end":17524,"loc":{"start":{"line":463,"column":16},"end":{"line":463,"column":20}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17524,"end":17525,"loc":{"start":{"line":463,"column":20},"end":{"line":463,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixelsi","start":17525,"end":17532,"loc":{"start":{"line":463,"column":21},"end":{"line":463,"column":28}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17532,"end":17533,"loc":{"start":{"line":463,"column":28},"end":{"line":463,"column":29}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17533,"end":17534,"loc":{"start":{"line":463,"column":29},"end":{"line":463,"column":30}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17535,"end":17536,"loc":{"start":{"line":463,"column":31},"end":{"line":463,"column":32}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17536,"end":17537,"loc":{"start":{"line":463,"column":32},"end":{"line":463,"column":33}}},{"type":"CommentLine","value":" Diffusion: new value is current value + change.","start":17541,"end":17591,"loc":{"start":{"line":464,"column":3},"end":{"line":464,"column":53}}},{"type":"CommentLine","value":" the change is given by the diffusion coefficient D times the laplacian.","start":17595,"end":17669,"loc":{"start":{"line":465,"column":3},"end":{"line":465,"column":77}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":17673,"end":17677,"loc":{"start":{"line":466,"column":3},"end":{"line":466,"column":7}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17677,"end":17678,"loc":{"start":{"line":466,"column":7},"end":{"line":466,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelsbuffer","start":17678,"end":17691,"loc":{"start":{"line":466,"column":8},"end":{"line":466,"column":21}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17691,"end":17692,"loc":{"start":{"line":466,"column":21},"end":{"line":466,"column":22}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":17692,"end":17693,"loc":{"start":{"line":466,"column":22},"end":{"line":466,"column":23}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17693,"end":17694,"loc":{"start":{"line":466,"column":23},"end":{"line":466,"column":24}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":17695,"end":17696,"loc":{"start":{"line":466,"column":25},"end":{"line":466,"column":26}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":17697,"end":17701,"loc":{"start":{"line":466,"column":27},"end":{"line":466,"column":31}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17701,"end":17702,"loc":{"start":{"line":466,"column":31},"end":{"line":466,"column":32}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixti","start":17702,"end":17707,"loc":{"start":{"line":466,"column":32},"end":{"line":466,"column":37}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17707,"end":17708,"loc":{"start":{"line":466,"column":37},"end":{"line":466,"column":38}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":17709,"end":17710,"loc":{"start":{"line":466,"column":39},"end":{"line":466,"column":40}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17711,"end":17712,"loc":{"start":{"line":466,"column":41},"end":{"line":466,"column":42}}},{"type":{"label":"+/-","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":9,"updateContext":null},"value":"+","start":17713,"end":17714,"loc":{"start":{"line":466,"column":43},"end":{"line":466,"column":44}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"D","start":17715,"end":17716,"loc":{"start":{"line":466,"column":45},"end":{"line":466,"column":46}}},{"type":{"label":"*","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":10,"updateContext":null},"value":"*","start":17717,"end":17718,"loc":{"start":{"line":466,"column":47},"end":{"line":466,"column":48}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":17719,"end":17723,"loc":{"start":{"line":466,"column":49},"end":{"line":466,"column":53}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17723,"end":17724,"loc":{"start":{"line":466,"column":53},"end":{"line":466,"column":54}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"laplaciani","start":17724,"end":17734,"loc":{"start":{"line":466,"column":54},"end":{"line":466,"column":64}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17734,"end":17735,"loc":{"start":{"line":466,"column":64},"end":{"line":466,"column":65}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":17736,"end":17737,"loc":{"start":{"line":466,"column":66},"end":{"line":466,"column":67}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17738,"end":17739,"loc":{"start":{"line":466,"column":68},"end":{"line":466,"column":69}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17742,"end":17743,"loc":{"start":{"line":467,"column":2},"end":{"line":467,"column":3}}},{"type":"CommentLine","value":" swap the copy and the original","start":17746,"end":17779,"loc":{"start":{"line":468,"column":2},"end":{"line":468,"column":35}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17782,"end":17783,"loc":{"start":{"line":469,"column":2},"end":{"line":469,"column":3}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":17783,"end":17787,"loc":{"start":{"line":469,"column":3},"end":{"line":469,"column":7}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17787,"end":17788,"loc":{"start":{"line":469,"column":7},"end":{"line":469,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelsbuffer","start":17788,"end":17801,"loc":{"start":{"line":469,"column":8},"end":{"line":469,"column":21}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17801,"end":17802,"loc":{"start":{"line":469,"column":21},"end":{"line":469,"column":22}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":17803,"end":17807,"loc":{"start":{"line":469,"column":23},"end":{"line":469,"column":27}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17807,"end":17808,"loc":{"start":{"line":469,"column":27},"end":{"line":469,"column":28}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":17808,"end":17815,"loc":{"start":{"line":469,"column":28},"end":{"line":469,"column":35}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17815,"end":17816,"loc":{"start":{"line":469,"column":35},"end":{"line":469,"column":36}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":17817,"end":17818,"loc":{"start":{"line":469,"column":37},"end":{"line":469,"column":38}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17819,"end":17820,"loc":{"start":{"line":469,"column":39},"end":{"line":469,"column":40}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":17820,"end":17824,"loc":{"start":{"line":469,"column":40},"end":{"line":469,"column":44}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17824,"end":17825,"loc":{"start":{"line":469,"column":44},"end":{"line":469,"column":45}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":17825,"end":17832,"loc":{"start":{"line":469,"column":45},"end":{"line":469,"column":52}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17832,"end":17833,"loc":{"start":{"line":469,"column":52},"end":{"line":469,"column":53}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":17834,"end":17838,"loc":{"start":{"line":469,"column":54},"end":{"line":469,"column":58}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17838,"end":17839,"loc":{"start":{"line":469,"column":58},"end":{"line":469,"column":59}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelsbuffer","start":17839,"end":17852,"loc":{"start":{"line":469,"column":59},"end":{"line":469,"column":72}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":17852,"end":17853,"loc":{"start":{"line":469,"column":72},"end":{"line":469,"column":73}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":17855,"end":17856,"loc":{"start":{"line":470,"column":1},"end":{"line":470,"column":2}}},{"type":"CommentBlock","value":"* Function that updates a gridpoint depending on its current value and\n\t * that of its neighbors.\n\t * @typedef {function} updatePixelFunction\n\t * @param {ArrayCoordinate} p - pixel to update\n\t * @param {ArrayCoordinate[]} neighbors - coordinates of neighbors of p\n\t * @return {number} value - the updated value, based on the current value\n\t * of p and its neighbors.\n\t ","start":17861,"end":18234,"loc":{"start":{"line":473,"column":1},"end":{"line":480,"column":4}}},{"type":"CommentBlock","value":"* Apply a function to all pixel values on the grid. It acts on\n\t * this._pixels, which is implemented in the grid subclass.\n\t * @param {updatePixelFunction} f - the function to apply to each pixel. ","start":18237,"end":18439,"loc":{"start":{"line":482,"column":1},"end":{"line":484,"column":76}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"applyLocally","start":18441,"end":18453,"loc":{"start":{"line":485,"column":1},"end":{"line":485,"column":13}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18453,"end":18454,"loc":{"start":{"line":485,"column":13},"end":{"line":485,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"f","start":18455,"end":18456,"loc":{"start":{"line":485,"column":15},"end":{"line":485,"column":16}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18457,"end":18458,"loc":{"start":{"line":485,"column":17},"end":{"line":485,"column":18}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18458,"end":18459,"loc":{"start":{"line":485,"column":18},"end":{"line":485,"column":19}}},{"type":{"label":"if","keyword":"if","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"if","start":18462,"end":18464,"loc":{"start":{"line":486,"column":2},"end":{"line":486,"column":4}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18464,"end":18465,"loc":{"start":{"line":486,"column":4},"end":{"line":486,"column":5}}},{"type":{"label":"prefix","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":true,"postfix":false,"binop":null,"updateContext":null},"value":"!","start":18466,"end":18467,"loc":{"start":{"line":486,"column":6},"end":{"line":486,"column":7}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":18468,"end":18472,"loc":{"start":{"line":486,"column":8},"end":{"line":486,"column":12}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18472,"end":18473,"loc":{"start":{"line":486,"column":12},"end":{"line":486,"column":13}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelsbuffer","start":18473,"end":18486,"loc":{"start":{"line":486,"column":13},"end":{"line":486,"column":26}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18487,"end":18488,"loc":{"start":{"line":486,"column":27},"end":{"line":486,"column":28}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":18489,"end":18493,"loc":{"start":{"line":486,"column":29},"end":{"line":486,"column":33}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18493,"end":18494,"loc":{"start":{"line":486,"column":33},"end":{"line":486,"column":34}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixelsBuffer","start":18494,"end":18506,"loc":{"start":{"line":486,"column":34},"end":{"line":486,"column":46}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18506,"end":18507,"loc":{"start":{"line":486,"column":46},"end":{"line":486,"column":47}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18507,"end":18508,"loc":{"start":{"line":486,"column":47},"end":{"line":486,"column":48}}},{"type":{"label":"for","keyword":"for","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":true,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"for","start":18511,"end":18514,"loc":{"start":{"line":487,"column":2},"end":{"line":487,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18514,"end":18515,"loc":{"start":{"line":487,"column":5},"end":{"line":487,"column":6}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":18516,"end":18519,"loc":{"start":{"line":487,"column":7},"end":{"line":487,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":18520,"end":18521,"loc":{"start":{"line":487,"column":11},"end":{"line":487,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"of","start":18522,"end":18524,"loc":{"start":{"line":487,"column":13},"end":{"line":487,"column":15}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":18525,"end":18529,"loc":{"start":{"line":487,"column":16},"end":{"line":487,"column":20}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18529,"end":18530,"loc":{"start":{"line":487,"column":20},"end":{"line":487,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixelsi","start":18530,"end":18537,"loc":{"start":{"line":487,"column":21},"end":{"line":487,"column":28}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18537,"end":18538,"loc":{"start":{"line":487,"column":28},"end":{"line":487,"column":29}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18538,"end":18539,"loc":{"start":{"line":487,"column":29},"end":{"line":487,"column":30}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18540,"end":18541,"loc":{"start":{"line":487,"column":31},"end":{"line":487,"column":32}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18541,"end":18542,"loc":{"start":{"line":487,"column":32},"end":{"line":487,"column":33}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":18546,"end":18549,"loc":{"start":{"line":488,"column":3},"end":{"line":488,"column":6}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":18550,"end":18551,"loc":{"start":{"line":488,"column":7},"end":{"line":488,"column":8}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":18552,"end":18553,"loc":{"start":{"line":488,"column":9},"end":{"line":488,"column":10}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":18554,"end":18558,"loc":{"start":{"line":488,"column":11},"end":{"line":488,"column":15}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18558,"end":18559,"loc":{"start":{"line":488,"column":15},"end":{"line":488,"column":16}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i2p","start":18559,"end":18562,"loc":{"start":{"line":488,"column":16},"end":{"line":488,"column":19}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18562,"end":18563,"loc":{"start":{"line":488,"column":19},"end":{"line":488,"column":20}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":18563,"end":18564,"loc":{"start":{"line":488,"column":20},"end":{"line":488,"column":21}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18564,"end":18565,"loc":{"start":{"line":488,"column":21},"end":{"line":488,"column":22}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":18569,"end":18573,"loc":{"start":{"line":489,"column":3},"end":{"line":489,"column":7}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18573,"end":18574,"loc":{"start":{"line":489,"column":7},"end":{"line":489,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelsbuffer","start":18574,"end":18587,"loc":{"start":{"line":489,"column":8},"end":{"line":489,"column":21}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18587,"end":18588,"loc":{"start":{"line":489,"column":21},"end":{"line":489,"column":22}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":18588,"end":18589,"loc":{"start":{"line":489,"column":22},"end":{"line":489,"column":23}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18589,"end":18590,"loc":{"start":{"line":489,"column":23},"end":{"line":489,"column":24}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":18591,"end":18592,"loc":{"start":{"line":489,"column":25},"end":{"line":489,"column":26}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"f","start":18593,"end":18594,"loc":{"start":{"line":489,"column":27},"end":{"line":489,"column":28}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18594,"end":18595,"loc":{"start":{"line":489,"column":28},"end":{"line":489,"column":29}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":18596,"end":18597,"loc":{"start":{"line":489,"column":30},"end":{"line":489,"column":31}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18597,"end":18598,"loc":{"start":{"line":489,"column":31},"end":{"line":489,"column":32}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":18599,"end":18603,"loc":{"start":{"line":489,"column":33},"end":{"line":489,"column":37}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18603,"end":18604,"loc":{"start":{"line":489,"column":37},"end":{"line":489,"column":38}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"neigh","start":18604,"end":18609,"loc":{"start":{"line":489,"column":38},"end":{"line":489,"column":43}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18609,"end":18610,"loc":{"start":{"line":489,"column":43},"end":{"line":489,"column":44}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"p","start":18610,"end":18611,"loc":{"start":{"line":489,"column":44},"end":{"line":489,"column":45}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18611,"end":18612,"loc":{"start":{"line":489,"column":45},"end":{"line":489,"column":46}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18613,"end":18614,"loc":{"start":{"line":489,"column":47},"end":{"line":489,"column":48}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18618,"end":18619,"loc":{"start":{"line":490,"column":2},"end":{"line":490,"column":3}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18622,"end":18623,"loc":{"start":{"line":491,"column":2},"end":{"line":491,"column":3}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":18623,"end":18627,"loc":{"start":{"line":491,"column":3},"end":{"line":491,"column":7}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18627,"end":18628,"loc":{"start":{"line":491,"column":7},"end":{"line":491,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelsbuffer","start":18628,"end":18641,"loc":{"start":{"line":491,"column":8},"end":{"line":491,"column":21}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18641,"end":18642,"loc":{"start":{"line":491,"column":21},"end":{"line":491,"column":22}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":18643,"end":18647,"loc":{"start":{"line":491,"column":23},"end":{"line":491,"column":27}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18647,"end":18648,"loc":{"start":{"line":491,"column":27},"end":{"line":491,"column":28}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":18648,"end":18655,"loc":{"start":{"line":491,"column":28},"end":{"line":491,"column":35}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18655,"end":18656,"loc":{"start":{"line":491,"column":35},"end":{"line":491,"column":36}}},{"type":{"label":"=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"=","start":18657,"end":18658,"loc":{"start":{"line":491,"column":37},"end":{"line":491,"column":38}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18659,"end":18660,"loc":{"start":{"line":491,"column":39},"end":{"line":491,"column":40}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":18660,"end":18664,"loc":{"start":{"line":491,"column":40},"end":{"line":491,"column":44}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18664,"end":18665,"loc":{"start":{"line":491,"column":44},"end":{"line":491,"column":45}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":18665,"end":18672,"loc":{"start":{"line":491,"column":45},"end":{"line":491,"column":52}}},{"type":{"label":",","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18672,"end":18673,"loc":{"start":{"line":491,"column":52},"end":{"line":491,"column":53}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":18674,"end":18678,"loc":{"start":{"line":491,"column":54},"end":{"line":491,"column":58}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18678,"end":18679,"loc":{"start":{"line":491,"column":58},"end":{"line":491,"column":59}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixelsbuffer","start":18679,"end":18692,"loc":{"start":{"line":491,"column":59},"end":{"line":491,"column":72}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18692,"end":18693,"loc":{"start":{"line":491,"column":72},"end":{"line":491,"column":73}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18695,"end":18696,"loc":{"start":{"line":492,"column":1},"end":{"line":492,"column":2}}},{"type":"CommentBlock","value":"* Multiply all pixel values on the grid with a constant factor r.\n\t * This method acts on this._pixels, which is implemented in the grid\n\t * subclass.\n\t * @param {number} r the multiplication factor. ","start":18700,"end":18904,"loc":{"start":{"line":494,"column":1},"end":{"line":497,"column":51}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"multiplyBy","start":18906,"end":18916,"loc":{"start":{"line":498,"column":1},"end":{"line":498,"column":11}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18916,"end":18917,"loc":{"start":{"line":498,"column":11},"end":{"line":498,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"r","start":18918,"end":18919,"loc":{"start":{"line":498,"column":13},"end":{"line":498,"column":14}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18920,"end":18921,"loc":{"start":{"line":498,"column":15},"end":{"line":498,"column":16}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18921,"end":18922,"loc":{"start":{"line":498,"column":16},"end":{"line":498,"column":17}}},{"type":{"label":"for","keyword":"for","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":true,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"for","start":18925,"end":18928,"loc":{"start":{"line":499,"column":2},"end":{"line":499,"column":5}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18928,"end":18929,"loc":{"start":{"line":499,"column":5},"end":{"line":499,"column":6}}},{"type":{"label":"let","keyword":"let","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"let","start":18930,"end":18933,"loc":{"start":{"line":499,"column":7},"end":{"line":499,"column":10}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":18934,"end":18935,"loc":{"start":{"line":499,"column":11},"end":{"line":499,"column":12}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"of","start":18936,"end":18938,"loc":{"start":{"line":499,"column":13},"end":{"line":499,"column":15}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":18939,"end":18943,"loc":{"start":{"line":499,"column":16},"end":{"line":499,"column":20}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18943,"end":18944,"loc":{"start":{"line":499,"column":20},"end":{"line":499,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"pixelsi","start":18944,"end":18951,"loc":{"start":{"line":499,"column":21},"end":{"line":499,"column":28}}},{"type":{"label":"(","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18951,"end":18952,"loc":{"start":{"line":499,"column":28},"end":{"line":499,"column":29}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18952,"end":18953,"loc":{"start":{"line":499,"column":29},"end":{"line":499,"column":30}}},{"type":{"label":")","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18954,"end":18955,"loc":{"start":{"line":499,"column":31},"end":{"line":499,"column":32}}},{"type":{"label":"{","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18955,"end":18956,"loc":{"start":{"line":499,"column":32},"end":{"line":499,"column":33}}},{"type":{"label":"this","keyword":"this","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"this","start":18960,"end":18964,"loc":{"start":{"line":500,"column":3},"end":{"line":500,"column":7}}},{"type":{"label":".","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18964,"end":18965,"loc":{"start":{"line":500,"column":7},"end":{"line":500,"column":8}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"_pixels","start":18965,"end":18972,"loc":{"start":{"line":500,"column":8},"end":{"line":500,"column":15}}},{"type":{"label":"[","beforeExpr":true,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18972,"end":18973,"loc":{"start":{"line":500,"column":15},"end":{"line":500,"column":16}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"i","start":18973,"end":18974,"loc":{"start":{"line":500,"column":16},"end":{"line":500,"column":17}}},{"type":{"label":"]","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":18974,"end":18975,"loc":{"start":{"line":500,"column":17},"end":{"line":500,"column":18}}},{"type":{"label":"_=","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":true,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"*=","start":18976,"end":18978,"loc":{"start":{"line":500,"column":19},"end":{"line":500,"column":21}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"r","start":18979,"end":18980,"loc":{"start":{"line":500,"column":22},"end":{"line":500,"column":23}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18983,"end":18984,"loc":{"start":{"line":501,"column":2},"end":{"line":501,"column":3}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18986,"end":18987,"loc":{"start":{"line":502,"column":1},"end":{"line":502,"column":2}}},{"type":{"label":"}","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"start":18989,"end":18990,"loc":{"start":{"line":504,"column":0},"end":{"line":504,"column":1}}},{"type":{"label":"export","keyword":"export","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"export","start":18992,"end":18998,"loc":{"start":{"line":506,"column":0},"end":{"line":506,"column":6}}},{"type":{"label":"default","keyword":"default","beforeExpr":true,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"value":"default","start":18999,"end":19006,"loc":{"start":{"line":506,"column":7},"end":{"line":506,"column":14}}},{"type":{"label":"name","beforeExpr":false,"startsExpr":true,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null},"value":"Grid","start":19007,"end":19011,"loc":{"start":{"line":506,"column":15},"end":{"line":506,"column":19}}},{"type":{"label":"eof","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":19012,"end":19012,"loc":{"start":{"line":507,"column":0},"end":{"line":507,"column":0}}}]}