{"type":"File","start":0,"end":1242,"loc":{"start":{"line":1,"column":0},"end":{"line":31,"column":2}},"program":{"type":"Program","start":0,"end":1242,"loc":{"start":{"line":1,"column":0},"end":{"line":31,"column":2}},"sourceType":"module","body":[],"directives":[],"leadingComments":null,"innerComments":[{"type":"CommentBlock","value":"* An array with the grid size in pixels for each dimension.\nEach element must be a positive integer.\nFor example, for GridSize array g, g[0] is the size in x-dimension, g[1] in y, etc.\n\n@typedef {number[]} GridSize\n","start":0,"end":219,"loc":{"start":{"line":1,"column":0},"end":{"line":6,"column":2}}},{"type":"CommentBlock","value":"* Array coordinates to a pixel on the grid.\n\nWe generally use two types of coordinates. An ArrayCoordinate contains the 'regular'\n[x,y] or [x,y,z] pointer to a position on the grid, which is intuitive to use.\n\nHowever, for speed, models of class {@link GridBasedModel} often use a different type\nof coordinates called {@link IndexCoordinate}. See methods {@link p2i} and {@link i2p}\nof the appropriate grid subclass for conversions between the two.\n\n@typedef {number[]} ArrayCoordinate\n","start":221,"end":711,"loc":{"start":{"line":8,"column":0},"end":{"line":18,"column":2}}},{"type":"CommentBlock","value":"* Index coordinate to a pixel on the grid.\n\nWe generally use two types of coordinates. An {@link ArrayCoordinate} contains the 'regular'\n[x,y] or [x,y,z] pointer to a position on the grid, which is intuitive to use.\n\nHowever, for speed, models of class {@link GridBasedModel} often use a different type\nof coordinates called IndexCoordinate, which is a non-negative integer number. \nSee methods {@link p2i} and {@link i2p} of the appropriate grid subclass for \nconversions between the two.\n\n@typedef {number} IndexCoordinate\n","start":713,"end":1242,"loc":{"start":{"line":20,"column":0},"end":{"line":31,"column":2}}}]},"comments":[{"type":"CommentBlock","value":"* An array with the grid size in pixels for each dimension.\nEach element must be a positive integer.\nFor example, for GridSize array g, g[0] is the size in x-dimension, g[1] in y, etc.\n\n@typedef {number[]} GridSize\n","start":0,"end":219,"loc":{"start":{"line":1,"column":0},"end":{"line":6,"column":2}}},{"type":"CommentBlock","value":"* Array coordinates to a pixel on the grid.\n\nWe generally use two types of coordinates. An ArrayCoordinate contains the 'regular'\n[x,y] or [x,y,z] pointer to a position on the grid, which is intuitive to use.\n\nHowever, for speed, models of class {@link GridBasedModel} often use a different type\nof coordinates called {@link IndexCoordinate}. See methods {@link p2i} and {@link i2p}\nof the appropriate grid subclass for conversions between the two.\n\n@typedef {number[]} ArrayCoordinate\n","start":221,"end":711,"loc":{"start":{"line":8,"column":0},"end":{"line":18,"column":2}}},{"type":"CommentBlock","value":"* Index coordinate to a pixel on the grid.\n\nWe generally use two types of coordinates. An {@link ArrayCoordinate} contains the 'regular'\n[x,y] or [x,y,z] pointer to a position on the grid, which is intuitive to use.\n\nHowever, for speed, models of class {@link GridBasedModel} often use a different type\nof coordinates called IndexCoordinate, which is a non-negative integer number. \nSee methods {@link p2i} and {@link i2p} of the appropriate grid subclass for \nconversions between the two.\n\n@typedef {number} IndexCoordinate\n","start":713,"end":1242,"loc":{"start":{"line":20,"column":0},"end":{"line":31,"column":2}}}],"tokens":[{"type":"CommentBlock","value":"* An array with the grid size in pixels for each dimension.\nEach element must be a positive integer.\nFor example, for GridSize array g, g[0] is the size in x-dimension, g[1] in y, etc.\n\n@typedef {number[]} GridSize\n","start":0,"end":219,"loc":{"start":{"line":1,"column":0},"end":{"line":6,"column":2}}},{"type":"CommentBlock","value":"* Array coordinates to a pixel on the grid.\n\nWe generally use two types of coordinates. An ArrayCoordinate contains the 'regular'\n[x,y] or [x,y,z] pointer to a position on the grid, which is intuitive to use.\n\nHowever, for speed, models of class {@link GridBasedModel} often use a different type\nof coordinates called {@link IndexCoordinate}. See methods {@link p2i} and {@link i2p}\nof the appropriate grid subclass for conversions between the two.\n\n@typedef {number[]} ArrayCoordinate\n","start":221,"end":711,"loc":{"start":{"line":8,"column":0},"end":{"line":18,"column":2}}},{"type":"CommentBlock","value":"* Index coordinate to a pixel on the grid.\n\nWe generally use two types of coordinates. An {@link ArrayCoordinate} contains the 'regular'\n[x,y] or [x,y,z] pointer to a position on the grid, which is intuitive to use.\n\nHowever, for speed, models of class {@link GridBasedModel} often use a different type\nof coordinates called IndexCoordinate, which is a non-negative integer number. \nSee methods {@link p2i} and {@link i2p} of the appropriate grid subclass for \nconversions between the two.\n\n@typedef {number} IndexCoordinate\n","start":713,"end":1242,"loc":{"start":{"line":20,"column":0},"end":{"line":31,"column":2}}},{"type":{"label":"eof","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1242,"end":1242,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}}]}