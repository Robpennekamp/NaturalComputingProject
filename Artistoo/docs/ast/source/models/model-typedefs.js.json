{"type":"File","start":0,"end":1034,"loc":{"start":{"line":1,"column":0},"end":{"line":23,"column":0}},"program":{"type":"Program","start":0,"end":1034,"loc":{"start":{"line":1,"column":0},"end":{"line":23,"column":0}},"sourceType":"module","body":[],"directives":[],"leadingComments":null,"innerComments":[{"type":"CommentBlock","value":"* \nA unique identifier number of a cell on the grid. In classic CPM language, this is often\nreferred to as 'type', but we use cellid to prevent confusion with the biological meaning\nof 'celltype' (which we call {@link CellKind} to prevent confusion).\n\nThe cellid must be a positive integer. The number 0 is reserved for the background.\n@typedef {number} CellId\n","start":0,"end":365,"loc":{"start":{"line":1,"column":0},"end":{"line":8,"column":2}}},{"type":"CommentBlock","value":"* \nIndex specifying the 'kind' of cell we are dealing with. This corresponds to the biological\nidea of a 'celltype'; so the CPM parameters used depend on the cellkind. Convention is that\nwe store CPM parameters in number arrays param = number[], where param[i] is the parameter\nvalue for cellkind i. \n\nThis way, we can have multiple cells (each with their own {@link CellId}) of the same \"cellkind\", that\nget the same parameters (e.g. the same target volume). But we can also have multiple\ncellkinds on the grid, e.g. a small and a large cellkind.\n\nThe cellkind must be a positive integer. The number 0 is reserved for the background.\n@typedef {number} CellKind\n","start":367,"end":1033,"loc":{"start":{"line":10,"column":0},"end":{"line":22,"column":2}}}]},"comments":[{"type":"CommentBlock","value":"* \nA unique identifier number of a cell on the grid. In classic CPM language, this is often\nreferred to as 'type', but we use cellid to prevent confusion with the biological meaning\nof 'celltype' (which we call {@link CellKind} to prevent confusion).\n\nThe cellid must be a positive integer. The number 0 is reserved for the background.\n@typedef {number} CellId\n","start":0,"end":365,"loc":{"start":{"line":1,"column":0},"end":{"line":8,"column":2}}},{"type":"CommentBlock","value":"* \nIndex specifying the 'kind' of cell we are dealing with. This corresponds to the biological\nidea of a 'celltype'; so the CPM parameters used depend on the cellkind. Convention is that\nwe store CPM parameters in number arrays param = number[], where param[i] is the parameter\nvalue for cellkind i. \n\nThis way, we can have multiple cells (each with their own {@link CellId}) of the same \"cellkind\", that\nget the same parameters (e.g. the same target volume). But we can also have multiple\ncellkinds on the grid, e.g. a small and a large cellkind.\n\nThe cellkind must be a positive integer. The number 0 is reserved for the background.\n@typedef {number} CellKind\n","start":367,"end":1033,"loc":{"start":{"line":10,"column":0},"end":{"line":22,"column":2}}}],"tokens":[{"type":"CommentBlock","value":"* \nA unique identifier number of a cell on the grid. In classic CPM language, this is often\nreferred to as 'type', but we use cellid to prevent confusion with the biological meaning\nof 'celltype' (which we call {@link CellKind} to prevent confusion).\n\nThe cellid must be a positive integer. The number 0 is reserved for the background.\n@typedef {number} CellId\n","start":0,"end":365,"loc":{"start":{"line":1,"column":0},"end":{"line":8,"column":2}}},{"type":"CommentBlock","value":"* \nIndex specifying the 'kind' of cell we are dealing with. This corresponds to the biological\nidea of a 'celltype'; so the CPM parameters used depend on the cellkind. Convention is that\nwe store CPM parameters in number arrays param = number[], where param[i] is the parameter\nvalue for cellkind i. \n\nThis way, we can have multiple cells (each with their own {@link CellId}) of the same \"cellkind\", that\nget the same parameters (e.g. the same target volume). But we can also have multiple\ncellkinds on the grid, e.g. a small and a large cellkind.\n\nThe cellkind must be a positive integer. The number 0 is reserved for the background.\n@typedef {number} CellKind\n","start":367,"end":1033,"loc":{"start":{"line":10,"column":0},"end":{"line":22,"column":2}}},{"type":{"label":"eof","beforeExpr":false,"startsExpr":false,"rightAssociative":false,"isLoop":false,"isAssign":false,"prefix":false,"postfix":false,"binop":null,"updateContext":null},"start":1034,"end":1034,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":0}}}]}