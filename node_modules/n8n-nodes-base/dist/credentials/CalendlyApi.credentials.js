"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CalendlyApi = void 0;
const getAuthenticationType = (data) => {
    return data.includes('.') ? 'accessToken' : 'apiKey';
};
class CalendlyApi {
    constructor() {
        this.name = 'calendlyApi';
        this.displayName = 'Calendly API';
        this.documentationUrl = 'calendly';
        this.properties = [
            {
                displayName: 'API Key or Personal Access Token',
                name: 'apiKey',
                type: 'string',
                typeOptions: { password: true },
                default: '',
            },
        ];
        this.test = {
            request: {
                baseURL: 'https://calendly.com',
                url: '/api/v1/users/me',
            },
        };
    }
    async authenticate(credentials, requestOptions) {
        const { apiKey } = credentials;
        const tokenType = getAuthenticationType(apiKey);
        if (tokenType === 'accessToken') {
            requestOptions.headers.Authorization = `Bearer ${apiKey}`;
        }
        else {
            requestOptions.headers['X-TOKEN'] = apiKey;
        }
        return requestOptions;
    }
}
exports.CalendlyApi = CalendlyApi;
//# sourceMappingURL=CalendlyApi.credentials.js.map