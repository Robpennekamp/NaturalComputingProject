"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetabaseApi = void 0;
class MetabaseApi {
    constructor() {
        this.name = 'metabaseApi';
        this.displayName = 'Metabase API';
        this.documentationUrl = 'metabase';
        this.properties = [
            {
                displayName: 'Session Token',
                name: 'sessionToken',
                type: 'hidden',
                typeOptions: {
                    expirable: true,
                },
                default: '',
            },
            {
                displayName: 'URL',
                name: 'url',
                type: 'string',
                default: '',
            },
            {
                displayName: 'Username',
                name: 'username',
                type: 'string',
                default: '',
            },
            {
                displayName: 'Password',
                name: 'password',
                type: 'string',
                typeOptions: {
                    password: true,
                },
                default: '',
            },
        ];
        this.authenticate = {
            type: 'generic',
            properties: {
                headers: {
                    'X-Metabase-Session': '={{$credentials.sessionToken}}',
                },
            },
        };
        this.test = {
            request: {
                baseURL: '={{$credentials?.url}}',
                url: '/api/user/current',
            },
        };
    }
    async preAuthentication(credentials) {
        const url = credentials.url;
        const { id } = (await this.helpers.httpRequest({
            method: 'POST',
            url: `${url.endsWith('/') ? url.slice(0, -1) : url}/api/session`,
            body: {
                username: credentials.username,
                password: credentials.password,
            },
        }));
        return { sessionToken: id };
    }
}
exports.MetabaseApi = MetabaseApi;
//# sourceMappingURL=MetabaseApi.credentials.js.map