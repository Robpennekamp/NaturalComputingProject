"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stravaApiRequestAllItems = exports.stravaApiRequest = void 0;
const n8n_workflow_1 = require("n8n-workflow");
async function stravaApiRequest(method, resource, body = {}, qs = {}, uri, headers = {}) {
    var _a;
    const options = {
        method,
        form: body,
        qs,
        uri: uri || `https://www.strava.com/api/v3${resource}`,
        json: true,
    };
    try {
        if (Object.keys(headers).length !== 0) {
            options.headers = Object.assign({}, options.headers, headers);
        }
        if (Object.keys(body).length === 0) {
            delete options.body;
        }
        if (this.getNode().type.includes('Trigger') && resource.includes('/push_subscriptions')) {
            const credentials = await this.getCredentials('stravaOAuth2Api');
            if (method === 'GET') {
                qs.client_id = credentials.clientId;
                qs.client_secret = credentials.clientSecret;
            }
            else {
                body.client_id = credentials.clientId;
                body.client_secret = credentials.clientSecret;
            }
            return await ((_a = this.helpers) === null || _a === void 0 ? void 0 : _a.request(options));
        }
        else {
            return await this.helpers.requestOAuth2.call(this, 'stravaOAuth2Api', options, {
                includeCredentialsOnRefreshOnBody: true,
            });
        }
    }
    catch (error) {
        throw new n8n_workflow_1.NodeApiError(this.getNode(), error);
    }
}
exports.stravaApiRequest = stravaApiRequest;
async function stravaApiRequestAllItems(method, resource, body = {}, query = {}) {
    const returnData = [];
    let responseData;
    query.per_page = 30;
    query.page = 1;
    do {
        responseData = await stravaApiRequest.call(this, method, resource, body, query);
        query.page++;
        returnData.push.apply(returnData, responseData);
    } while (responseData.length !== 0);
    return returnData;
}
exports.stravaApiRequestAllItems = stravaApiRequestAllItems;
//# sourceMappingURL=GenericFunctions.js.map