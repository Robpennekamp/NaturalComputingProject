import type { IDataObject, IExecuteFunctions, IHookFunctions, ILoadOptionsFunctions, INodeExecutionData, IWebhookFunctions } from 'n8n-workflow';
import type { OnfleetAdmins, OnfleetCloneTask, OnfleetDestination, OnfleetHubs, OnfleetListTaskFilters, OnfleetRecipient, OnfleetTask, OnfleetTaskComplete, OnfleetTaskUpdate, OnfleetTeamAutoDispatch, OnfleetTeams, OnfleetWebhook, OnfleetWorker, OnfleetWorkerEstimates, OnfleetWorkerFilter, OnfleetWorkerSchedule } from './interfaces';
export declare class Onfleet {
    static getDestinationFields(this: IWebhookFunctions | IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions, item: number, operation: string, shared?: {
        parent: string;
    } | boolean): OnfleetDestination | OnfleetDestination[] | null;
    static getAdminFields(this: IExecuteFunctions, item: number, operation: string): OnfleetAdmins | null;
    static getHubFields(this: IExecuteFunctions, item: number, operation: string): OnfleetHubs | null;
    static getWorkerFields(this: IExecuteFunctions, item: number, operation: string): OnfleetWorker | OnfleetWorkerFilter | OnfleetWorkerSchedule | null;
    static getWebhookFields(this: IExecuteFunctions, item: number, operation: string): OnfleetWebhook | null;
    static formatRecipient(name: string, phone: string, additionalFields: IDataObject, options?: IDataObject): OnfleetRecipient;
    static getRecipientFields(this: IWebhookFunctions | IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions, item: number, operation: string, shared?: boolean): OnfleetRecipient | OnfleetRecipient[] | null;
    static getTaskFields(this: IWebhookFunctions | IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions, item: number, operation: string): OnfleetListTaskFilters | OnfleetTask | OnfleetCloneTask | OnfleetTaskComplete | OnfleetTaskUpdate | null;
    static getTeamFields(this: IExecuteFunctions, item: number, operation: string): OnfleetTeams | OnfleetWorkerEstimates | OnfleetTeamAutoDispatch | null;
    static executeTaskOperations(this: IWebhookFunctions | IHookFunctions | IExecuteFunctions | ILoadOptionsFunctions, resource: string, operation: string, items: INodeExecutionData[]): Promise<IDataObject | IDataObject[]>;
    static executeDestinationOperations(this: IExecuteFunctions, resource: string, operation: string, items: INodeExecutionData[]): Promise<IDataObject | IDataObject[]>;
    static executeOrganizationOperations(this: IExecuteFunctions, resource: string, operation: string, items: INodeExecutionData[]): Promise<IDataObject | IDataObject[]>;
    static executeRecipientOperations(this: IExecuteFunctions, resource: string, operation: string, items: INodeExecutionData[]): Promise<IDataObject | IDataObject[]>;
    static executeAdministratorOperations(this: IExecuteFunctions, resource: string, operation: string, items: INodeExecutionData[]): Promise<IDataObject | IDataObject[]>;
    static executeHubOperations(this: IExecuteFunctions, resource: string, operation: string, items: INodeExecutionData[]): Promise<IDataObject | IDataObject[]>;
    static executeWorkerOperations(this: IExecuteFunctions, resource: string, operation: string, items: INodeExecutionData[]): Promise<IDataObject | IDataObject[]>;
    static executeWebhookOperations(this: IExecuteFunctions, resource: string, operation: string, items: INodeExecutionData[]): Promise<IDataObject | IDataObject[]>;
    static executeContainerOperations(this: IExecuteFunctions, resource: string, operation: string, items: INodeExecutionData[]): Promise<IDataObject | IDataObject[]>;
    static executeTeamOperations(this: IExecuteFunctions, resource: string, operation: string, items: INodeExecutionData[]): Promise<IDataObject | IDataObject[]>;
}
