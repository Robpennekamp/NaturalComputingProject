import type { IExecuteFunctions, IDataObject, INodeExecutionData } from 'n8n-workflow';
import type pgPromise from 'pg-promise';
import type pg from 'pg-promise/typescript/pg-subset';
export declare function getItemsCopy(items: INodeExecutionData[], properties: string[], guardedColumns?: {
    [key: string]: string;
}): IDataObject[];
export declare function getItemCopy(item: INodeExecutionData, properties: string[], guardedColumns?: {
    [key: string]: string;
}): IDataObject;
export declare function generateReturning(pgp: pgPromise.IMain<{}, pg.IClient>, returning: string): string;
export declare function wrapData(data: IDataObject[]): INodeExecutionData[];
export declare function pgQuery(getNodeParam: Function, pgp: pgPromise.IMain<{}, pg.IClient>, db: pgPromise.IDatabase<{}, pg.IClient>, items: INodeExecutionData[], continueOnFail: boolean, overrideMode?: string): Promise<IDataObject[]>;
export declare function pgQueryV2(this: IExecuteFunctions, pgp: pgPromise.IMain<{}, pg.IClient>, db: pgPromise.IDatabase<{}, pg.IClient>, items: INodeExecutionData[], continueOnFail: boolean, overrideMode?: string): Promise<IDataObject[]>;
export declare function pgInsert(getNodeParam: Function, pgp: pgPromise.IMain<{}, pg.IClient>, db: pgPromise.IDatabase<{}, pg.IClient>, items: INodeExecutionData[], continueOnFail: boolean, overrideMode?: string): Promise<IDataObject[]>;
export declare function pgInsertV2(this: IExecuteFunctions, pgp: pgPromise.IMain<{}, pg.IClient>, db: pgPromise.IDatabase<{}, pg.IClient>, items: INodeExecutionData[], continueOnFail: boolean, overrideMode?: string): Promise<IDataObject[]>;
export declare function pgUpdate(getNodeParam: Function, pgp: pgPromise.IMain<{}, pg.IClient>, db: pgPromise.IDatabase<{}, pg.IClient>, items: INodeExecutionData[], continueOnFail?: boolean): Promise<IDataObject[]>;
export declare function pgUpdateV2(this: IExecuteFunctions, pgp: pgPromise.IMain<{}, pg.IClient>, db: pgPromise.IDatabase<{}, pg.IClient>, items: INodeExecutionData[], continueOnFail?: boolean): Promise<IDataObject[]>;
