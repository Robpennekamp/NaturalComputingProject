import type { ICredentialDataDecryptedObject, IDataObject, IExecuteFunctions, IExecuteSingleFunctions, IHookFunctions, ILoadOptionsFunctions, IWebhookFunctions } from 'n8n-workflow';
import type { ICouponLine, IFeeLine, ILineItem, IShoppingLine } from './OrderInterface';
export declare function woocommerceApiRequest(this: IHookFunctions | IExecuteFunctions | IExecuteSingleFunctions | ILoadOptionsFunctions | IWebhookFunctions, method: string, resource: string, body?: any, qs?: IDataObject, uri?: string, option?: IDataObject): Promise<any>;
export declare function woocommerceApiRequestAllItems(this: IExecuteFunctions | ILoadOptionsFunctions | IHookFunctions, method: string, endpoint: string, body?: any, query?: IDataObject): Promise<any>;
export declare function getAutomaticSecret(credentials: ICredentialDataDecryptedObject): string;
export declare function setMetadata(data: IShoppingLine[] | IShoppingLine[] | IFeeLine[] | ILineItem[] | ICouponLine[]): void;
export declare function toSnakeCase(data: IShoppingLine[] | IShoppingLine[] | IFeeLine[] | ILineItem[] | ICouponLine[] | IDataObject): void;
export declare function setFields(fieldsToSet: IDataObject, body: IDataObject): void;
export declare function adjustMetadata(fields: IDataObject & Metadata): (IDataObject & Metadata) | {
    meta_data: {
        key: string;
        value: string;
    }[];
};
type Metadata = {
    meta_data?: {
        meta_data_fields: Array<{
            key: string;
            value: string;
        }>;
    };
};
export {};
