"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.N8n = void 0;
const AuditDescription_1 = require("./AuditDescription");
const CredentialDescription_1 = require("./CredentialDescription");
const ExecutionDescription_1 = require("./ExecutionDescription");
const WorkflowDescription_1 = require("./WorkflowDescription");
const WorkflowLocator_1 = require("./WorkflowLocator");
class N8n {
    constructor() {
        this.description = {
            displayName: 'n8n',
            name: 'n8n',
            icon: 'file:n8n.svg',
            group: ['transform'],
            version: 1,
            subtitle: '={{$parameter["operation"] + ": " + $parameter["resource"]}}',
            description: 'Handle events and perform actions on your n8n instance',
            defaults: {
                name: 'n8n',
            },
            inputs: ['main'],
            outputs: ['main'],
            credentials: [
                {
                    name: 'n8nApi',
                    required: true,
                },
            ],
            requestDefaults: {
                returnFullResponse: true,
                baseURL: '={{ $credentials.baseUrl.replace(new RegExp("/$"), "") }}',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json',
                },
            },
            properties: [
                {
                    displayName: 'Resource',
                    name: 'resource',
                    type: 'options',
                    noDataExpression: true,
                    options: [
                        {
                            name: 'Audit',
                            value: 'audit',
                        },
                        {
                            name: 'Credential',
                            value: 'credential',
                        },
                        {
                            name: 'Execution',
                            value: 'execution',
                        },
                        {
                            name: 'Workflow',
                            value: 'workflow',
                        },
                    ],
                    default: 'workflow',
                },
                ...AuditDescription_1.auditOperations,
                ...AuditDescription_1.auditFields,
                ...CredentialDescription_1.credentialOperations,
                ...CredentialDescription_1.credentialFields,
                ...ExecutionDescription_1.executionOperations,
                ...ExecutionDescription_1.executionFields,
                ...WorkflowDescription_1.workflowOperations,
                ...WorkflowDescription_1.workflowFields,
            ],
        };
        this.methods = {
            listSearch: {
                searchWorkflows: WorkflowLocator_1.searchWorkflows,
            },
        };
    }
}
exports.N8n = N8n;
//# sourceMappingURL=N8n.node.js.map