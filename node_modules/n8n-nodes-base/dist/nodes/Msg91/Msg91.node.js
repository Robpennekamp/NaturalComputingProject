"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Msg91 = void 0;
const n8n_workflow_1 = require("n8n-workflow");
const GenericFunctions_1 = require("./GenericFunctions");
class Msg91 {
    constructor() {
        this.description = {
            displayName: 'MSG91',
            name: 'msg91',
            icon: 'file:msg91.png',
            group: ['transform'],
            version: 1,
            subtitle: '={{$parameter["operation"] + ": " + $parameter["resource"]}}',
            description: 'Sends transactional SMS via MSG91',
            defaults: {
                name: 'MSG91',
            },
            inputs: ['main'],
            outputs: ['main'],
            credentials: [
                {
                    name: 'msg91Api',
                    required: true,
                },
            ],
            properties: [
                {
                    displayName: 'Resource',
                    name: 'resource',
                    type: 'options',
                    noDataExpression: true,
                    options: [
                        {
                            name: 'SMS',
                            value: 'sms',
                        },
                    ],
                    default: 'sms',
                },
                {
                    displayName: 'Operation',
                    name: 'operation',
                    type: 'options',
                    noDataExpression: true,
                    displayOptions: {
                        show: {
                            resource: ['sms'],
                        },
                    },
                    options: [
                        {
                            name: 'Send',
                            value: 'send',
                            description: 'Send SMS',
                            action: 'Send an SMS',
                        },
                    ],
                    default: 'send',
                },
                {
                    displayName: 'Sender ID',
                    name: 'from',
                    type: 'string',
                    default: '',
                    placeholder: '4155238886',
                    required: true,
                    displayOptions: {
                        show: {
                            operation: ['send'],
                            resource: ['sms'],
                        },
                    },
                    description: 'The number from which to send the message',
                },
                {
                    displayName: 'To',
                    name: 'to',
                    type: 'string',
                    default: '',
                    placeholder: '+14155238886',
                    required: true,
                    displayOptions: {
                        show: {
                            operation: ['send'],
                            resource: ['sms'],
                        },
                    },
                    description: 'The number, with coutry code, to which to send the message',
                },
                {
                    displayName: 'Message',
                    name: 'message',
                    type: 'string',
                    default: '',
                    required: true,
                    displayOptions: {
                        show: {
                            operation: ['send'],
                            resource: ['sms'],
                        },
                    },
                    description: 'The message to send',
                },
            ],
        };
    }
    async execute() {
        const items = this.getInputData();
        const returnData = [];
        let operation;
        let resource;
        let body;
        let qs;
        let requestMethod;
        let endpoint;
        for (let i = 0; i < items.length; i++) {
            endpoint = '';
            body = {};
            qs = {};
            resource = this.getNodeParameter('resource', i);
            operation = this.getNodeParameter('operation', i);
            if (resource === 'sms') {
                if (operation === 'send') {
                    requestMethod = 'GET';
                    endpoint = '/sendhttp.php';
                    qs.route = 4;
                    qs.country = 0;
                    qs.sender = this.getNodeParameter('from', i);
                    qs.mobiles = this.getNodeParameter('to', i);
                    qs.message = this.getNodeParameter('message', i);
                }
                else {
                    throw new n8n_workflow_1.NodeOperationError(this.getNode(), `The operation "${operation}" is not known!`, { itemIndex: i });
                }
            }
            else {
                throw new n8n_workflow_1.NodeOperationError(this.getNode(), `The resource "${resource}" is not known!`, {
                    itemIndex: i,
                });
            }
            const responseData = await GenericFunctions_1.msg91ApiRequest.call(this, requestMethod, endpoint, body, qs);
            returnData.push({ requestId: responseData });
        }
        return [this.helpers.returnJsonArray(returnData)];
    }
}
exports.Msg91 = Msg91;
//# sourceMappingURL=Msg91.node.js.map