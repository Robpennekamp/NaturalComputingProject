import type { IExecuteFunctions, ILoadOptionsFunctions, INodeExecutionData, INodePropertyOptions, INodeType, INodeTypeDescription } from 'n8n-workflow';
export declare class Pipedrive implements INodeType {
    description: INodeTypeDescription;
    methods: {
        loadOptions: {
            getActivityTypes(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getFilters(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getOrganizationIds(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getUserIds(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getDeals(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getProducts(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getProductsDeal(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getStageIds(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getOrganizationCustomFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getDealCustomFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getPersonCustomFields(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getPersonLabels(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getOrganizationLabels(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getPersons(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getLeadLabels(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
            getDealLabels(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]>;
        };
    };
    execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]>;
}
