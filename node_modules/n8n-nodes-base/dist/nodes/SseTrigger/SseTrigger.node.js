"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SseTrigger = void 0;
const eventsource_1 = __importDefault(require("eventsource"));
const n8n_workflow_1 = require("n8n-workflow");
class SseTrigger {
    constructor() {
        this.description = {
            displayName: 'SSE Trigger',
            name: 'sseTrigger',
            icon: 'fa:cloud-download-alt',
            group: ['trigger'],
            version: 1,
            description: 'Triggers the workflow when Server-Sent Events occur',
            eventTriggerDescription: '',
            activationMessage: 'You can now make calls to your SSE URL to trigger executions.',
            defaults: {
                name: 'SSE Trigger',
                color: '#225577',
            },
            inputs: [],
            outputs: ['main'],
            properties: [
                {
                    displayName: 'URL',
                    name: 'url',
                    type: 'string',
                    default: '',
                    placeholder: 'http://example.com',
                    description: 'The URL to receive the SSE from',
                    required: true,
                },
            ],
        };
    }
    async trigger() {
        const url = this.getNodeParameter('url');
        const eventSource = new eventsource_1.default(url);
        eventSource.onmessage = (event) => {
            const eventData = (0, n8n_workflow_1.jsonParse)(event.data, {
                errorMessage: 'Invalid JSON for event data',
            });
            this.emit([this.helpers.returnJsonArray([eventData])]);
        };
        async function closeFunction() {
            eventSource.close();
        }
        return {
            closeFunction,
        };
    }
}
exports.SseTrigger = SseTrigger;
//# sourceMappingURL=SseTrigger.node.js.map