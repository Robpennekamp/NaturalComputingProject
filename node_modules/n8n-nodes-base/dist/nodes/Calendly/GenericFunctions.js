"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateCredentials = exports.calendlyApiRequest = exports.getAuthenticationType = void 0;
function getAuthenticationType(data) {
    return data.includes('.') ? 'accessToken' : 'apiKey';
}
exports.getAuthenticationType = getAuthenticationType;
async function calendlyApiRequest(method, resource, body = {}, query = {}, uri, option = {}) {
    const { apiKey } = (await this.getCredentials('calendlyApi'));
    const authenticationType = getAuthenticationType(apiKey);
    const headers = {
        'Content-Type': 'application/json',
    };
    let endpoint = 'https://api.calendly.com';
    if (authenticationType === 'apiKey') {
        endpoint = 'https://calendly.com/api/v1';
    }
    let options = {
        headers,
        method,
        body,
        qs: query,
        uri: uri || `${endpoint}${resource}`,
        json: true,
    };
    if (!Object.keys(body).length) {
        delete options.form;
    }
    if (!Object.keys(query).length) {
        delete options.qs;
    }
    options = Object.assign({}, options, option);
    return this.helpers.requestWithAuthentication.call(this, 'calendlyApi', options);
}
exports.calendlyApiRequest = calendlyApiRequest;
async function validateCredentials(decryptedCredentials) {
    const credentials = decryptedCredentials;
    const { apiKey } = credentials;
    const authenticationType = getAuthenticationType(apiKey);
    const options = {
        method: 'GET',
        uri: '',
        json: true,
    };
    if (authenticationType === 'accessToken') {
        Object.assign(options, {
            headers: { Authorization: `Bearer ${apiKey}` },
            uri: 'https://api.calendly.com/users/me',
        });
    }
    else {
        Object.assign(options, {
            headers: { 'X-TOKEN': apiKey },
            uri: 'https://calendly.com/api/v1/users/me',
        });
    }
    return this.helpers.request(options);
}
exports.validateCredentials = validateCredentials;
//# sourceMappingURL=GenericFunctions.js.map