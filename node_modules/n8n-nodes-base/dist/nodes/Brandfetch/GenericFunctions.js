"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.brandfetchApiRequest = void 0;
const n8n_workflow_1 = require("n8n-workflow");
async function brandfetchApiRequest(method, resource, body = {}, qs = {}, uri, option = {}) {
    try {
        const credentials = await this.getCredentials('brandfetchApi');
        let options = {
            headers: {
                'x-api-key': credentials.apiKey,
            },
            method,
            qs,
            body,
            uri: uri || `https://api.brandfetch.io/v1${resource}`,
            json: true,
        };
        options = Object.assign({}, options, option);
        if (this.getNodeParameter('operation', 0) === 'logo' && options.json === false) {
            delete options.headers;
        }
        if (!Object.keys(body).length) {
            delete options.body;
        }
        if (!Object.keys(qs).length) {
            delete options.qs;
        }
        const response = await this.helpers.request(options);
        if (response.statusCode && response.statusCode !== 200) {
            throw new n8n_workflow_1.NodeApiError(this.getNode(), response);
        }
        return response;
    }
    catch (error) {
        throw new n8n_workflow_1.NodeApiError(this.getNode(), error);
    }
}
exports.brandfetchApiRequest = brandfetchApiRequest;
//# sourceMappingURL=GenericFunctions.js.map