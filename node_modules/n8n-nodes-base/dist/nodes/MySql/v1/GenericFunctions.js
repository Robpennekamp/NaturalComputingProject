"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.searchTables = exports.createConnection = exports.copyInputItems = void 0;
const n8n_workflow_1 = require("n8n-workflow");
const promise_1 = __importDefault(require("mysql2/promise"));
function copyInputItems(items, properties) {
    let newItem;
    return items.map((item) => {
        newItem = {};
        for (const property of properties) {
            if (item.json[property] === undefined) {
                newItem[property] = null;
            }
            else {
                newItem[property] = (0, n8n_workflow_1.deepCopy)(item.json[property]);
            }
        }
        return newItem;
    });
}
exports.copyInputItems = copyInputItems;
async function createConnection(credentials) {
    const { ssl, caCertificate, clientCertificate, clientPrivateKey, ...baseCredentials } = credentials;
    if (ssl) {
        baseCredentials.ssl = {};
        if (caCertificate) {
            baseCredentials.ssl.ca = caCertificate;
        }
        if (clientCertificate || clientPrivateKey) {
            baseCredentials.ssl.cert = clientCertificate;
            baseCredentials.ssl.key = clientPrivateKey;
        }
    }
    return promise_1.default.createConnection(baseCredentials);
}
exports.createConnection = createConnection;
async function searchTables(query) {
    const credentials = await this.getCredentials('mySql');
    const connection = await createConnection(credentials);
    const sql = `
	SELECT table_name FROM information_schema.tables
	WHERE table_schema = '${credentials.database}'
		and table_name like '%${query || ''}%'
	ORDER BY table_name
	`;
    const [rows] = await connection.query(sql);
    const results = rows.map((r) => ({
        name: r.TABLE_NAME,
        value: r.TABLE_NAME,
    }));
    await connection.end();
    return { results };
}
exports.searchTables = searchTables;
//# sourceMappingURL=GenericFunctions.js.map