"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateJSON = exports.linkedInApiRequest = void 0;
const n8n_workflow_1 = require("n8n-workflow");
function resolveHeaderData(fullResponse) {
    if (fullResponse.statusCode === 201) {
        return { urn: fullResponse.headers['x-restli-id'] };
    }
    else {
        return fullResponse.body;
    }
}
async function linkedInApiRequest(method, endpoint, body = {}, binary, _headers) {
    let options = {
        headers: {
            Accept: 'application/json',
            'X-Restli-Protocol-Version': '2.0.0',
            'LinkedIn-Version': '202301',
        },
        method,
        body,
        url: binary ? endpoint : `https://api.linkedin.com/rest${endpoint}`,
        json: true,
    };
    options = Object.assign({}, options, {
        resolveWithFullResponse: true,
    });
    if (binary) {
        delete options.json;
        options.encoding = null;
    }
    if (Object.keys(body).length === 0) {
        delete options.body;
    }
    try {
        return resolveHeaderData(await this.helpers.requestOAuth2.call(this, 'linkedInOAuth2Api', options, {
            tokenType: 'Bearer',
        }));
    }
    catch (error) {
        throw new n8n_workflow_1.NodeApiError(this.getNode(), error);
    }
}
exports.linkedInApiRequest = linkedInApiRequest;
function validateJSON(json) {
    let result;
    try {
        result = JSON.parse(json);
    }
    catch (exception) {
        result = '';
    }
    return result;
}
exports.validateJSON = validateJSON;
//# sourceMappingURL=GenericFunctions.js.map