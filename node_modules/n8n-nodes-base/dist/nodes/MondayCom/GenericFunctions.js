"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.mondayComApiRequestAllItems = exports.mondayComApiRequest = void 0;
const n8n_workflow_1 = require("n8n-workflow");
const lodash_get_1 = __importDefault(require("lodash.get"));
async function mondayComApiRequest(body = {}, option = {}) {
    const authenticationMethod = this.getNodeParameter('authentication', 0);
    const endpoint = 'https://api.monday.com/v2/';
    let options = {
        headers: {
            'Content-Type': 'application/json',
        },
        method: 'POST',
        body,
        uri: endpoint,
        json: true,
    };
    options = Object.assign({}, options, option);
    try {
        if (authenticationMethod === 'accessToken') {
            const credentials = await this.getCredentials('mondayComApi');
            options.headers = { Authorization: `Bearer ${credentials.apiToken}` };
            return await this.helpers.request(options);
        }
        else {
            return await this.helpers.requestOAuth2.call(this, 'mondayComOAuth2Api', options);
        }
    }
    catch (error) {
        throw new n8n_workflow_1.NodeApiError(this.getNode(), error);
    }
}
exports.mondayComApiRequest = mondayComApiRequest;
async function mondayComApiRequestAllItems(propertyName, body = {}) {
    const returnData = [];
    let responseData;
    body.variables.limit = 50;
    body.variables.page = 1;
    do {
        responseData = await mondayComApiRequest.call(this, body);
        returnData.push.apply(returnData, (0, lodash_get_1.default)(responseData, propertyName));
        body.variables.page++;
    } while ((0, lodash_get_1.default)(responseData, propertyName).length > 0);
    return returnData;
}
exports.mondayComApiRequestAllItems = mondayComApiRequestAllItems;
//# sourceMappingURL=GenericFunctions.js.map