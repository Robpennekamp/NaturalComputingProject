"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateJSON = exports.intercomApiRequestAllItems = exports.intercomApiRequest = void 0;
const n8n_workflow_1 = require("n8n-workflow");
async function intercomApiRequest(endpoint, method, body = {}, query, uri) {
    const credentials = await this.getCredentials('intercomApi');
    const headerWithAuthentication = Object.assign({}, { Authorization: `Bearer ${credentials.apiKey}`, Accept: 'application/json' });
    const options = {
        headers: headerWithAuthentication,
        method,
        qs: query,
        uri: uri || `https://api.intercom.io${endpoint}`,
        body,
        json: true,
    };
    try {
        return await this.helpers.request(options);
    }
    catch (error) {
        throw new n8n_workflow_1.NodeApiError(this.getNode(), error);
    }
}
exports.intercomApiRequest = intercomApiRequest;
async function intercomApiRequestAllItems(propertyName, endpoint, method, body = {}, query = {}) {
    var _a;
    const returnData = [];
    let responseData;
    query.per_page = 60;
    let uri;
    do {
        responseData = await intercomApiRequest.call(this, endpoint, method, body, query, uri);
        uri = responseData.pages.next;
        returnData.push.apply(returnData, responseData[propertyName]);
    } while (((_a = responseData.pages) === null || _a === void 0 ? void 0 : _a.next) !== null);
    return returnData;
}
exports.intercomApiRequestAllItems = intercomApiRequestAllItems;
function validateJSON(json) {
    let result;
    try {
        result = JSON.parse(json);
    }
    catch (exception) {
        result = '';
    }
    return result;
}
exports.validateJSON = validateJSON;
//# sourceMappingURL=GenericFunctions.js.map