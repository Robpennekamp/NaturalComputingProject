"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeId = exports.handleListing = exports.urlScanIoApiRequest = void 0;
async function urlScanIoApiRequest(method, endpoint, body = {}, qs = {}) {
    const options = {
        method,
        body,
        qs,
        uri: `https://urlscan.io/api/v1${endpoint}`,
        json: true,
    };
    if (!Object.keys(body).length) {
        delete options.body;
    }
    if (!Object.keys(qs).length) {
        delete options.qs;
    }
    return this.helpers.requestWithAuthentication.call(this, 'urlScanIoApi', options);
}
exports.urlScanIoApiRequest = urlScanIoApiRequest;
async function handleListing(endpoint, qs = {}) {
    const returnData = [];
    let responseData;
    qs.size = 100;
    const returnAll = this.getNodeParameter('returnAll', 0, false);
    const limit = this.getNodeParameter('limit', 0, 0);
    do {
        responseData = await urlScanIoApiRequest.call(this, 'GET', endpoint, {}, qs);
        returnData.push(...responseData.results);
        if (!returnAll && returnData.length > limit) {
            return returnData.slice(0, limit);
        }
        if (responseData.results.length) {
            const lastResult = responseData.results[responseData.results.length - 1];
            qs.search_after = lastResult.sort;
        }
    } while (responseData.total > returnData.length);
    return returnData;
}
exports.handleListing = handleListing;
const normalizeId = ({ _id, uuid, ...rest }) => {
    if (_id)
        return { scanId: _id, ...rest };
    if (uuid)
        return { scanId: uuid, ...rest };
    return rest;
};
exports.normalizeId = normalizeId;
//# sourceMappingURL=GenericFunctions.js.map