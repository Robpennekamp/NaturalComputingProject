"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Metabase = void 0;
const QuestionsDescription_1 = require("./QuestionsDescription");
const MetricsDescription_1 = require("./MetricsDescription");
const DatabasesDescription_1 = require("./DatabasesDescription");
const AlertsDescription_1 = require("./AlertsDescription");
class Metabase {
    constructor() {
        this.description = {
            displayName: 'Metabase',
            name: 'metabase',
            icon: 'file:metabase.svg',
            group: ['transform'],
            version: 1,
            subtitle: '={{$parameter["operation"] + ": " + $parameter["resource"]}}',
            description: 'Use the Metabase API',
            defaults: {
                name: 'Metabase',
            },
            inputs: ['main'],
            outputs: ['main'],
            credentials: [
                {
                    name: 'metabaseApi',
                    required: true,
                },
            ],
            requestDefaults: {
                returnFullResponse: true,
                baseURL: '={{$credentials.url.replace(new RegExp("/$"), "")}}',
                headers: {},
            },
            properties: [
                {
                    displayName: 'Resource',
                    name: 'resource',
                    type: 'options',
                    noDataExpression: true,
                    options: [
                        {
                            name: 'Alert',
                            value: 'alerts',
                        },
                        {
                            name: 'Database',
                            value: 'databases',
                        },
                        {
                            name: 'Metric',
                            value: 'metrics',
                        },
                        {
                            name: 'Question',
                            value: 'questions',
                        },
                    ],
                    default: 'questions',
                },
                ...QuestionsDescription_1.questionsOperations,
                ...QuestionsDescription_1.questionsFields,
                ...MetricsDescription_1.metricsOperations,
                ...MetricsDescription_1.metricsFields,
                ...DatabasesDescription_1.databasesOperations,
                ...DatabasesDescription_1.databasesFields,
                ...AlertsDescription_1.alertsOperations,
                ...AlertsDescription_1.alertsFields,
            ],
        };
    }
}
exports.Metabase = Metabase;
//# sourceMappingURL=Metabase.node.js.map