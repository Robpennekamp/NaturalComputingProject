"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.description = exports.lookup = exports.getRows = exports.getColumns = exports.deleteTable = exports.convertToRange = exports.addTable = exports.append = void 0;
const append = __importStar(require("./append.operation"));
exports.append = append;
const addTable = __importStar(require("./addTable.operation"));
exports.addTable = addTable;
const convertToRange = __importStar(require("./convertToRange.operation"));
exports.convertToRange = convertToRange;
const deleteTable = __importStar(require("./deleteTable.operation"));
exports.deleteTable = deleteTable;
const getColumns = __importStar(require("./getColumns.operation"));
exports.getColumns = getColumns;
const getRows = __importStar(require("./getRows.operation"));
exports.getRows = getRows;
const lookup = __importStar(require("./lookup.operation"));
exports.lookup = lookup;
exports.description = [
    {
        displayName: 'Operation',
        name: 'operation',
        type: 'options',
        noDataExpression: true,
        displayOptions: {
            show: {
                resource: ['table'],
            },
        },
        options: [
            {
                name: 'Append',
                value: 'append',
                description: 'Add rows to the end of the table',
                action: 'Append rows to table',
            },
            {
                name: 'Convert to Range',
                value: 'convertToRange',
                description: 'Convert a table to a range',
                action: 'Convert to range',
            },
            {
                name: 'Create',
                value: 'addTable',
                description: 'Add a table based on range',
                action: 'Create a table',
            },
            {
                name: 'Delete',
                value: 'deleteTable',
                description: 'Delete a table',
                action: 'Delete a table',
            },
            {
                name: 'Get Columns',
                value: 'getColumns',
                description: 'Retrieve a list of table columns',
                action: 'Get columns',
            },
            {
                name: 'Get Rows',
                value: 'getRows',
                description: 'Retrieve a list of table rows',
                action: 'Get rows',
            },
            {
                name: 'Lookup',
                value: 'lookup',
                description: 'Look for rows that match a given value in a column',
                action: 'Lookup a column',
            },
        ],
        default: 'append',
    },
    ...append.description,
    ...addTable.description,
    ...convertToRange.description,
    ...deleteTable.description,
    ...getColumns.description,
    ...getRows.description,
    ...lookup.description,
];
//# sourceMappingURL=Table.resource.js.map