import type { IExecuteFunctions, IExecuteSingleFunctions, ILoadOptionsFunctions, IDataObject, INodeProperties, INodePropertyOptions } from 'n8n-workflow';
export declare function microsoftApiRequest(this: IExecuteFunctions | IExecuteSingleFunctions | ILoadOptionsFunctions, method: string, resource: string, body?: any, qs?: IDataObject, uri?: string, option?: IDataObject): Promise<any>;
export declare function microsoftApiRequestAllItems(this: IExecuteFunctions | ILoadOptionsFunctions, propertyName: string, method: string, endpoint: string, body?: any, query?: IDataObject): Promise<any>;
export declare function getPicklistOptions(this: ILoadOptionsFunctions, entityName: string, attributeName: string): Promise<INodePropertyOptions[]>;
export declare function getEntityFields(this: ILoadOptionsFunctions, entityName: string): Promise<IField[]>;
export declare function adjustAddresses(addresses: [{
    [key: string]: string;
}]): {
    [key: string]: any;
};
export declare function getAccountFields(): INodeProperties[];
export declare const sort: (a: {
    name: string;
}, b: {
    name: string;
}) => 0 | 1 | -1;
export interface IField {
    IsRetrievable: boolean;
    LogicalName: string;
    IsSearchable: string;
    IsValidODataAttribute: string;
    IsValidForRead: string;
    CanBeSecuredForRead: string;
    AttributeType: string;
    IsSortableEnabled: {
        Value: boolean;
    };
    DisplayName: {
        UserLocalizedLabel: {
            Label: string;
        };
    };
}
