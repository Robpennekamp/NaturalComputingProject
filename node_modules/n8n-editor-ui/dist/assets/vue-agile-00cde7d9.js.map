{"version":3,"file":"vue-agile-00cde7d9.js","sources":["../../../../node_modules/.pnpm/vue-agile@2.0.0/node_modules/vue-agile/src/mixins/handlers.js","../../../../node_modules/.pnpm/vue-agile@2.0.0/node_modules/vue-agile/src/mixins/helpers.js","../../../../node_modules/.pnpm/vue-agile@2.0.0/node_modules/vue-agile/src/mixins/methods.js","../../../../node_modules/.pnpm/vue-agile@2.0.0/node_modules/vue-agile/src/mixins/preparations.js","../../../../node_modules/.pnpm/vue-agile@2.0.0/node_modules/vue-agile/src/mixins/settings.js","../../../../node_modules/.pnpm/vue-agile@2.0.0/node_modules/vue-agile/src/mixins/throttle.js","../../../../node_modules/.pnpm/vue-agile@2.0.0/node_modules/vue-agile/src/mixins/watchers.js","../../../../node_modules/.pnpm/vue-agile@2.0.0/node_modules/vue-agile/src/Agile.vue","../../../../node_modules/.pnpm/vue-agile@2.0.0/node_modules/vue-agile/src/index.js"],"sourcesContent":["/**\n * Handlers methods for mouse/touch events\n */\nconst mixin = {\n  methods: {\n    handleMouseDown (e) {\n      this.isMouseDown = true\n\n      if (e.type.indexOf('touch') !== -1) {\n        this.dragStartX = e.touches[0].clientX\n        this.dragStartY = e.touches[0].clientY\n      }\n      if (e.type.indexOf('mouse') !== -1) {\n        this.dragStartX = e.clientX\n        this.dragStartY = e.clientY\n      }\n    },\n\n    handleMouseMove (e) {\n      let positionX\n      let positionY\n      if (e.type.indexOf('touch') !== -1) {\n        positionX = e.touches[0].clientX\n        positionY = e.touches[0].clientY\n      }\n      if (e.type.indexOf('mouse') !== -1) {\n        positionX = e.clientX\n        positionY = e.clientY\n      }\n      const dragDistanceX = Math.abs(positionX - this.dragStartX)\n      const dragDistanceY = Math.abs(positionY - this.dragStartY)\n      if (dragDistanceX > 3 * dragDistanceY) {\n        this.disableScroll()\n        this.dragDistance = positionX - this.dragStartX\n      }\n    },\n\n    handleMouseUp () {\n      this.isMouseDown = false\n      this.enableScroll()\n    },\n\n    handleMouseOver (element) {\n      if (this.settings.autoplay) {\n        if ((element === 'dot' && this.settings.pauseOnDotsHover) || (element === 'track' && this.settings.pauseOnHover)) {\n          this.isAutoplayPaused = true\n        }\n      }\n    },\n\n    handleMouseOut (element) {\n      if (this.settings.autoplay) {\n        if ((element === 'dot' && this.settings.pauseOnDotsHover) || (element === 'track' && this.settings.pauseOnHover)) {\n          this.isAutoplayPaused = false\n        }\n      }\n    }\n  }\n}\n\nexport default mixin\n","/**\n * Helpers methods\n */\nconst mixin = {\n  methods: {\n    /**\n     * Set window & container width\n     */\n    getWidth () {\n      if (this.isSSR) {\n        return false\n      }\n\n      this.widthWindow = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      this.widthContainer = this.$refs.list.clientWidth\n    },\n\n    /**\n     * Convert HTML Collection to JS Array\n     */\n    htmlCollectionToArray (collection) {\n      return Array.prototype.slice.call(collection, 0)\n    }\n  }\n}\n\nexport default mixin\n","/**\n * All not public methods doesn't classified elsewhere\n */\nconst mixin = {\n  methods: {\n    clearAutoPlayPause () {\n      clearTimeout(this.autoplayTimeout)\n      this.autoplayRemaining = null\n    },\n\n    disableAutoPlay () {\n      clearInterval(this.autoplayInterval)\n      this.autoplayInterval = null\n    },\n\n    disableScroll () {\n      document.ontouchmove = e => e.preventDefault()\n    },\n\n    enableScroll () {\n      document.ontouchmove = () => true\n    },\n\n    restartAutoPlay () {\n      this.disableAutoPlay()\n      this.toggleAutoPlay()\n    },\n\n    toggleAutoPlay () {\n      const enabled = (!this.settings.unagile && this.settings.autoplay)\n\n      if (!this.autoplayInterval && enabled) {\n        this.autoplayInterval = setInterval(() => {\n          if (!document.hidden) {\n            if (!this.canGoToNext) {\n              this.disableAutoPlay()\n            } else {\n              this.goToNext()\n            }\n          }\n        }, this.settings.autoplaySpeed)\n      } else {\n        this.disableAutoPlay()\n      }\n    },\n\n    toggleFade () {\n      const enabled = (!this.settings.unagile && this.settings.fade)\n\n      for (let i = 0; i < this.countSlides; i++) {\n        this.slides[i].style.transition = (enabled) ? 'opacity ' + this.settings.timing + ' ' + this.settings.speed + 'ms' : 'none'\n        this.slides[i].style.transform = (enabled) ? `translate(-${i * this.widthSlide}px)` : 'none'\n      }\n    }\n  }\n}\n\nexport default mixin\n","/**\n * Carousel preparation methods\n */\nconst mixin = {\n  methods: {\n    /**\n     * Prepare slides classes and styles\n     */\n    prepareSlides () {\n      this.slides = this.htmlCollectionToArray(this.$refs.slides.children)\n\n      // Probably timeout needed\n      if (this.slidesCloned) {\n        this.slidesClonedBefore = this.htmlCollectionToArray(this.$refs.slidesClonedBefore.children)\n        this.slidesClonedAfter = this.htmlCollectionToArray(this.$refs.slidesClonedAfter.children)\n      }\n\n      for (const slide of this.slidesAll) {\n        slide.classList.add('agile__slide')\n      }\n    },\n\n    /**\n     *  Prepare slides active/current classes\n     */\n    prepareSlidesClasses () {\n      if (this.currentSlide === null) {\n        return false\n      }\n\n      // Remove active & current classes\n      for (let i = 0; i < this.countSlides; i++) {\n        this.slides[i].classList.remove('agile__slide--active')\n        this.slides[i].classList.remove('agile__slide--current')\n      }\n\n      // Add active & current class for current slide\n      setTimeout(() => this.slides[this.currentSlide].classList.add('agile__slide--active'), this.changeDelay)\n\n      let start = (this.slidesCloned) ? this.countSlides + this.currentSlide : this.currentSlide\n\n      if (this.centerMode) {\n        start -= (Math.floor(this.settings.slidesToShow / 2) - +(this.settings.slidesToShow % 2 === 0))\n      }\n\n      // To account for the combination of infinite = false and centerMode = true, ensure we don't overrun the bounds of the slide count.\n      for (let i = Math.max(start, 0); i < Math.min(start + this.settings.slidesToShow, this.countSlides); i++) {\n        this.slidesAll[i].classList.add('agile__slide--current')\n      }\n    },\n\n    /**\n     * Prepare carousel styles\n     */\n    prepareCarousel () {\n      // Prepare track\n      if (this.settings.unagile) {\n        this.translateX = 0\n      } else {\n        if (this.currentSlide === null && this.countSlides) {\n          this.currentSlide = this.settings.initialSlide\n        }\n\n        if (this.currentSlide > this.countSlides) {\n          this.currentSlide = this.countSlides - 1\n        }\n\n        this.goTo(this.currentSlide, false, false)\n      }\n    }\n  }\n}\n\nexport default mixin\n","/**\n * Component settings\n */\n\nimport orderBy from 'lodash.orderby'\n\nconst mixin = {\n  props: {\n    /**\n     * Set the carousel to be the navigation of other carousels\n     */\n    asNavFor: {\n      type: Array,\n      default: function () {\n        return []\n      }\n    },\n\n    /**\n     * Enable autoplay\n     */\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n\n    /**\n     * Autoplay interval in milliseconds\n     */\n    autoplaySpeed: {\n      type: Number,\n      default: 3000\n    },\n\n    /**\n     * Enable centered view when slidesToShow > 1\n     */\n    centerMode: {\n      type: Boolean,\n      default: false\n    },\n\n    /**\n     * Slides padding in center mode\n     */\n    centerPadding: {\n      type: String,\n      default: '15%'\n    },\n\n    /**\n     * Slide change delay in milliseconds\n     */\n    changeDelay: {\n      type: Number,\n      default: 0\n    },\n\n    /**\n     * Enable dot indicators/pagination\n     */\n    dots: {\n      type: Boolean,\n      default: true\n    },\n\n    /**\n     * Enable fade effect\n     */\n    fade: {\n      type: Boolean,\n      default: false\n    },\n\n    /**\n     * Infinite loop sliding\n     */\n    infinite: {\n      type: Boolean,\n      default: true\n    },\n\n    /**\n     * Index of slide to start on\n     */\n    initialSlide: {\n      type: Number,\n      default: 0\n    },\n\n    /**\n     * Enable mobile first calculation for responsive settings\n     */\n    mobileFirst: {\n      type: Boolean,\n      default: true\n    },\n\n    /**\n     * Enable prev/next navigation buttons\n     */\n    navButtons: {\n      type: Boolean,\n      default: true\n    },\n\n    /**\n     * All settings as one object\n     */\n    options: {\n      type: Object,\n      default: () => null\n    },\n\n    /**\n     * Pause autoplay when a dot is hovered\n     */\n    pauseOnDotsHover: {\n      type: Boolean,\n      default: false\n    },\n\n    /**\n     * Pause autoplay when a slide is hovered\n     */\n    pauseOnHover: {\n      type: Boolean,\n      default: true\n    },\n\n    /**\n     * Object containing breakpoints and settings objects\n     */\n    responsive: {\n      type: Array,\n      default: () => null\n    },\n\n    /**\n     * Enable right-to-left mode\n     */\n    rtl: {\n      type: Boolean,\n      default: false\n    },\n\n    /**\n     * Number of slides to scroll\n     */\n    slidesToScroll: {\n      type: Number,\n      default: 1\n    },\n\n    /**\n     * Number of slides to show\n     */\n    slidesToShow: {\n      type: Number,\n      default: 1\n    },\n\n    /**\n     * Slide animation speed in milliseconds\n     */\n    speed: {\n      type: Number,\n      default: 300\n    },\n\n    /**\n     * Swipe distance\n     */\n    swipeDistance: {\n      type: Number,\n      default: 50\n    },\n\n    /**\n     * Throttle delay in milliseconds\n     */\n    throttleDelay: {\n      type: Number,\n      default: 500\n    },\n\n    /**\n     * Transition timing function\n     * Available: ease, linear, ease-in, ease-out, ease-in-out\n     */\n    timing: {\n      type: String,\n      default: 'ease',\n      validator: value => {\n        return ['ease', 'linear', 'ease-in', 'ease-out', 'ease-in-out'].indexOf(value) !== -1\n      }\n    },\n\n    /**\n     * Disable Agile carousel\n     */\n    unagile: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  computed: {\n    // Initial settings based on props and options object\n    initialSettings: function () {\n      // options prop is excluded\n      let { options, ...initialSettings } = this.$props\n\n      // Join settings from options\n      if (options) {\n        initialSettings = { ...initialSettings, ...options }\n      }\n\n      // Sort breakpoints\n      if (initialSettings.responsive) {\n        initialSettings.responsive = orderBy(initialSettings.responsive, 'breakpoint')\n      }\n\n      return initialSettings\n    },\n\n    // Settings for current breakpoint\n    settings: function () {\n      const { responsive, ...settings } = this.initialSettings\n\n      if (responsive) {\n        responsive.forEach(option => {\n          if (settings.mobileFirst ? option.breakpoint < this.widthWindow : option.breakpoint > this.widthWindow) {\n            for (const key in option.settings) {\n              settings[key] = option.settings[key]\n            }\n          }\n        })\n      }\n\n      return settings\n    }\n  }\n}\n\nexport default mixin\n","/**\n * Throttle methods by lodash\n */\n\nimport throttle from 'lodash.throttle'\n\nconst mixin = {\n  created () {\n    this.goTo = throttle(this.goTo, this.throttleDelay)\n    this.getWidth = throttle(this.getWidth, 500)\n  }\n}\n\nexport default mixin\n","/**\n * Component watchers\n */\nconst mixin = {\n  watch: {\n    // Recalculate settings\n    currentBreakpoint () {\n      // this.prepareSettings()\n      this.$emit('breakpoint', { breakpoint: this.currentBreakpoint })\n    },\n\n    // Watch current slide change\n    currentSlide () {\n      this.prepareSlidesClasses()\n\n      // Set start time of slide\n      this.autoplayStartTimestamp = (this.settings.autoplay) ? +new Date() : null\n\n      this.$emit('after-change', { currentSlide: this.currentSlide })\n    },\n\n    // Watch drag distance change\n    dragDistance () {\n      if (this.isMouseDown) {\n        const { rtl } = this.settings\n        const dragDistance = this.dragDistance * (rtl ? -1 : 1)\n\n        if (dragDistance > this.swipeDistance && this.canGoToPrev) {\n          this.goToPrev()\n          this.handleMouseUp()\n        }\n\n        if (dragDistance < -1 * this.swipeDistance && this.canGoToNext) {\n          this.goToNext()\n          this.handleMouseUp()\n        }\n      }\n    },\n\n    isAutoplayPaused (nevValue) {\n      if (nevValue) {\n        // Store current slide remaining time and disable auto play mode\n        this.remaining = this.settings.autoplaySpeed - (+new Date() - this.autoplayStartTimestamp)\n        this.disableAutoPlay()\n        this.clearAutoPlayPause()\n      } else {\n        // Go to next after remaining time and rerun auto play mode\n        this.autoplayTimeout = setTimeout(() => {\n          this.clearAutoPlayPause()\n          this.goToNext()\n          this.toggleAutoPlay()\n        }, this.remaining)\n      }\n    },\n\n    'settings.autoplay' () {\n      this.toggleAutoPlay()\n    },\n\n    'settings.fade' () {\n      this.toggleFade()\n    },\n\n    'settings.unagile' () {\n      // this.prepareSlides()\n      // this.prepareCarousel()\n    },\n\n    widthSlide () {\n      for (let i = 0; i < this.countSlidesAll; i++) {\n        // console.log(this.widthSlide)\n        // console.log(this.settings)\n        this.slidesAll[i].style.width = `${this.widthSlide}${(this.widthSlide !== 'auto') ? 'px' : ''}`\n      }\n    },\n\n    // Watch window width change\n    widthWindow (newValue, oldValue) {\n      if (oldValue) {\n        this.prepareCarousel()\n        this.toggleFade()\n      }\n    }\n  }\n}\n\nexport default mixin\n","<template>\n  <div\n    :class=\"{'agile--ssr': isSSR, 'agile--auto-play': settings.autoplay, 'agile--disabled': settings.unagile, 'agile--fade': settings.fade && !settings.unagile, 'agile--rtl': settings.rtl, 'agile--no-nav-buttons': !settings.navButtons}\"\n    class=\"agile\"\n    @touchstart=\"() => {}\"\n  >\n    <div\n      ref=\"list\"\n      class=\"agile__list\"\n    >\n      <div\n        ref=\"track\"\n        :style=\"{transform: `translate(${translateX + marginX}px)`, transition: `transform ${settings.timing} ${transitionDelay}ms`}\"\n        class=\"agile__track\"\n        @mouseout=\"handleMouseOut('track')\"\n        @mouseover=\"handleMouseOver('track')\"\n      >\n        <div\n          v-show=\"slidesCloned\"\n          ref=\"slidesClonedBefore\"\n          class=\"agile__slides agile__slides--cloned\"\n        >\n          <slot/>\n        </div>\n\n        <div\n          ref=\"slides\"\n          class=\"agile__slides agile__slides--regular\"\n        >\n          <slot/>\n        </div>\n\n        <div\n          v-show=\"slidesCloned\"\n          ref=\"slidesClonedAfter\"\n          class=\"agile__slides agile__slides--cloned\"\n        >\n          <slot/>\n        </div>\n      </div>\n    </div>\n\n    <div\n      v-if=\"$slots.caption\"\n      class=\"agile__caption\"\n    >\n      <slot name=\"caption\"/>\n    </div>\n\n    <div\n      v-if=\"!settings.unagile && (settings.navButtons || settings.dots)\"\n      class=\"agile__actions\"\n    >\n      <button\n        v-if=\"settings.navButtons && !settings.unagile\"\n        ref=\"prevButton\"\n        :disabled=\"!canGoToPrev\"\n        aria-label=\"Previous\"\n        class=\"agile__nav-button agile__nav-button--prev\"\n        type=\"button\"\n        @click=\"goToPrev(), restartAutoPlay()\"\n      >\n        <slot name=\"prevButton\">\n          ←\n        </slot>\n      </button>\n\n      <ul\n        v-if=\"settings.dots && !settings.unagile\"\n        ref=\"dots\"\n        class=\"agile__dots\"\n      >\n        <li\n          v-for=\"n in countSlides\"\n          :key=\"n\"\n          :class=\"{'agile__dot--current': n - 1 === currentSlide}\"\n          class=\"agile__dot\"\n          @mouseout=\"handleMouseOut('dot')\"\n          @mouseover=\"handleMouseOver('dot')\"\n        >\n          <button\n            type=\"button\"\n            @click=\"goTo(n - 1), restartAutoPlay()\"\n          >\n            {{ n }}\n          </button>\n        </li>\n      </ul>\n\n      <button\n        v-if=\"settings.navButtons && !settings.unagile\"\n        ref=\"nextButton\"\n        :disabled=\"!canGoToNext\"\n        aria-label=\"Next\"\n        class=\"agile__nav-button agile__nav-button--next\"\n        type=\"button\"\n        @click=\"goToNext(), restartAutoPlay()\"\n      >\n        <slot name=\"nextButton\">\n          →\n        </slot>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\n  import handlers from './mixins/handlers'\n  import helpers from './mixins/helpers'\n  import methods from './mixins/methods'\n  import preparations from './mixins/preparations'\n  import settings from './mixins/settings'\n  import throttle from './mixins/throttle'\n  import watchers from './mixins/watchers'\n\n  export default {\n    name: 'agile',\n\n    mixins: [handlers, helpers, methods, preparations, settings, throttle, watchers],\n\n    emits: ['before-change', 'after-change', 'breakpoint'],\n\n    data () {\n      return {\n        autoplayInterval: null,\n        autoplayRemaining: null,\n        autoplayStartTimestamp: null,\n        autoplayTimeout: null,\n        currentSlide: null,\n        dragDistance: 0,\n        dragStartX: 0,\n        dragStartY: 0,\n        isAutoplayPaused: false,\n        isMouseDown: false,\n        slides: [],\n        slidesClonedAfter: [],\n        slidesClonedBefore: [],\n        isSSR: (typeof window === 'undefined'),\n        transitionDelay: 0,\n        translateX: 0,\n        widthWindow: 0,\n        widthContainer: 0\n      }\n    },\n\n    computed: {\n      breakpoints: function () {\n        return (!this.initialSettings.responsive) ? [] : this.initialSettings.responsive.map(item => item.breakpoint)\n      },\n\n      canGoToPrev: function () {\n        return (this.settings.infinite || this.currentSlide > 0)\n      },\n\n      canGoToNext: function () {\n        return (this.settings.infinite || this.currentSlide < this.countSlides - 1)\n      },\n\n      countSlides: function () {\n        return (this.isSSR) ? this.htmlCollectionToArray(this.$slots.default).length : this.slides.length\n      },\n\n      countSlidesAll: function () {\n        return this.slidesAll.length\n      },\n\n      currentBreakpoint: function () {\n        const breakpoints = this.breakpoints.map(item => item).reverse()\n        return (this.initialSettings.mobileFirst) ? breakpoints.find(item => item < this.widthWindow) || 0 : breakpoints.find(item => item > this.widthWindow) || null\n      },\n\n      marginX: function () {\n        if (this.settings.unagile) {\n          return 0\n        }\n\n        let marginX = (this.slidesCloned) ? this.countSlides * this.widthSlide : 0\n\n        // Center mode margin\n        if (this.settings.centerMode) {\n          marginX -= (Math.floor(this.settings.slidesToShow / 2) - +(this.settings.slidesToShow % 2 === 0)) * this.widthSlide\n        }\n\n        return (this.settings.rtl) ? marginX : -1 * marginX\n      },\n\n      slidesCloned: function () {\n        return (!this.settings.unagile && !this.settings.fade && this.settings.infinite)\n      },\n\n      slidesAll: function () {\n        return (this.slidesCloned) ? [...this.slidesClonedBefore, ...this.slides, ...this.slidesClonedAfter] : this.slides\n      },\n\n      widthSlide: function () {\n        return (!this.settings.unagile) ? this.widthContainer / this.settings.slidesToShow : 'auto'\n      }\n    },\n\n    mounted () {\n      // Windows resize listener\n      window.addEventListener('resize', this.getWidth)\n\n      // Mouse and touch events\n      this.$refs.track.addEventListener('touchstart', this.handleMouseDown)\n      this.$refs.track.addEventListener('touchend', this.handleMouseUp)\n      this.$refs.track.addEventListener('touchmove', this.handleMouseMove)\n      this.$refs.track.addEventListener('mousedown', this.handleMouseDown)\n      this.$refs.track.addEventListener('mouseup', this.handleMouseUp)\n      this.$refs.track.addEventListener('mousemove', this.handleMouseMove)\n\n      // Init\n      this.isSSR = false\n      this.reload()\n    },\n\n    // Vue 3\n    beforeUnmount () {\n      this.destroy()\n    },\n\n    methods: {\n      destroy () {\n        window.removeEventListener('resize', this.getWidth)\n\n        this.$refs.track.removeEventListener('touchstart', this.handleMouseDown)\n        this.$refs.track.removeEventListener('touchend', this.handleMouseUp)\n        this.$refs.track.removeEventListener('touchmove', this.handleMouseMove)\n        this.$refs.track.removeEventListener('mousedown', this.handleMouseDown)\n        this.$refs.track.removeEventListener('mouseup', this.handleMouseUp)\n        this.$refs.track.removeEventListener('mousemove', this.handleMouseMove)\n\n        this.disableAutoPlay()\n      },\n\n      // Return current breakpoint\n      getCurrentBreakpoint () {\n        return this.currentBreakpoint\n      },\n\n      // Return settings for current breakpoint\n      getCurrentSettings () {\n        return this.settings\n      },\n\n      // Return current slide index\n      getCurrentSlide () {\n        return this.currentSlide\n      },\n\n      // Return initial settings\n      getInitialSettings () {\n        return this.initialSettings\n      },\n\n      // Go to slide\n      goTo (n, transition = true, asNav = false) {\n        // Break goTo() if unagile is active\n        if (this.settings.unagile) {\n          return false\n        }\n\n        if (!asNav) {\n          this.settings.asNavFor.forEach(carousel => {\n            if (carousel) {\n              carousel.goTo(n, transition, true)\n            }\n          })\n        }\n\n        let slideNextReal = n\n\n        if (transition) {\n          if (this.settings.infinite && n < 0) {\n            slideNextReal = this.countSlides - 1\n          } else if (n >= this.countSlides) {\n            slideNextReal = 0\n          }\n\n          this.$emit('before-change', { currentSlide: this.currentSlide, nextSlide: slideNextReal })\n\n          this.currentSlide = slideNextReal\n\n          if (n !== slideNextReal) {\n            setTimeout(() => {\n              this.goTo(slideNextReal, false)\n            }, this.settings.speed)\n          }\n        }\n\n        const translateX = (!this.settings.fade) ? n * this.widthSlide * this.settings.slidesToScroll : 0\n        this.transitionDelay = (transition) ? this.speed : 0\n\n        if (this.infinite || (this.currentSlide + this.slidesToShow <= this.countSlides)) {\n          this.translateX = (this.settings.rtl) ? translateX : -1 * translateX\n        }\n      },\n\n      // Go to next slide\n      goToNext () {\n        if (this.canGoToNext) {\n          this.goTo(this.currentSlide + 1)\n        }\n      },\n\n      // Go to previous slide\n      goToPrev () {\n        if (this.canGoToPrev) {\n          this.goTo(this.currentSlide - 1)\n        }\n      },\n\n      // Reload carousel\n      reload () {\n        this.getWidth()\n        this.prepareSlides()\n        this.prepareCarousel()\n        this.toggleFade()\n        this.toggleAutoPlay()\n      }\n    }\n  }\n</script>\n\n<style>\n  .agile {\n    position: relative;\n  }\n\n  .agile--ssr .agile__slides--cloned {\n    display: none\n  }\n\n  .agile--ssr .agile__slides > * {\n    overflow: hidden;\n    width: 0\n  }\n\n  .agile--ssr .agile__slides > *:first-child {\n    width: 100%\n  }\n\n  .agile--rtl .agile__track,\n  .agile--rtl .agile__slides,\n  .agile--rtl .agile__actions,\n  .agile--rtl .agile__dots {\n    flex-direction: row-reverse;\n  }\n\n  .agile:focus, .agile:active, .agile *:focus, .agile *:active {\n    outline: none;\n  }\n\n  .agile__list {\n    display: block;\n    overflow: hidden;\n    position: relative;\n    width: 100%;\n  }\n\n  .agile__track {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n  }\n\n  .agile__actions {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .agile--no-nav-buttons .agile__actions {\n    justify-content: center;\n  }\n\n  .agile__slides {\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n    flex-shrink: unset;\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n  }\n\n  .agile--disabled .agile__slides {\n    display: block;\n    width: 100%;\n  }\n\n  .agile__slide {\n    display: block;\n    flex-grow: 1;\n    flex-shrink: 0;\n  }\n\n  .agile__slide,\n  .agile__slide * {\n    -webkit-user-drag: none;\n  }\n\n  .agile--fade .agile__slide {\n    opacity: 0;\n    position: relative;\n    z-index: 0;\n  }\n\n  .agile--fade .agile__slide--active {\n    opacity: 1;\n    z-index: 2;\n  }\n\n  .agile--fade .agile__slide--expiring {\n    opacity: 1;\n    transition-duration: 0s;\n    z-index: 1;\n  }\n\n  .agile__nav-button[disabled] {\n    cursor: default;\n  }\n\n  .agile__dots {\n    align-items: center;\n    display: flex;\n    list-style: none;\n    padding: 0;\n    white-space: nowrap;\n  }\n\n  .agile__dot button {\n    cursor: pointer;\n    display: block;\n    font-size: 0;\n    line-height: 0;\n  }\n</style>\n","import VueAgile from './Agile.vue'\n\nconst install = Vue => {\n  Vue.component('agile', VueAgile)\n}\n\nexport default {\n  install\n}\n\nexport { VueAgile }\n"],"names":["mixin","positionX","positionY","dragDistanceX","dragDistanceY","element","collection","enabled","i","slide","start","value","options","initialSettings","orderBy","responsive","settings","option","key","throttle","rtl","dragDistance","nevValue","newValue","oldValue","_sfc_main","handlers","helpers","methods","preparations","watchers","item","breakpoints","marginX","n","transition","asNav","carousel","slideNextReal","translateX","install","Vue","VueAgile"],"mappings":"oFAGA,MAAMA,EAAQ,CACZ,QAAS,CACP,gBAAiB,EAAG,CAClB,KAAK,YAAc,GAEf,EAAE,KAAK,QAAQ,OAAO,IAAM,KAC9B,KAAK,WAAa,EAAE,QAAQ,CAAC,EAAE,QAC/B,KAAK,WAAa,EAAE,QAAQ,CAAC,EAAE,SAE7B,EAAE,KAAK,QAAQ,OAAO,IAAM,KAC9B,KAAK,WAAa,EAAE,QACpB,KAAK,WAAa,EAAE,QAEvB,EAED,gBAAiB,EAAG,CAClB,IAAIC,EACAC,EACA,EAAE,KAAK,QAAQ,OAAO,IAAM,KAC9BD,EAAY,EAAE,QAAQ,CAAC,EAAE,QACzBC,EAAY,EAAE,QAAQ,CAAC,EAAE,SAEvB,EAAE,KAAK,QAAQ,OAAO,IAAM,KAC9BD,EAAY,EAAE,QACdC,EAAY,EAAE,SAEhB,MAAMC,EAAgB,KAAK,IAAIF,EAAY,KAAK,UAAU,EACpDG,EAAgB,KAAK,IAAIF,EAAY,KAAK,UAAU,EACtDC,EAAgB,EAAIC,IACtB,KAAK,cAAe,EACpB,KAAK,aAAeH,EAAY,KAAK,WAExC,EAED,eAAiB,CACf,KAAK,YAAc,GACnB,KAAK,aAAc,CACpB,EAED,gBAAiBI,EAAS,CACpB,KAAK,SAAS,WACXA,IAAY,OAAS,KAAK,SAAS,kBAAsBA,IAAY,SAAW,KAAK,SAAS,gBACjG,KAAK,iBAAmB,GAG7B,EAED,eAAgBA,EAAS,CACnB,KAAK,SAAS,WACXA,IAAY,OAAS,KAAK,SAAS,kBAAsBA,IAAY,SAAW,KAAK,SAAS,gBACjG,KAAK,iBAAmB,GAG7B,CACF,CACH,ECvDML,EAAQ,CACZ,QAAS,CAIP,UAAY,CACV,GAAI,KAAK,MACP,MAAO,GAGT,KAAK,YAAc,OAAO,YAAc,SAAS,gBAAgB,aAAe,SAAS,KAAK,YAC9F,KAAK,eAAiB,KAAK,MAAM,KAAK,WACvC,EAKD,sBAAuBM,EAAY,CACjC,OAAO,MAAM,UAAU,MAAM,KAAKA,EAAY,CAAC,CAChD,CACF,CACH,ECrBMN,EAAQ,CACZ,QAAS,CACP,oBAAsB,CACpB,aAAa,KAAK,eAAe,EACjC,KAAK,kBAAoB,IAC1B,EAED,iBAAmB,CACjB,cAAc,KAAK,gBAAgB,EACnC,KAAK,iBAAmB,IACzB,EAED,eAAiB,CACf,SAAS,YAAc,GAAK,EAAE,eAAgB,CAC/C,EAED,cAAgB,CACd,SAAS,YAAc,IAAM,EAC9B,EAED,iBAAmB,CACjB,KAAK,gBAAiB,EACtB,KAAK,eAAgB,CACtB,EAED,gBAAkB,CAChB,MAAMO,EAAW,CAAC,KAAK,SAAS,SAAW,KAAK,SAAS,SAErD,CAAC,KAAK,kBAAoBA,EAC5B,KAAK,iBAAmB,YAAY,IAAM,CACnC,SAAS,SACP,KAAK,YAGR,KAAK,SAAU,EAFf,KAAK,gBAAiB,EAKpC,EAAW,KAAK,SAAS,aAAa,EAE9B,KAAK,gBAAiB,CAEzB,EAED,YAAc,CACZ,MAAMA,EAAW,CAAC,KAAK,SAAS,SAAW,KAAK,SAAS,KAEzD,QAASC,EAAI,EAAGA,EAAI,KAAK,YAAaA,IACpC,KAAK,OAAOA,CAAC,EAAE,MAAM,WAAcD,EAAW,WAAa,KAAK,SAAS,OAAS,IAAM,KAAK,SAAS,MAAQ,KAAO,OACrH,KAAK,OAAOC,CAAC,EAAE,MAAM,UAAaD,EAAW,cAAcC,EAAI,KAAK,gBAAkB,MAEzF,CACF,CACH,ECpDMR,EAAQ,CACZ,QAAS,CAIP,eAAiB,CACf,KAAK,OAAS,KAAK,sBAAsB,KAAK,MAAM,OAAO,QAAQ,EAG/D,KAAK,eACP,KAAK,mBAAqB,KAAK,sBAAsB,KAAK,MAAM,mBAAmB,QAAQ,EAC3F,KAAK,kBAAoB,KAAK,sBAAsB,KAAK,MAAM,kBAAkB,QAAQ,GAG3F,UAAWS,KAAS,KAAK,UACvBA,EAAM,UAAU,IAAI,cAAc,CAErC,EAKD,sBAAwB,CACtB,GAAI,KAAK,eAAiB,KACxB,MAAO,GAIT,QAASD,EAAI,EAAGA,EAAI,KAAK,YAAaA,IACpC,KAAK,OAAOA,CAAC,EAAE,UAAU,OAAO,sBAAsB,EACtD,KAAK,OAAOA,CAAC,EAAE,UAAU,OAAO,uBAAuB,EAIzD,WAAW,IAAM,KAAK,OAAO,KAAK,YAAY,EAAE,UAAU,IAAI,sBAAsB,EAAG,KAAK,WAAW,EAEvG,IAAIE,EAAS,KAAK,aAAgB,KAAK,YAAc,KAAK,aAAe,KAAK,aAE1E,KAAK,aACPA,GAAU,KAAK,MAAM,KAAK,SAAS,aAAe,CAAC,EAAI,EAAE,KAAK,SAAS,aAAe,IAAM,IAI9F,QAASF,EAAI,KAAK,IAAIE,EAAO,CAAC,EAAGF,EAAI,KAAK,IAAIE,EAAQ,KAAK,SAAS,aAAc,KAAK,WAAW,EAAGF,IACnG,KAAK,UAAUA,CAAC,EAAE,UAAU,IAAI,uBAAuB,CAE1D,EAKD,iBAAmB,CAEb,KAAK,SAAS,QAChB,KAAK,WAAa,GAEd,KAAK,eAAiB,MAAQ,KAAK,cACrC,KAAK,aAAe,KAAK,SAAS,cAGhC,KAAK,aAAe,KAAK,cAC3B,KAAK,aAAe,KAAK,YAAc,GAGzC,KAAK,KAAK,KAAK,aAAc,GAAO,EAAK,EAE5C,CACF,CACH,ECjEMR,EAAQ,CACZ,MAAO,CAIL,SAAU,CACR,KAAM,MACN,QAAS,UAAY,CACnB,MAAO,CAAE,CACV,CACF,EAKD,SAAU,CACR,KAAM,QACN,QAAS,EACV,EAKD,cAAe,CACb,KAAM,OACN,QAAS,GACV,EAKD,WAAY,CACV,KAAM,QACN,QAAS,EACV,EAKD,cAAe,CACb,KAAM,OACN,QAAS,KACV,EAKD,YAAa,CACX,KAAM,OACN,QAAS,CACV,EAKD,KAAM,CACJ,KAAM,QACN,QAAS,EACV,EAKD,KAAM,CACJ,KAAM,QACN,QAAS,EACV,EAKD,SAAU,CACR,KAAM,QACN,QAAS,EACV,EAKD,aAAc,CACZ,KAAM,OACN,QAAS,CACV,EAKD,YAAa,CACX,KAAM,QACN,QAAS,EACV,EAKD,WAAY,CACV,KAAM,QACN,QAAS,EACV,EAKD,QAAS,CACP,KAAM,OACN,QAAS,IAAM,IAChB,EAKD,iBAAkB,CAChB,KAAM,QACN,QAAS,EACV,EAKD,aAAc,CACZ,KAAM,QACN,QAAS,EACV,EAKD,WAAY,CACV,KAAM,MACN,QAAS,IAAM,IAChB,EAKD,IAAK,CACH,KAAM,QACN,QAAS,EACV,EAKD,eAAgB,CACd,KAAM,OACN,QAAS,CACV,EAKD,aAAc,CACZ,KAAM,OACN,QAAS,CACV,EAKD,MAAO,CACL,KAAM,OACN,QAAS,GACV,EAKD,cAAe,CACb,KAAM,OACN,QAAS,EACV,EAKD,cAAe,CACb,KAAM,OACN,QAAS,GACV,EAMD,OAAQ,CACN,KAAM,OACN,QAAS,OACT,UAAWW,GACF,CAAC,OAAQ,SAAU,UAAW,WAAY,aAAa,EAAE,QAAQA,CAAK,IAAM,EAEtF,EAKD,QAAS,CACP,KAAM,QACN,QAAS,EACV,CACF,EAED,SAAU,CAER,gBAAiB,UAAY,CAE3B,GAAI,CAAE,QAAAC,EAAS,GAAGC,CAAiB,EAAG,KAAK,OAG3C,OAAID,IACFC,EAAkB,CAAE,GAAGA,EAAiB,GAAGD,CAAS,GAIlDC,EAAgB,aAClBA,EAAgB,WAAaC,EAAQD,EAAgB,WAAY,YAAY,GAGxEA,CACR,EAGD,SAAU,UAAY,CACpB,KAAM,CAAE,WAAAE,EAAY,GAAGC,CAAU,EAAG,KAAK,gBAEzC,OAAID,GACFA,EAAW,QAAQE,GAAU,CAC3B,GAAID,EAAS,YAAcC,EAAO,WAAa,KAAK,YAAcA,EAAO,WAAa,KAAK,YACzF,UAAWC,KAAOD,EAAO,SACvBD,EAASE,CAAG,EAAID,EAAO,SAASC,CAAG,CAGjD,CAAS,EAGIF,CACR,CACF,CACH,EC7OMhB,EAAQ,CACZ,SAAW,CACT,KAAK,KAAOmB,EAAS,KAAK,KAAM,KAAK,aAAa,EAClD,KAAK,SAAWA,EAAS,KAAK,SAAU,GAAG,CAC5C,CACH,ECRMnB,EAAQ,CACZ,MAAO,CAEL,mBAAqB,CAEnB,KAAK,MAAM,aAAc,CAAE,WAAY,KAAK,kBAAmB,CAChE,EAGD,cAAgB,CACd,KAAK,qBAAsB,EAG3B,KAAK,uBAA0B,KAAK,SAAS,SAAY,CAAC,IAAI,KAAS,KAEvE,KAAK,MAAM,eAAgB,CAAE,aAAc,KAAK,aAAc,CAC/D,EAGD,cAAgB,CACd,GAAI,KAAK,YAAa,CACpB,KAAM,CAAE,IAAAoB,GAAQ,KAAK,SACfC,EAAe,KAAK,cAAgBD,EAAM,GAAK,GAEjDC,EAAe,KAAK,eAAiB,KAAK,cAC5C,KAAK,SAAU,EACf,KAAK,cAAe,GAGlBA,EAAe,GAAK,KAAK,eAAiB,KAAK,cACjD,KAAK,SAAU,EACf,KAAK,cAAe,EAEvB,CACF,EAED,iBAAkBC,EAAU,CACtBA,GAEF,KAAK,UAAY,KAAK,SAAS,eAAiB,CAAC,IAAI,KAAS,KAAK,wBACnE,KAAK,gBAAiB,EACtB,KAAK,mBAAoB,GAGzB,KAAK,gBAAkB,WAAW,IAAM,CACtC,KAAK,mBAAoB,EACzB,KAAK,SAAU,EACf,KAAK,eAAgB,CAC/B,EAAW,KAAK,SAAS,CAEpB,EAED,qBAAuB,CACrB,KAAK,eAAgB,CACtB,EAED,iBAAmB,CACjB,KAAK,WAAY,CAClB,EAED,oBAAsB,CAGrB,EAED,YAAc,CACZ,QAASd,EAAI,EAAGA,EAAI,KAAK,eAAgBA,IAGvC,KAAK,UAAUA,CAAC,EAAE,MAAM,MAAQ,GAAG,KAAK,aAAc,KAAK,aAAe,OAAU,KAAO,IAE9F,EAGD,YAAae,EAAUC,EAAU,CAC3BA,IACF,KAAK,gBAAiB,EACtB,KAAK,WAAY,EAEpB,CACF,CACH,EC+BA,MAAAC,EAAA,CACA,KAAA,QAEA,OAAA,CAAAC,EAAAC,EAAAC,EAAAC,EAAAb,EAAAG,EAAAW,CAAA,EAEA,MAAA,CAAA,gBAAA,eAAA,YAAA,EAEA,MAAA,CACA,MAAA,CACA,iBAAA,KACA,kBAAA,KACA,uBAAA,KACA,gBAAA,KACA,aAAA,KACA,aAAA,EACA,WAAA,EACA,WAAA,EACA,iBAAA,GACA,YAAA,GACA,OAAA,CAAA,EACA,kBAAA,CAAA,EACA,mBAAA,CAAA,EACA,MAAA,OAAA,OAAA,IACA,gBAAA,EACA,WAAA,EACA,YAAA,EACA,eAAA,CACA,CACA,EAEA,SAAA,CACA,YAAA,UAAA,CACA,OAAA,KAAA,gBAAA,WAAA,KAAA,gBAAA,WAAA,IAAAC,GAAAA,EAAA,UAAA,EAAA,CAAA,CACA,EAEA,YAAA,UAAA,CACA,OAAA,KAAA,SAAA,UAAA,KAAA,aAAA,CACA,EAEA,YAAA,UAAA,CACA,OAAA,KAAA,SAAA,UAAA,KAAA,aAAA,KAAA,YAAA,CACA,EAEA,YAAA,UAAA,CACA,OAAA,KAAA,MAAA,KAAA,sBAAA,KAAA,OAAA,OAAA,EAAA,OAAA,KAAA,OAAA,MACA,EAEA,eAAA,UAAA,CACA,OAAA,KAAA,UAAA,MACA,EAEA,kBAAA,UAAA,CACA,MAAAC,EAAA,KAAA,YAAA,IAAAD,GAAAA,CAAA,EAAA,QAAA,EACA,OAAA,KAAA,gBAAA,YAAAC,EAAA,KAAAD,GAAAA,EAAA,KAAA,WAAA,GAAA,EAAAC,EAAA,KAAAD,GAAAA,EAAA,KAAA,WAAA,GAAA,IACA,EAEA,QAAA,UAAA,CACA,GAAA,KAAA,SAAA,QACA,MAAA,GAGA,IAAAE,EAAA,KAAA,aAAA,KAAA,YAAA,KAAA,WAAA,EAGA,OAAA,KAAA,SAAA,aACAA,IAAA,KAAA,MAAA,KAAA,SAAA,aAAA,CAAA,EAAA,EAAA,KAAA,SAAA,aAAA,IAAA,IAAA,KAAA,YAGA,KAAA,SAAA,IAAAA,EAAA,GAAAA,CACA,EAEA,aAAA,UAAA,CACA,MAAA,CAAA,KAAA,SAAA,SAAA,CAAA,KAAA,SAAA,MAAA,KAAA,SAAA,QACA,EAEA,UAAA,UAAA,CACA,OAAA,KAAA,aAAA,CAAA,GAAA,KAAA,mBAAA,GAAA,KAAA,OAAA,GAAA,KAAA,iBAAA,EAAA,KAAA,MACA,EAEA,WAAA,UAAA,CACA,OAAA,KAAA,SAAA,QAAA,OAAA,KAAA,eAAA,KAAA,SAAA,YACA,CACA,EAEA,SAAA,CAEA,OAAA,iBAAA,SAAA,KAAA,QAAA,EAGA,KAAA,MAAA,MAAA,iBAAA,aAAA,KAAA,eAAA,EACA,KAAA,MAAA,MAAA,iBAAA,WAAA,KAAA,aAAA,EACA,KAAA,MAAA,MAAA,iBAAA,YAAA,KAAA,eAAA,EACA,KAAA,MAAA,MAAA,iBAAA,YAAA,KAAA,eAAA,EACA,KAAA,MAAA,MAAA,iBAAA,UAAA,KAAA,aAAA,EACA,KAAA,MAAA,MAAA,iBAAA,YAAA,KAAA,eAAA,EAGA,KAAA,MAAA,GACA,KAAA,OAAA,CACA,EAGA,eAAA,CACA,KAAA,QAAA,CACA,EAEA,QAAA,CACA,SAAA,CACA,OAAA,oBAAA,SAAA,KAAA,QAAA,EAEA,KAAA,MAAA,MAAA,oBAAA,aAAA,KAAA,eAAA,EACA,KAAA,MAAA,MAAA,oBAAA,WAAA,KAAA,aAAA,EACA,KAAA,MAAA,MAAA,oBAAA,YAAA,KAAA,eAAA,EACA,KAAA,MAAA,MAAA,oBAAA,YAAA,KAAA,eAAA,EACA,KAAA,MAAA,MAAA,oBAAA,UAAA,KAAA,aAAA,EACA,KAAA,MAAA,MAAA,oBAAA,YAAA,KAAA,eAAA,EAEA,KAAA,gBAAA,CACA,EAGA,sBAAA,CACA,OAAA,KAAA,iBACA,EAGA,oBAAA,CACA,OAAA,KAAA,QACA,EAGA,iBAAA,CACA,OAAA,KAAA,YACA,EAGA,oBAAA,CACA,OAAA,KAAA,eACA,EAGA,KAAAC,EAAAC,EAAA,GAAAC,EAAA,GAAA,CAEA,GAAA,KAAA,SAAA,QACA,MAAA,GAGAA,GACA,KAAA,SAAA,SAAA,QAAAC,GAAA,CACAA,GACAA,EAAA,KAAAH,EAAAC,EAAA,EAAA,CAEA,CAAA,EAGA,IAAAG,EAAAJ,EAEAC,IACA,KAAA,SAAA,UAAAD,EAAA,EACAI,EAAA,KAAA,YAAA,EACAJ,GAAA,KAAA,cACAI,EAAA,GAGA,KAAA,MAAA,gBAAA,CAAA,aAAA,KAAA,aAAA,UAAAA,EAAA,EAEA,KAAA,aAAAA,EAEAJ,IAAAI,GACA,WAAA,IAAA,CACA,KAAA,KAAAA,EAAA,EAAA,CACA,EAAA,KAAA,SAAA,KAAA,GAIA,MAAAC,EAAA,KAAA,SAAA,KAAA,EAAAL,EAAA,KAAA,WAAA,KAAA,SAAA,eACA,KAAA,gBAAAC,EAAA,KAAA,MAAA,GAEA,KAAA,UAAA,KAAA,aAAA,KAAA,cAAA,KAAA,eACA,KAAA,WAAA,KAAA,SAAA,IAAAI,EAAA,GAAAA,EAEA,EAGA,UAAA,CACA,KAAA,aACA,KAAA,KAAA,KAAA,aAAA,CAAA,CAEA,EAGA,UAAA,CACA,KAAA,aACA,KAAA,KAAA,KAAA,aAAA,CAAA,CAEA,EAGA,QAAA,CACA,KAAA,SAAA,EACA,KAAA,cAAA,EACA,KAAA,gBAAA,EACA,KAAA,WAAA,EACA,KAAA,eAAA,CACA,CACA,CACA,i9EC/TMC,EAAUC,GAAO,CACrBA,EAAI,UAAU,QAASC,CAAQ,CACjC,EAEeA,EAAA,CACb,QAAAF,CACF"}