{"version":3,"file":"connector-bezier-c9c16c6b.js","sources":["../../../../../node_modules/.pnpm/@jsplumb+connector-bezier@5.13.2/node_modules/@jsplumb/connector-bezier/js/jsplumb.connector-bezier.es.js"],"sourcesContent":["import { extend, log, sgn } from '@jsplumb/util';\nimport { ArcSegment, AbstractConnector, Connectors } from '@jsplumb/core';\nimport { AbstractSegment } from '@jsplumb/common';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nvar AbstractBezierConnector = function (_AbstractConnector) {\n  _inherits(AbstractBezierConnector, _AbstractConnector);\n  var _super = _createSuper(AbstractBezierConnector);\n  function AbstractBezierConnector(connection, params) {\n    var _this;\n    _classCallCheck(this, AbstractBezierConnector);\n    _this = _super.call(this, connection, params);\n    _this.connection = connection;\n    _defineProperty(_assertThisInitialized(_this), \"showLoopback\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"curviness\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"margin\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"proximityLimit\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"orientation\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"loopbackRadius\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"clockwise\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"isLoopbackCurrently\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"geometry\", null);\n    params = params || {};\n    _this.showLoopback = params.showLoopback !== false;\n    _this.curviness = params.curviness || 10;\n    _this.margin = params.margin || 5;\n    _this.proximityLimit = params.proximityLimit || 80;\n    _this.clockwise = params.orientation && params.orientation === \"clockwise\";\n    _this.loopbackRadius = params.loopbackRadius || 25;\n    _this.isLoopbackCurrently = false;\n    return _this;\n  }\n  _createClass(AbstractBezierConnector, [{\n    key: \"getDefaultStubs\",\n    value: function getDefaultStubs() {\n      return [0, 0];\n    }\n  }, {\n    key: \"_compute\",\n    value: function _compute(paintInfo, p) {\n      var sp = p.sourcePos,\n          tp = p.targetPos,\n          _w = Math.abs(sp.curX - tp.curX),\n          _h = Math.abs(sp.curY - tp.curY);\n      if (!this.showLoopback || p.sourceEndpoint.elementId !== p.targetEndpoint.elementId) {\n        this.isLoopbackCurrently = false;\n        this._computeBezier(paintInfo, p, sp, tp, _w, _h);\n      } else {\n        this.isLoopbackCurrently = true;\n        var x1 = p.sourcePos.curX,\n            y1 = p.sourcePos.curY - this.margin,\n            cx = x1,\n            cy = y1 - this.loopbackRadius,\n        _x = cx - this.loopbackRadius,\n            _y = cy - this.loopbackRadius;\n        _w = 2 * this.loopbackRadius;\n        _h = 2 * this.loopbackRadius;\n        paintInfo.points[0] = _x;\n        paintInfo.points[1] = _y;\n        paintInfo.points[2] = _w;\n        paintInfo.points[3] = _h;\n        this._addSegment(ArcSegment, {\n          loopback: true,\n          x1: x1 - _x + 4,\n          y1: y1 - _y,\n          startAngle: 0,\n          endAngle: 2 * Math.PI,\n          r: this.loopbackRadius,\n          ac: !this.clockwise,\n          x2: x1 - _x - 4,\n          y2: y1 - _y,\n          cx: cx - _x,\n          cy: cy - _y\n        });\n      }\n    }\n  }, {\n    key: \"exportGeometry\",\n    value: function exportGeometry() {\n      if (this.geometry == null) {\n        return null;\n      } else {\n        return {\n          controlPoints: [extend({}, this.geometry.controlPoints[0]), extend({}, this.geometry.controlPoints[1])],\n          source: extend({}, this.geometry.source),\n          target: extend({}, this.geometry.target)\n        };\n      }\n    }\n  }, {\n    key: \"transformGeometry\",\n    value: function transformGeometry(g, dx, dy) {\n      return {\n        controlPoints: [{\n          x: g.controlPoints[0].x + dx,\n          y: g.controlPoints[0].y + dy\n        }, {\n          x: g.controlPoints[1].x + dx,\n          y: g.controlPoints[1].y + dy\n        }],\n        source: this.transformAnchorPlacement(g.source, dx, dy),\n        target: this.transformAnchorPlacement(g.target, dx, dy)\n      };\n    }\n  }, {\n    key: \"importGeometry\",\n    value: function importGeometry(geometry) {\n      if (geometry != null) {\n        if (geometry.controlPoints == null || geometry.controlPoints.length != 2) {\n          log(\"jsPlumb Bezier: cannot import geometry; controlPoints missing or does not have length 2\");\n          this.setGeometry(null, true);\n          return false;\n        }\n        if (geometry.controlPoints[0].x == null || geometry.controlPoints[0].y == null || geometry.controlPoints[1].x == null || geometry.controlPoints[1].y == null) {\n          log(\"jsPlumb Bezier: cannot import geometry; controlPoints malformed\");\n          this.setGeometry(null, true);\n          return false;\n        }\n        if (geometry.source == null || geometry.source.curX == null || geometry.source.curY == null) {\n          log(\"jsPlumb Bezier: cannot import geometry; source missing or malformed\");\n          this.setGeometry(null, true);\n          return false;\n        }\n        if (geometry.target == null || geometry.target.curX == null || geometry.target.curY == null) {\n          log(\"jsPlumb Bezier: cannot import geometry; target missing or malformed\");\n          this.setGeometry(null, true);\n          return false;\n        }\n        this.setGeometry(geometry, false);\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n  return AbstractBezierConnector;\n}(AbstractConnector);\n\nvar Vectors = {\n  subtract: function subtract(v1, v2) {\n    return {\n      x: v1.x - v2.x,\n      y: v1.y - v2.y\n    };\n  },\n  dotProduct: function dotProduct(v1, v2) {\n    return v1.x * v2.x + v1.y * v2.y;\n  },\n  square: function square(v) {\n    return Math.sqrt(v.x * v.x + v.y * v.y);\n  },\n  scale: function scale(v, s) {\n    return {\n      x: v.x * s,\n      y: v.y * s\n    };\n  }\n};\nvar maxRecursion = 64;\nvar flatnessTolerance = Math.pow(2.0, -maxRecursion - 1);\nfunction distanceFromCurve(point, curve) {\n  var candidates = [],\n      w = _convertToBezier(point, curve),\n      degree = curve.length - 1,\n      higherDegree = 2 * degree - 1,\n      numSolutions = _findRoots(w, higherDegree, candidates, 0),\n      v = Vectors.subtract(point, curve[0]),\n      dist = Vectors.square(v),\n      t = 0.0,\n      newDist;\n  for (var i = 0; i < numSolutions; i++) {\n    v = Vectors.subtract(point, _bezier(curve, degree, candidates[i], null, null));\n    newDist = Vectors.square(v);\n    if (newDist < dist) {\n      dist = newDist;\n      t = candidates[i];\n    }\n  }\n  v = Vectors.subtract(point, curve[degree]);\n  newDist = Vectors.square(v);\n  if (newDist < dist) {\n    dist = newDist;\n    t = 1.0;\n  }\n  return {\n    location: t,\n    distance: dist\n  };\n}\nfunction nearestPointOnCurve(point, curve) {\n  var td = distanceFromCurve(point, curve);\n  return {\n    point: _bezier(curve, curve.length - 1, td.location, null, null),\n    location: td.location\n  };\n}\nfunction _convertToBezier(point, curve) {\n  var degree = curve.length - 1,\n      higherDegree = 2 * degree - 1,\n      c = [],\n      d = [],\n      cdTable = [],\n      w = [],\n      z = [[1.0, 0.6, 0.3, 0.1], [0.4, 0.6, 0.6, 0.4], [0.1, 0.3, 0.6, 1.0]];\n  for (var i = 0; i <= degree; i++) {\n    c[i] = Vectors.subtract(curve[i], point);\n  }\n  for (var _i = 0; _i <= degree - 1; _i++) {\n    d[_i] = Vectors.subtract(curve[_i + 1], curve[_i]);\n    d[_i] = Vectors.scale(d[_i], 3.0);\n  }\n  for (var row = 0; row <= degree - 1; row++) {\n    for (var column = 0; column <= degree; column++) {\n      if (!cdTable[row]) cdTable[row] = [];\n      cdTable[row][column] = Vectors.dotProduct(d[row], c[column]);\n    }\n  }\n  for (var _i2 = 0; _i2 <= higherDegree; _i2++) {\n    if (!w[_i2]) {\n      w[_i2] = [];\n    }\n    w[_i2].y = 0.0;\n    w[_i2].x = parseFloat(\"\" + _i2) / higherDegree;\n  }\n  var n = degree,\n      m = degree - 1;\n  for (var k = 0; k <= n + m; k++) {\n    var lb = Math.max(0, k - m),\n        ub = Math.min(k, n);\n    for (var _i3 = lb; _i3 <= ub; _i3++) {\n      var j = k - _i3;\n      w[_i3 + j].y += cdTable[j][_i3] * z[j][_i3];\n    }\n  }\n  return w;\n}\nfunction _findRoots(w, degree, t, depth) {\n  var left = [],\n      right = [],\n      left_count,\n      right_count,\n      left_t = [],\n      right_t = [];\n  switch (_getCrossingCount(w, degree)) {\n    case 0:\n      {\n        return 0;\n      }\n    case 1:\n      {\n        if (depth >= maxRecursion) {\n          t[0] = (w[0].x + w[degree].x) / 2.0;\n          return 1;\n        }\n        if (_isFlatEnough(w, degree)) {\n          t[0] = _computeXIntercept(w, degree);\n          return 1;\n        }\n        break;\n      }\n  }\n  _bezier(w, degree, 0.5, left, right);\n  left_count = _findRoots(left, degree, left_t, depth + 1);\n  right_count = _findRoots(right, degree, right_t, depth + 1);\n  for (var i = 0; i < left_count; i++) {\n    t[i] = left_t[i];\n  }\n  for (var _i4 = 0; _i4 < right_count; _i4++) {\n    t[_i4 + left_count] = right_t[_i4];\n  }\n  return left_count + right_count;\n}\nfunction _getCrossingCount(curve, degree) {\n  var n_crossings = 0,\n      sign,\n      old_sign;\n  sign = old_sign = sgn(curve[0].y);\n  for (var i = 1; i <= degree; i++) {\n    sign = sgn(curve[i].y);\n    if (sign != old_sign) n_crossings++;\n    old_sign = sign;\n  }\n  return n_crossings;\n}\nfunction _isFlatEnough(curve, degree) {\n  var error, intercept_1, intercept_2, left_intercept, right_intercept, a, b, c, det, dInv, a1, b1, c1, a2, b2, c2;\n  a = curve[0].y - curve[degree].y;\n  b = curve[degree].x - curve[0].x;\n  c = curve[0].x * curve[degree].y - curve[degree].x * curve[0].y;\n  var max_distance_above, max_distance_below;\n  max_distance_above = max_distance_below = 0.0;\n  for (var i = 1; i < degree; i++) {\n    var value = a * curve[i].x + b * curve[i].y + c;\n    if (value > max_distance_above) {\n      max_distance_above = value;\n    } else if (value < max_distance_below) {\n      max_distance_below = value;\n    }\n  }\n  a1 = 0.0;\n  b1 = 1.0;\n  c1 = 0.0;\n  a2 = a;\n  b2 = b;\n  c2 = c - max_distance_above;\n  det = a1 * b2 - a2 * b1;\n  dInv = 1.0 / det;\n  intercept_1 = (b1 * c2 - b2 * c1) * dInv;\n  a2 = a;\n  b2 = b;\n  c2 = c - max_distance_below;\n  det = a1 * b2 - a2 * b1;\n  dInv = 1.0 / det;\n  intercept_2 = (b1 * c2 - b2 * c1) * dInv;\n  left_intercept = Math.min(intercept_1, intercept_2);\n  right_intercept = Math.max(intercept_1, intercept_2);\n  error = right_intercept - left_intercept;\n  return error < flatnessTolerance ? 1 : 0;\n}\nfunction _computeXIntercept(curve, degree) {\n  var XLK = 1.0,\n      YLK = 0.0,\n      XNM = curve[degree].x - curve[0].x,\n      YNM = curve[degree].y - curve[0].y,\n      XMK = curve[0].x - 0.0,\n      YMK = curve[0].y - 0.0,\n      det = XNM * YLK - YNM * XLK,\n      detInv = 1.0 / det,\n      S = (XNM * YMK - YNM * XMK) * detInv;\n  return 0.0 + XLK * S;\n}\nfunction _bezier(curve, degree, t, left, right) {\n  var temp = [[]];\n  for (var j = 0; j <= degree; j++) {\n    temp[0][j] = curve[j];\n  }\n  for (var i = 1; i <= degree; i++) {\n    for (var _j = 0; _j <= degree - i; _j++) {\n      if (!temp[i]) temp[i] = [];\n      if (!temp[i][_j]) temp[i][_j] = {};\n      temp[i][_j].x = (1.0 - t) * temp[i - 1][_j].x + t * temp[i - 1][_j + 1].x;\n      temp[i][_j].y = (1.0 - t) * temp[i - 1][_j].y + t * temp[i - 1][_j + 1].y;\n    }\n  }\n  if (left != null) {\n    for (var _j2 = 0; _j2 <= degree; _j2++) {\n      left[_j2] = temp[_j2][0];\n    }\n  }\n  if (right != null) {\n    for (var _j3 = 0; _j3 <= degree; _j3++) {\n      right[_j3] = temp[degree - _j3][_j3];\n    }\n  }\n  return temp[degree][0];\n}\nfunction _getLUT(steps, curve) {\n  var out = [];\n  steps--;\n  for (var n = 0; n <= steps; n++) {\n    out.push(_computeLookup(n / steps, curve));\n  }\n  return out;\n}\nfunction _computeLookup(e, curve) {\n  var EMPTY_POINT = {\n    x: 0,\n    y: 0\n  };\n  if (e === 0) {\n    return curve[0];\n  }\n  var degree = curve.length - 1;\n  if (e === 1) {\n    return curve[degree];\n  }\n  var o = curve;\n  var s = 1 - e;\n  if (degree === 0) {\n    return curve[0];\n  }\n  if (degree === 1) {\n    return {\n      x: s * o[0].x + e * o[1].x,\n      y: s * o[0].y + e * o[1].y\n    };\n  }\n  if (4 > degree) {\n    var l = s * s,\n        h = e * e,\n        u = 0,\n        m,\n        g,\n        f;\n    if (degree === 2) {\n      o = [o[0], o[1], o[2], EMPTY_POINT];\n      m = l;\n      g = 2 * (s * e);\n      f = h;\n    } else if (degree === 3) {\n      m = l * s;\n      g = 3 * (l * e);\n      f = 3 * (s * h);\n      u = e * h;\n    }\n    return {\n      x: m * o[0].x + g * o[1].x + f * o[2].x + u * o[3].x,\n      y: m * o[0].y + g * o[1].y + f * o[2].y + u * o[3].y\n    };\n  } else {\n    return EMPTY_POINT;\n  }\n}\nfunction computeBezierLength(curve) {\n  var length = 0;\n  if (!isPoint(curve)) {\n    var steps = 16;\n    var lut = _getLUT(steps, curve);\n    for (var i = 0; i < steps - 1; i++) {\n      var a = lut[i],\n          b = lut[i + 1];\n      length += dist(a, b);\n    }\n  }\n  return length;\n}\nvar _curveFunctionCache = new Map();\nfunction _getCurveFunctions(order) {\n  var fns = _curveFunctionCache.get(order);\n  if (!fns) {\n    fns = [];\n    var f_term = function f_term() {\n      return function (t) {\n        return Math.pow(t, order);\n      };\n    },\n        l_term = function l_term() {\n      return function (t) {\n        return Math.pow(1 - t, order);\n      };\n    },\n        c_term = function c_term(c) {\n      return function (t) {\n        return c;\n      };\n    },\n        t_term = function t_term() {\n      return function (t) {\n        return t;\n      };\n    },\n        one_minus_t_term = function one_minus_t_term() {\n      return function (t) {\n        return 1 - t;\n      };\n    },\n        _termFunc = function _termFunc(terms) {\n      return function (t) {\n        var p = 1;\n        for (var i = 0; i < terms.length; i++) {\n          p = p * terms[i](t);\n        }\n        return p;\n      };\n    };\n    fns.push(f_term());\n    for (var i = 1; i < order; i++) {\n      var terms = [c_term(order)];\n      for (var j = 0; j < order - i; j++) {\n        terms.push(t_term());\n      }\n      for (var _j4 = 0; _j4 < i; _j4++) {\n        terms.push(one_minus_t_term());\n      }\n      fns.push(_termFunc(terms));\n    }\n    fns.push(l_term());\n    _curveFunctionCache.set(order, fns);\n  }\n  return fns;\n}\nfunction pointOnCurve(curve, location) {\n  var cc = _getCurveFunctions(curve.length - 1),\n      _x = 0,\n      _y = 0;\n  for (var i = 0; i < curve.length; i++) {\n    _x = _x + curve[i].x * cc[i](location);\n    _y = _y + curve[i].y * cc[i](location);\n  }\n  return {\n    x: _x,\n    y: _y\n  };\n}\nfunction dist(p1, p2) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\nfunction isPoint(curve) {\n  return curve[0].x === curve[1].x && curve[0].y === curve[1].y;\n}\nfunction pointAlongPath(curve, location, distance) {\n  if (isPoint(curve)) {\n    return {\n      point: curve[0],\n      location: location\n    };\n  }\n  var prev = pointOnCurve(curve, location),\n      tally = 0,\n      curLoc = location,\n      direction = distance > 0 ? 1 : -1,\n      cur = null;\n  while (tally < Math.abs(distance)) {\n    curLoc += 0.005 * direction;\n    cur = pointOnCurve(curve, curLoc);\n    tally += dist(cur, prev);\n    prev = cur;\n  }\n  return {\n    point: cur,\n    location: curLoc\n  };\n}\nfunction pointAlongCurveFrom(curve, location, distance) {\n  return pointAlongPath(curve, location, distance).point;\n}\nfunction locationAlongCurveFrom(curve, location, distance) {\n  return pointAlongPath(curve, location, distance).location;\n}\nfunction gradientAtPoint(curve, location) {\n  var p1 = pointOnCurve(curve, location),\n      p2 = pointOnCurve(curve.slice(0, curve.length - 1), location),\n      dy = p2.y - p1.y,\n      dx = p2.x - p1.x;\n  return dy === 0 ? Infinity : Math.atan(dy / dx);\n}\nfunction gradientAtPointAlongPathFrom(curve, location, distance) {\n  var p = pointAlongPath(curve, location, distance);\n  if (p.location > 1) p.location = 1;\n  if (p.location < 0) p.location = 0;\n  return gradientAtPoint(curve, p.location);\n}\nfunction perpendicularToPathAt(curve, location, length, distance) {\n  distance = distance == null ? 0 : distance;\n  var p = pointAlongPath(curve, location, distance),\n      m = gradientAtPoint(curve, p.location),\n      _theta2 = Math.atan(-1 / m),\n      y = length / 2 * Math.sin(_theta2),\n      x = length / 2 * Math.cos(_theta2);\n  return [{\n    x: p.point.x + x,\n    y: p.point.y + y\n  }, {\n    x: p.point.x - x,\n    y: p.point.y - y\n  }];\n}\nfunction bezierLineIntersection(x1, y1, x2, y2, curve) {\n  var a = y2 - y1,\n      b = x1 - x2,\n      c = x1 * (y1 - y2) + y1 * (x2 - x1),\n      coeffs = _computeCoefficients(curve),\n      p = [a * coeffs[0][0] + b * coeffs[1][0], a * coeffs[0][1] + b * coeffs[1][1], a * coeffs[0][2] + b * coeffs[1][2], a * coeffs[0][3] + b * coeffs[1][3] + c],\n      r = _cubicRoots.apply(null, p),\n      intersections = [];\n  if (r != null) {\n    for (var i = 0; i < 3; i++) {\n      var _t = r[i],\n          t2 = Math.pow(_t, 2),\n          t3 = Math.pow(_t, 3),\n          x = {\n        x: coeffs[0][0] * t3 + coeffs[0][1] * t2 + coeffs[0][2] * _t + coeffs[0][3],\n        y: coeffs[1][0] * t3 + coeffs[1][1] * t2 + coeffs[1][2] * _t + coeffs[1][3]\n      };\n      var s = void 0;\n      if (x2 - x1 !== 0) {\n        s = (x[0] - x1) / (x2 - x1);\n      } else {\n        s = (x[1] - y1) / (y2 - y1);\n      }\n      if (_t >= 0 && _t <= 1.0 && s >= 0 && s <= 1.0) {\n        intersections.push(x);\n      }\n    }\n  }\n  return intersections;\n}\nfunction boxIntersection(x, y, w, h, curve) {\n  var i = [];\n  i.push.apply(i, bezierLineIntersection(x, y, x + w, y, curve));\n  i.push.apply(i, bezierLineIntersection(x + w, y, x + w, y + h, curve));\n  i.push.apply(i, bezierLineIntersection(x + w, y + h, x, y + h, curve));\n  i.push.apply(i, bezierLineIntersection(x, y + h, x, y, curve));\n  return i;\n}\nfunction boundingBoxIntersection(boundingBox, curve) {\n  var i = [];\n  i.push.apply(i, bezierLineIntersection(boundingBox.x, boundingBox.y, boundingBox.x + boundingBox.w, boundingBox.y, curve));\n  i.push.apply(i, bezierLineIntersection(boundingBox.x + boundingBox.w, boundingBox.y, boundingBox.x + boundingBox.w, boundingBox.y + boundingBox.h, curve));\n  i.push.apply(i, bezierLineIntersection(boundingBox.x + boundingBox.w, boundingBox.y + boundingBox.h, boundingBox.x, boundingBox.y + boundingBox.h, curve));\n  i.push.apply(i, bezierLineIntersection(boundingBox.x, boundingBox.y + boundingBox.h, boundingBox.x, boundingBox.y, curve));\n  return i;\n}\nfunction _computeCoefficientsForAxis(curve, axis) {\n  return [-curve[0][axis] + 3 * curve[1][axis] + -3 * curve[2][axis] + curve[3][axis], 3 * curve[0][axis] - 6 * curve[1][axis] + 3 * curve[2][axis], -3 * curve[0][axis] + 3 * curve[1][axis], curve[0][axis]];\n}\nfunction _computeCoefficients(curve) {\n  return [_computeCoefficientsForAxis(curve, \"x\"), _computeCoefficientsForAxis(curve, \"y\")];\n}\nfunction _cubicRoots(a, b, c, d) {\n  var A = b / a,\n      B = c / a,\n      C = d / a,\n      Q = (3 * B - Math.pow(A, 2)) / 9,\n      R = (9 * A * B - 27 * C - 2 * Math.pow(A, 3)) / 54,\n      D = Math.pow(Q, 3) + Math.pow(R, 2),\n      S,\n      T,\n      t = [0, 0, 0];\n  if (D >= 0)\n    {\n      S = sgn(R + Math.sqrt(D)) * Math.pow(Math.abs(R + Math.sqrt(D)), 1 / 3);\n      T = sgn(R - Math.sqrt(D)) * Math.pow(Math.abs(R - Math.sqrt(D)), 1 / 3);\n      t[0] = -A / 3 + (S + T);\n      t[1] = -A / 3 - (S + T) / 2;\n      t[2] = -A / 3 - (S + T) / 2;\n      if (Math.abs(Math.sqrt(3) * (S - T) / 2) !== 0) {\n        t[1] = -1;\n        t[2] = -1;\n      }\n    } else\n    {\n      var th = Math.acos(R / Math.sqrt(-Math.pow(Q, 3)));\n      t[0] = 2 * Math.sqrt(-Q) * Math.cos(th / 3) - A / 3;\n      t[1] = 2 * Math.sqrt(-Q) * Math.cos((th + 2 * Math.PI) / 3) - A / 3;\n      t[2] = 2 * Math.sqrt(-Q) * Math.cos((th + 4 * Math.PI) / 3) - A / 3;\n    }\n  for (var i = 0; i < 3; i++) {\n    if (t[i] < 0 || t[i] > 1.0) {\n      t[i] = -1;\n    }\n  }\n  return t;\n}\n\nvar BezierSegment = function (_AbstractSegment) {\n  _inherits(BezierSegment, _AbstractSegment);\n  var _super = _createSuper(BezierSegment);\n  function BezierSegment(params) {\n    var _this;\n    _classCallCheck(this, BezierSegment);\n    _this = _super.call(this, params);\n    _defineProperty(_assertThisInitialized(_this), \"curve\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"cp1x\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"cp1y\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"cp2x\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"cp2y\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"length\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"type\", BezierSegment.segmentType);\n    _this.cp1x = params.cp1x;\n    _this.cp1y = params.cp1y;\n    _this.cp2x = params.cp2x;\n    _this.cp2y = params.cp2y;\n    _this.x1 = params.x1;\n    _this.x2 = params.x2;\n    _this.y1 = params.y1;\n    _this.y2 = params.y2;\n    _this.curve = [{\n      x: _this.x1,\n      y: _this.y1\n    }, {\n      x: _this.cp1x,\n      y: _this.cp1y\n    }, {\n      x: _this.cp2x,\n      y: _this.cp2y\n    }, {\n      x: _this.x2,\n      y: _this.y2\n    }];\n    _this.extents = {\n      xmin: Math.min(_this.x1, _this.x2, _this.cp1x, _this.cp2x),\n      ymin: Math.min(_this.y1, _this.y2, _this.cp1y, _this.cp2y),\n      xmax: Math.max(_this.x1, _this.x2, _this.cp1x, _this.cp2x),\n      ymax: Math.max(_this.y1, _this.y2, _this.cp1y, _this.cp2y)\n    };\n    return _this;\n  }\n  _createClass(BezierSegment, [{\n    key: \"getPath\",\n    value: function getPath(isFirstSegment) {\n      return (isFirstSegment ? \"M \" + this.x2 + \" \" + this.y2 + \" \" : \"\") + \"C \" + this.cp2x + \" \" + this.cp2y + \" \" + this.cp1x + \" \" + this.cp1y + \" \" + this.x1 + \" \" + this.y1;\n    }\n  }, {\n    key: \"pointOnPath\",\n    value: function pointOnPath(location, absolute) {\n      location = BezierSegment._translateLocation(this.curve, location, absolute);\n      return pointOnCurve(this.curve, location);\n    }\n  }, {\n    key: \"gradientAtPoint\",\n    value: function gradientAtPoint$1(location, absolute) {\n      location = BezierSegment._translateLocation(this.curve, location, absolute);\n      return gradientAtPoint(this.curve, location);\n    }\n  }, {\n    key: \"pointAlongPathFrom\",\n    value: function pointAlongPathFrom(location, distance, absolute) {\n      location = BezierSegment._translateLocation(this.curve, location, absolute);\n      return pointAlongCurveFrom(this.curve, location, distance);\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      if (this.length == null || this.length === 0) {\n        this.length = computeBezierLength(this.curve);\n      }\n      return this.length;\n    }\n  }, {\n    key: \"findClosestPointOnPath\",\n    value: function findClosestPointOnPath(x, y) {\n      var p = nearestPointOnCurve({\n        x: x,\n        y: y\n      }, this.curve);\n      return {\n        d: Math.sqrt(Math.pow(p.point.x - x, 2) + Math.pow(p.point.y - y, 2)),\n        x: p.point.x,\n        y: p.point.y,\n        l: 1 - p.location,\n        s: this,\n        x1: null,\n        y1: null,\n        x2: null,\n        y2: null\n      };\n    }\n  }, {\n    key: \"lineIntersection\",\n    value: function lineIntersection(x1, y1, x2, y2) {\n      return bezierLineIntersection(x1, y1, x2, y2, this.curve);\n    }\n  }], [{\n    key: \"_translateLocation\",\n    value: function _translateLocation(_curve, location, absolute) {\n      if (absolute) {\n        location = locationAlongCurveFrom(_curve, location > 0 ? 0 : 1, location);\n      }\n      return location;\n    }\n  }]);\n  return BezierSegment;\n}(AbstractSegment);\n_defineProperty(BezierSegment, \"segmentType\", \"Bezier\");\n\nvar BezierConnector = function (_AbstractBezierConnec) {\n  _inherits(BezierConnector, _AbstractBezierConnec);\n  var _super = _createSuper(BezierConnector);\n  function BezierConnector(connection, params) {\n    var _this;\n    _classCallCheck(this, BezierConnector);\n    _this = _super.call(this, connection, params);\n    _this.connection = connection;\n    _defineProperty(_assertThisInitialized(_this), \"type\", BezierConnector.type);\n    _defineProperty(_assertThisInitialized(_this), \"majorAnchor\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"minorAnchor\", void 0);\n    params = params || {};\n    _this.majorAnchor = params.curviness || 150;\n    _this.minorAnchor = 10;\n    return _this;\n  }\n  _createClass(BezierConnector, [{\n    key: \"getCurviness\",\n    value: function getCurviness() {\n      return this.majorAnchor;\n    }\n  }, {\n    key: \"_findControlPoint\",\n    value: function _findControlPoint(point, sourceAnchorPosition, targetAnchorPosition, soo, too) {\n      var perpendicular = soo[0] !== too[0] || soo[1] === too[1],\n          p = {\n        x: 0,\n        y: 0\n      };\n      if (!perpendicular) {\n        if (soo[0] === 0) {\n          p.x = sourceAnchorPosition.curX < targetAnchorPosition.curX ? point.x + this.minorAnchor : point.x - this.minorAnchor;\n        } else {\n          p.x = point.x - this.majorAnchor * soo[0];\n        }\n        if (soo[1] === 0) {\n          p.y = sourceAnchorPosition.curY < targetAnchorPosition.curY ? point.y + this.minorAnchor : point.y - this.minorAnchor;\n        } else {\n          p.y = point.y + this.majorAnchor * too[1];\n        }\n      } else {\n        if (too[0] === 0) {\n          p.x = targetAnchorPosition.curX < sourceAnchorPosition.curX ? point.x + this.minorAnchor : point.x - this.minorAnchor;\n        } else {\n          p.x = point.x + this.majorAnchor * too[0];\n        }\n        if (too[1] === 0) {\n          p.y = targetAnchorPosition.curY < sourceAnchorPosition.curY ? point.y + this.minorAnchor : point.y - this.minorAnchor;\n        } else {\n          p.y = point.y + this.majorAnchor * soo[1];\n        }\n      }\n      return p;\n    }\n  }, {\n    key: \"_computeBezier\",\n    value: function _computeBezier(paintInfo, p, sp, tp, _w, _h) {\n      var _CP,\n          _CP2,\n          _sx = sp.curX < tp.curX ? _w : 0,\n          _sy = sp.curY < tp.curY ? _h : 0,\n          _tx = sp.curX < tp.curX ? 0 : _w,\n          _ty = sp.curY < tp.curY ? 0 : _h;\n      if (this.edited !== true) {\n        _CP = this._findControlPoint({\n          x: _sx,\n          y: _sy\n        }, sp, tp, paintInfo.so, paintInfo.to);\n        _CP2 = this._findControlPoint({\n          x: _tx,\n          y: _ty\n        }, tp, sp, paintInfo.to, paintInfo.so);\n      } else {\n        _CP = this.geometry.controlPoints[0];\n        _CP2 = this.geometry.controlPoints[1];\n      }\n      this.geometry = {\n        controlPoints: [_CP, _CP2],\n        source: p.sourcePos,\n        target: p.targetPos\n      };\n      this._addSegment(BezierSegment, {\n        x1: _sx,\n        y1: _sy,\n        x2: _tx,\n        y2: _ty,\n        cp1x: _CP.x,\n        cp1y: _CP.y,\n        cp2x: _CP2.x,\n        cp2y: _CP2.y\n      });\n    }\n  }]);\n  return BezierConnector;\n}(AbstractBezierConnector);\n_defineProperty(BezierConnector, \"type\", \"Bezier\");\n\nfunction _segment(x1, y1, x2, y2) {\n  if (x1 <= x2 && y2 <= y1) {\n    return 1;\n  } else if (x1 <= x2 && y1 <= y2) {\n    return 2;\n  } else if (x2 <= x1 && y2 >= y1) {\n    return 3;\n  }\n  return 4;\n}\nfunction _findControlPoint(midx, midy, segment, sourceEdge, targetEdge, dx, dy, distance, proximityLimit) {\n  if (distance <= proximityLimit) {\n    return {\n      x: midx,\n      y: midy\n    };\n  }\n  if (segment === 1) {\n    if (sourceEdge.curY <= 0 && targetEdge.curY >= 1) {\n      return {\n        x: midx + (sourceEdge.x < 0.5 ? -1 * dx : dx),\n        y: midy\n      };\n    } else if (sourceEdge.curX >= 1 && targetEdge.curX <= 0) {\n      return {\n        x: midx,\n        y: midy + (sourceEdge.y < 0.5 ? -1 * dy : dy)\n      };\n    } else {\n      return {\n        x: midx + -1 * dx,\n        y: midy + -1 * dy\n      };\n    }\n  } else if (segment === 2) {\n    if (sourceEdge.curY >= 1 && targetEdge.curY <= 0) {\n      return {\n        x: midx + (sourceEdge.x < 0.5 ? -1 * dx : dx),\n        y: midy\n      };\n    } else if (sourceEdge.curX >= 1 && targetEdge.curX <= 0) {\n      return {\n        x: midx,\n        y: midy + (sourceEdge.y < 0.5 ? -1 * dy : dy)\n      };\n    } else {\n      return {\n        x: midx + dx,\n        y: midy + -1 * dy\n      };\n    }\n  } else if (segment === 3) {\n    if (sourceEdge.curY >= 1 && targetEdge.curY <= 0) {\n      return {\n        x: midx + (sourceEdge.x < 0.5 ? -1 * dx : dx),\n        y: midy\n      };\n    } else if (sourceEdge.curX <= 0 && targetEdge.curX >= 1) {\n      return {\n        x: midx,\n        y: midy + (sourceEdge.y < 0.5 ? -1 * dy : dy)\n      };\n    } else {\n      return {\n        x: midx + -1 * dx,\n        y: midy + -1 * dy\n      };\n    }\n  } else if (segment === 4) {\n    if (sourceEdge.curY <= 0 && targetEdge.curY >= 1) {\n      return {\n        x: midx + (sourceEdge.x < 0.5 ? -1 * dx : dx),\n        y: midy\n      };\n    } else if (sourceEdge.curX <= 0 && targetEdge.curX >= 1) {\n      return {\n        x: midx,\n        y: midy + (sourceEdge.y < 0.5 ? -1 * dy : dy)\n      };\n    } else {\n      return {\n        x: midx + dx,\n        y: midy + -1 * dy\n      };\n    }\n  }\n}\nvar StateMachineConnector = function (_AbstractBezierConnec) {\n  _inherits(StateMachineConnector, _AbstractBezierConnec);\n  var _super = _createSuper(StateMachineConnector);\n  function StateMachineConnector(connection, params) {\n    var _this;\n    _classCallCheck(this, StateMachineConnector);\n    _this = _super.call(this, connection, params);\n    _this.connection = connection;\n    _defineProperty(_assertThisInitialized(_this), \"type\", StateMachineConnector.type);\n    _defineProperty(_assertThisInitialized(_this), \"_controlPoint\", void 0);\n    _this.curviness = params.curviness || 10;\n    _this.margin = params.margin || 5;\n    _this.proximityLimit = params.proximityLimit || 80;\n    _this.clockwise = params.orientation && params.orientation === \"clockwise\";\n    return _this;\n  }\n  _createClass(StateMachineConnector, [{\n    key: \"_computeBezier\",\n    value: function _computeBezier(paintInfo, params, sp, tp, w, h) {\n      var _sx = sp.curX < tp.curX ? 0 : w,\n          _sy = sp.curY < tp.curY ? 0 : h,\n          _tx = sp.curX < tp.curX ? w : 0,\n          _ty = sp.curY < tp.curY ? h : 0;\n      if (sp.x === 0) {\n        _sx -= this.margin;\n      }\n      if (sp.x === 1) {\n        _sx += this.margin;\n      }\n      if (sp.y === 0) {\n        _sy -= this.margin;\n      }\n      if (sp.y === 1) {\n        _sy += this.margin;\n      }\n      if (tp.x === 0) {\n        _tx -= this.margin;\n      }\n      if (tp.x === 1) {\n        _tx += this.margin;\n      }\n      if (tp.y === 0) {\n        _ty -= this.margin;\n      }\n      if (tp.y === 1) {\n        _ty += this.margin;\n      }\n      if (this.edited !== true) {\n        var _midx = (_sx + _tx) / 2,\n            _midy = (_sy + _ty) / 2,\n            segment = _segment(_sx, _sy, _tx, _ty),\n            distance = Math.sqrt(Math.pow(_tx - _sx, 2) + Math.pow(_ty - _sy, 2));\n        this._controlPoint = _findControlPoint(_midx, _midy, segment, params.sourcePos, params.targetPos, this.curviness, this.curviness, distance, this.proximityLimit);\n      } else {\n        this._controlPoint = this.geometry.controlPoints[0];\n      }\n      var cp1x, cp2x, cp1y, cp2y;\n      cp1x = this._controlPoint.x;\n      cp2x = this._controlPoint.x;\n      cp1y = this._controlPoint.y;\n      cp2y = this._controlPoint.y;\n      this.geometry = {\n        controlPoints: [this._controlPoint, this._controlPoint],\n        source: params.sourcePos,\n        target: params.targetPos\n      };\n      this._addSegment(BezierSegment, {\n        x1: _tx,\n        y1: _ty,\n        x2: _sx,\n        y2: _sy,\n        cp1x: cp1x,\n        cp1y: cp1y,\n        cp2x: cp2x,\n        cp2y: cp2y\n      });\n    }\n  }]);\n  return StateMachineConnector;\n}(AbstractBezierConnector);\n_defineProperty(StateMachineConnector, \"type\", \"StateMachine\");\n\nConnectors.register(BezierConnector.type, BezierConnector);\nConnectors.register(StateMachineConnector.type, StateMachineConnector);\n\nexport { AbstractBezierConnector, BezierConnector, BezierSegment, StateMachineConnector, bezierLineIntersection, boundingBoxIntersection, boxIntersection, computeBezierLength, dist, distanceFromCurve, gradientAtPoint, gradientAtPointAlongPathFrom, isPoint, locationAlongCurveFrom, nearestPointOnCurve, perpendicularToPathAt, pointAlongCurveFrom, pointAlongPath, pointOnCurve };\n"],"names":["_classCallCheck","instance","Constructor","_defineProperties","target","props","i","descriptor","_createClass","protoProps","staticProps","_defineProperty","obj","key","value","_inherits","subClass","superClass","_setPrototypeOf","_getPrototypeOf","o","p","_isNativeReflectConstruct","e","_assertThisInitialized","self","_possibleConstructorReturn","call","_createSuper","Derived","hasNativeReflectConstruct","Super","result","NewTarget","AbstractBezierConnector","_AbstractConnector","_super","connection","params","_this","paintInfo","sp","tp","_w","_h","x1","y1","cx","cy","_x","_y","ArcSegment","extend","g","dx","dy","geometry","log","AbstractConnector","Vectors","v1","v2","v","s","maxRecursion","flatnessTolerance","distanceFromCurve","point","curve","candidates","w","_convertToBezier","degree","higherDegree","numSolutions","_findRoots","dist","t","newDist","_bezier","nearestPointOnCurve","td","c","d","cdTable","z","_i","row","column","_i2","n","m","k","lb","ub","_i3","j","depth","left","right","left_count","right_count","left_t","right_t","_getCrossingCount","_isFlatEnough","_computeXIntercept","_i4","n_crossings","sign","old_sign","sgn","error","intercept_1","intercept_2","left_intercept","right_intercept","a","b","det","dInv","a1","b1","c1","a2","b2","c2","max_distance_above","max_distance_below","XLK","YLK","XNM","YNM","XMK","YMK","detInv","S","temp","_j","_j2","_j3","_getLUT","steps","out","_computeLookup","EMPTY_POINT","l","h","u","f","computeBezierLength","length","isPoint","lut","_curveFunctionCache","_getCurveFunctions","order","fns","f_term","l_term","c_term","t_term","one_minus_t_term","_termFunc","terms","_j4","pointOnCurve","location","cc","p1","p2","pointAlongPath","distance","prev","tally","curLoc","direction","cur","pointAlongCurveFrom","locationAlongCurveFrom","gradientAtPoint","bezierLineIntersection","x2","y2","coeffs","_computeCoefficients","r","_cubicRoots","intersections","_t","t2","t3","x","_computeCoefficientsForAxis","axis","A","B","C","Q","R","D","T","th","BezierSegment","_AbstractSegment","isFirstSegment","absolute","y","_curve","AbstractSegment","BezierConnector","_AbstractBezierConnec","sourceAnchorPosition","targetAnchorPosition","soo","too","perpendicular","_CP","_CP2","_sx","_sy","_tx","_ty","_segment","_findControlPoint","midx","midy","segment","sourceEdge","targetEdge","proximityLimit","StateMachineConnector","_midx","_midy","cp1x","cp2x","cp1y","cp2y","Connectors"],"mappings":"8IAIA,SAASA,EAAgBC,EAAUC,EAAa,CAC9C,GAAI,EAAED,aAAoBC,GACxB,MAAM,IAAI,UAAU,mCAAmC,CAE3D,CAEA,SAASC,EAAkBC,EAAQC,EAAO,CACxC,QAASC,EAAI,EAAGA,EAAID,EAAM,OAAQC,IAAK,CACrC,IAAIC,EAAaF,EAAMC,CAAC,EACxBC,EAAW,WAAaA,EAAW,YAAc,GACjDA,EAAW,aAAe,GACtB,UAAWA,IAAYA,EAAW,SAAW,IACjD,OAAO,eAAeH,EAAQG,EAAW,IAAKA,CAAU,CACzD,CACH,CAEA,SAASC,EAAaN,EAAaO,EAAYC,EAAa,CAC1D,OAAID,GAAYN,EAAkBD,EAAY,UAAWO,CAAU,EAC/DC,GAAaP,EAAkBD,EAAaQ,CAAW,EACpDR,CACT,CAEA,SAASS,EAAgBC,EAAKC,EAAKC,EAAO,CACxC,OAAID,KAAOD,EACT,OAAO,eAAeA,EAAKC,EAAK,CAC9B,MAAOC,EACP,WAAY,GACZ,aAAc,GACd,SAAU,EAChB,CAAK,EAEDF,EAAIC,CAAG,EAAIC,EAGNF,CACT,CAEA,SAASG,EAAUC,EAAUC,EAAY,CACvC,GAAI,OAAOA,GAAe,YAAcA,IAAe,KACrD,MAAM,IAAI,UAAU,oDAAoD,EAG1ED,EAAS,UAAY,OAAO,OAAOC,GAAcA,EAAW,UAAW,CACrE,YAAa,CACX,MAAOD,EACP,SAAU,GACV,aAAc,EACf,CACL,CAAG,EACGC,GAAYC,EAAgBF,EAAUC,CAAU,CACtD,CAEA,SAASE,EAAgBC,EAAG,CAC1B,OAAAD,EAAkB,OAAO,eAAiB,OAAO,eAAiB,SAAyB,EAAG,CAC5F,OAAO,EAAE,WAAa,OAAO,eAAe,CAAC,CACjD,EACSA,EAAgBC,CAAC,CAC1B,CAEA,SAASF,EAAgBE,EAAGC,EAAG,CAC7B,OAAAH,EAAkB,OAAO,gBAAkB,SAAyBE,EAAGC,EAAG,CACxE,OAAAD,EAAE,UAAYC,EACPD,CACX,EAESF,EAAgBE,EAAGC,CAAC,CAC7B,CAEA,SAASC,GAA4B,CAEnC,GADI,OAAO,QAAY,KAAe,CAAC,QAAQ,WAC3C,QAAQ,UAAU,KAAM,MAAO,GACnC,GAAI,OAAO,OAAU,WAAY,MAAO,GAExC,GAAI,CACF,eAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU,QAAS,CAAE,EAAE,UAAY,CAAE,CAAA,CAAC,EACtE,EACR,OAAQC,EAAP,CACA,MAAO,EACR,CACH,CAEA,SAASC,EAAuBC,EAAM,CACpC,GAAIA,IAAS,OACX,MAAM,IAAI,eAAe,2DAA2D,EAGtF,OAAOA,CACT,CAEA,SAASC,EAA2BD,EAAME,EAAM,CAC9C,OAAIA,IAAS,OAAOA,GAAS,UAAY,OAAOA,GAAS,YAChDA,EAGFH,EAAuBC,CAAI,CACpC,CAEA,SAASG,EAAaC,EAAS,CAC7B,IAAIC,EAA4BR,IAEhC,OAAO,UAAgC,CACrC,IAAIS,EAAQZ,EAAgBU,CAAO,EAC/BG,EAEJ,GAAIF,EAA2B,CAC7B,IAAIG,EAAYd,EAAgB,IAAI,EAAE,YAEtCa,EAAS,QAAQ,UAAUD,EAAO,UAAWE,CAAS,CAC5D,MACMD,EAASD,EAAM,MAAM,KAAM,SAAS,EAGtC,OAAOL,EAA2B,KAAMM,CAAM,CAClD,CACA,CAEA,IAAIE,EAA0B,SAAUC,EAAoB,CAC1DpB,EAAUmB,EAAyBC,CAAkB,EACrD,IAAIC,EAASR,EAAaM,CAAuB,EACjD,SAASA,EAAwBG,EAAYC,EAAQ,CACnD,IAAIC,EACJ,OAAAvC,EAAgB,KAAMkC,CAAuB,EAC7CK,EAAQH,EAAO,KAAK,KAAMC,EAAYC,CAAM,EAC5CC,EAAM,WAAaF,EACnB1B,EAAgBa,EAAuBe,CAAK,EAAG,eAAgB,MAAM,EACrE5B,EAAgBa,EAAuBe,CAAK,EAAG,YAAa,MAAM,EAClE5B,EAAgBa,EAAuBe,CAAK,EAAG,SAAU,MAAM,EAC/D5B,EAAgBa,EAAuBe,CAAK,EAAG,iBAAkB,MAAM,EACvE5B,EAAgBa,EAAuBe,CAAK,EAAG,cAAe,MAAM,EACpE5B,EAAgBa,EAAuBe,CAAK,EAAG,iBAAkB,MAAM,EACvE5B,EAAgBa,EAAuBe,CAAK,EAAG,YAAa,MAAM,EAClE5B,EAAgBa,EAAuBe,CAAK,EAAG,sBAAuB,MAAM,EAC5E5B,EAAgBa,EAAuBe,CAAK,EAAG,WAAY,IAAI,EAC/DD,EAASA,GAAU,GACnBC,EAAM,aAAeD,EAAO,eAAiB,GAC7CC,EAAM,UAAYD,EAAO,WAAa,GACtCC,EAAM,OAASD,EAAO,QAAU,EAChCC,EAAM,eAAiBD,EAAO,gBAAkB,GAChDC,EAAM,UAAYD,EAAO,aAAeA,EAAO,cAAgB,YAC/DC,EAAM,eAAiBD,EAAO,gBAAkB,GAChDC,EAAM,oBAAsB,GACrBA,CACR,CACD,OAAA/B,EAAa0B,EAAyB,CAAC,CACrC,IAAK,kBACL,MAAO,UAA2B,CAChC,MAAO,CAAC,EAAG,CAAC,CACb,CACL,EAAK,CACD,IAAK,WACL,MAAO,SAAkBM,EAAWnB,EAAG,CACrC,IAAIoB,EAAKpB,EAAE,UACPqB,EAAKrB,EAAE,UACPsB,EAAK,KAAK,IAAIF,EAAG,KAAOC,EAAG,IAAI,EAC/BE,EAAK,KAAK,IAAIH,EAAG,KAAOC,EAAG,IAAI,EACnC,GAAI,CAAC,KAAK,cAAgBrB,EAAE,eAAe,YAAcA,EAAE,eAAe,UACxE,KAAK,oBAAsB,GAC3B,KAAK,eAAemB,EAAWnB,EAAGoB,EAAIC,EAAIC,EAAIC,CAAE,MAC3C,CACL,KAAK,oBAAsB,GAC3B,IAAIC,EAAKxB,EAAE,UAAU,KACjByB,EAAKzB,EAAE,UAAU,KAAO,KAAK,OAC7B0B,EAAKF,EACLG,EAAKF,EAAK,KAAK,eACnBG,EAAKF,EAAK,KAAK,eACXG,EAAKF,EAAK,KAAK,eACnBL,EAAK,EAAI,KAAK,eACdC,EAAK,EAAI,KAAK,eACdJ,EAAU,OAAO,CAAC,EAAIS,EACtBT,EAAU,OAAO,CAAC,EAAIU,EACtBV,EAAU,OAAO,CAAC,EAAIG,EACtBH,EAAU,OAAO,CAAC,EAAII,EACtB,KAAK,YAAYO,EAAY,CAC3B,SAAU,GACV,GAAIN,EAAKI,EAAK,EACd,GAAIH,EAAKI,EACT,WAAY,EACZ,SAAU,EAAI,KAAK,GACnB,EAAG,KAAK,eACR,GAAI,CAAC,KAAK,UACV,GAAIL,EAAKI,EAAK,EACd,GAAIH,EAAKI,EACT,GAAIH,EAAKE,EACT,GAAID,EAAKE,CACnB,CAAS,CACF,CACF,CACL,EAAK,CACD,IAAK,iBACL,MAAO,UAA0B,CAC/B,OAAI,KAAK,UAAY,KACZ,KAEA,CACL,cAAe,CAACE,EAAO,CAAA,EAAI,KAAK,SAAS,cAAc,CAAC,CAAC,EAAGA,EAAO,CAAE,EAAE,KAAK,SAAS,cAAc,CAAC,CAAC,CAAC,EACtG,OAAQA,EAAO,CAAA,EAAI,KAAK,SAAS,MAAM,EACvC,OAAQA,EAAO,CAAA,EAAI,KAAK,SAAS,MAAM,CACjD,CAEK,CACL,EAAK,CACD,IAAK,oBACL,MAAO,SAA2BC,EAAGC,EAAIC,EAAI,CAC3C,MAAO,CACL,cAAe,CAAC,CACd,EAAGF,EAAE,cAAc,CAAC,EAAE,EAAIC,EAC1B,EAAGD,EAAE,cAAc,CAAC,EAAE,EAAIE,CACpC,EAAW,CACD,EAAGF,EAAE,cAAc,CAAC,EAAE,EAAIC,EAC1B,EAAGD,EAAE,cAAc,CAAC,EAAE,EAAIE,CACpC,CAAS,EACD,OAAQ,KAAK,yBAAyBF,EAAE,OAAQC,EAAIC,CAAE,EACtD,OAAQ,KAAK,yBAAyBF,EAAE,OAAQC,EAAIC,CAAE,CAC9D,CACK,CACL,EAAK,CACD,IAAK,iBACL,MAAO,SAAwBC,EAAU,CACvC,OAAIA,GAAY,KACVA,EAAS,eAAiB,MAAQA,EAAS,cAAc,QAAU,GACrEC,EAAI,yFAAyF,EAC7F,KAAK,YAAY,KAAM,EAAI,EACpB,IAELD,EAAS,cAAc,CAAC,EAAE,GAAK,MAAQA,EAAS,cAAc,CAAC,EAAE,GAAK,MAAQA,EAAS,cAAc,CAAC,EAAE,GAAK,MAAQA,EAAS,cAAc,CAAC,EAAE,GAAK,MACtJC,EAAI,iEAAiE,EACrE,KAAK,YAAY,KAAM,EAAI,EACpB,IAELD,EAAS,QAAU,MAAQA,EAAS,OAAO,MAAQ,MAAQA,EAAS,OAAO,MAAQ,MACrFC,EAAI,qEAAqE,EACzE,KAAK,YAAY,KAAM,EAAI,EACpB,IAELD,EAAS,QAAU,MAAQA,EAAS,OAAO,MAAQ,MAAQA,EAAS,OAAO,MAAQ,MACrFC,EAAI,qEAAqE,EACzE,KAAK,YAAY,KAAM,EAAI,EACpB,KAET,KAAK,YAAYD,EAAU,EAAK,EACzB,IAEA,EAEV,CACF,CAAA,CAAC,EACKtB,CACT,EAAEwB,CAAiB,EAEfC,EAAU,CACZ,SAAU,SAAkBC,EAAIC,EAAI,CAClC,MAAO,CACL,EAAGD,EAAG,EAAIC,EAAG,EACb,EAAGD,EAAG,EAAIC,EAAG,CACnB,CACG,EACD,WAAY,SAAoBD,EAAIC,EAAI,CACtC,OAAOD,EAAG,EAAIC,EAAG,EAAID,EAAG,EAAIC,EAAG,CAChC,EACD,OAAQ,SAAgBC,EAAG,CACzB,OAAO,KAAK,KAAKA,EAAE,EAAIA,EAAE,EAAIA,EAAE,EAAIA,EAAE,CAAC,CACvC,EACD,MAAO,SAAeA,EAAGC,EAAG,CAC1B,MAAO,CACL,EAAGD,EAAE,EAAIC,EACT,EAAGD,EAAE,EAAIC,CACf,CACG,CACH,EACIC,EAAe,GACfC,GAAoB,KAAK,IAAI,EAAK,CAACD,EAAe,CAAC,EACvD,SAASE,GAAkBC,EAAOC,EAAO,CAUvC,QATIC,EAAa,CAAE,EACfC,EAAIC,GAAiBJ,EAAOC,CAAK,EACjCI,EAASJ,EAAM,OAAS,EACxBK,EAAe,EAAID,EAAS,EAC5BE,EAAeC,EAAWL,EAAGG,EAAcJ,EAAY,CAAC,EACxDP,EAAIH,EAAQ,SAASQ,EAAOC,EAAM,CAAC,CAAC,EACpCQ,EAAOjB,EAAQ,OAAOG,CAAC,EACvBe,EAAI,EACJC,EACKxE,EAAI,EAAGA,EAAIoE,EAAcpE,IAChCwD,EAAIH,EAAQ,SAASQ,EAAOY,EAAQX,EAAOI,EAAQH,EAAW/D,CAAC,EAAG,KAAM,IAAI,CAAC,EAC7EwE,EAAUnB,EAAQ,OAAOG,CAAC,EACtBgB,EAAUF,IACZA,EAAOE,EACPD,EAAIR,EAAW/D,CAAC,GAGpB,OAAAwD,EAAIH,EAAQ,SAASQ,EAAOC,EAAMI,CAAM,CAAC,EACzCM,EAAUnB,EAAQ,OAAOG,CAAC,EACtBgB,EAAUF,IACZA,EAAOE,EACPD,EAAI,GAEC,CACL,SAAUA,EACV,SAAUD,CACd,CACA,CACA,SAASI,GAAoBb,EAAOC,EAAO,CACzC,IAAIa,EAAKf,GAAkBC,EAAOC,CAAK,EACvC,MAAO,CACL,MAAOW,EAAQX,EAAOA,EAAM,OAAS,EAAGa,EAAG,SAAU,KAAM,IAAI,EAC/D,SAAUA,EAAG,QACjB,CACA,CACA,SAASV,GAAiBJ,EAAOC,EAAO,CAQtC,QAPII,EAASJ,EAAM,OAAS,EACxBK,EAAe,EAAID,EAAS,EAC5BU,EAAI,CAAE,EACNC,EAAI,CAAE,EACNC,EAAU,CAAE,EACZd,EAAI,CAAE,EACNe,EAAI,CAAC,CAAC,EAAK,GAAK,GAAK,EAAG,EAAG,CAAC,GAAK,GAAK,GAAK,EAAG,EAAG,CAAC,GAAK,GAAK,GAAK,CAAG,CAAC,EAChE/E,EAAI,EAAGA,GAAKkE,EAAQlE,IAC3B4E,EAAE5E,CAAC,EAAIqD,EAAQ,SAASS,EAAM9D,CAAC,EAAG6D,CAAK,EAEzC,QAASmB,EAAK,EAAGA,GAAMd,EAAS,EAAGc,IACjCH,EAAEG,CAAE,EAAI3B,EAAQ,SAASS,EAAMkB,EAAK,CAAC,EAAGlB,EAAMkB,CAAE,CAAC,EACjDH,EAAEG,CAAE,EAAI3B,EAAQ,MAAMwB,EAAEG,CAAE,EAAG,CAAG,EAElC,QAASC,EAAM,EAAGA,GAAOf,EAAS,EAAGe,IACnC,QAASC,EAAS,EAAGA,GAAUhB,EAAQgB,IAChCJ,EAAQG,CAAG,IAAGH,EAAQG,CAAG,EAAI,IAClCH,EAAQG,CAAG,EAAEC,CAAM,EAAI7B,EAAQ,WAAWwB,EAAEI,CAAG,EAAGL,EAAEM,CAAM,CAAC,EAG/D,QAASC,EAAM,EAAGA,GAAOhB,EAAcgB,IAChCnB,EAAEmB,CAAG,IACRnB,EAAEmB,CAAG,EAAI,IAEXnB,EAAEmB,CAAG,EAAE,EAAI,EACXnB,EAAEmB,CAAG,EAAE,EAAI,WAAW,GAAKA,CAAG,EAAIhB,EAIpC,QAFIiB,EAAIlB,EACJmB,EAAInB,EAAS,EACRoB,EAAI,EAAGA,GAAKF,EAAIC,EAAGC,IAG1B,QAFIC,EAAK,KAAK,IAAI,EAAGD,EAAID,CAAC,EACtBG,EAAK,KAAK,IAAIF,EAAGF,CAAC,EACbK,EAAMF,EAAIE,GAAOD,EAAIC,IAAO,CACnC,IAAIC,EAAIJ,EAAIG,EACZzB,EAAEyB,EAAMC,CAAC,EAAE,GAAKZ,EAAQY,CAAC,EAAED,CAAG,EAAIV,EAAEW,CAAC,EAAED,CAAG,CAC3C,CAEH,OAAOzB,CACT,CACA,SAASK,EAAWL,EAAGE,EAAQK,EAAGoB,EAAO,CACvC,IAAIC,EAAO,CAAE,EACTC,EAAQ,CAAE,EACVC,EACAC,EACAC,EAAS,CAAE,EACXC,EAAU,CAAA,EACd,OAAQC,GAAkBlC,EAAGE,CAAM,EAAC,CAClC,IAAK,GAED,MAAO,GAEX,IAAK,GACH,CACE,GAAIyB,GAASjC,EACX,OAAAa,EAAE,CAAC,GAAKP,EAAE,CAAC,EAAE,EAAIA,EAAEE,CAAM,EAAE,GAAK,EACzB,EAET,GAAIiC,GAAcnC,EAAGE,CAAM,EACzB,OAAAK,EAAE,CAAC,EAAI6B,GAAmBpC,EAAGE,CAAM,EAC5B,EAET,KACD,CACJ,CACDO,EAAQT,EAAGE,EAAQ,GAAK0B,EAAMC,CAAK,EACnCC,EAAazB,EAAWuB,EAAM1B,EAAQ8B,EAAQL,EAAQ,CAAC,EACvDI,EAAc1B,EAAWwB,EAAO3B,EAAQ+B,EAASN,EAAQ,CAAC,EAC1D,QAAS3F,EAAI,EAAGA,EAAI8F,EAAY9F,IAC9BuE,EAAEvE,CAAC,EAAIgG,EAAOhG,CAAC,EAEjB,QAASqG,EAAM,EAAGA,EAAMN,EAAaM,IACnC9B,EAAE8B,EAAMP,CAAU,EAAIG,EAAQI,CAAG,EAEnC,OAAOP,EAAaC,CACtB,CACA,SAASG,GAAkBpC,EAAOI,EAAQ,CACxC,IAAIoC,EAAc,EACdC,EACAC,EACJD,EAAOC,EAAWC,EAAI3C,EAAM,CAAC,EAAE,CAAC,EAChC,QAAS9D,EAAI,EAAGA,GAAKkE,EAAQlE,IAC3BuG,EAAOE,EAAI3C,EAAM9D,CAAC,EAAE,CAAC,EACjBuG,GAAQC,GAAUF,IACtBE,EAAWD,EAEb,OAAOD,CACT,CACA,SAASH,GAAcrC,EAAOI,EAAQ,CACpC,IAAIwC,EAAOC,EAAaC,EAAaC,EAAgBC,EAAiBC,EAAGC,EAAGpC,EAAGqC,EAAKC,EAAMC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC9GT,EAAIjD,EAAM,CAAC,EAAE,EAAIA,EAAMI,CAAM,EAAE,EAC/B8C,EAAIlD,EAAMI,CAAM,EAAE,EAAIJ,EAAM,CAAC,EAAE,EAC/Bc,EAAId,EAAM,CAAC,EAAE,EAAIA,EAAMI,CAAM,EAAE,EAAIJ,EAAMI,CAAM,EAAE,EAAIJ,EAAM,CAAC,EAAE,EAC9D,IAAI2D,EAAoBC,EACxBD,EAAqBC,EAAqB,EAC1C,QAAS1H,EAAI,EAAGA,EAAIkE,EAAQlE,IAAK,CAC/B,IAAIQ,EAAQuG,EAAIjD,EAAM9D,CAAC,EAAE,EAAIgH,EAAIlD,EAAM9D,CAAC,EAAE,EAAI4E,EAC1CpE,EAAQiH,EACVA,EAAqBjH,EACZA,EAAQkH,IACjBA,EAAqBlH,EAExB,CACD,OAAA2G,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAKP,EACLQ,EAAKP,EACLQ,EAAK5C,EAAI6C,EACTR,EAAME,EAAKI,EAAKD,EAAKF,EACrBF,EAAO,EAAMD,EACbN,GAAeS,EAAKI,EAAKD,EAAKF,GAAMH,EACpCI,EAAKP,EACLQ,EAAKP,EACLQ,EAAK5C,EAAI8C,EACTT,EAAME,EAAKI,EAAKD,EAAKF,EACrBF,EAAO,EAAMD,EACbL,GAAeQ,EAAKI,EAAKD,EAAKF,GAAMH,EACpCL,EAAiB,KAAK,IAAIF,EAAaC,CAAW,EAClDE,EAAkB,KAAK,IAAIH,EAAaC,CAAW,EACnDF,EAAQI,EAAkBD,EACnBH,EAAQ/C,GAAoB,EAAI,CACzC,CACA,SAASyC,GAAmBtC,EAAOI,EAAQ,CACzC,IAAIyD,EAAM,EACNC,EAAM,EACNC,EAAM/D,EAAMI,CAAM,EAAE,EAAIJ,EAAM,CAAC,EAAE,EACjCgE,EAAMhE,EAAMI,CAAM,EAAE,EAAIJ,EAAM,CAAC,EAAE,EACjCiE,EAAMjE,EAAM,CAAC,EAAE,EAAI,EACnBkE,EAAMlE,EAAM,CAAC,EAAE,EAAI,EACnBmD,EAAMY,EAAMD,EAAME,EAAMH,EACxBM,EAAS,EAAMhB,EACfiB,GAAKL,EAAMG,EAAMF,EAAMC,GAAOE,EAClC,MAAO,GAAMN,EAAMO,CACrB,CACA,SAASzD,EAAQX,EAAOI,EAAQK,EAAGqB,EAAMC,EAAO,CAE9C,QADIsC,EAAO,CAAC,CAAA,CAAE,EACLzC,EAAI,EAAGA,GAAKxB,EAAQwB,IAC3ByC,EAAK,CAAC,EAAEzC,CAAC,EAAI5B,EAAM4B,CAAC,EAEtB,QAAS1F,EAAI,EAAGA,GAAKkE,EAAQlE,IAC3B,QAASoI,EAAK,EAAGA,GAAMlE,EAASlE,EAAGoI,IAC5BD,EAAKnI,CAAC,IAAGmI,EAAKnI,CAAC,EAAI,IACnBmI,EAAKnI,CAAC,EAAEoI,CAAE,IAAGD,EAAKnI,CAAC,EAAEoI,CAAE,EAAI,IAChCD,EAAKnI,CAAC,EAAEoI,CAAE,EAAE,GAAK,EAAM7D,GAAK4D,EAAKnI,EAAI,CAAC,EAAEoI,CAAE,EAAE,EAAI7D,EAAI4D,EAAKnI,EAAI,CAAC,EAAEoI,EAAK,CAAC,EAAE,EACxED,EAAKnI,CAAC,EAAEoI,CAAE,EAAE,GAAK,EAAM7D,GAAK4D,EAAKnI,EAAI,CAAC,EAAEoI,CAAE,EAAE,EAAI7D,EAAI4D,EAAKnI,EAAI,CAAC,EAAEoI,EAAK,CAAC,EAAE,EAG5E,GAAIxC,GAAQ,KACV,QAASyC,EAAM,EAAGA,GAAOnE,EAAQmE,IAC/BzC,EAAKyC,CAAG,EAAIF,EAAKE,CAAG,EAAE,CAAC,EAG3B,GAAIxC,GAAS,KACX,QAASyC,EAAM,EAAGA,GAAOpE,EAAQoE,IAC/BzC,EAAMyC,CAAG,EAAIH,EAAKjE,EAASoE,CAAG,EAAEA,CAAG,EAGvC,OAAOH,EAAKjE,CAAM,EAAE,CAAC,CACvB,CACA,SAASqE,GAAQC,EAAO1E,EAAO,CAC7B,IAAI2E,EAAM,CAAA,EACVD,IACA,QAASpD,EAAI,EAAGA,GAAKoD,EAAOpD,IAC1BqD,EAAI,KAAKC,GAAetD,EAAIoD,EAAO1E,CAAK,CAAC,EAE3C,OAAO2E,CACT,CACA,SAASC,GAAezH,EAAG6C,EAAO,CAChC,IAAI6E,EAAc,CAChB,EAAG,EACH,EAAG,CACP,EACE,GAAI1H,IAAM,EACR,OAAO6C,EAAM,CAAC,EAEhB,IAAII,EAASJ,EAAM,OAAS,EAC5B,GAAI7C,IAAM,EACR,OAAO6C,EAAMI,CAAM,EAErB,IAAIpD,EAAIgD,EACJL,EAAI,EAAIxC,EACZ,GAAIiD,IAAW,EACb,OAAOJ,EAAM,CAAC,EAEhB,GAAII,IAAW,EACb,MAAO,CACL,EAAGT,EAAI3C,EAAE,CAAC,EAAE,EAAIG,EAAIH,EAAE,CAAC,EAAE,EACzB,EAAG2C,EAAI3C,EAAE,CAAC,EAAE,EAAIG,EAAIH,EAAE,CAAC,EAAE,CAC/B,EAEE,GAAI,EAAIoD,EAAQ,CACd,IAAI0E,EAAInF,EAAIA,EACRoF,EAAI5H,EAAIA,EACR6H,EAAI,EACJzD,EACAtC,EACAgG,EACJ,OAAI7E,IAAW,GACbpD,EAAI,CAACA,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAG6H,CAAW,EAClCtD,EAAIuD,EACJ7F,EAAI,GAAKU,EAAIxC,GACb8H,EAAIF,GACK3E,IAAW,IACpBmB,EAAIuD,EAAInF,EACRV,EAAI,GAAK6F,EAAI3H,GACb8H,EAAI,GAAKtF,EAAIoF,GACbC,EAAI7H,EAAI4H,GAEH,CACL,EAAGxD,EAAIvE,EAAE,CAAC,EAAE,EAAIiC,EAAIjC,EAAE,CAAC,EAAE,EAAIiI,EAAIjI,EAAE,CAAC,EAAE,EAAIgI,EAAIhI,EAAE,CAAC,EAAE,EACnD,EAAGuE,EAAIvE,EAAE,CAAC,EAAE,EAAIiC,EAAIjC,EAAE,CAAC,EAAE,EAAIiI,EAAIjI,EAAE,CAAC,EAAE,EAAIgI,EAAIhI,EAAE,CAAC,EAAE,CACzD,CACA,KACI,QAAO6H,CAEX,CACA,SAASK,GAAoBlF,EAAO,CAClC,IAAImF,EAAS,EACb,GAAI,CAACC,EAAQpF,CAAK,EAGhB,QAFI0E,EAAQ,GACRW,EAAMZ,GAAQC,EAAO1E,CAAK,EACrB9D,EAAI,EAAGA,EAAIwI,EAAQ,EAAGxI,IAAK,CAClC,IAAI+G,EAAIoC,EAAInJ,CAAC,EACTgH,EAAImC,EAAInJ,EAAI,CAAC,EACjBiJ,GAAU3E,EAAKyC,EAAGC,CAAC,CACpB,CAEH,OAAOiC,CACT,CACA,IAAIG,EAAsB,IAAI,IAC9B,SAASC,GAAmBC,EAAO,CACjC,IAAIC,EAAMH,EAAoB,IAAIE,CAAK,EACvC,GAAI,CAACC,EAAK,CACRA,EAAM,CAAA,EACN,IAAIC,EAAS,UAAkB,CAC7B,OAAO,SAAUjF,EAAG,CAClB,OAAO,KAAK,IAAIA,EAAG+E,CAAK,CAChC,CACK,EACGG,EAAS,UAAkB,CAC7B,OAAO,SAAUlF,EAAG,CAClB,OAAO,KAAK,IAAI,EAAIA,EAAG+E,CAAK,CACpC,CACK,EACGI,EAAS,SAAgB9E,EAAG,CAC9B,OAAO,SAAUL,EAAG,CAClB,OAAOK,CACf,CACK,EACG+E,EAAS,UAAkB,CAC7B,OAAO,SAAUpF,EAAG,CAClB,OAAOA,CACf,CACK,EACGqF,EAAmB,UAA4B,CACjD,OAAO,SAAUrF,EAAG,CAClB,MAAO,GAAIA,CACnB,CACK,EACGsF,EAAY,SAAmBC,EAAO,CACxC,OAAO,SAAUvF,EAAG,CAElB,QADI,EAAI,EACCvE,EAAI,EAAGA,EAAI8J,EAAM,OAAQ9J,IAChC,EAAI,EAAI8J,EAAM9J,CAAC,EAAEuE,CAAC,EAEpB,OAAO,CACf,CACA,EACIgF,EAAI,KAAKC,EAAM,CAAE,EACjB,QAASxJ,EAAI,EAAGA,EAAIsJ,EAAOtJ,IAAK,CAE9B,QADI8J,EAAQ,CAACJ,EAAOJ,CAAK,CAAC,EACjB5D,EAAI,EAAGA,EAAI4D,EAAQtJ,EAAG0F,IAC7BoE,EAAM,KAAKH,EAAM,CAAE,EAErB,QAASI,EAAM,EAAGA,EAAM/J,EAAG+J,IACzBD,EAAM,KAAKF,EAAgB,CAAE,EAE/BL,EAAI,KAAKM,EAAUC,CAAK,CAAC,CAC1B,CACDP,EAAI,KAAKE,EAAM,CAAE,EACjBL,EAAoB,IAAIE,EAAOC,CAAG,CACnC,CACD,OAAOA,CACT,CACA,SAASS,EAAalG,EAAOmG,EAAU,CAIrC,QAHIC,EAAKb,GAAmBvF,EAAM,OAAS,CAAC,EACxCnB,EAAK,EACLC,EAAK,EACA5C,EAAI,EAAGA,EAAI8D,EAAM,OAAQ9D,IAChC2C,EAAKA,EAAKmB,EAAM9D,CAAC,EAAE,EAAIkK,EAAGlK,CAAC,EAAEiK,CAAQ,EACrCrH,EAAKA,EAAKkB,EAAM9D,CAAC,EAAE,EAAIkK,EAAGlK,CAAC,EAAEiK,CAAQ,EAEvC,MAAO,CACL,EAAGtH,EACH,EAAGC,CACP,CACA,CACA,SAAS0B,EAAK6F,EAAIC,EAAI,CACpB,OAAO,KAAK,KAAK,KAAK,IAAID,EAAG,EAAIC,EAAG,EAAG,CAAC,EAAI,KAAK,IAAID,EAAG,EAAIC,EAAG,EAAG,CAAC,CAAC,CACtE,CACA,SAASlB,EAAQpF,EAAO,CACtB,OAAOA,EAAM,CAAC,EAAE,IAAMA,EAAM,CAAC,EAAE,GAAKA,EAAM,CAAC,EAAE,IAAMA,EAAM,CAAC,EAAE,CAC9D,CACA,SAASuG,EAAevG,EAAOmG,EAAUK,EAAU,CACjD,GAAIpB,EAAQpF,CAAK,EACf,MAAO,CACL,MAAOA,EAAM,CAAC,EACd,SAAUmG,CAChB,EAOE,QALIM,EAAOP,EAAalG,EAAOmG,CAAQ,EACnCO,EAAQ,EACRC,EAASR,EACTS,EAAYJ,EAAW,EAAI,EAAI,GAC/BK,EAAM,KACHH,EAAQ,KAAK,IAAIF,CAAQ,GAC9BG,GAAU,KAAQC,EAClBC,EAAMX,EAAalG,EAAO2G,CAAM,EAChCD,GAASlG,EAAKqG,EAAKJ,CAAI,EACvBA,EAAOI,EAET,MAAO,CACL,MAAOA,EACP,SAAUF,CACd,CACA,CACA,SAASG,GAAoB9G,EAAOmG,EAAUK,EAAU,CACtD,OAAOD,EAAevG,EAAOmG,EAAUK,CAAQ,EAAE,KACnD,CACA,SAASO,GAAuB/G,EAAOmG,EAAUK,EAAU,CACzD,OAAOD,EAAevG,EAAOmG,EAAUK,CAAQ,EAAE,QACnD,CACA,SAASQ,GAAgBhH,EAAOmG,EAAU,CACxC,IAAIE,EAAKH,EAAalG,EAAOmG,CAAQ,EACjCG,EAAKJ,EAAalG,EAAM,MAAM,EAAGA,EAAM,OAAS,CAAC,EAAGmG,CAAQ,EAC5DhH,EAAKmH,EAAG,EAAID,EAAG,EACfnH,EAAKoH,EAAG,EAAID,EAAG,EACnB,OAAOlH,IAAO,EAAI,IAAW,KAAK,KAAKA,EAAKD,CAAE,CAChD,CAsBA,SAAS+H,GAAuBxI,EAAIC,EAAIwI,EAAIC,EAAInH,EAAO,CACrD,IAAIiD,EAAIkE,EAAKzI,EACTwE,EAAIzE,EAAKyI,EACT,EAAIzI,GAAMC,EAAKyI,GAAMzI,GAAMwI,EAAKzI,GAChC2I,EAASC,GAAqBrH,CAAK,EACnC/C,EAAI,CAACgG,EAAImE,EAAO,CAAC,EAAE,CAAC,EAAIlE,EAAIkE,EAAO,CAAC,EAAE,CAAC,EAAGnE,EAAImE,EAAO,CAAC,EAAE,CAAC,EAAIlE,EAAIkE,EAAO,CAAC,EAAE,CAAC,EAAGnE,EAAImE,EAAO,CAAC,EAAE,CAAC,EAAIlE,EAAIkE,EAAO,CAAC,EAAE,CAAC,EAAGnE,EAAImE,EAAO,CAAC,EAAE,CAAC,EAAIlE,EAAIkE,EAAO,CAAC,EAAE,CAAC,EAAI,CAAC,EAC3JE,EAAIC,GAAY,MAAM,KAAMtK,CAAC,EAC7BuK,EAAgB,CAAA,EACpB,GAAIF,GAAK,KACP,QAASpL,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIuL,EAAKH,EAAEpL,CAAC,EACRwL,EAAK,KAAK,IAAID,EAAI,CAAC,EACnBE,EAAK,KAAK,IAAIF,EAAI,CAAC,EACnBG,EAAI,CACN,EAAGR,EAAO,CAAC,EAAE,CAAC,EAAIO,EAAKP,EAAO,CAAC,EAAE,CAAC,EAAIM,EAAKN,EAAO,CAAC,EAAE,CAAC,EAAIK,EAAKL,EAAO,CAAC,EAAE,CAAC,EAC1E,EAAGA,EAAO,CAAC,EAAE,CAAC,EAAIO,EAAKP,EAAO,CAAC,EAAE,CAAC,EAAIM,EAAKN,EAAO,CAAC,EAAE,CAAC,EAAIK,EAAKL,EAAO,CAAC,EAAE,CAAC,CAClF,EACUzH,EAAI,OACJuH,EAAKzI,IAAO,EACdkB,GAAKiI,EAAE,CAAC,EAAInJ,IAAOyI,EAAKzI,GAExBkB,GAAKiI,EAAE,CAAC,EAAIlJ,IAAOyI,EAAKzI,GAEtB+I,GAAM,GAAKA,GAAM,GAAO9H,GAAK,GAAKA,GAAK,GACzC6H,EAAc,KAAKI,CAAC,CAEvB,CAEH,OAAOJ,CACT,CAiBA,SAASK,EAA4B7H,EAAO8H,EAAM,CAChD,MAAO,CAAC,CAAC9H,EAAM,CAAC,EAAE8H,CAAI,EAAI,EAAI9H,EAAM,CAAC,EAAE8H,CAAI,EAAI,GAAK9H,EAAM,CAAC,EAAE8H,CAAI,EAAI9H,EAAM,CAAC,EAAE8H,CAAI,EAAG,EAAI9H,EAAM,CAAC,EAAE8H,CAAI,EAAI,EAAI9H,EAAM,CAAC,EAAE8H,CAAI,EAAI,EAAI9H,EAAM,CAAC,EAAE8H,CAAI,EAAG,GAAK9H,EAAM,CAAC,EAAE8H,CAAI,EAAI,EAAI9H,EAAM,CAAC,EAAE8H,CAAI,EAAG9H,EAAM,CAAC,EAAE8H,CAAI,CAAC,CAC7M,CACA,SAAST,GAAqBrH,EAAO,CACnC,MAAO,CAAC6H,EAA4B7H,EAAO,GAAG,EAAG6H,EAA4B7H,EAAO,GAAG,CAAC,CAC1F,CACA,SAASuH,GAAYtE,EAAGC,EAAGpC,EAAGC,EAAG,CAC/B,IAAIgH,EAAI7E,EAAID,EACR+E,EAAIlH,EAAImC,EACRgF,EAAIlH,EAAIkC,EACRiF,GAAK,EAAIF,EAAI,KAAK,IAAID,EAAG,CAAC,GAAK,EAC/BI,GAAK,EAAIJ,EAAIC,EAAI,GAAKC,EAAI,EAAI,KAAK,IAAIF,EAAG,CAAC,GAAK,GAChDK,EAAI,KAAK,IAAIF,EAAG,CAAC,EAAI,KAAK,IAAIC,EAAG,CAAC,EAClC/D,EACAiE,EACA5H,EAAI,CAAC,EAAG,EAAG,CAAC,EAChB,GAAI2H,GAAK,EAELhE,EAAIzB,EAAIwF,EAAI,KAAK,KAAKC,CAAC,CAAC,EAAI,KAAK,IAAI,KAAK,IAAID,EAAI,KAAK,KAAKC,CAAC,CAAC,EAAG,EAAI,CAAC,EACtEC,EAAI1F,EAAIwF,EAAI,KAAK,KAAKC,CAAC,CAAC,EAAI,KAAK,IAAI,KAAK,IAAID,EAAI,KAAK,KAAKC,CAAC,CAAC,EAAG,EAAI,CAAC,EACtE3H,EAAE,CAAC,EAAI,CAACsH,EAAI,GAAK3D,EAAIiE,GACrB5H,EAAE,CAAC,EAAI,CAACsH,EAAI,GAAK3D,EAAIiE,GAAK,EAC1B5H,EAAE,CAAC,EAAI,CAACsH,EAAI,GAAK3D,EAAIiE,GAAK,EACtB,KAAK,IAAI,KAAK,KAAK,CAAC,GAAKjE,EAAIiE,GAAK,CAAC,IAAM,IAC3C5H,EAAE,CAAC,EAAI,GACPA,EAAE,CAAC,EAAI,QAGX,CACE,IAAI6H,EAAK,KAAK,KAAKH,EAAI,KAAK,KAAK,CAAC,KAAK,IAAID,EAAG,CAAC,CAAC,CAAC,EACjDzH,EAAE,CAAC,EAAI,EAAI,KAAK,KAAK,CAACyH,CAAC,EAAI,KAAK,IAAII,EAAK,CAAC,EAAIP,EAAI,EAClDtH,EAAE,CAAC,EAAI,EAAI,KAAK,KAAK,CAACyH,CAAC,EAAI,KAAK,KAAKI,EAAK,EAAI,KAAK,IAAM,CAAC,EAAIP,EAAI,EAClEtH,EAAE,CAAC,EAAI,EAAI,KAAK,KAAK,CAACyH,CAAC,EAAI,KAAK,KAAKI,EAAK,EAAI,KAAK,IAAM,CAAC,EAAIP,EAAI,CACnE,CACH,QAAS7L,EAAI,EAAGA,EAAI,EAAGA,KACjBuE,EAAEvE,CAAC,EAAI,GAAKuE,EAAEvE,CAAC,EAAI,KACrBuE,EAAEvE,CAAC,EAAI,IAGX,OAAOuE,CACT,CAEG,IAAC8H,EAAgB,SAAUC,EAAkB,CAC9C7L,EAAU4L,EAAeC,CAAgB,EACzC,IAAIxK,EAASR,EAAa+K,CAAa,EACvC,SAASA,EAAcrK,EAAQ,CAC7B,IAAIC,EACJ,OAAAvC,EAAgB,KAAM2M,CAAa,EACnCpK,EAAQH,EAAO,KAAK,KAAME,CAAM,EAChC3B,EAAgBa,EAAuBe,CAAK,EAAG,QAAS,MAAM,EAC9D5B,EAAgBa,EAAuBe,CAAK,EAAG,OAAQ,MAAM,EAC7D5B,EAAgBa,EAAuBe,CAAK,EAAG,OAAQ,MAAM,EAC7D5B,EAAgBa,EAAuBe,CAAK,EAAG,OAAQ,MAAM,EAC7D5B,EAAgBa,EAAuBe,CAAK,EAAG,OAAQ,MAAM,EAC7D5B,EAAgBa,EAAuBe,CAAK,EAAG,SAAU,CAAC,EAC1D5B,EAAgBa,EAAuBe,CAAK,EAAG,OAAQoK,EAAc,WAAW,EAChFpK,EAAM,KAAOD,EAAO,KACpBC,EAAM,KAAOD,EAAO,KACpBC,EAAM,KAAOD,EAAO,KACpBC,EAAM,KAAOD,EAAO,KACpBC,EAAM,GAAKD,EAAO,GAClBC,EAAM,GAAKD,EAAO,GAClBC,EAAM,GAAKD,EAAO,GAClBC,EAAM,GAAKD,EAAO,GAClBC,EAAM,MAAQ,CAAC,CACb,EAAGA,EAAM,GACT,EAAGA,EAAM,EACf,EAAO,CACD,EAAGA,EAAM,KACT,EAAGA,EAAM,IACf,EAAO,CACD,EAAGA,EAAM,KACT,EAAGA,EAAM,IACf,EAAO,CACD,EAAGA,EAAM,GACT,EAAGA,EAAM,EACf,CAAK,EACDA,EAAM,QAAU,CACd,KAAM,KAAK,IAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAAMA,EAAM,IAAI,EACzD,KAAM,KAAK,IAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAAMA,EAAM,IAAI,EACzD,KAAM,KAAK,IAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAAMA,EAAM,IAAI,EACzD,KAAM,KAAK,IAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAAMA,EAAM,IAAI,CAC/D,EACWA,CACR,CACD,OAAA/B,EAAamM,EAAe,CAAC,CAC3B,IAAK,UACL,MAAO,SAAiBE,EAAgB,CACtC,OAAQA,EAAiB,KAAO,KAAK,GAAK,IAAM,KAAK,GAAK,IAAM,IAAM,KAAO,KAAK,KAAO,IAAM,KAAK,KAAO,IAAM,KAAK,KAAO,IAAM,KAAK,KAAO,IAAM,KAAK,GAAK,IAAM,KAAK,EAC3K,CACL,EAAK,CACD,IAAK,cACL,MAAO,SAAqBtC,EAAUuC,EAAU,CAC9C,OAAAvC,EAAWoC,EAAc,mBAAmB,KAAK,MAAOpC,EAAUuC,CAAQ,EACnExC,EAAa,KAAK,MAAOC,CAAQ,CACzC,CACL,EAAK,CACD,IAAK,kBACL,MAAO,SAA2BA,EAAUuC,EAAU,CACpD,OAAAvC,EAAWoC,EAAc,mBAAmB,KAAK,MAAOpC,EAAUuC,CAAQ,EACnE1B,GAAgB,KAAK,MAAOb,CAAQ,CAC5C,CACL,EAAK,CACD,IAAK,qBACL,MAAO,SAA4BA,EAAUK,EAAUkC,EAAU,CAC/D,OAAAvC,EAAWoC,EAAc,mBAAmB,KAAK,MAAOpC,EAAUuC,CAAQ,EACnE5B,GAAoB,KAAK,MAAOX,EAAUK,CAAQ,CAC1D,CACL,EAAK,CACD,IAAK,YACL,MAAO,UAAqB,CAC1B,OAAI,KAAK,QAAU,MAAQ,KAAK,SAAW,KACzC,KAAK,OAAStB,GAAoB,KAAK,KAAK,GAEvC,KAAK,MACb,CACL,EAAK,CACD,IAAK,yBACL,MAAO,SAAgC0C,EAAGe,EAAG,CAC3C,IAAI1L,EAAI2D,GAAoB,CAC1B,EAAGgH,EACH,EAAGe,CACX,EAAS,KAAK,KAAK,EACb,MAAO,CACL,EAAG,KAAK,KAAK,KAAK,IAAI1L,EAAE,MAAM,EAAI2K,EAAG,CAAC,EAAI,KAAK,IAAI3K,EAAE,MAAM,EAAI0L,EAAG,CAAC,CAAC,EACpE,EAAG1L,EAAE,MAAM,EACX,EAAGA,EAAE,MAAM,EACX,EAAG,EAAIA,EAAE,SACT,EAAG,KACH,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,IACZ,CACK,CACL,EAAK,CACD,IAAK,mBACL,MAAO,SAA0BwB,EAAIC,EAAIwI,EAAIC,EAAI,CAC/C,OAAOF,GAAuBxI,EAAIC,EAAIwI,EAAIC,EAAI,KAAK,KAAK,CACzD,CACF,CAAA,EAAG,CAAC,CACH,IAAK,qBACL,MAAO,SAA4ByB,EAAQzC,EAAUuC,EAAU,CAC7D,OAAIA,IACFvC,EAAWY,GAAuB6B,EAAQzC,EAAW,EAAI,EAAI,EAAGA,CAAQ,GAEnEA,CACR,CACF,CAAA,CAAC,EACKoC,CACT,EAAEM,CAAe,EACjBtM,EAAgBgM,EAAe,cAAe,QAAQ,EAEtD,IAAIO,EAAkB,SAAUC,EAAuB,CACrDpM,EAAUmM,EAAiBC,CAAqB,EAChD,IAAI/K,EAASR,EAAasL,CAAe,EACzC,SAASA,EAAgB7K,EAAYC,EAAQ,CAC3C,IAAIC,EACJ,OAAAvC,EAAgB,KAAMkN,CAAe,EACrC3K,EAAQH,EAAO,KAAK,KAAMC,EAAYC,CAAM,EAC5CC,EAAM,WAAaF,EACnB1B,EAAgBa,EAAuBe,CAAK,EAAG,OAAQ2K,EAAgB,IAAI,EAC3EvM,EAAgBa,EAAuBe,CAAK,EAAG,cAAe,MAAM,EACpE5B,EAAgBa,EAAuBe,CAAK,EAAG,cAAe,MAAM,EACpED,EAASA,GAAU,GACnBC,EAAM,YAAcD,EAAO,WAAa,IACxCC,EAAM,YAAc,GACbA,CACR,CACD,OAAA/B,EAAa0M,EAAiB,CAAC,CAC7B,IAAK,eACL,MAAO,UAAwB,CAC7B,OAAO,KAAK,WACb,CACL,EAAK,CACD,IAAK,oBACL,MAAO,SAA2B/I,EAAOiJ,EAAsBC,EAAsBC,EAAKC,EAAK,CAC7F,IAAIC,EAAgBF,EAAI,CAAC,IAAMC,EAAI,CAAC,GAAKD,EAAI,CAAC,IAAMC,EAAI,CAAC,EACrDlM,EAAI,CACN,EAAG,EACH,EAAG,CACX,EACM,OAAKmM,GAYCD,EAAI,CAAC,IAAM,EACblM,EAAE,EAAIgM,EAAqB,KAAOD,EAAqB,KAAOjJ,EAAM,EAAI,KAAK,YAAcA,EAAM,EAAI,KAAK,YAE1G9C,EAAE,EAAI8C,EAAM,EAAI,KAAK,YAAcoJ,EAAI,CAAC,EAEtCA,EAAI,CAAC,IAAM,EACblM,EAAE,EAAIgM,EAAqB,KAAOD,EAAqB,KAAOjJ,EAAM,EAAI,KAAK,YAAcA,EAAM,EAAI,KAAK,YAE1G9C,EAAE,EAAI8C,EAAM,EAAI,KAAK,YAAcmJ,EAAI,CAAC,IAnBtCA,EAAI,CAAC,IAAM,EACbjM,EAAE,EAAI+L,EAAqB,KAAOC,EAAqB,KAAOlJ,EAAM,EAAI,KAAK,YAAcA,EAAM,EAAI,KAAK,YAE1G9C,EAAE,EAAI8C,EAAM,EAAI,KAAK,YAAcmJ,EAAI,CAAC,EAEtCA,EAAI,CAAC,IAAM,EACbjM,EAAE,EAAI+L,EAAqB,KAAOC,EAAqB,KAAOlJ,EAAM,EAAI,KAAK,YAAcA,EAAM,EAAI,KAAK,YAE1G9C,EAAE,EAAI8C,EAAM,EAAI,KAAK,YAAcoJ,EAAI,CAAC,GAcrClM,CACR,CACL,EAAK,CACD,IAAK,iBACL,MAAO,SAAwBmB,EAAWnB,EAAGoB,EAAIC,EAAIC,EAAIC,EAAI,CAC3D,IAAI6K,EACAC,EACAC,EAAMlL,EAAG,KAAOC,EAAG,KAAOC,EAAK,EAC/BiL,EAAMnL,EAAG,KAAOC,EAAG,KAAOE,EAAK,EAC/BiL,EAAMpL,EAAG,KAAOC,EAAG,KAAO,EAAIC,EAC9BmL,EAAMrL,EAAG,KAAOC,EAAG,KAAO,EAAIE,EAC9B,KAAK,SAAW,IAClB6K,EAAM,KAAK,kBAAkB,CAC3B,EAAGE,EACH,EAAGC,CACb,EAAWnL,EAAIC,EAAIF,EAAU,GAAIA,EAAU,EAAE,EACrCkL,EAAO,KAAK,kBAAkB,CAC5BG,EACA,EAAGC,CACb,EAAWpL,EAAID,EAAID,EAAU,GAAIA,EAAU,EAAE,IAErCiL,EAAM,KAAK,SAAS,cAAc,CAAC,EACnCC,EAAO,KAAK,SAAS,cAAc,CAAC,GAEtC,KAAK,SAAW,CACd,cAAe,CAACD,EAAKC,CAAI,EACzB,OAAQrM,EAAE,UACV,OAAQA,EAAE,SAClB,EACM,KAAK,YAAYsL,EAAe,CAC9B,GAAIgB,EACJ,GAAIC,EACJ,GAAIC,EACJ,GAAIC,EACJ,KAAML,EAAI,EACV,KAAMA,EAAI,EACV,KAAMC,EAAK,EACX,KAAMA,EAAK,CACnB,CAAO,CACF,CACF,CAAA,CAAC,EACKR,CACT,EAAEhL,CAAuB,EACzBvB,EAAgBuM,EAAiB,OAAQ,QAAQ,EAEjD,SAASa,GAASlL,EAAIC,EAAIwI,EAAIC,EAAI,CAChC,OAAI1I,GAAMyI,GAAMC,GAAMzI,EACb,EACED,GAAMyI,GAAMxI,GAAMyI,EACpB,EACED,GAAMzI,GAAM0I,GAAMzI,EACpB,EAEF,CACT,CACA,SAASkL,GAAkBC,EAAMC,EAAMC,EAASC,EAAYC,EAAY/K,EAAIC,EAAIqH,EAAU0D,EAAgB,CACxG,GAAI1D,GAAY0D,EACd,MAAO,CACL,EAAGL,EACH,EAAGC,CACT,EAEE,GAAIC,IAAY,EACd,OAAIC,EAAW,MAAQ,GAAKC,EAAW,MAAQ,EACtC,CACL,EAAGJ,GAAQG,EAAW,EAAI,GAAM,GAAK9K,EAAKA,GAC1C,EAAG4K,CACX,EACeE,EAAW,MAAQ,GAAKC,EAAW,MAAQ,EAC7C,CACL,EAAGJ,EACH,EAAGC,GAAQE,EAAW,EAAI,GAAM,GAAK7K,EAAKA,EAClD,EAEa,CACL,EAAG0K,EAAO,GAAK3K,EACf,EAAG4K,EAAO,GAAK3K,CACvB,EAES,GAAI4K,IAAY,EACrB,OAAIC,EAAW,MAAQ,GAAKC,EAAW,MAAQ,EACtC,CACL,EAAGJ,GAAQG,EAAW,EAAI,GAAM,GAAK9K,EAAKA,GAC1C,EAAG4K,CACX,EACeE,EAAW,MAAQ,GAAKC,EAAW,MAAQ,EAC7C,CACL,EAAGJ,EACH,EAAGC,GAAQE,EAAW,EAAI,GAAM,GAAK7K,EAAKA,EAClD,EAEa,CACL,EAAG0K,EAAO3K,EACV,EAAG4K,EAAO,GAAK3K,CACvB,EAES,GAAI4K,IAAY,EACrB,OAAIC,EAAW,MAAQ,GAAKC,EAAW,MAAQ,EACtC,CACL,EAAGJ,GAAQG,EAAW,EAAI,GAAM,GAAK9K,EAAKA,GAC1C,EAAG4K,CACX,EACeE,EAAW,MAAQ,GAAKC,EAAW,MAAQ,EAC7C,CACL,EAAGJ,EACH,EAAGC,GAAQE,EAAW,EAAI,GAAM,GAAK7K,EAAKA,EAClD,EAEa,CACL,EAAG0K,EAAO,GAAK3K,EACf,EAAG4K,EAAO,GAAK3K,CACvB,EAES,GAAI4K,IAAY,EACrB,OAAIC,EAAW,MAAQ,GAAKC,EAAW,MAAQ,EACtC,CACL,EAAGJ,GAAQG,EAAW,EAAI,GAAM,GAAK9K,EAAKA,GAC1C,EAAG4K,CACX,EACeE,EAAW,MAAQ,GAAKC,EAAW,MAAQ,EAC7C,CACL,EAAGJ,EACH,EAAGC,GAAQE,EAAW,EAAI,GAAM,GAAK7K,EAAKA,EAClD,EAEa,CACL,EAAG0K,EAAO3K,EACV,EAAG4K,EAAO,GAAK3K,CACvB,CAGA,CACA,IAAIgL,EAAwB,SAAUpB,EAAuB,CAC3DpM,EAAUwN,EAAuBpB,CAAqB,EACtD,IAAI/K,EAASR,EAAa2M,CAAqB,EAC/C,SAASA,EAAsBlM,EAAYC,EAAQ,CACjD,IAAIC,EACJ,OAAAvC,EAAgB,KAAMuO,CAAqB,EAC3ChM,EAAQH,EAAO,KAAK,KAAMC,EAAYC,CAAM,EAC5CC,EAAM,WAAaF,EACnB1B,EAAgBa,EAAuBe,CAAK,EAAG,OAAQgM,EAAsB,IAAI,EACjF5N,EAAgBa,EAAuBe,CAAK,EAAG,gBAAiB,MAAM,EACtEA,EAAM,UAAYD,EAAO,WAAa,GACtCC,EAAM,OAASD,EAAO,QAAU,EAChCC,EAAM,eAAiBD,EAAO,gBAAkB,GAChDC,EAAM,UAAYD,EAAO,aAAeA,EAAO,cAAgB,YACxDC,CACR,CACD,OAAA/B,EAAa+N,EAAuB,CAAC,CACnC,IAAK,iBACL,MAAO,SAAwB/L,EAAWF,EAAQG,EAAIC,EAAI4B,EAAG6E,EAAG,CAC9D,IAAIwE,EAAMlL,EAAG,KAAOC,EAAG,KAAO,EAAI4B,EAC9BsJ,EAAMnL,EAAG,KAAOC,EAAG,KAAO,EAAIyG,EAC9B0E,EAAMpL,EAAG,KAAOC,EAAG,KAAO4B,EAAI,EAC9BwJ,EAAMrL,EAAG,KAAOC,EAAG,KAAOyG,EAAI,EAyBlC,GAxBI1G,EAAG,IAAM,IACXkL,GAAO,KAAK,QAEVlL,EAAG,IAAM,IACXkL,GAAO,KAAK,QAEVlL,EAAG,IAAM,IACXmL,GAAO,KAAK,QAEVnL,EAAG,IAAM,IACXmL,GAAO,KAAK,QAEVlL,EAAG,IAAM,IACXmL,GAAO,KAAK,QAEVnL,EAAG,IAAM,IACXmL,GAAO,KAAK,QAEVnL,EAAG,IAAM,IACXoL,GAAO,KAAK,QAEVpL,EAAG,IAAM,IACXoL,GAAO,KAAK,QAEV,KAAK,SAAW,GAAM,CACxB,IAAIU,GAASb,EAAME,GAAO,EACtBY,GAASb,EAAME,GAAO,EACtBK,EAAUJ,GAASJ,EAAKC,EAAKC,EAAKC,CAAG,EACrClD,EAAW,KAAK,KAAK,KAAK,IAAIiD,EAAMF,EAAK,CAAC,EAAI,KAAK,IAAIG,EAAMF,EAAK,CAAC,CAAC,EACxE,KAAK,cAAgBI,GAAkBQ,EAAOC,EAAON,EAAS7L,EAAO,UAAWA,EAAO,UAAW,KAAK,UAAW,KAAK,UAAWsI,EAAU,KAAK,cAAc,CACvK,MACQ,KAAK,cAAgB,KAAK,SAAS,cAAc,CAAC,EAEpD,IAAI8D,EAAMC,EAAMC,EAAMC,EACtBH,EAAO,KAAK,cAAc,EAC1BC,EAAO,KAAK,cAAc,EAC1BC,EAAO,KAAK,cAAc,EAC1BC,EAAO,KAAK,cAAc,EAC1B,KAAK,SAAW,CACd,cAAe,CAAC,KAAK,cAAe,KAAK,aAAa,EACtD,OAAQvM,EAAO,UACf,OAAQA,EAAO,SACvB,EACM,KAAK,YAAYqK,EAAe,CAC9B,GAAIkB,EACJ,GAAIC,EACJ,GAAIH,EACJ,GAAIC,EACJ,KAAMc,EACN,KAAME,EACN,KAAMD,EACN,KAAME,CACd,CAAO,CACF,CACF,CAAA,CAAC,EACKN,CACT,EAAErM,CAAuB,EACzBvB,EAAgB4N,EAAuB,OAAQ,cAAc,EAE7DO,EAAW,SAAS5B,EAAgB,KAAMA,CAAe,EACzD4B,EAAW,SAASP,EAAsB,KAAMA,CAAqB"}