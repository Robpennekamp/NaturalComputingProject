{"version":3,"file":"codemirror-lang-n8n-expression-0036beb8.js","sources":["../../../../node_modules/.pnpm/codemirror-lang-n8n-expression@0.2.0_@codemirror+state@6.1.4_@codemirror+view@6.5.1_@lezer+common@1.0.1/node_modules/codemirror-lang-n8n-expression/dist/index.js"],"sourcesContent":["import { completeFromList } from '@codemirror/autocomplete';\nimport { LRParser } from '@lezer/lr';\nimport { foldNodeProp, foldInside, LRLanguage, LanguageSupport } from '@codemirror/language';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"nQQOPOOOOOO'#Cc'#CcOOOO'#Ca'#CaQQOPOOOOOO-E6_-E6_\",\n  stateData: \"]~OQPORPOSPO~O\",\n  goto: \"cWPPPPPXP_QRORSRTQOR\",\n  nodeNames: \"âš  Program Plaintext Resolvable BrokenResolvable\",\n  maxTerm: 7,\n  skippedNodes: [0],\n  repeatNodeCount: 1,\n  tokenData: \"&U~RRO#o[#o#p{#p~[~aRQ~O#o[#o#pj#p~[~mRO#o[#p~[~~v~{OQ~~!OSO#o[#o#p![#p~[~~v~!aUS~O#O![#O#P!s#P#q![#q#r%v#rG|![G|~%c~!xUS~O#O![#O#P!s#P#q![#q#r#[#rG|![G|~%c~#aRS~O#q#j#q#r$l#r~#j~#mTO#O#j#O#P#|#P#q#j#q#r%Q#rG|#j~$PTO#O#j#O#P#|#P#q#j#q#r$`#rG|#j~$cRO#q#j#q#r$l#r~#j~$qTR~O#O#j#O#P#|#P#q#j#q#r%Q#rG|#j~%TRO#q#j#q#r%^#r~#j~%cOR~~%hRS~O#q%c#q#r%q#r~%c~%vOS~~%{RS~O#q#j#q#r%^#r~#j\",\n  tokenizers: [0],\n  topRules: {\"Program\":[0,1]},\n  tokenPrec: 0\n});\n\nconst parserWithMetaData = parser.configure({\n    props: [\n        foldNodeProp.add({\n            Application: foldInside,\n        }),\n        styleTags({\n            OpenMarker: tags.brace,\n            CloseMarker: tags.brace,\n            Plaintext: tags.content,\n            Resolvable: tags.string,\n            BrokenResolvable: tags.className,\n        }),\n    ],\n});\nconst n8nLanguage = LRLanguage.define({\n    parser: parserWithMetaData,\n    languageData: {\n        commentTokens: { line: \";\" },\n    },\n});\nconst completions = n8nLanguage.data.of({\n    autocomplete: completeFromList([\n    // { label: \"test\", type: \"keyword\" }, // to add in future\n    ]),\n});\nfunction n8nExpression() {\n    return new LanguageSupport(n8nLanguage, [completions]);\n}\n\nexport { n8nExpression, n8nLanguage, parserWithMetaData };\n"],"names":["parser","LRParser","parserWithMetaData","foldNodeProp","foldInside","styleTags","tags","n8nLanguage","LRLanguage","completeFromList"],"mappings":"qGAMA,MAAMA,EAASC,EAAS,YAAY,CAClC,QAAS,GACT,OAAQ,oDACR,UAAW,iBACX,KAAM,uBACN,UAAW,kDACX,QAAS,EACT,aAAc,CAAC,CAAC,EAChB,gBAAiB,EACjB,UAAW,0XACX,WAAY,CAAC,CAAC,EACd,SAAU,CAAC,QAAU,CAAC,EAAE,CAAC,CAAC,EAC1B,UAAW,CACb,CAAC,EAEKC,EAAqBF,EAAO,UAAU,CACxC,MAAO,CACHG,EAAa,IAAI,CACb,YAAaC,CACzB,CAAS,EACDC,EAAU,CACN,WAAYC,EAAK,MACjB,YAAaA,EAAK,MAClB,UAAWA,EAAK,QAChB,WAAYA,EAAK,OACjB,iBAAkBA,EAAK,SACnC,CAAS,CACJ,CACL,CAAC,EACKC,EAAcC,EAAW,OAAO,CAClC,OAAQN,EACR,aAAc,CACV,cAAe,CAAE,KAAM,GAAK,CAC/B,CACL,CAAC,EACmBK,EAAY,KAAK,GAAG,CACpC,aAAcE,EAAiB,CAEnC,CAAK,CACL,CAAC"}