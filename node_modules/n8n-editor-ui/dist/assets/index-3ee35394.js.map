{"version":3,"file":"index-3ee35394.js","sources":["../../src/plugins/icons/custom.ts","../../src/plugins/icons/index.ts","../../src/plugins/directives.ts","../../../../node_modules/.pnpm/regenerator-runtime@0.13.11/node_modules/regenerator-runtime/runtime.js","../../src/event-bus/node-view.ts","../../src/components/EnterpriseEdition.ee.vue","../../src/composables/useMessage.ts","../../src/plugins/components.ts","../../src/components/AboutModal.vue","../../src/components/AskAiModal.vue","../../src/components/CommunityPackageManageConfirmModal.vue","../../src/components/CommunityPackageInstallModal.vue","../../src/components/ChangePasswordModal.vue","../../src/components/ContactPromptModal.vue","../../src/components/CredentialIcon.vue","../../src/components/Banner.vue","../../src/mixins/copyPaste.ts","../../src/components/CopyInput.vue","../../src/components/ParameterInputExpanded.vue","../../src/components/CredentialEdit/CredentialInputs.vue","../../src/components/CredentialEdit/GoogleAuthButton.vue","../../src/components/CredentialEdit/AuthTypeSelector.vue","../../src/components/CredentialEdit/CredentialConfig.vue","../../src/components/TimeAgo.vue","../../src/components/CredentialEdit/CredentialInfo.vue","../../src/components/CredentialEdit/CredentialSharing.ee.vue","../../src/components/SaveButton.vue","../../src/components/InlineNameEdit.vue","../../src/components/FeatureComingSoon.vue","../../src/components/CredentialEdit/CredentialEdit.vue","../../src/components/InviteUsersModal.vue","../../src/components/CredentialsSelectModal.vue","../../src/components/TagsDropdown.vue","../../src/components/DuplicateWorkflowDialog.vue","../../src/components/ModalRoot.vue","../../src/components/OnboardingCallSignupModal.vue","../../src/components/PersonalizationModal.vue","../../src/components/TagsManager/TagsView/TagsTableHeader.vue","../../src/components/TagsManager/TagsView/TagsTable.vue","../../src/components/TagsManager/TagsView/TagsView.vue","../../src/components/TagsManager/NoTagsView.vue","../../src/components/TagsManager/TagsManager.vue","../../src/components/ModalDrawer.vue","../../src/components/NodeIcon.vue","../../src/components/Badge.vue","../../src/components/VersionCard.vue","../../src/components/UpdatesPanel.vue","../../src/components/ValueSurvey.vue","../../src/components/WorkflowSettings.vue","../../src/components/DeleteUserModal.vue","../../src/components/ExecutionTime.vue","../../src/mixins/workflowActivate.ts","../../src/components/WorkflowActivator.vue","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObject.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_freeGlobal.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_root.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/now.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_trimmedEndIndex.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseTrim.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Symbol.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getRawTag.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_objectToString.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseGetTag.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObjectLike.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isSymbol.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/toNumber.js","../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/debounce.js","../../src/composables/useCopyToClipboard.ts","../../src/composables/useExternalHooks.ts","../../src/composables/useGlobalLinkActions.ts","../../src/composables/useI18n.ts","../../src/plugins/telemetry/index.ts","../../src/composables/useTelemetry.ts","../../src/composables/useToast.ts","../../src/composables/useUpgradeLink.ts","../../src/components/ExecutionFilter.vue","../../src/mixins/executionsHelpers.ts","../../src/utils/executionUtils.ts","../../src/components/ExecutionsList.vue","../../src/components/ExecutionsModal.vue","../../src/components/ActivationModal.vue","../../src/components/ImportCurlModal.vue","../../src/components/WorkflowShareModal.ee.vue","../../src/components/UserActivationSurveyModal.vue","../../src/components/SettingsLogStreaming/Helpers.ee.ts","../../src/components/SettingsLogStreaming/descriptions.ee.ts","../../src/components/SettingsLogStreaming/EventSelection.ee.vue","../../src/components/SettingsLogStreaming/EventDestinationSettingsModal.ee.vue","../../src/components/Modals.vue","../../src/components/Telemetry.vue","../../src/mixins/userHelpers.ts","../../src/composables/useDebounce.ts","../../src/composables/useDeviceSupport.ts","../../src/composables/useHistoryHelper.ts","../../src/mixins/newVersions.ts","../../../../node_modules/.pnpm/vue-router@3.6.5_vue@2.7.14/node_modules/vue-router/composables.mjs","../../src/api/versionControl.ts","../../src/stores/versionControl.store.ts","../../src/App.vue","../../src/components/Logo.vue","../../src/api/sso.ts","../../src/stores/sso.store.ts","../../src/components/SSOLogin.vue","../../src/views/AuthView.vue","../../src/views/ChangePasswordView.vue","../../src/views/ErrorView.vue","../../src/views/ForgotMyPasswordView.vue","../../src/composables/useTitleChange.ts","../../src/mixins/pushConnection.ts","../../src/components/ShortenName.vue","../../src/components/IntersectionObserver.vue","../../src/mixins/emitter.ts","../../src/components/IntersectionObserved.vue","../../src/components/TagsContainer.vue","../../src/components/PushConnectionTracker.vue","../../src/components/ExpandableInput/ExpandableInputBase.vue","../../src/components/ExpandableInput/ExpandableInputEdit.vue","../../src/components/ExpandableInput/ExpandableInputPreview.vue","../../src/components/InlineTextEdit.vue","../../src/components/BreakpointsObserver.vue","../../src/components/MainHeader/WorkflowDetails.vue","../../src/components/MainHeader/TabBar.vue","../../src/components/MainHeader/MainHeader.vue","../../src/mixins/workflowRun.ts","../../src/components/MainSidebar.vue","../../src/mixins/deviceSupportHelpers.ts","../../src/mixins/moveNodeWorkflow.ts","../../src/composables/useCanvasMouseSelect.ts","../../src/composables/useUniqueNodeName.ts","../../src/components/NodeTitle.vue","../../src/components/NodeSettingsTabs.vue","../../src/components/NodeWebhooks.vue","../../src/mixins/pinData.ts","../../src/components/NodeExecuteButton.vue","../../src/components/NodeSettings.vue","../../src/components/Draggable.vue","../../src/components/PanelDragButton.vue","../../src/components/NDVDraggablePanels.vue","../../src/components/BinaryDataDisplayEmbed.vue","../../src/components/BinaryDataDisplay.vue","../../src/components/Error/NodeErrorView.vue","../../src/components/RunData.vue","../../src/components/RunInfo.vue","../../src/components/OutputPanel.vue","../../src/components/InputPanel.vue","../../src/components/TriggerPanel.vue","../../src/components/NodeDetailsView.vue","../../src/mixins/nodeBase.ts","../../src/components/Node.vue","../../src/components/Sticky.vue","../../src/views/CanvasAddButton.vue","../../src/views/NodeView.vue","../../src/components/ExecutionsView/ExecutionCard.vue","../../src/components/ExecutionsView/ExecutionsInfoAccordion.vue","../../src/components/ExecutionsView/ExecutionsSidebar.vue","../../src/components/ExecutionsView/ExecutionsList.vue","../../src/components/ExecutionsView/ExecutionsLandingPage.vue","../../src/components/WorkflowPreview.vue","../../src/components/ExecutionsView/ExecutionPreview.vue","../../src/components/SettingsSidebar.vue","../../src/views/SettingsView.vue","../../src/views/SettingsLdapView.vue","../../src/views/SettingsPersonalView.vue","../../src/components/PageAlert.vue","../../src/views/SettingsUsersView.vue","../../src/components/CommunityPackageCard.vue","../../src/views/SettingsCommunityNodesView.vue","../../src/views/SettingsApiView.vue","../../src/components/layouts/PageViewLayout.vue","../../src/components/SettingsLogStreaming/EventDestinationCard.ee.vue","../../src/views/SettingsLogStreamingView.vue","../../src/views/SettingsFakeDoorView.vue","../../src/views/SetupView.vue","../../src/views/SigninView.vue","../../src/views/SignupView.vue","../../src/components/TemplateDetailsBlock.vue","../../src/components/TemplateDetails.vue","../../src/components/NodeList.vue","../../src/components/TemplateCard.vue","../../src/components/TemplateList.vue","../../src/components/GoBackButton.vue","../../src/views/TemplatesView.vue","../../src/views/TemplatesCollectionView.vue","../../src/views/TemplatesWorkflowView.vue","../../src/components/CollectionWorkflowCard.vue","../../src/components/CollectionCard.vue","../../src/components/CollectionsCarousel.vue","../../src/components/TemplateFilters.vue","../../src/views/TemplatesSearchView.vue","../../src/components/layouts/PageViewLayoutList.vue","../../src/components/forms/ResourceOwnershipSelect.ee.vue","../../src/components/forms/ResourceFiltersDropdown.vue","../../src/components/layouts/ResourcesListLayout.vue","../../src/components/CredentialCard.vue","../../src/views/CredentialsView.vue","../../src/views/ExecutionsView.vue","../../src/components/WorkflowCard.vue","../../src/views/WorkflowsView.vue","../../src/components/VariablesRow.vue","../../src/views/VariablesView.vue","../../src/views/SettingsUsageAndPlan.vue","../../src/views/SettingsSso.vue","../../src/views/SignoutView.vue","../../src/views/SamlOnboarding.vue","../../src/views/SettingsVersionControl.vue","../../src/router.ts","../../src/main.ts"],"sourcesContent":["import type { IconDefinition, IconName, IconPrefix } from '@fortawesome/fontawesome-svg-core';\n\nexport const faVariable: IconDefinition = {\n\tprefix: 'fas' as IconPrefix,\n\ticonName: 'variable' as IconName,\n\ticon: [\n\t\t52,\n\t\t52,\n\t\t[],\n\t\t'e001',\n\t\t'M42.6,17.8c2.4,0,7.2-2,7.2-8.4c0-6.4-4.6-6.8-6.1-6.8c-2.8,0-5.6,2-8.1,6.3c-2.5,4.4-5.3,9.1-5.3,9.1 l-0.1,0c-0.6-3.1-1.1-5.6-1.3-6.7c-0.5-2.7-3.6-8.4-9.9-8.4c-6.4,0-12.2,3.7-12.2,3.7l0,0C5.8,7.3,5.1,8.5,5.1,9.9 c0,2.1,1.7,3.9,3.9,3.9c0.6,0,1.2-0.2,1.7-0.4l0,0c0,0,4.8-2.7,5.9,0c0.3,0.8,0.6,1.7,0.9,2.7c1.2,4.2,2.4,9.1,3.3,13.5l-4.2,6 c0,0-4.7-1.7-7.1-1.7s-7.2,2-7.2,8.4s4.6,6.8,6.1,6.8c2.8,0,5.6-2,8.1-6.3c2.5-4.4,5.3-9.1,5.3-9.1c0.8,4,1.5,7.1,1.9,8.5 c1.6,4.5,5.3,7.2,10.1,7.2c0,0,5,0,10.9-3.3c1.4-0.6,2.4-2,2.4-3.6c0-2.1-1.7-3.9-3.9-3.9c-0.6,0-1.2,0.2-1.7,0.4l0,0 c0,0-4.2,2.4-5.6,0.5c-1-2-1.9-4.6-2.6-7.8c-0.6-2.8-1.3-6.2-2-9.5l4.3-6.2C35.5,16.1,40.2,17.8,42.6,17.8z',\n\t],\n};\n","import Vue from 'vue';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport type { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport {\n\tfaAngleDoubleLeft,\n\tfaAngleDown,\n\tfaAngleLeft,\n\tfaAngleRight,\n\tfaAngleUp,\n\tfaArrowLeft,\n\tfaArrowRight,\n\tfaAt,\n\tfaBan,\n\tfaBolt,\n\tfaBook,\n\tfaBoxOpen,\n\tfaBug,\n\tfaCalculator,\n\tfaCalendar,\n\tfaChartBar,\n\tfaCheck,\n\tfaCheckCircle,\n\tfaCheckSquare,\n\tfaChevronDown,\n\tfaChevronUp,\n\tfaChevronLeft,\n\tfaChevronRight,\n\tfaCode,\n\tfaCodeBranch,\n\tfaCog,\n\tfaCogs,\n\tfaClock,\n\tfaClone,\n\tfaCloud,\n\tfaCloudDownloadAlt,\n\tfaCopy,\n\tfaCube,\n\tfaCut,\n\tfaDotCircle,\n\tfaEdit,\n\tfaEllipsisV,\n\tfaEnvelope,\n\tfaEye,\n\tfaExclamationTriangle,\n\tfaExpand,\n\tfaExpandAlt,\n\tfaExternalLinkAlt,\n\tfaExchangeAlt,\n\tfaFile,\n\tfaFileAlt,\n\tfaFileArchive,\n\tfaFileCode,\n\tfaFileDownload,\n\tfaFileExport,\n\tfaFileImport,\n\tfaFilePdf,\n\tfaFilter,\n\tfaFingerprint,\n\tfaFlask,\n\tfaFolderOpen,\n\tfaFont,\n\tfaGlobeAmericas,\n\tfaGift,\n\tfaGlobe,\n\tfaGraduationCap,\n\tfaGripVertical,\n\tfaHandPointLeft,\n\tfaHashtag,\n\tfaHdd,\n\tfaHome,\n\tfaHourglass,\n\tfaImage,\n\tfaInbox,\n\tfaInfo,\n\tfaInfoCircle,\n\tfaKey,\n\tfaLink,\n\tfaList,\n\tfaLightbulb,\n\tfaMapSigns,\n\tfaMousePointer,\n\tfaNetworkWired,\n\tfaPause,\n\tfaPauseCircle,\n\tfaPen,\n\tfaPencilAlt,\n\tfaPlay,\n\tfaPlayCircle,\n\tfaPlug,\n\tfaPlus,\n\tfaPlusCircle,\n\tfaPlusSquare,\n\tfaQuestion,\n\tfaQuestionCircle,\n\tfaRedo,\n\tfaRss,\n\tfaSave,\n\tfaSatelliteDish,\n\tfaSearch,\n\tfaSearchMinus,\n\tfaSearchPlus,\n\tfaServer,\n\tfaSignInAlt,\n\tfaSignOutAlt,\n\tfaSlidersH,\n\tfaSpinner,\n\tfaStar,\n\tfaStop,\n\tfaSun,\n\tfaSync,\n\tfaSyncAlt,\n\tfaTable,\n\tfaTasks,\n\tfaTerminal,\n\tfaThLarge,\n\tfaThumbtack,\n\tfaTimes,\n\tfaTimesCircle,\n\tfaToolbox,\n\tfaTrash,\n\tfaUndo,\n\tfaUnlink,\n\tfaUser,\n\tfaUserCircle,\n\tfaUserFriends,\n\tfaUsers,\n\tfaVideo,\n\tfaTree,\n\tfaStickyNote as faSolidStickyNote,\n\tfaUserLock,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faVariable } from './custom';\nimport { faStickyNote } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\nfunction addIcon(icon: IconDefinition) {\n\tlibrary.add(icon);\n}\n\naddIcon(faAngleDoubleLeft);\naddIcon(faAngleDown);\naddIcon(faAngleLeft);\naddIcon(faAngleRight);\naddIcon(faAngleUp);\naddIcon(faArrowLeft);\naddIcon(faArrowRight);\naddIcon(faAt);\naddIcon(faBan);\naddIcon(faBolt);\naddIcon(faBook);\naddIcon(faBoxOpen);\naddIcon(faBug);\naddIcon(faCalculator);\naddIcon(faCalendar);\naddIcon(faChartBar);\naddIcon(faCheck);\naddIcon(faCheckCircle);\naddIcon(faCheckSquare);\naddIcon(faChevronLeft);\naddIcon(faChevronRight);\naddIcon(faChevronDown);\naddIcon(faChevronUp);\naddIcon(faCode);\naddIcon(faCodeBranch);\naddIcon(faCog);\naddIcon(faCogs);\naddIcon(faClock);\naddIcon(faClone);\naddIcon(faCloud);\naddIcon(faCloudDownloadAlt);\naddIcon(faCopy);\naddIcon(faCube);\naddIcon(faCut);\naddIcon(faDotCircle);\naddIcon(faGripVertical);\naddIcon(faEdit);\naddIcon(faEllipsisV);\naddIcon(faEnvelope);\naddIcon(faEye);\naddIcon(faExclamationTriangle);\naddIcon(faExpand);\naddIcon(faExpandAlt);\naddIcon(faExternalLinkAlt);\naddIcon(faExchangeAlt);\naddIcon(faFile);\naddIcon(faFileAlt);\naddIcon(faFileArchive);\naddIcon(faFileCode);\naddIcon(faFileDownload);\naddIcon(faFileExport);\naddIcon(faFileImport);\naddIcon(faFilePdf);\naddIcon(faFilter);\naddIcon(faFingerprint);\naddIcon(faFlask);\naddIcon(faFolderOpen);\naddIcon(faFont);\naddIcon(faGift);\naddIcon(faGlobe);\naddIcon(faGlobeAmericas);\naddIcon(faGraduationCap);\naddIcon(faHandPointLeft);\naddIcon(faHashtag);\naddIcon(faHdd);\naddIcon(faHome);\naddIcon(faHourglass);\naddIcon(faImage);\naddIcon(faInbox);\naddIcon(faInfo);\naddIcon(faInfoCircle);\naddIcon(faKey);\naddIcon(faLink);\naddIcon(faList);\naddIcon(faLightbulb);\naddIcon(faMapSigns);\naddIcon(faMousePointer);\naddIcon(faNetworkWired);\naddIcon(faPause);\naddIcon(faPauseCircle);\naddIcon(faPen);\naddIcon(faPencilAlt);\naddIcon(faPlay);\naddIcon(faPlayCircle);\naddIcon(faPlug);\naddIcon(faPlus);\naddIcon(faPlusCircle);\naddIcon(faPlusSquare);\naddIcon(faQuestion);\naddIcon(faQuestionCircle);\naddIcon(faRedo);\naddIcon(faRss);\naddIcon(faSave);\naddIcon(faSatelliteDish);\naddIcon(faSearch);\naddIcon(faSearchMinus);\naddIcon(faSearchPlus);\naddIcon(faServer);\naddIcon(faSignInAlt);\naddIcon(faSignOutAlt);\naddIcon(faSlidersH);\naddIcon(faSpinner);\naddIcon(faSolidStickyNote);\naddIcon(faStickyNote as IconDefinition);\naddIcon(faStar);\naddIcon(faStop);\naddIcon(faSun);\naddIcon(faSync);\naddIcon(faSyncAlt);\naddIcon(faTable);\naddIcon(faTasks);\naddIcon(faTerminal);\naddIcon(faThLarge);\naddIcon(faThumbtack);\naddIcon(faTimes);\naddIcon(faTimesCircle);\naddIcon(faToolbox);\naddIcon(faTrash);\naddIcon(faUndo);\naddIcon(faUnlink);\naddIcon(faUser);\naddIcon(faUserCircle);\naddIcon(faUserFriends);\naddIcon(faUsers);\naddIcon(faVariable);\naddIcon(faVideo);\naddIcon(faTree);\naddIcon(faUserLock);\n\nVue.component('font-awesome-icon', FontAwesomeIcon);\n","import Vue from 'vue';\n\nimport Vue2TouchEvents from 'vue2-touch-events';\n// @ts-ignore\nimport vClickOutside from 'v-click-outside';\n\nVue.use(Vue2TouchEvents);\nVue.use(vClickOutside);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { createEventBus } from '@/event-bus';\n\nexport const nodeViewEventBus = createEventBus();\n","<template>\n\t<div>\n\t\t<slot v-if=\"canAccess\" />\n\t\t<slot name=\"fallback\" v-else />\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport type { EnterpriseEditionFeature } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useSettingsStore } from '@/stores/settings.store';\n\nexport default defineComponent({\n\tname: 'EnterpriseEdition',\n\tprops: {\n\t\tfeatures: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => [] as EnterpriseEditionFeature[],\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useSettingsStore),\n\t\tcanAccess(): boolean {\n\t\t\treturn this.features.reduce((acc: boolean, feature) => {\n\t\t\t\treturn (\n\t\t\t\t\tacc &&\n\t\t\t\t\t!!this.settingsStore.isEnterpriseFeatureEnabled(feature as EnterpriseEditionFeature)\n\t\t\t\t);\n\t\t\t}, true);\n\t\t},\n\t},\n});\n</script>\n","import type { ElMessageBoxOptions } from 'element-ui/types/message-box';\nimport { Message, MessageBox } from 'element-ui';\n\nexport function useMessage() {\n\tasync function alert(\n\t\tmessage: string,\n\t\tconfigOrTitle?: string | ElMessageBoxOptions,\n\t\tconfig?: ElMessageBoxOptions,\n\t) {\n\t\tconst resolvedConfig = {\n\t\t\t...(config || (typeof configOrTitle === 'object' ? configOrTitle : {})),\n\t\t\tcancelButtonClass: 'btn--cancel',\n\t\t\tconfirmButtonClass: 'btn--confirm',\n\t\t};\n\n\t\tif (typeof configOrTitle === 'string') {\n\t\t\treturn MessageBox.alert(message, configOrTitle, resolvedConfig);\n\t\t}\n\t\treturn MessageBox.alert(message, resolvedConfig);\n\t}\n\n\tasync function confirm(\n\t\tmessage: string,\n\t\tconfigOrTitle?: string | ElMessageBoxOptions,\n\t\tconfig?: ElMessageBoxOptions,\n\t) {\n\t\tconst resolvedConfig = {\n\t\t\t...(config || (typeof configOrTitle === 'object' ? configOrTitle : {})),\n\t\t\tcancelButtonClass: 'btn--cancel',\n\t\t\tconfirmButtonClass: 'btn--confirm',\n\t\t\tdistinguishCancelAndClose: true,\n\t\t\tshowClose: config?.showClose || false,\n\t\t\tcloseOnClickModal: false,\n\t\t};\n\n\t\tif (typeof configOrTitle === 'string') {\n\t\t\treturn MessageBox.confirm(message, configOrTitle, resolvedConfig);\n\t\t}\n\t\treturn MessageBox.confirm(message, resolvedConfig);\n\t}\n\n\tasync function prompt(\n\t\tmessage: string,\n\t\tconfigOrTitle?: string | ElMessageBoxOptions,\n\t\tconfig?: ElMessageBoxOptions,\n\t) {\n\t\tconst resolvedConfig = {\n\t\t\t...(config || (typeof configOrTitle === 'object' ? configOrTitle : {})),\n\t\t\tcancelButtonClass: 'btn--cancel',\n\t\t\tconfirmButtonClass: 'btn--confirm',\n\t\t};\n\n\t\tif (typeof configOrTitle === 'string') {\n\t\t\treturn MessageBox.prompt(message, configOrTitle, resolvedConfig);\n\t\t}\n\t\treturn MessageBox.prompt(message, resolvedConfig);\n\t}\n\n\treturn {\n\t\talert,\n\t\tconfirm,\n\t\tprompt,\n\t\tmessage: Message,\n\t};\n}\n","import Vue from 'vue';\nimport Fragment from 'vue-fragment';\nimport VueAgile from 'vue-agile';\n\nimport 'regenerator-runtime/runtime';\n\nimport ElementUI from 'element-ui';\nimport { Loading, MessageBox, Notification } from 'element-ui';\nimport { N8nPlugin } from 'n8n-design-system';\nimport EnterpriseEdition from '@/components/EnterpriseEdition.ee.vue';\nimport { useMessage } from '@/composables/useMessage';\n\nVue.use(Fragment.Plugin);\nVue.use(VueAgile);\n\nVue.use(ElementUI);\nVue.use(N8nPlugin);\n\nVue.component('enterprise-edition', EnterpriseEdition);\n\nVue.use(Loading.directive);\n\nVue.prototype.$loading = Loading.service;\nVue.prototype.$msgbox = MessageBox;\n\nconst messageService = useMessage();\n\nVue.prototype.$alert = messageService.alert;\nVue.prototype.$confirm = messageService.confirm;\nVue.prototype.$prompt = messageService.prompt;\nVue.prototype.$message = messageService.message;\n\nVue.prototype.$notify = Notification;\n","<template>\n\t<Modal\n\t\twidth=\"540px\"\n\t\t:title=\"$locale.baseText('about.aboutN8n')\"\n\t\t:eventBus=\"modalBus\"\n\t\t:name=\"ABOUT_MODAL_KEY\"\n\t\t:center=\"true\"\n\t>\n\t\t<template #content>\n\t\t\t<div :class=\"$style.container\">\n\t\t\t\t<el-row>\n\t\t\t\t\t<el-col :span=\"8\" class=\"info-name\">\n\t\t\t\t\t\t<n8n-text>{{ $locale.baseText('about.n8nVersion') }}</n8n-text>\n\t\t\t\t\t</el-col>\n\t\t\t\t\t<el-col :span=\"16\">\n\t\t\t\t\t\t<n8n-text>{{ rootStore.versionCli }}</n8n-text>\n\t\t\t\t\t</el-col>\n\t\t\t\t</el-row>\n\t\t\t\t<el-row>\n\t\t\t\t\t<el-col :span=\"8\" class=\"info-name\">\n\t\t\t\t\t\t<n8n-text>{{ $locale.baseText('about.sourceCode') }}</n8n-text>\n\t\t\t\t\t</el-col>\n\t\t\t\t\t<el-col :span=\"16\">\n\t\t\t\t\t\t<n8n-link to=\"https://github.com/n8n-io/n8n\">https://github.com/n8n-io/n8n</n8n-link>\n\t\t\t\t\t</el-col>\n\t\t\t\t</el-row>\n\t\t\t\t<el-row>\n\t\t\t\t\t<el-col :span=\"8\" class=\"info-name\">\n\t\t\t\t\t\t<n8n-text>{{ $locale.baseText('about.license') }}</n8n-text>\n\t\t\t\t\t</el-col>\n\t\t\t\t\t<el-col :span=\"16\">\n\t\t\t\t\t\t<n8n-link to=\"https://github.com/n8n-io/n8n/blob/master/packages/cli/LICENSE.md\">\n\t\t\t\t\t\t\t{{ $locale.baseText('about.n8nLicense') }}\n\t\t\t\t\t\t</n8n-link>\n\t\t\t\t\t</el-col>\n\t\t\t\t</el-row>\n\t\t\t\t<el-row>\n\t\t\t\t\t<el-col :span=\"8\" class=\"info-name\">\n\t\t\t\t\t\t<n8n-text>{{ $locale.baseText('about.instanceID') }}</n8n-text>\n\t\t\t\t\t</el-col>\n\t\t\t\t\t<el-col :span=\"16\">\n\t\t\t\t\t\t<n8n-text>{{ rootStore.instanceId }}</n8n-text>\n\t\t\t\t\t</el-col>\n\t\t\t\t</el-row>\n\t\t\t</div>\n\t\t</template>\n\n\t\t<template #footer>\n\t\t\t<div class=\"action-buttons\">\n\t\t\t\t<n8n-button @click=\"closeDialog\" float=\"right\" :label=\"$locale.baseText('about.close')\" />\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport Modal from './Modal.vue';\nimport { ABOUT_MODAL_KEY } from '../constants';\nimport { mapStores } from 'pinia';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { createEventBus } from '@/event-bus';\n\nexport default defineComponent({\n\tname: 'About',\n\tcomponents: {\n\t\tModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tABOUT_MODAL_KEY,\n\t\t\tmodalBus: createEventBus(),\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useRootStore, useSettingsStore),\n\t},\n\tmethods: {\n\t\tcloseDialog() {\n\t\t\tthis.modalBus.emit('close');\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.container > * {\n\tmargin-bottom: var(--spacing-s);\n\toverflow-wrap: break-word;\n}\n</style>\n","<template>\n\t<Modal\n\t\twidth=\"460px\"\n\t\t:center=\"true\"\n\t\t:eventBus=\"modalBus\"\n\t\t:name=\"ASK_AI_MODAL_KEY\"\n\t\t:title=\"$locale.baseText('askAi.dialog.title')\"\n\t>\n\t\t<template #content>\n\t\t\t<n8n-text v-html=\"$locale.baseText('askAi.dialog.body')\"></n8n-text>\n\t\t</template>\n\n\t\t<template #footer>\n\t\t\t<n8n-link :to=\"ASK_AI_WAITLIST_URL\">\n\t\t\t\t<n8n-button\n\t\t\t\t\tfloat=\"right\"\n\t\t\t\t\t:label=\"$locale.baseText('askAi.dialog.signup')\"\n\t\t\t\t\t@click=\"onAskAiWaitlistClick\"\n\t\t\t\t/>\n\t\t\t</n8n-link>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport Modal from './Modal.vue';\nimport { ASK_AI_MODAL_KEY, ASK_AI_WAITLIST_URL } from '../constants';\nimport { createEventBus } from '@/event-bus';\n\nexport default defineComponent({\n\tname: 'AskAI',\n\tcomponents: {\n\t\tModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tASK_AI_WAITLIST_URL,\n\t\t\tASK_AI_MODAL_KEY,\n\t\t\tmodalBus: createEventBus(),\n\t\t};\n\t},\n\tmethods: {\n\t\tonAskAiWaitlistClick() {\n\t\t\tthis.$telemetry.track('User clicked join waitlist', { source: 'ask-ai-code' });\n\t\t\tthis.modalBus.emit('close');\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\"></style>\n","<template>\n\t<Modal\n\t\twidth=\"540px\"\n\t\t:name=\"COMMUNITY_PACKAGE_CONFIRM_MODAL_KEY\"\n\t\t:title=\"getModalContent.title\"\n\t\t:eventBus=\"modalBus\"\n\t\t:center=\"true\"\n\t\t:showClose=\"!loading\"\n\t\t:beforeClose=\"onModalClose\"\n\t>\n\t\t<template #content>\n\t\t\t<n8n-text>{{ getModalContent.message }}</n8n-text>\n\t\t\t<div\n\t\t\t\t:class=\"$style.descriptionContainer\"\n\t\t\t\tv-if=\"mode === COMMUNITY_PACKAGE_MANAGE_ACTIONS.UPDATE\"\n\t\t\t>\n\t\t\t\t<n8n-info-tip theme=\"info\" type=\"note\" :bold=\"false\">\n\t\t\t\t\t<template>\n\t\t\t\t\t\t<span v-text=\"getModalContent.description\"></span>\n\t\t\t\t\t</template>\n\t\t\t\t</n8n-info-tip>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<n8n-button\n\t\t\t\t:loading=\"loading\"\n\t\t\t\t:disabled=\"loading\"\n\t\t\t\t:label=\"loading ? getModalContent.buttonLoadingLabel : getModalContent.buttonLabel\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tfloat=\"right\"\n\t\t\t\t@click=\"onConfirmButtonClick\"\n\t\t\t/>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script>\nimport mixins from 'vue-typed-mixins';\nimport Modal from './Modal.vue';\nimport {\n\tCOMMUNITY_PACKAGE_CONFIRM_MODAL_KEY,\n\tCOMMUNITY_PACKAGE_MANAGE_ACTIONS,\n} from '../constants';\nimport { showMessage } from '@/mixins/showMessage';\nimport { mapStores } from 'pinia';\nimport { useCommunityNodesStore } from '@/stores/communityNodes.store';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins(showMessage).extend({\n\tname: 'CommunityPackageManageConfirmModal',\n\tcomponents: {\n\t\tModal,\n\t},\n\tprops: {\n\t\tmodalName: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tactivePackageName: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tmode: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloading: false,\n\t\t\tmodalBus: createEventBus(),\n\t\t\tCOMMUNITY_PACKAGE_CONFIRM_MODAL_KEY,\n\t\t\tCOMMUNITY_PACKAGE_MANAGE_ACTIONS,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useCommunityNodesStore),\n\t\tactivePackage() {\n\t\t\treturn this.communityNodesStore.getInstalledPackageByName(this.activePackageName);\n\t\t},\n\t\tgetModalContent() {\n\t\t\tif (this.mode === COMMUNITY_PACKAGE_MANAGE_ACTIONS.UNINSTALL) {\n\t\t\t\treturn {\n\t\t\t\t\ttitle: this.$locale.baseText('settings.communityNodes.confirmModal.uninstall.title'),\n\t\t\t\t\tmessage: this.$locale.baseText('settings.communityNodes.confirmModal.uninstall.message', {\n\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\tpackageName: this.activePackageName,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\tbuttonLabel: this.$locale.baseText(\n\t\t\t\t\t\t'settings.communityNodes.confirmModal.uninstall.buttonLabel',\n\t\t\t\t\t),\n\t\t\t\t\tbuttonLoadingLabel: this.$locale.baseText(\n\t\t\t\t\t\t'settings.communityNodes.confirmModal.uninstall.buttonLoadingLabel',\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttitle: this.$locale.baseText('settings.communityNodes.confirmModal.update.title', {\n\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\tpackageName: this.activePackageName,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\tdescription: this.$locale.baseText(\n\t\t\t\t\t'settings.communityNodes.confirmModal.update.description',\n\t\t\t\t),\n\t\t\t\tmessage: this.$locale.baseText('settings.communityNodes.confirmModal.update.message', {\n\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\tpackageName: this.activePackageName,\n\t\t\t\t\t\tversion: this.activePackage.updateAvailable,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\tbuttonLabel: this.$locale.baseText(\n\t\t\t\t\t'settings.communityNodes.confirmModal.update.buttonLabel',\n\t\t\t\t),\n\t\t\t\tbuttonLoadingLabel: this.$locale.baseText(\n\t\t\t\t\t'settings.communityNodes.confirmModal.update.buttonLoadingLabel',\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t},\n\tmethods: {\n\t\tonModalClose() {\n\t\t\treturn !this.loading;\n\t\t},\n\t\tasync onConfirmButtonClick() {\n\t\t\tif (this.mode === COMMUNITY_PACKAGE_MANAGE_ACTIONS.UNINSTALL) {\n\t\t\t\tawait this.onUninstall();\n\t\t\t} else if (this.mode === COMMUNITY_PACKAGE_MANAGE_ACTIONS.UPDATE) {\n\t\t\t\tawait this.onUpdate();\n\t\t\t}\n\t\t},\n\t\tasync onUninstall() {\n\t\t\ttry {\n\t\t\t\tthis.$telemetry.track('user started cnr package deletion', {\n\t\t\t\t\tpackage_name: this.activePackage.packageName,\n\t\t\t\t\tpackage_node_names: this.activePackage.installedNodes.map((node) => node.name),\n\t\t\t\t\tpackage_version: this.activePackage.installedVersion,\n\t\t\t\t\tpackage_author: this.activePackage.authorName,\n\t\t\t\t\tpackage_author_email: this.activePackage.authorEmail,\n\t\t\t\t});\n\t\t\t\tthis.loading = true;\n\t\t\t\tawait this.communityNodesStore.uninstallPackage(this.activePackageName);\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('settings.communityNodes.messages.uninstall.success.title'),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('settings.communityNodes.messages.uninstall.error'),\n\t\t\t\t);\n\t\t\t} finally {\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.modalBus.emit('close');\n\t\t\t}\n\t\t},\n\t\tasync onUpdate() {\n\t\t\ttry {\n\t\t\t\tthis.$telemetry.track('user started cnr package update', {\n\t\t\t\t\tpackage_name: this.activePackage.packageName,\n\t\t\t\t\tpackage_node_names: this.activePackage.installedNodes.map((node) => node.name),\n\t\t\t\t\tpackage_version_current: this.activePackage.installedVersion,\n\t\t\t\t\tpackage_version_new: this.activePackage.updateAvailable,\n\t\t\t\t\tpackage_author: this.activePackage.authorName,\n\t\t\t\t\tpackage_author_email: this.activePackage.authorEmail,\n\t\t\t\t});\n\t\t\t\tthis.loading = true;\n\t\t\t\tconst updatedVersion = this.activePackage.updateAvailable;\n\t\t\t\tawait this.communityNodesStore.updatePackage(this.activePackageName);\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('settings.communityNodes.messages.update.success.title'),\n\t\t\t\t\tmessage: this.$locale.baseText(\n\t\t\t\t\t\t'settings.communityNodes.messages.update.success.message',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\t\tpackageName: this.activePackageName,\n\t\t\t\t\t\t\t\tversion: updatedVersion,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('settings.communityNodes.messages.update.error.title'),\n\t\t\t\t);\n\t\t\t} finally {\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.modalBus.emit('close');\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.descriptionContainer {\n\tdisplay: flex;\n\tmargin: var(--spacing-s) 0;\n}\n\n.descriptionIcon {\n\talign-self: center;\n\tcolor: var(--color-text-lighter);\n}\n\n.descriptionText {\n\tpadding: 0 var(--spacing-xs);\n}\n</style>\n","<template>\n\t<Modal\n\t\twidth=\"540px\"\n\t\t:name=\"COMMUNITY_PACKAGE_INSTALL_MODAL_KEY\"\n\t\t:title=\"$locale.baseText('settings.communityNodes.installModal.title')\"\n\t\t:eventBus=\"modalBus\"\n\t\t:center=\"true\"\n\t\t:beforeClose=\"onModalClose\"\n\t\t:showClose=\"!loading\"\n\t>\n\t\t<template #content>\n\t\t\t<div :class=\"[$style.descriptionContainer, 'p-s']\">\n\t\t\t\t<div>\n\t\t\t\t\t<n8n-text>\n\t\t\t\t\t\t{{ $locale.baseText('settings.communityNodes.installModal.description') }}\n\t\t\t\t\t</n8n-text>\n\t\t\t\t\t<n8n-link :to=\"COMMUNITY_NODES_INSTALLATION_DOCS_URL\" @click=\"onMoreInfoTopClick\">\n\t\t\t\t\t\t{{ $locale.baseText('_reusableDynamicText.moreInfo') }}\n\t\t\t\t\t</n8n-link>\n\t\t\t\t</div>\n\t\t\t\t<n8n-button\n\t\t\t\t\t:label=\"$locale.baseText('settings.communityNodes.browseButton.label')\"\n\t\t\t\t\ticon=\"external-link-alt\"\n\t\t\t\t\t:class=\"$style.browseButton\"\n\t\t\t\t\t@click=\"openNPMPage\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div :class=\"[$style.formContainer, 'mt-m']\">\n\t\t\t\t<n8n-input-label\n\t\t\t\t\t:class=\"$style.labelTooltip\"\n\t\t\t\t\t:label=\"$locale.baseText('settings.communityNodes.installModal.packageName.label')\"\n\t\t\t\t\t:tooltipText=\"\n\t\t\t\t\t\t$locale.baseText('settings.communityNodes.installModal.packageName.tooltip', {\n\t\t\t\t\t\t\tinterpolate: { npmURL: NPM_KEYWORD_SEARCH_URL },\n\t\t\t\t\t\t})\n\t\t\t\t\t\"\n\t\t\t\t>\n\t\t\t\t\t<n8n-input\n\t\t\t\t\t\tname=\"packageNameInput\"\n\t\t\t\t\t\tv-model=\"packageName\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t:maxlength=\"214\"\n\t\t\t\t\t\t:placeholder=\"\n\t\t\t\t\t\t\t$locale.baseText('settings.communityNodes.installModal.packageName.placeholder')\n\t\t\t\t\t\t\"\n\t\t\t\t\t\t:required=\"true\"\n\t\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\t\t@blur=\"onInputBlur\"\n\t\t\t\t\t/>\n\t\t\t\t</n8n-input-label>\n\t\t\t\t<div :class=\"[$style.infoText, 'mt-4xs']\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t:class=\"[$style.infoText, infoTextErrorMessage ? $style.error : '']\"\n\t\t\t\t\t\tv-text=\"infoTextErrorMessage\"\n\t\t\t\t\t></span>\n\t\t\t\t</div>\n\t\t\t\t<el-checkbox\n\t\t\t\t\tv-model=\"userAgreed\"\n\t\t\t\t\t:class=\"[$style.checkbox, checkboxWarning ? $style.error : '', 'mt-l']\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\t@change=\"onCheckboxChecked\"\n\t\t\t\t>\n\t\t\t\t\t<n8n-text>\n\t\t\t\t\t\t{{ $locale.baseText('settings.communityNodes.installModal.checkbox.label') }} </n8n-text\n\t\t\t\t\t><br />\n\t\t\t\t\t<n8n-link :to=\"COMMUNITY_NODES_RISKS_DOCS_URL\" @click=\"onLearnMoreLinkClick\">{{\n\t\t\t\t\t\t$locale.baseText('_reusableDynamicText.moreInfo')\n\t\t\t\t\t}}</n8n-link>\n\t\t\t\t</el-checkbox>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<n8n-button\n\t\t\t\t:loading=\"loading\"\n\t\t\t\t:disabled=\"packageName === '' || loading\"\n\t\t\t\t:label=\"\n\t\t\t\t\tloading\n\t\t\t\t\t\t? $locale.baseText('settings.communityNodes.installModal.installButton.label.loading')\n\t\t\t\t\t\t: $locale.baseText('settings.communityNodes.installModal.installButton.label')\n\t\t\t\t\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tfloat=\"right\"\n\t\t\t\t@click=\"onInstallClick\"\n\t\t\t/>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport Modal from './Modal.vue';\nimport {\n\tCOMMUNITY_PACKAGE_INSTALL_MODAL_KEY,\n\tNPM_KEYWORD_SEARCH_URL,\n\tCOMMUNITY_NODES_INSTALLATION_DOCS_URL,\n\tCOMMUNITY_NODES_RISKS_DOCS_URL,\n} from '../constants';\nimport mixins from 'vue-typed-mixins';\nimport { showMessage } from '@/mixins/showMessage';\nimport { mapStores } from 'pinia';\nimport { useCommunityNodesStore } from '@/stores/communityNodes.store';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins(showMessage).extend({\n\tname: 'CommunityPackageInstallModal',\n\tcomponents: {\n\t\tModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloading: false,\n\t\t\tpackageName: '',\n\t\t\tuserAgreed: false,\n\t\t\tmodalBus: createEventBus(),\n\t\t\tcheckboxWarning: false,\n\t\t\tinfoTextErrorMessage: '',\n\t\t\tCOMMUNITY_PACKAGE_INSTALL_MODAL_KEY,\n\t\t\tNPM_KEYWORD_SEARCH_URL,\n\t\t\tCOMMUNITY_NODES_INSTALLATION_DOCS_URL,\n\t\t\tCOMMUNITY_NODES_RISKS_DOCS_URL,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useCommunityNodesStore),\n\t},\n\tmethods: {\n\t\topenNPMPage() {\n\t\t\tthis.$telemetry.track('user clicked cnr browse button', { source: 'cnr install modal' });\n\t\t\twindow.open(NPM_KEYWORD_SEARCH_URL, '_blank');\n\t\t},\n\t\tasync onInstallClick() {\n\t\t\tif (!this.userAgreed) {\n\t\t\t\tthis.checkboxWarning = true;\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tthis.$telemetry.track('user started cnr package install', {\n\t\t\t\t\t\tinput_string: this.packageName,\n\t\t\t\t\t\tsource: 'cnr settings page',\n\t\t\t\t\t});\n\t\t\t\t\tthis.infoTextErrorMessage = '';\n\t\t\t\t\tthis.loading = true;\n\t\t\t\t\tawait this.communityNodesStore.installPackage(this.packageName);\n\t\t\t\t\t// TODO: We need to fetch a fresh list of installed packages until proper response is implemented on the back-end\n\t\t\t\t\tawait this.communityNodesStore.fetchInstalledPackages();\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t\tthis.modalBus.emit('close');\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: this.$locale.baseText('settings.communityNodes.messages.install.success'),\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (error.httpStatusCode && error.httpStatusCode === 400) {\n\t\t\t\t\t\tthis.infoTextErrorMessage = error.message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$showError(\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\tthis.$locale.baseText('settings.communityNodes.messages.install.error'),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonCheckboxChecked() {\n\t\t\tthis.checkboxWarning = false;\n\t\t},\n\t\tonModalClose() {\n\t\t\treturn !this.loading;\n\t\t},\n\t\tonInputBlur() {\n\t\t\tthis.packageName = this.packageName.replaceAll('npm i ', '').replaceAll('npm install ', '');\n\t\t},\n\t\tonMoreInfoTopClick() {\n\t\t\tthis.$telemetry.track('user clicked cnr docs link', { source: 'install package modal top' });\n\t\t},\n\t\tonLearnMoreLinkClick() {\n\t\t\tthis.$telemetry.track('user clicked cnr docs link', {\n\t\t\t\tsource: 'install package modal bottom',\n\t\t\t});\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.descriptionContainer {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tborder: var(--border-width-base) var(--border-style-base) var(--color-info-tint-1);\n\tborder-radius: var(--border-radius-base);\n\tbackground-color: var(--color-background-light);\n\n\tbutton {\n\t\t& > span {\n\t\t\tflex-direction: row-reverse;\n\t\t\t& > span {\n\t\t\t\tmargin-left: var(--spacing-3xs);\n\t\t\t}\n\t\t}\n\t}\n}\n\n.formContainer {\n\tfont-size: var(--font-size-2xs);\n\tfont-weight: var(--font-weight-regular);\n\tcolor: var(--color-text-base);\n}\n\n.checkbox {\n\tspan:nth-child(2) {\n\t\tvertical-align: text-top;\n\t}\n}\n\n.error {\n\tcolor: var(--color-danger);\n\n\tspan {\n\t\tborder-color: var(--color-danger);\n\t}\n}\n</style>\n\n<style lang=\"scss\">\n.el-tooltip__popper {\n\tmax-width: 240px;\n\timg {\n\t\twidth: 100%;\n\t}\n\tp {\n\t\tline-height: 1.2;\n\t}\n\tp + p {\n\t\tmargin-top: var(--spacing-2xs);\n\t}\n}\n</style>\n","<template>\n\t<Modal\n\t\t:name=\"CHANGE_PASSWORD_MODAL_KEY\"\n\t\t@enter=\"onSubmit\"\n\t\t:title=\"$locale.baseText('auth.changePassword')\"\n\t\t:center=\"true\"\n\t\twidth=\"460px\"\n\t\t:eventBus=\"modalBus\"\n\t>\n\t\t<template #content>\n\t\t\t<n8n-form-inputs\n\t\t\t\t:inputs=\"config\"\n\t\t\t\t:eventBus=\"formBus\"\n\t\t\t\t:columnView=\"true\"\n\t\t\t\t@input=\"onInput\"\n\t\t\t\t@submit=\"onSubmit\"\n\t\t\t/>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<n8n-button\n\t\t\t\t:loading=\"loading\"\n\t\t\t\t:label=\"$locale.baseText('auth.changePassword')\"\n\t\t\t\t@click=\"onSubmitClick\"\n\t\t\t\tfloat=\"right\"\n\t\t\t\tdata-test-id=\"change-password-button\"\n\t\t\t/>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\n\nimport { showMessage } from '@/mixins/showMessage';\nimport Modal from './Modal.vue';\nimport type { IFormInputs } from '@/Interface';\nimport { CHANGE_PASSWORD_MODAL_KEY } from '../constants';\nimport { mapStores } from 'pinia';\nimport { useUsersStore } from '@/stores/users.store';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins(showMessage).extend({\n\tcomponents: { Modal },\n\tname: 'ChangePasswordModal',\n\tprops: {\n\t\tmodalName: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tconfig: null as null | IFormInputs,\n\t\t\tformBus: createEventBus(),\n\t\t\tmodalBus: createEventBus(),\n\t\t\tpassword: '',\n\t\t\tloading: false,\n\t\t\tCHANGE_PASSWORD_MODAL_KEY,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUsersStore),\n\t},\n\tmounted() {\n\t\tthis.config = [\n\t\t\t{\n\t\t\t\tname: 'currentPassword',\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: this.$locale.baseText('auth.changePassword.currentPassword'),\n\t\t\t\t\ttype: 'password',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tautocomplete: 'current-password',\n\t\t\t\t\tcapitalize: true,\n\t\t\t\t\tfocusInitially: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'password',\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: this.$locale.baseText('auth.newPassword'),\n\t\t\t\t\ttype: 'password',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalidationRules: [{ name: 'DEFAULT_PASSWORD_RULES' }],\n\t\t\t\t\tinfoText: this.$locale.baseText('auth.defaultPasswordRequirements'),\n\t\t\t\t\tautocomplete: 'new-password',\n\t\t\t\t\tcapitalize: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'password2',\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: this.$locale.baseText('auth.changePassword.reenterNewPassword'),\n\t\t\t\t\ttype: 'password',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalidators: {\n\t\t\t\t\t\tTWO_PASSWORDS_MATCH: {\n\t\t\t\t\t\t\tvalidate: this.passwordsMatch,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tvalidationRules: [{ name: 'TWO_PASSWORDS_MATCH' }],\n\t\t\t\t\tautocomplete: 'new-password',\n\t\t\t\t\tcapitalize: true,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t},\n\tmethods: {\n\t\tpasswordsMatch(value: string | number | boolean | null | undefined) {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (value !== this.password) {\n\t\t\t\treturn {\n\t\t\t\t\tmessageKey: 'auth.changePassword.passwordsMustMatchError',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\tonInput(e: { name: string; value: string }) {\n\t\t\tif (e.name === 'password') {\n\t\t\t\tthis.password = e.value;\n\t\t\t}\n\t\t},\n\t\tasync onSubmit(values: { [key: string]: string }) {\n\t\t\ttry {\n\t\t\t\tthis.loading = true;\n\t\t\t\tawait this.usersStore.updateCurrentUserPassword(values);\n\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\ttitle: this.$locale.baseText('auth.changePassword.passwordUpdated'),\n\t\t\t\t\tmessage: this.$locale.baseText('auth.changePassword.passwordUpdatedMessage'),\n\t\t\t\t});\n\n\t\t\t\tthis.modalBus.emit('close');\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('auth.changePassword.error'));\n\t\t\t}\n\t\t\tthis.loading = false;\n\t\t},\n\t\tonSubmitClick() {\n\t\t\tthis.formBus.emit('submit');\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<Modal\n\t\t:name=\"modalName\"\n\t\t:eventBus=\"modalBus\"\n\t\t:center=\"true\"\n\t\t:closeOnPressEscape=\"false\"\n\t\t:beforeClose=\"closeDialog\"\n\t\tcustomClass=\"contact-prompt-modal\"\n\t\twidth=\"460px\"\n\t>\n\t\t<template #header>\n\t\t\t<n8n-heading tag=\"h2\" size=\"xlarge\" color=\"text-dark\">{{ title }}</n8n-heading>\n\t\t</template>\n\t\t<template #content>\n\t\t\t<div :class=\"$style.description\">\n\t\t\t\t<n8n-text size=\"medium\" color=\"text-base\">{{ description }}</n8n-text>\n\t\t\t</div>\n\t\t\t<div @keyup.enter=\"send\">\n\t\t\t\t<n8n-input v-model=\"email\" placeholder=\"Your email address\" />\n\t\t\t</div>\n\t\t\t<div :class=\"$style.disclaimer\">\n\t\t\t\t<n8n-text size=\"small\" color=\"text-base\"\n\t\t\t\t\t>David from our product team will get in touch personally</n8n-text\n\t\t\t\t>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<div :class=\"$style.footer\">\n\t\t\t\t<n8n-button label=\"Send\" float=\"right\" @click=\"send\" :disabled=\"!isEmailValid\" />\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\n\nimport type { IN8nPromptResponse } from '@/Interface';\nimport { VALID_EMAIL_REGEX } from '@/constants';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport Modal from './Modal.vue';\nimport { mapStores } from 'pinia';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins(workflowHelpers).extend({\n\tcomponents: { Modal },\n\tname: 'ContactPromptModal',\n\tprops: ['modalName'],\n\tdata() {\n\t\treturn {\n\t\t\temail: '',\n\t\t\tmodalBus: createEventBus(),\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useRootStore, useSettingsStore),\n\t\ttitle(): string {\n\t\t\tif (this.settingsStore.promptsData && this.settingsStore.promptsData.title) {\n\t\t\t\treturn this.settingsStore.promptsData.title;\n\t\t\t}\n\n\t\t\treturn 'You’re a power user 💪';\n\t\t},\n\t\tdescription(): string {\n\t\t\tif (this.settingsStore.promptsData && this.settingsStore.promptsData.message) {\n\t\t\t\treturn this.settingsStore.promptsData.message;\n\t\t\t}\n\n\t\t\treturn 'Your experience with n8n can help us improve — for you and our entire community.';\n\t\t},\n\t\tisEmailValid(): boolean {\n\t\t\treturn VALID_EMAIL_REGEX.test(String(this.email).toLowerCase());\n\t\t},\n\t},\n\tmethods: {\n\t\tcloseDialog(): void {\n\t\t\tif (!this.isEmailValid) {\n\t\t\t\tthis.$telemetry.track('User closed email modal', {\n\t\t\t\t\tinstance_id: this.rootStore.instanceId,\n\t\t\t\t\temail: null,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tasync send() {\n\t\t\tif (this.isEmailValid) {\n\t\t\t\tconst response = (await this.settingsStore.submitContactInfo(\n\t\t\t\t\tthis.email,\n\t\t\t\t)) as IN8nPromptResponse;\n\n\t\t\t\tif (response.updated) {\n\t\t\t\t\tthis.$telemetry.track('User closed email modal', {\n\t\t\t\t\t\tinstance_id: this.rootStore.instanceId,\n\t\t\t\t\t\temail: this.email,\n\t\t\t\t\t});\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: 'Thanks!',\n\t\t\t\t\t\tmessage: \"It's people like you that help make n8n better\",\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.modalBus.emit('close');\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.description {\n\tmargin-bottom: var(--spacing-s);\n}\n\n.disclaimer {\n\tmargin-top: var(--spacing-4xs);\n}\n</style>\n\n<style lang=\"scss\">\n.dialog-wrapper {\n\t.contact-prompt-modal {\n\t\t.el-dialog__body {\n\t\t\tpadding: 16px 24px 24px;\n\t\t}\n\t}\n}\n</style>\n","<template>\n\t<div>\n\t\t<img v-if=\"filePath\" :class=\"$style.credIcon\" :src=\"filePath\" />\n\t\t<NodeIcon v-else-if=\"relevantNode\" :nodeType=\"relevantNode\" :size=\"28\" />\n\t\t<span :class=\"$style.fallback\" v-else></span>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { useCredentialsStore } from '@/stores/credentials.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport type { ICredentialType, INodeTypeDescription } from 'n8n-workflow';\nimport { mapStores } from 'pinia';\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tprops: {\n\t\tcredentialTypeName: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useCredentialsStore, useNodeTypesStore, useRootStore),\n\t\tcredentialWithIcon(): ICredentialType | null {\n\t\t\treturn this.credentialTypeName ? this.getCredentialWithIcon(this.credentialTypeName) : null;\n\t\t},\n\n\t\tfilePath(): string | null {\n\t\t\tconst iconUrl = this.credentialWithIcon?.iconUrl;\n\t\t\tif (!iconUrl) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn this.rootStore.getBaseUrl + iconUrl;\n\t\t},\n\n\t\trelevantNode(): INodeTypeDescription | null {\n\t\t\tif (this.credentialWithIcon?.icon?.startsWith('node:')) {\n\t\t\t\tconst nodeType = this.credentialWithIcon.icon.replace('node:', '');\n\t\t\t\treturn this.nodeTypesStore.getNodeType(nodeType);\n\t\t\t}\n\t\t\tconst nodesWithAccess = this.credentialsStore.getNodesWithAccess(this.credentialTypeName);\n\n\t\t\tif (nodesWithAccess.length) {\n\t\t\t\treturn nodesWithAccess[0];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t},\n\tmethods: {\n\t\tgetCredentialWithIcon(name: string | null): ICredentialType | null {\n\t\t\tif (!name) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst type = this.credentialsStore.getCredentialTypeByName(name);\n\n\t\t\tif (!type) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (type.icon || type.iconUrl) {\n\t\t\t\treturn type;\n\t\t\t}\n\n\t\t\tif (type.extends) {\n\t\t\t\tlet parentCred = null;\n\t\t\t\ttype.extends.forEach((name) => {\n\t\t\t\t\tparentCred = this.getCredentialWithIcon(name);\n\t\t\t\t\tif (parentCred !== null) return;\n\t\t\t\t});\n\t\t\t\treturn parentCred;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.credIcon {\n\theight: 26px;\n}\n\n.fallback {\n\theight: 28px;\n\twidth: 28px;\n\tdisplay: flex;\n\tborder-radius: 50%;\n\tbackground-color: var(--color-foreground-base);\n}\n</style>\n","<template>\n\t<el-tag :type=\"theme\" size=\"medium\" :disable-transitions=\"true\" :class=\"$style.container\">\n\t\t<font-awesome-icon\n\t\t\t:icon=\"theme === 'success' ? 'check-circle' : 'exclamation-triangle'\"\n\t\t\t:class=\"theme === 'success' ? $style.icon : $style.dangerIcon\"\n\t\t/>\n\t\t<div :class=\"$style.banner\">\n\t\t\t<div :class=\"$style.content\">\n\t\t\t\t<div>\n\t\t\t\t\t<span :class=\"theme === 'success' ? $style.message : $style.dangerMessage\">\n\t\t\t\t\t\t{{ message }}&nbsp;\n\t\t\t\t\t</span>\n\t\t\t\t\t<n8n-link v-if=\"details && !expanded\" :bold=\"true\" size=\"small\" @click=\"expand\">\n\t\t\t\t\t\t<span :class=\"$style.moreDetails\">More details</span>\n\t\t\t\t\t</n8n-link>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<slot name=\"button\" v-if=\"$slots.button\" />\n\t\t\t<n8n-button\n\t\t\t\tv-else-if=\"buttonLabel\"\n\t\t\t\t:label=\"buttonLoading && buttonLoadingLabel ? buttonLoadingLabel : buttonLabel\"\n\t\t\t\t:title=\"buttonTitle\"\n\t\t\t\t:type=\"theme\"\n\t\t\t\t:loading=\"buttonLoading\"\n\t\t\t\tsize=\"small\"\n\t\t\t\toutline\n\t\t\t\t@click.stop=\"onClick\"\n\t\t\t/>\n\t\t</div>\n\n\t\t<div v-if=\"expanded\" :class=\"$style.details\">\n\t\t\t{{ details }}\n\t\t</div>\n\t</el-tag>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tname: 'Banner',\n\tdata() {\n\t\treturn {\n\t\t\texpanded: false,\n\t\t};\n\t},\n\tprops: {\n\t\ttheme: {\n\t\t\ttype: String,\n\t\t\tvalidator: (value: string): boolean => ['success', 'danger'].indexOf(value) !== -1,\n\t\t},\n\t\tmessage: {\n\t\t\ttype: String,\n\t\t},\n\t\tbuttonLabel: {\n\t\t\ttype: String,\n\t\t},\n\t\tbuttonLoadingLabel: {\n\t\t\ttype: String,\n\t\t},\n\t\tbuttonTitle: {\n\t\t\ttype: String,\n\t\t},\n\t\tdetails: {\n\t\t\ttype: String,\n\t\t},\n\t\tbuttonLoading: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tmethods: {\n\t\texpand() {\n\t\t\tthis.expanded = true;\n\t\t},\n\t\tonClick() {\n\t\t\tthis.expanded = false;\n\t\t\tthis.$emit('click');\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.icon {\n\tposition: absolute;\n\tleft: 14px;\n\ttop: 0;\n\tbottom: 0;\n\tmargin: auto 0;\n}\n\n.dangerIcon {\n\tcomposes: icon;\n\tcolor: var(--color-danger);\n}\n\n.container {\n\twidth: 100%;\n\tposition: relative;\n\tpadding-left: 40px;\n\tborder: none;\n}\n\n.message {\n\twhite-space: normal;\n\tline-height: var(--font-line-height-regular);\n\toverflow: hidden;\n\tword-break: break-word;\n}\n\n.dangerMessage {\n\tcomposes: message;\n\tcolor: var(--color-danger);\n}\n\n.banner {\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.content {\n\tflex-grow: 1;\n\tmin-height: 26px;\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.details {\n\tcomposes: message;\n\tmargin-top: var(--spacing-3xs);\n\tcolor: var(--color-text-base);\n\tfont-size: var(--font-size-2xs);\n}\n\n.moreDetails {\n\tfont-size: var(--font-size-xs);\n}\n</style>\n","/**\n * Captures any pasted data and sends it to method \"receivedCopyPasteData\" which has to be\n * defined on the component which uses this mixin\n */\nimport { defineComponent } from 'vue';\nimport { debounce } from 'lodash-es';\n\nexport const copyPaste = defineComponent({\n\tdata() {\n\t\treturn {\n\t\t\tcopyPasteElementsGotCreated: false,\n\t\t\thiddenInput: null as null | Element,\n\t\t\tonPaste: null as null | Function,\n\t\t\tonBeforePaste: null as null | Function,\n\t\t};\n\t},\n\tmounted() {\n\t\tif (this.copyPasteElementsGotCreated === true) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.copyPasteElementsGotCreated = true;\n\t\t// Define the style of the html elements that get created to make\n\t\t// sure that they are not visible\n\t\tconst style = document.createElement('style');\n\t\tstyle.type = 'text/css';\n\t\tstyle.innerHTML = `\n\t\t\t.hidden-copy-paste {\n\t\t\tposition: absolute;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 10px;\n\t\t\theight: 10px;\n\t\t\tdisplay: block;\n\t\t\tfont-size: 1px;\n\t\t\tz-index: -1;\n\t\t\tcolor: transparent;\n\t\t\tbackground: transparent;\n\t\t\toverflow: hidden;\n\t\t\tborder: none;\n\t\t\tpadding: 0;\n\t\t\tresize: none;\n\t\t\toutline: none;\n\t\t\t-webkit-user-select: text;\n\t\t\tuser-select: text;\n\t\t}\n\t\t`;\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\n\t\t// Code is mainly from\n\t\t// https://www.lucidchart.com/techblog/2014/12/02/definitive-guide-copying-pasting-javascript/\n\t\tconst isSafari =\n\t\t\tnavigator.appVersion.search('Safari') !== -1 &&\n\t\t\tnavigator.appVersion.search('Chrome') === -1 &&\n\t\t\tnavigator.appVersion.search('CrMo') === -1 &&\n\t\t\tnavigator.appVersion.search('CriOS') === -1;\n\t\tconst isIe =\n\t\t\tnavigator.userAgent.toLowerCase().indexOf('msie') !== -1 ||\n\t\t\tnavigator.userAgent.toLowerCase().indexOf('trident') !== -1;\n\n\t\tconst hiddenInput = document.createElement('input');\n\t\thiddenInput.setAttribute('type', 'text');\n\t\thiddenInput.setAttribute('id', 'hidden-input-copy-paste');\n\t\thiddenInput.setAttribute('class', 'hidden-copy-paste');\n\t\thiddenInput.setAttribute('data-test-id', 'hidden-copy-paste');\n\t\tthis.hiddenInput = hiddenInput;\n\n\t\tdocument.body.append(hiddenInput);\n\n\t\tlet ieClipboardDiv: HTMLDivElement | null = null;\n\t\tif (isIe) {\n\t\t\tieClipboardDiv = document.createElement('div');\n\t\t\tieClipboardDiv.setAttribute('id', 'hidden-ie-clipboard-copy-paste');\n\t\t\tieClipboardDiv.setAttribute('class', 'hidden-copy-paste');\n\t\t\tieClipboardDiv.setAttribute('contenteditable', 'true');\n\t\t\tdocument.body.append(ieClipboardDiv);\n\n\t\t\tthis.onBeforePaste = () => {\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (hiddenInput.is(':focus')) {\n\t\t\t\t\tthis.focusIeClipboardDiv(ieClipboardDiv as HTMLDivElement);\n\t\t\t\t}\n\t\t\t};\n\t\t\t// @ts-ignore\n\t\t\tdocument.addEventListener('beforepaste', this.onBeforePaste, true);\n\t\t}\n\n\t\tlet userInput = '';\n\t\tconst hiddenInputListener = (text: string) => {};\n\n\t\thiddenInput.addEventListener('input', (e) => {\n\t\t\tconst value = hiddenInput.value;\n\t\t\tuserInput += value;\n\t\t\thiddenInputListener(userInput);\n\n\t\t\t// There is a bug (sometimes) with Safari and the input area can't be updated during\n\t\t\t// the input event, so we update the input area after the event is done being processed\n\t\t\tif (isSafari) {\n\t\t\t\thiddenInput.focus();\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.focusHiddenArea(hiddenInput);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tthis.focusHiddenArea(hiddenInput);\n\t\t\t}\n\t\t});\n\n\t\tthis.onPaste = debounce(\n\t\t\t(e) => {\n\t\t\t\tconst event = 'paste';\n\t\t\t\t// Check if the event got emitted from a message box or from something\n\t\t\t\t// else which should ignore the copy/paste\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst path = e.path || (e.composedPath && e.composedPath());\n\t\t\t\tfor (let index = 0; index < path.length; index++) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpath[index].className &&\n\t\t\t\t\t\ttypeof path[index].className === 'string' &&\n\t\t\t\t\t\t(path[index].className.includes('el-message-box') ||\n\t\t\t\t\t\t\tpath[index].className.includes('ignore-key-press'))\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (ieClipboardDiv !== null) {\n\t\t\t\t\tthis.ieClipboardEvent(event, ieClipboardDiv);\n\t\t\t\t} else {\n\t\t\t\t\tthis.standardClipboardEvent(event, e as ClipboardEvent);\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tif (\n\t\t\t\t\t\t!document.activeElement ||\n\t\t\t\t\t\t(document.activeElement &&\n\t\t\t\t\t\t\t['textarea', 'text', 'email', 'password'].indexOf(document.activeElement.type) === -1)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// That it still allows to paste into text, email, password & textarea-fields we\n\t\t\t\t\t\t// check if we can identify the active element and if so only\n\t\t\t\t\t\t// run it if something else is selected.\n\t\t\t\t\t\tthis.focusHiddenArea(hiddenInput);\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t1000,\n\t\t\t{ leading: true },\n\t\t);\n\n\t\t// Set clipboard event listeners on the document.\n\t\t// @ts-ignore\n\t\tdocument.addEventListener('paste', this.onPaste);\n\t},\n\tmethods: {\n\t\treceivedCopyPasteData(plainTextData: string, event?: ClipboardEvent): void {\n\t\t\t// THIS HAS TO BE DEFINED IN COMPONENT!\n\t\t},\n\n\t\t// For every browser except IE, we can easily get and set data on the clipboard\n\t\tstandardClipboardEvent(clipboardEventName: string, event: ClipboardEvent) {\n\t\t\tconst clipboardData = event.clipboardData;\n\t\t\tif (clipboardData !== null && clipboardEventName === 'paste') {\n\t\t\t\tconst clipboardText = clipboardData.getData('text/plain');\n\t\t\t\tthis.receivedCopyPasteData(clipboardText, event);\n\t\t\t}\n\t\t},\n\n\t\t// For IE, we can get/set Text or URL just as we normally would\n\t\tieClipboardEvent(clipboardEventName: string, ieClipboardDiv: HTMLDivElement) {\n\t\t\t// @ts-ignore\n\t\t\tconst clipboardData = window.clipboardData;\n\t\t\tif (clipboardEventName === 'paste') {\n\t\t\t\tconst clipboardText = clipboardData.getData('Text');\n\t\t\t\t// @ts-ignore\n\t\t\t\tieClipboardDiv.empty();\n\t\t\t\tthis.receivedCopyPasteData(clipboardText);\n\t\t\t}\n\t\t},\n\n\t\t// Focuses an element to be ready for copy/paste (used exclusively for IE)\n\t\tfocusIeClipboardDiv(ieClipboardDiv: HTMLDivElement) {\n\t\t\tieClipboardDiv.focus();\n\t\t\tconst range = document.createRange();\n\t\t\t// @ts-ignore\n\t\t\trange.selectNodeContents(ieClipboardDiv.get(0));\n\t\t\tconst selection = window.getSelection();\n\t\t\tif (selection !== null) {\n\t\t\t\tselection.removeAllRanges();\n\t\t\t\tselection.addRange(range);\n\t\t\t}\n\t\t},\n\n\t\tfocusHiddenArea(hiddenInput: HTMLInputElement) {\n\t\t\t// In order to ensure that the browser will fire clipboard events, we always need to have something selected\n\t\t\thiddenInput.value = ' ';\n\t\t\thiddenInput.focus();\n\t\t\thiddenInput.select();\n\t\t},\n\n\t\t/**\n\t\t * Copies given data to clipboard\n\t\t */\n\t\tcopyToClipboard(value: string): void {\n\t\t\t// FROM: https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\n\t\t\tconst element = document.createElement('textarea'); // Create a <textarea> element\n\t\t\telement.value = value; // Set its value to the string that you want copied\n\t\t\telement.setAttribute('readonly', ''); // Make it readonly to be tamper-proof\n\t\t\telement.style.position = 'absolute';\n\t\t\telement.style.left = '-9999px'; // Move outside the screen to make it invisible\n\t\t\tdocument.body.appendChild(element); // Append the <textarea> element to the HTML document\n\n\t\t\tconst selection = document.getSelection();\n\t\t\tif (selection === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selected =\n\t\t\t\tselection.rangeCount > 0 // Check if there is any content selected previously\n\t\t\t\t\t? selection.getRangeAt(0) // Store selection if found\n\t\t\t\t\t: false; // Mark as false to know no selection existed before\n\t\t\telement.select(); // Select the <textarea> content\n\t\t\tdocument.execCommand('copy'); // Copy - only works as a result of a user action (e.g. click events)\n\t\t\tdocument.body.removeChild(element); // Remove the <textarea> element\n\t\t\tif (selected) {\n\t\t\t\t// If a selection existed before copying\n\t\t\t\tselection.removeAllRanges(); // Unselect everything on the HTML document\n\t\t\t\tselection.addRange(selected); // Restore the original selection\n\t\t\t}\n\t\t},\n\t},\n\tbeforeDestroy() {\n\t\tif (this.hiddenInput) {\n\t\t\tthis.hiddenInput.remove();\n\t\t}\n\t\tif (this.onPaste) {\n\t\t\t// @ts-ignore\n\t\t\tdocument.removeEventListener('paste', this.onPaste);\n\t\t}\n\t\tif (this.onBeforePaste) {\n\t\t\t// @ts-ignore\n\t\t\tdocument.removeEventListener('beforepaste', this.onBeforePaste);\n\t\t}\n\t},\n});\n","<template>\n\t<div>\n\t\t<n8n-input-label :label=\"label\">\n\t\t\t<div\n\t\t\t\t:class=\"{ [$style.copyText]: true, [$style[size]]: true, [$style.collapsed]: collapse }\"\n\t\t\t\t@click=\"copy\"\n\t\t\t\tdata-test-id=\"copy-input\"\n\t\t\t>\n\t\t\t\t<span ref=\"copyInputValue\">{{ value }}</span>\n\t\t\t\t<div :class=\"$style.copyButton\">\n\t\t\t\t\t<span>{{ copyButtonText }}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</n8n-input-label>\n\t\t<div v-if=\"hint\" :class=\"$style.hint\">{{ hint }}</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\nimport { copyPaste } from '@/mixins/copyPaste';\nimport { showMessage } from '@/mixins/showMessage';\n\nexport default mixins(copyPaste, showMessage).extend({\n\tprops: {\n\t\tlabel: {\n\t\t\ttype: String,\n\t\t},\n\t\thint: {\n\t\t\ttype: String,\n\t\t},\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t},\n\t\tcopyButtonText: {\n\t\t\ttype: String,\n\t\t\tdefault(): string {\n\t\t\t\treturn this.$locale.baseText('generic.copy');\n\t\t\t},\n\t\t},\n\t\ttoastTitle: {\n\t\t\ttype: String,\n\t\t\tdefault(): string {\n\t\t\t\treturn this.$locale.baseText('generic.copiedToClipboard');\n\t\t\t},\n\t\t},\n\t\ttoastMessage: {\n\t\t\ttype: String,\n\t\t},\n\t\tcollapse: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tsize: {\n\t\t\ttype: String,\n\t\t\tdefault: 'large',\n\t\t},\n\t},\n\tmethods: {\n\t\tcopy(): void {\n\t\t\tthis.$emit('copy');\n\t\t\tthis.copyToClipboard(this.value);\n\n\t\t\tthis.$showMessage({\n\t\t\t\ttitle: this.toastTitle,\n\t\t\t\tmessage: this.toastMessage,\n\t\t\t\ttype: 'success',\n\t\t\t});\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.copyText {\n\tspan {\n\t\tfont-family: Monaco, Consolas;\n\t\tcolor: var(--color-text-base);\n\t\toverflow-wrap: break-word;\n\t}\n\n\tpadding: var(--spacing-xs);\n\tbackground-color: var(--color-background-light);\n\tborder: var(--border-base);\n\tborder-radius: var(--border-radius-base);\n\tcursor: pointer;\n\tposition: relative;\n\tfont-weight: var(--font-weight-regular);\n\n\t&:hover {\n\t\t--display-copy-button: flex;\n\t\twidth: 100%;\n\t}\n}\n\n.large {\n\tspan {\n\t\tfont-size: var(--font-size-s);\n\t\tline-height: 1.5;\n\t}\n}\n\n.medium {\n\tspan {\n\t\tfont-size: var(--font-size-2xs);\n\t\tline-height: 1;\n\t}\n}\n\n.collapsed {\n\twhite-space: nowrap;\n\toverflow: hidden;\n}\n\n.copyButton {\n\tdisplay: var(--display-copy-button, none);\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tpadding: var(--spacing-xs);\n\tbackground-color: var(--color-background-light);\n\theight: 100%;\n\talign-items: center;\n\tborder-radius: var(--border-radius-base);\n\n\tspan {\n\t\tfont-family: unset;\n\t}\n}\n\n.hint {\n\tmargin-top: var(--spacing-2xs);\n\tfont-size: var(--font-size-2xs);\n\tline-height: var(--font-line-height-loose);\n\tfont-weight: var(--font-weight-regular);\n\tword-break: normal;\n}\n</style>\n","<template>\n\t<n8n-input-label\n\t\t:label=\"$locale.credText().inputLabelDisplayName(parameter)\"\n\t\t:tooltipText=\"$locale.credText().inputLabelDescription(parameter)\"\n\t\t:required=\"parameter.required\"\n\t\t:showTooltip=\"focused\"\n\t\t:showOptions=\"menuExpanded\"\n\t\t:data-test-id=\"parameter.name\"\n\t\t:size=\"label.size\"\n\t>\n\t\t<template #options>\n\t\t\t<parameter-options\n\t\t\t\t:parameter=\"parameter\"\n\t\t\t\t:value=\"value\"\n\t\t\t\t:isReadOnly=\"false\"\n\t\t\t\t:showOptions=\"true\"\n\t\t\t\t:isValueExpression=\"isValueExpression\"\n\t\t\t\t@optionSelected=\"optionSelected\"\n\t\t\t\t@menu-expanded=\"onMenuExpanded\"\n\t\t\t/>\n\t\t</template>\n\t\t<template>\n\t\t\t<parameter-input-wrapper\n\t\t\t\tref=\"param\"\n\t\t\t\tinputSize=\"large\"\n\t\t\t\t:parameter=\"parameter\"\n\t\t\t\t:value=\"value\"\n\t\t\t\t:path=\"parameter.name\"\n\t\t\t\t:hideIssues=\"true\"\n\t\t\t\t:documentationUrl=\"documentationUrl\"\n\t\t\t\t:errorHighlight=\"showRequiredErrors\"\n\t\t\t\t:isForCredential=\"true\"\n\t\t\t\t:eventSource=\"eventSource\"\n\t\t\t\t:hint=\"!showRequiredErrors ? hint : ''\"\n\t\t\t\t@focus=\"onFocus\"\n\t\t\t\t@blur=\"onBlur\"\n\t\t\t\t@textInput=\"valueChanged\"\n\t\t\t\t@valueChanged=\"valueChanged\"\n\t\t\t/>\n\t\t\t<div :class=\"$style.errors\" v-if=\"showRequiredErrors\">\n\t\t\t\t<n8n-text color=\"danger\" size=\"small\">\n\t\t\t\t\t{{ $locale.baseText('parameterInputExpanded.thisFieldIsRequired') }}\n\t\t\t\t\t<n8n-link\n\t\t\t\t\t\tv-if=\"documentationUrl\"\n\t\t\t\t\t\t:to=\"documentationUrl\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t:underline=\"true\"\n\t\t\t\t\t\t@click=\"onDocumentationUrlClick\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $locale.baseText('parameterInputExpanded.openDocs') }}\n\t\t\t\t\t</n8n-link>\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t</template>\n\t</n8n-input-label>\n</template>\n\n<script lang=\"ts\">\nimport type { IUpdateInformation } from '@/Interface';\nimport ParameterOptions from './ParameterOptions.vue';\nimport { defineComponent } from 'vue';\nimport type { PropType } from 'vue';\nimport ParameterInputWrapper from './ParameterInputWrapper.vue';\nimport { isValueExpression } from '@/utils';\nimport type { INodeParameterResourceLocator, INodeProperties, IParameterLabel } from 'n8n-workflow';\nimport { mapStores } from 'pinia';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\n\ntype ParamRef = InstanceType<typeof ParameterInputWrapper>;\n\nexport default defineComponent({\n\tname: 'parameter-input-expanded',\n\tcomponents: {\n\t\tParameterOptions,\n\t\tParameterInputWrapper,\n\t},\n\tprops: {\n\t\tparameter: {\n\t\t\ttype: Object as PropType<INodeProperties>,\n\t\t},\n\t\tvalue: {},\n\t\tshowValidationWarnings: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tdocumentationUrl: {\n\t\t\ttype: String,\n\t\t},\n\t\teventSource: {\n\t\t\ttype: String,\n\t\t},\n\t\tlabel: {\n\t\t\ttype: Object as PropType<IParameterLabel>,\n\t\t\tdefault: () => ({\n\t\t\t\tsize: 'small',\n\t\t\t}),\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tfocused: false,\n\t\t\tblurredEver: false,\n\t\t\tmenuExpanded: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useWorkflowsStore),\n\t\tshowRequiredErrors(): boolean {\n\t\t\tif (!this.parameter.required) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.blurredEver || this.showValidationWarnings) {\n\t\t\t\tif (this.parameter.type === 'string') {\n\t\t\t\t\treturn !this.value;\n\t\t\t\t}\n\n\t\t\t\tif (this.parameter.type === 'number') {\n\t\t\t\t\treturn typeof this.value !== 'number';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\thint(): string | null {\n\t\t\tif (this.isValueExpression) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.$locale.credText().hint(this.parameter);\n\t\t},\n\t\tisValueExpression(): boolean {\n\t\t\treturn isValueExpression(\n\t\t\t\tthis.parameter,\n\t\t\t\tthis.value as string | INodeParameterResourceLocator,\n\t\t\t);\n\t\t},\n\t},\n\tmethods: {\n\t\tonFocus() {\n\t\t\tthis.focused = true;\n\t\t},\n\t\tonBlur() {\n\t\t\tthis.blurredEver = true;\n\t\t\tthis.focused = false;\n\t\t},\n\t\tonMenuExpanded(expanded: boolean) {\n\t\t\tthis.menuExpanded = expanded;\n\t\t},\n\t\toptionSelected(command: string) {\n\t\t\tif (this.$refs.param) {\n\t\t\t\t(this.$refs.param as ParamRef).$emit('optionSelected', command);\n\t\t\t}\n\t\t},\n\t\tvalueChanged(parameterData: IUpdateInformation) {\n\t\t\tthis.$emit('change', parameterData);\n\t\t},\n\t\tonDocumentationUrlClick(): void {\n\t\t\tthis.$telemetry.track('User clicked credential modal docs link', {\n\t\t\t\tdocs_link: this.documentationUrl,\n\t\t\t\tsource: 'field',\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t});\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.errors {\n\tmargin-top: var(--spacing-2xs);\n}\n.hint {\n\tmargin-top: var(--spacing-4xs);\n}\n</style>\n","<template>\n\t<div @keydown.stop :class=\"$style.container\" v-if=\"credentialProperties.length\">\n\t\t<form\n\t\t\tv-for=\"parameter in credentialProperties\"\n\t\t\t:key=\"parameter.name\"\n\t\t\tautocomplete=\"off\"\n\t\t\tdata-test-id=\"credential-connection-parameter\"\n\t\t\t@submit.prevent\n\t\t>\n\t\t\t<!-- Why form? to break up inputs, to prevent Chrome autofill -->\n\t\t\t<n8n-notice v-if=\"parameter.type === 'notice'\" :content=\"parameter.displayName\" />\n\t\t\t<parameter-input-expanded\n\t\t\t\tv-else\n\t\t\t\t:parameter=\"parameter\"\n\t\t\t\t:value=\"credentialData[parameter.name]\"\n\t\t\t\t:documentationUrl=\"documentationUrl\"\n\t\t\t\t:showValidationWarnings=\"showValidationWarnings\"\n\t\t\t\t:label=\"label\"\n\t\t\t\teventSource=\"credentials\"\n\t\t\t\t@change=\"valueChanged\"\n\t\t\t/>\n\t\t</form>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport type { IParameterLabel } from 'n8n-workflow';\nimport type { IUpdateInformation } from '@/Interface';\nimport ParameterInputExpanded from '../ParameterInputExpanded.vue';\n\nexport default defineComponent({\n\tname: 'CredentialsInput',\n\tprops: [\n\t\t'credentialProperties',\n\t\t'credentialData', // ICredentialsDecryptedResponse\n\t\t'documentationUrl',\n\t\t'showValidationWarnings',\n\t],\n\tcomponents: {\n\t\tParameterInputExpanded,\n\t},\n\tdata(): { label: IParameterLabel } {\n\t\treturn {\n\t\t\tlabel: {\n\t\t\t\tsize: 'medium',\n\t\t\t},\n\t\t};\n\t},\n\tmethods: {\n\t\tvalueChanged(parameterData: IUpdateInformation) {\n\t\t\tconst name = parameterData.name.split('.').pop();\n\n\t\t\tthis.$emit('change', {\n\t\t\t\tname,\n\t\t\t\tvalue: parameterData.value,\n\t\t\t});\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\t> * {\n\t\tmargin-bottom: var(--spacing-l);\n\t}\n}\n</style>\n","<template>\n\t<button\n\t\t:class=\"$style.googleAuthBtn\"\n\t\t:title=\"$locale.baseText('credentialEdit.oAuthButton.signInWithGoogle')\"\n\t\t@click.stop.prevent=\"$emit('click')\"\n\t\t:style=\"googleAuthButtons\"\n\t/>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useRootStore } from '@/stores/n8nRoot.store';\n\nconst { baseUrl } = useRootStore();\nconst googleAuthButtons = {\n\t'--google-auth-btn-normal': `url(${baseUrl}google-auth/normal.png`,\n\t'--google-auth-btn-focus': `url(${baseUrl}google-auth/focus.png`,\n\t'--google-auth-btn-pressed': `url(${baseUrl}google-auth/pressed.png`,\n\t'--google-auth-btn-disabled': `url(${baseUrl}google-auth/disabled.png`,\n};\n</script>\n\n<style module lang=\"scss\">\n.googleAuthBtn {\n\t--google-auth-btn-height: 46px;\n\tcursor: pointer;\n\tborder: none;\n\tpadding: 0;\n\tbackground-image: var(--google-auth-btn-normal);\n\tbackground-repeat: no-repeat;\n\tbackground-color: transparent;\n\tbackground-size: 100% 100%;\n\tborder-radius: 4px;\n\theight: var(--google-auth-btn-height);\n\t// We have to preserve exact google button ratio\n\twidth: calc(var(--google-auth-btn-height) * 4.15217391);\n\n\t&:focus,\n\t&:hover {\n\t\toutline: none;\n\t\tbackground-image: var(--google-auth-btn-focus);\n\t}\n\t&:active {\n\t\tbackground-image: var(--google-auth-btn-pressed);\n\t}\n\t&:disabled {\n\t\tbackground-image: var(--google-auth-btn-disabled);\n\t}\n}\n</style>\n","<script setup lang=\"ts\">\nimport ParameterInputFull from '@/components/ParameterInputFull.vue';\nimport type { IUpdateInformation, NodeAuthenticationOption } from '@/Interface';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport {\n\tgetAuthTypeForNodeCredential,\n\tgetNodeAuthFields,\n\tgetNodeAuthOptions,\n\tisAuthRelatedParameter,\n} from '@/utils';\nimport type { INodeProperties, INodeTypeDescription, NodeParameterValue } from 'n8n-workflow';\nimport { computed, onMounted, ref } from 'vue';\nimport Vue from 'vue';\n\nexport interface Props {\n\tcredentialType: Object;\n}\n\nconst emit = defineEmits<{\n\t(event: 'authTypeChanged', value: string): void;\n}>();\n\nconst nodeTypesStore = useNodeTypesStore();\nconst ndvStore = useNDVStore();\n\nconst props = defineProps<Props>();\n\nconst selected = ref('');\nconst authRelatedFieldsValues = ref({} as { [key: string]: NodeParameterValue });\n\nonMounted(() => {\n\tif (activeNodeType.value?.credentials) {\n\t\tconst credentialsForType =\n\t\t\tactiveNodeType.value.credentials.find((cred) => cred.name === props.credentialType.name) ||\n\t\t\tnull;\n\t\tconst authOptionForCred = getAuthTypeForNodeCredential(\n\t\t\tactiveNodeType.value,\n\t\t\tcredentialsForType,\n\t\t);\n\t\tselected.value = authOptionForCred?.value || '';\n\t}\n\n\t// Populate default values of related fields\n\tauthRelatedFields.value.forEach((field) => {\n\t\tVue.set(authRelatedFieldsValues.value, field.name, field.default);\n\t});\n});\n\nconst activeNodeType = computed<INodeTypeDescription | null>(() => {\n\tconst activeNode = ndvStore.activeNode;\n\tif (activeNode) {\n\t\treturn nodeTypesStore.getNodeType(activeNode.type, activeNode.typeVersion);\n\t}\n\treturn null;\n});\n\nconst authOptions = computed<NodeAuthenticationOption[]>(() => {\n\treturn getNodeAuthOptions(activeNodeType.value, ndvStore.activeNode?.typeVersion);\n});\n\nconst filteredNodeAuthOptions = computed<NodeAuthenticationOption[]>(() => {\n\treturn authOptions.value.filter((option) => shouldShowAuthOption(option));\n});\n\n// These are node properties that authentication fields depend on\n// (have them in their display options). They all are show here\n// instead of in the NDV\nconst authRelatedFields = computed<INodeProperties[]>(() => {\n\tconst nodeAuthFields = getNodeAuthFields(activeNodeType.value);\n\treturn (\n\t\tactiveNodeType.value?.properties.filter((prop) =>\n\t\t\tisAuthRelatedParameter(nodeAuthFields, prop),\n\t\t) || []\n\t);\n});\n\nfunction shouldShowAuthOption(option: NodeAuthenticationOption): boolean {\n\t// Node auth radio button should be shown if any of the fields that it depends on\n\t// has value specified in it's displayOptions.show\n\tif (authRelatedFields.value.length === 0) {\n\t\t// If there are no related fields, show option\n\t\treturn true;\n\t}\n\n\tlet shouldDisplay = false;\n\tObject.keys(authRelatedFieldsValues.value).forEach((fieldName) => {\n\t\tif (option.displayOptions && option.displayOptions.show) {\n\t\t\tif (\n\t\t\t\toption.displayOptions.show[fieldName]?.includes(authRelatedFieldsValues.value[fieldName])\n\t\t\t) {\n\t\t\t\tshouldDisplay = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t});\n\treturn shouldDisplay;\n}\n\nfunction onAuthTypeChange(newType: string): void {\n\temit('authTypeChanged', newType);\n}\n\nfunction valueChanged(data: IUpdateInformation): void {\n\tVue.set(authRelatedFieldsValues.value, data.name, data.value);\n}\n\ndefineExpose({\n\tonAuthTypeChange,\n});\n</script>\n\n<template>\n\t<div v-if=\"filteredNodeAuthOptions.length > 0\" data-test-id=\"node-auth-type-selector\">\n\t\t<div v-for=\"parameter in authRelatedFields\" :key=\"parameter.name\" class=\"mb-l\">\n\t\t\t<parameter-input-full\n\t\t\t\t:parameter=\"parameter\"\n\t\t\t\t:value=\"authRelatedFieldsValues[parameter.name] || parameter.default\"\n\t\t\t\t:path=\"parameter.name\"\n\t\t\t\t:displayOptions=\"false\"\n\t\t\t\t@valueChanged=\"valueChanged\"\n\t\t\t/>\n\t\t</div>\n\t\t<div>\n\t\t\t<n8n-input-label\n\t\t\t\t:label=\"$locale.baseText('credentialEdit.credentialConfig.authTypeSelectorLabel')\"\n\t\t\t\t:tooltipText=\"$locale.baseText('credentialEdit.credentialConfig.authTypeSelectorTooltip')\"\n\t\t\t\t:required=\"true\"\n\t\t\t/>\n\t\t</div>\n\t\t<el-radio\n\t\t\tv-for=\"prop in filteredNodeAuthOptions\"\n\t\t\t:key=\"prop.value\"\n\t\t\tv-model=\"selected\"\n\t\t\t:label=\"prop.value\"\n\t\t\t:class=\"$style.authRadioButton\"\n\t\t\tborder\n\t\t\t@change=\"onAuthTypeChange\"\n\t\t\t>{{ prop.name }}</el-radio\n\t\t>\n\t</div>\n</template>\n\n<style lang=\"scss\" module>\n.authRadioButton {\n\tmargin-right: 0 !important;\n\t& + & {\n\t\tmargin-left: 8px !important;\n\t}\n}\n</style>\n","<template>\n\t<div :class=\"$style.container\" data-test-id=\"node-credentials-config-container\">\n\t\t<banner\n\t\t\tv-show=\"showValidationWarning\"\n\t\t\ttheme=\"danger\"\n\t\t\t:message=\"\n\t\t\t\t$locale.baseText(\n\t\t\t\t\t`credentialEdit.credentialConfig.pleaseCheckTheErrorsBelow${\n\t\t\t\t\t\tcredentialPermissions.isOwner ? '' : '.sharee'\n\t\t\t\t\t}`,\n\t\t\t\t\t{ interpolate: { owner: credentialOwnerName } },\n\t\t\t\t)\n\t\t\t\"\n\t\t/>\n\n\t\t<banner\n\t\t\tv-if=\"authError && !showValidationWarning\"\n\t\t\ttheme=\"danger\"\n\t\t\t:message=\"\n\t\t\t\t$locale.baseText(\n\t\t\t\t\t`credentialEdit.credentialConfig.couldntConnectWithTheseSettings${\n\t\t\t\t\t\tcredentialPermissions.isOwner ? '' : '.sharee'\n\t\t\t\t\t}`,\n\t\t\t\t\t{ interpolate: { owner: credentialOwnerName } },\n\t\t\t\t)\n\t\t\t\"\n\t\t\t:details=\"authError\"\n\t\t\t:buttonLabel=\"$locale.baseText('credentialEdit.credentialConfig.retry')\"\n\t\t\tbuttonLoadingLabel=\"Retrying\"\n\t\t\t:buttonTitle=\"$locale.baseText('credentialEdit.credentialConfig.retryCredentialTest')\"\n\t\t\t:buttonLoading=\"isRetesting\"\n\t\t\t@click=\"$emit('retest')\"\n\t\t/>\n\n\t\t<banner\n\t\t\tv-show=\"showOAuthSuccessBanner && !showValidationWarning\"\n\t\t\ttheme=\"success\"\n\t\t\t:message=\"$locale.baseText('credentialEdit.credentialConfig.accountConnected')\"\n\t\t\t:buttonLabel=\"$locale.baseText('credentialEdit.credentialConfig.reconnect')\"\n\t\t\t:buttonTitle=\"$locale.baseText('credentialEdit.credentialConfig.reconnectOAuth2Credential')\"\n\t\t\t@click=\"$emit('oauth')\"\n\t\t>\n\t\t\t<template #button v-if=\"isGoogleOAuthType\">\n\t\t\t\t<p\n\t\t\t\t\tv-text=\"`${$locale.baseText('credentialEdit.credentialConfig.reconnect')}:`\"\n\t\t\t\t\t:class=\"$style.googleReconnectLabel\"\n\t\t\t\t/>\n\t\t\t\t<GoogleAuthButton @click=\"$emit('oauth')\" />\n\t\t\t</template>\n\t\t</banner>\n\n\t\t<banner\n\t\t\tv-show=\"testedSuccessfully && !showValidationWarning\"\n\t\t\ttheme=\"success\"\n\t\t\t:message=\"$locale.baseText('credentialEdit.credentialConfig.connectionTestedSuccessfully')\"\n\t\t\t:buttonLabel=\"$locale.baseText('credentialEdit.credentialConfig.retry')\"\n\t\t\t:buttonLoadingLabel=\"$locale.baseText('credentialEdit.credentialConfig.retrying')\"\n\t\t\t:buttonTitle=\"$locale.baseText('credentialEdit.credentialConfig.retryCredentialTest')\"\n\t\t\t:buttonLoading=\"isRetesting\"\n\t\t\t@click=\"$emit('retest')\"\n\t\t\tdata-test-id=\"credentials-config-container-test-success\"\n\t\t/>\n\n\t\t<template v-if=\"credentialPermissions.updateConnection\">\n\t\t\t<n8n-notice v-if=\"documentationUrl && credentialProperties.length\" theme=\"warning\">\n\t\t\t\t{{ $locale.baseText('credentialEdit.credentialConfig.needHelpFillingOutTheseFields') }}\n\t\t\t\t<span class=\"ml-4xs\">\n\t\t\t\t\t<n8n-link :to=\"documentationUrl\" size=\"small\" bold @click=\"onDocumentationUrlClick\">\n\t\t\t\t\t\t{{ $locale.baseText('credentialEdit.credentialConfig.openDocs') }}\n\t\t\t\t\t</n8n-link>\n\t\t\t\t</span>\n\t\t\t</n8n-notice>\n\n\t\t\t<AuthTypeSelector\n\t\t\t\tv-if=\"showAuthTypeSelector && isNewCredential\"\n\t\t\t\t:credentialType=\"credentialType\"\n\t\t\t\t@authTypeChanged=\"onAuthTypeChange\"\n\t\t\t/>\n\n\t\t\t<CopyInput\n\t\t\t\tv-if=\"isOAuthType && credentialProperties.length\"\n\t\t\t\t:label=\"$locale.baseText('credentialEdit.credentialConfig.oAuthRedirectUrl')\"\n\t\t\t\t:value=\"oAuthCallbackUrl\"\n\t\t\t\t:copyButtonText=\"$locale.baseText('credentialEdit.credentialConfig.clickToCopy')\"\n\t\t\t\t:hint=\"\n\t\t\t\t\t$locale.baseText('credentialEdit.credentialConfig.subtitle', { interpolate: { appName } })\n\t\t\t\t\"\n\t\t\t\t:toastTitle=\"\n\t\t\t\t\t$locale.baseText('credentialEdit.credentialConfig.redirectUrlCopiedToClipboard')\n\t\t\t\t\"\n\t\t\t/>\n\t\t</template>\n\t\t<enterprise-edition v-else :features=\"[EnterpriseEditionFeature.Sharing]\">\n\t\t\t<div class=\"ph-no-capture\">\n\t\t\t\t<n8n-info-tip :bold=\"false\">\n\t\t\t\t\t{{\n\t\t\t\t\t\t$locale.baseText('credentialEdit.credentialEdit.info.sharee', {\n\t\t\t\t\t\t\tinterpolate: { credentialOwnerName },\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t</n8n-info-tip>\n\t\t\t</div>\n\t\t</enterprise-edition>\n\n\t\t<CredentialInputs\n\t\t\tv-if=\"credentialType && credentialPermissions.updateConnection\"\n\t\t\t:credentialData=\"credentialData\"\n\t\t\t:credentialProperties=\"credentialProperties\"\n\t\t\t:documentationUrl=\"documentationUrl\"\n\t\t\t:showValidationWarnings=\"showValidationWarning\"\n\t\t\t@change=\"onDataChange\"\n\t\t/>\n\n\t\t<OauthButton\n\t\t\tv-if=\"\n\t\t\t\tisOAuthType &&\n\t\t\t\trequiredPropertiesFilled &&\n\t\t\t\t!isOAuthConnected &&\n\t\t\t\tcredentialPermissions.isOwner\n\t\t\t\"\n\t\t\t:isGoogleOAuthType=\"isGoogleOAuthType\"\n\t\t\t@click=\"$emit('oauth')\"\n\t\t/>\n\n\t\t<n8n-text v-if=\"isMissingCredentials\" color=\"text-base\" size=\"medium\">\n\t\t\t{{ $locale.baseText('credentialEdit.credentialConfig.missingCredentialType') }}\n\t\t</n8n-text>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport type { ICredentialType, INodeTypeDescription } from 'n8n-workflow';\nimport { getAppNameFromCredType, isCommunityPackageName } from '@/utils';\n\nimport Banner from '../Banner.vue';\nimport CopyInput from '../CopyInput.vue';\nimport CredentialInputs from './CredentialInputs.vue';\nimport OauthButton from './OauthButton.vue';\nimport { addCredentialTranslation } from '@/plugins/i18n';\nimport { BUILTIN_CREDENTIALS_DOCS_URL, DOCS_DOMAIN, EnterpriseEditionFeature } from '@/constants';\nimport type { IPermissions } from '@/permissions';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useCredentialsStore } from '@/stores/credentials.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport type { ICredentialsResponse } from '@/Interface';\nimport AuthTypeSelector from '@/components/CredentialEdit/AuthTypeSelector.vue';\nimport GoogleAuthButton from './GoogleAuthButton.vue';\nimport Vue from 'vue';\n\nexport default Vue.extend({\n\tname: 'CredentialConfig',\n\tcomponents: {\n\t\tAuthTypeSelector,\n\t\tBanner,\n\t\tCopyInput,\n\t\tCredentialInputs,\n\t\tOauthButton,\n\t\tGoogleAuthButton,\n\t},\n\tprops: {\n\t\tcredentialType: {\n\t\t\ttype: Object,\n\t\t},\n\t\tcredentialProperties: {\n\t\t\ttype: Array,\n\t\t},\n\t\tparentTypes: {\n\t\t\ttype: Array,\n\t\t},\n\t\tcredentialData: {},\n\t\tcredentialId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tshowValidationWarning: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tauthError: {\n\t\t\ttype: String,\n\t\t},\n\t\ttestedSuccessfully: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tisOAuthType: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tisOAuthConnected: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tisRetesting: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tcredentialPermissions: {\n\t\t\ttype: Object,\n\t\t\tdefault: (): IPermissions => ({}),\n\t\t},\n\t\trequiredPropertiesFilled: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tmode: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tshowAuthTypeSelector: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tEnterpriseEditionFeature,\n\t\t};\n\t},\n\tasync beforeMount() {\n\t\tif (this.rootStore.defaultLocale === 'en') return;\n\n\t\tthis.uiStore.activeCredentialType = this.credentialType.name;\n\n\t\tconst key = `n8n-nodes-base.credentials.${this.credentialType.name}`;\n\n\t\tif (this.$locale.exists(key)) return;\n\n\t\tconst credTranslation = await this.credentialsStore.getCredentialTranslation(\n\t\t\tthis.credentialType.name,\n\t\t);\n\n\t\taddCredentialTranslation(\n\t\t\t{ [this.credentialType.name]: credTranslation },\n\t\t\tthis.rootStore.defaultLocale,\n\t\t);\n\t},\n\tcomputed: {\n\t\t...mapStores(\n\t\t\tuseCredentialsStore,\n\t\t\tuseNDVStore,\n\t\t\tuseNodeTypesStore,\n\t\t\tuseRootStore,\n\t\t\tuseUIStore,\n\t\t\tuseWorkflowsStore,\n\t\t),\n\t\tactiveNodeType(): INodeTypeDescription | null {\n\t\t\tconst activeNode = this.ndvStore.activeNode;\n\n\t\t\tif (activeNode) {\n\t\t\t\treturn this.nodeTypesStore.getNodeType(activeNode.type, activeNode.typeVersion);\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tappName(): string {\n\t\t\tif (!this.credentialType) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tconst appName = getAppNameFromCredType((this.credentialType as ICredentialType).displayName);\n\n\t\t\treturn (\n\t\t\t\tappName ||\n\t\t\t\tthis.$locale.baseText('credentialEdit.credentialConfig.theServiceYouReConnectingTo')\n\t\t\t);\n\t\t},\n\t\tcredentialTypeName(): string {\n\t\t\treturn (this.credentialType as ICredentialType).name;\n\t\t},\n\t\tcredentialOwnerName(): string {\n\t\t\treturn this.credentialsStore.getCredentialOwnerNameById(`${this.credentialId}`);\n\t\t},\n\t\tdocumentationUrl(): string {\n\t\t\tconst type = this.credentialType as ICredentialType;\n\t\t\tconst activeNode = this.ndvStore.activeNode;\n\t\t\tconst isCommunityNode = activeNode ? isCommunityPackageName(activeNode.type) : false;\n\n\t\t\tconst documentationUrl = type && type.documentationUrl;\n\n\t\t\tif (!documentationUrl) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tlet url: URL;\n\t\t\tif (documentationUrl.startsWith('https://') || documentationUrl.startsWith('http://')) {\n\t\t\t\turl = new URL(documentationUrl);\n\t\t\t\tif (url.hostname !== DOCS_DOMAIN) return documentationUrl;\n\t\t\t} else {\n\t\t\t\t// Don't show documentation link for community nodes if the URL is not an absolute path\n\t\t\t\tif (isCommunityNode) return '';\n\t\t\t\telse url = new URL(`${BUILTIN_CREDENTIALS_DOCS_URL}${documentationUrl}/`);\n\t\t\t}\n\n\t\t\tif (url.hostname === DOCS_DOMAIN) {\n\t\t\t\turl.searchParams.set('utm_source', 'n8n_app');\n\t\t\t\turl.searchParams.set('utm_medium', 'left_nav_menu');\n\t\t\t\turl.searchParams.set('utm_campaign', 'create_new_credentials_modal');\n\t\t\t}\n\n\t\t\treturn url.href;\n\t\t},\n\t\tisGoogleOAuthType(): boolean {\n\t\t\treturn (\n\t\t\t\tthis.credentialTypeName === 'googleOAuth2Api' ||\n\t\t\t\tthis.parentTypes.includes('googleOAuth2Api')\n\t\t\t);\n\t\t},\n\t\toAuthCallbackUrl(): string {\n\t\t\tconst oauthType =\n\t\t\t\tthis.credentialTypeName === 'oAuth2Api' || this.parentTypes.includes('oAuth2Api')\n\t\t\t\t\t? 'oauth2'\n\t\t\t\t\t: 'oauth1';\n\t\t\treturn this.rootStore.oauthCallbackUrls[oauthType as keyof {}];\n\t\t},\n\t\tshowOAuthSuccessBanner(): boolean {\n\t\t\treturn (\n\t\t\t\tthis.isOAuthType &&\n\t\t\t\tthis.requiredPropertiesFilled &&\n\t\t\t\tthis.isOAuthConnected &&\n\t\t\t\t!this.authError\n\t\t\t);\n\t\t},\n\t\tisMissingCredentials(): boolean {\n\t\t\treturn this.credentialType === null;\n\t\t},\n\t\tisNewCredential(): boolean {\n\t\t\treturn this.mode === 'new' && !this.credentialId;\n\t\t},\n\t},\n\tmethods: {\n\t\tgetCredentialOptions(type: string): ICredentialsResponse[] {\n\t\t\treturn this.credentialsStore.allUsableCredentialsByType[type];\n\t\t},\n\t\tonDataChange(event: { name: string; value: string | number | boolean | Date | null }): void {\n\t\t\tthis.$emit('change', event);\n\t\t},\n\t\tonDocumentationUrlClick(): void {\n\t\t\tthis.$telemetry.track('User clicked credential modal docs link', {\n\t\t\t\tdocs_link: this.documentationUrl,\n\t\t\t\tcredential_type: this.credentialTypeName,\n\t\t\t\tsource: 'modal',\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t});\n\t\t},\n\t\tonAuthTypeChange(newType: string): void {\n\t\t\tthis.$emit('authTypeChanged', newType);\n\t\t},\n\t},\n\twatch: {\n\t\tshowOAuthSuccessBanner(newValue, oldValue) {\n\t\t\tif (newValue && !oldValue) {\n\t\t\t\tthis.$emit('scrollToTop');\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\t--notice-margin: 0;\n\t> * {\n\t\tmargin-bottom: var(--spacing-l);\n\t}\n}\n.googleReconnectLabel {\n\tmargin-right: var(--spacing-3xs);\n}\n</style>\n","<template>\n\t<span :title=\"convertDate\">\n\t\t{{ format }}\n\t</span>\n</template>\n\n<script lang=\"ts\">\nimport type { LocaleFunc } from 'timeago.js';\nimport { format, register } from 'timeago.js';\nimport { convertToHumanReadableDate } from '@/utils';\nimport { defineComponent } from 'vue';\nimport { mapStores } from 'pinia';\nimport { useRootStore } from '@/stores/n8nRoot.store';\n\nexport default defineComponent({\n\tname: 'TimeAgo',\n\tprops: {\n\t\tdate: {\n\t\t\ttype: String,\n\t\t},\n\t\tcapitalize: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tbeforeMount() {\n\t\tregister(this.defaultLocale, this.localeFunc as LocaleFunc);\n\t},\n\tmethods: {\n\t\tlocaleFunc(num: number, index: number, totalSec: number): [string, string] {\n\t\t\t// number: the timeago / timein number;\n\t\t\t// index: the index of array below;\n\t\t\t// totalSec: total seconds between date to be formatted and today's date;\n\t\t\treturn [\n\t\t\t\t[this.$locale.baseText('timeAgo.justNow'), this.$locale.baseText('timeAgo.rightNow')],\n\t\t\t\t[this.$locale.baseText('timeAgo.justNow'), this.$locale.baseText('timeAgo.rightNow')], // ['%s seconds ago', 'in %s seconds'],\n\t\t\t\t[\n\t\t\t\t\tthis.$locale.baseText('timeAgo.oneMinuteAgo'),\n\t\t\t\t\tthis.$locale.baseText('timeAgo.inOneMinute'),\n\t\t\t\t],\n\t\t\t\t[this.$locale.baseText('timeAgo.minutesAgo'), this.$locale.baseText('timeAgo.inMinutes')],\n\t\t\t\t[this.$locale.baseText('timeAgo.oneHourAgo'), this.$locale.baseText('timeAgo.inOneHour')],\n\t\t\t\t[this.$locale.baseText('timeAgo.hoursAgo'), this.$locale.baseText('timeAgo.inHours')],\n\t\t\t\t[this.$locale.baseText('timeAgo.oneDayAgo'), this.$locale.baseText('timeAgo.inOneDay')],\n\t\t\t\t[this.$locale.baseText('timeAgo.daysAgo'), this.$locale.baseText('timeAgo.inDays')],\n\t\t\t\t[this.$locale.baseText('timeAgo.oneWeekAgo'), this.$locale.baseText('timeAgo.inOneWeek')],\n\t\t\t\t[this.$locale.baseText('timeAgo.weeksAgo'), this.$locale.baseText('timeAgo.inWeeks')],\n\t\t\t\t[this.$locale.baseText('timeAgo.oneMonthAgo'), this.$locale.baseText('timeAgo.inOneMonth')],\n\t\t\t\t[this.$locale.baseText('timeAgo.monthsAgo'), this.$locale.baseText('timeAgo.inMonths')],\n\t\t\t\t[this.$locale.baseText('timeAgo.oneYearAgo'), this.$locale.baseText('timeAgo.inOneYear')],\n\t\t\t\t[this.$locale.baseText('timeAgo.yearsAgo'), this.$locale.baseText('timeAgo.inYears')],\n\t\t\t][index] as [string, string];\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useRootStore),\n\t\tdefaultLocale(): string {\n\t\t\treturn this.rootStore.defaultLocale;\n\t\t},\n\t\tformat(): string {\n\t\t\tconst text = format(this.date, this.defaultLocale);\n\n\t\t\tif (!this.capitalize) {\n\t\t\t\treturn text.toLowerCase();\n\t\t\t}\n\n\t\t\treturn text;\n\t\t},\n\t\tconvertDate(): string {\n\t\t\tconst date = new Date(this.date);\n\t\t\tconst epoch = date.getTime();\n\t\t\treturn convertToHumanReadableDate(epoch);\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<div :class=\"$style.container\">\n\t\t<el-row>\n\t\t\t<el-col :span=\"8\" :class=\"$style.accessLabel\">\n\t\t\t\t<n8n-text :compact=\"true\" :bold=\"true\">\n\t\t\t\t\t{{ $locale.baseText('credentialEdit.credentialInfo.allowUseBy') }}\n\t\t\t\t</n8n-text>\n\t\t\t</el-col>\n\t\t\t<el-col :span=\"16\">\n\t\t\t\t<div v-for=\"node in nodesWithAccess\" :key=\"node.name\" :class=\"$style.valueLabel\">\n\t\t\t\t\t<el-checkbox\n\t\t\t\t\t\tv-if=\"credentialPermissions.updateNodeAccess\"\n\t\t\t\t\t\t:label=\"\n\t\t\t\t\t\t\t$locale.headerText({\n\t\t\t\t\t\t\t\tkey: `headers.${shortNodeType(node)}.displayName`,\n\t\t\t\t\t\t\t\tfallback: node.displayName,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\"\n\t\t\t\t\t\t:value=\"!!nodeAccess[node.name]\"\n\t\t\t\t\t\t@change=\"(val) => onNodeAccessChange(node.name, val)\"\n\t\t\t\t\t/>\n\t\t\t\t\t<n8n-text v-else>\n\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t$locale.headerText({\n\t\t\t\t\t\t\t\tkey: `headers.${shortNodeType(node)}.displayName`,\n\t\t\t\t\t\t\t\tfallback: node.displayName,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}\n\t\t\t\t\t</n8n-text>\n\t\t\t\t</div>\n\t\t\t</el-col>\n\t\t</el-row>\n\t\t<el-row v-if=\"currentCredential\">\n\t\t\t<el-col :span=\"8\" :class=\"$style.label\">\n\t\t\t\t<n8n-text :compact=\"true\" :bold=\"true\">\n\t\t\t\t\t{{ $locale.baseText('credentialEdit.credentialInfo.created') }}\n\t\t\t\t</n8n-text>\n\t\t\t</el-col>\n\t\t\t<el-col :span=\"16\" :class=\"$style.valueLabel\">\n\t\t\t\t<n8n-text :compact=\"true\"\n\t\t\t\t\t><TimeAgo :date=\"currentCredential.createdAt\" :capitalize=\"true\"\n\t\t\t\t/></n8n-text>\n\t\t\t</el-col>\n\t\t</el-row>\n\t\t<el-row v-if=\"currentCredential\">\n\t\t\t<el-col :span=\"8\" :class=\"$style.label\">\n\t\t\t\t<n8n-text :compact=\"true\" :bold=\"true\">\n\t\t\t\t\t{{ $locale.baseText('credentialEdit.credentialInfo.lastModified') }}\n\t\t\t\t</n8n-text>\n\t\t\t</el-col>\n\t\t\t<el-col :span=\"16\" :class=\"$style.valueLabel\">\n\t\t\t\t<n8n-text :compact=\"true\"\n\t\t\t\t\t><TimeAgo :date=\"currentCredential.updatedAt\" :capitalize=\"true\"\n\t\t\t\t/></n8n-text>\n\t\t\t</el-col>\n\t\t</el-row>\n\t\t<el-row v-if=\"currentCredential\">\n\t\t\t<el-col :span=\"8\" :class=\"$style.label\">\n\t\t\t\t<n8n-text :compact=\"true\" :bold=\"true\">\n\t\t\t\t\t{{ $locale.baseText('credentialEdit.credentialInfo.id') }}\n\t\t\t\t</n8n-text>\n\t\t\t</el-col>\n\t\t\t<el-col :span=\"16\" :class=\"$style.valueLabel\">\n\t\t\t\t<n8n-text :compact=\"true\">{{ currentCredential.id }}</n8n-text>\n\t\t\t</el-col>\n\t\t</el-row>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nimport TimeAgo from '../TimeAgo.vue';\nimport type { INodeTypeDescription } from 'n8n-workflow';\n\nexport default defineComponent({\n\tname: 'CredentialInfo',\n\tprops: ['nodesWithAccess', 'nodeAccess', 'currentCredential', 'credentialPermissions'],\n\tcomponents: {\n\t\tTimeAgo,\n\t},\n\tmethods: {\n\t\tonNodeAccessChange(name: string, value: string) {\n\t\t\tthis.$emit('accessChange', {\n\t\t\t\tname,\n\t\t\t\tvalue,\n\t\t\t});\n\t\t},\n\t\tshortNodeType(nodeType: INodeTypeDescription) {\n\t\t\treturn this.$locale.shortNodeType(nodeType.name);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\t> * {\n\t\tmargin-bottom: var(--spacing-l);\n\t}\n}\n\n.label {\n\tfont-weight: var(--font-weight-bold);\n\tmax-width: 230px;\n}\n\n.accessLabel {\n\tcomposes: label;\n\tmargin-top: var(--spacing-5xs);\n}\n\n.valueLabel {\n\tfont-weight: var(--font-weight-regular);\n}\n</style>\n","<template>\n\t<div :class=\"$style.container\">\n\t\t<div v-if=\"!isSharingEnabled\">\n\t\t\t<n8n-action-box\n\t\t\t\t:heading=\"\n\t\t\t\t\t$locale.baseText(\n\t\t\t\t\t\tuiStore.contextBasedTranslationKeys.credentials.sharing.unavailable.title,\n\t\t\t\t\t)\n\t\t\t\t\"\n\t\t\t\t:description=\"\n\t\t\t\t\t$locale.baseText(\n\t\t\t\t\t\tuiStore.contextBasedTranslationKeys.credentials.sharing.unavailable.description,\n\t\t\t\t\t)\n\t\t\t\t\"\n\t\t\t\t:buttonText=\"\n\t\t\t\t\t$locale.baseText(\n\t\t\t\t\t\tuiStore.contextBasedTranslationKeys.credentials.sharing.unavailable.button,\n\t\t\t\t\t)\n\t\t\t\t\"\n\t\t\t\t@click=\"goToUpgrade\"\n\t\t\t/>\n\t\t</div>\n\t\t<div v-else-if=\"isDefaultUser\">\n\t\t\t<n8n-action-box\n\t\t\t\t:heading=\"$locale.baseText('credentialEdit.credentialSharing.isDefaultUser.title')\"\n\t\t\t\t:description=\"\n\t\t\t\t\t$locale.baseText('credentialEdit.credentialSharing.isDefaultUser.description')\n\t\t\t\t\"\n\t\t\t\t:buttonText=\"$locale.baseText('credentialEdit.credentialSharing.isDefaultUser.button')\"\n\t\t\t\t@click=\"goToUsersSettings\"\n\t\t\t/>\n\t\t</div>\n\t\t<div v-else>\n\t\t\t<n8n-info-tip :bold=\"false\" class=\"mb-s\">\n\t\t\t\t<template v-if=\"credentialPermissions.isOwner\">\n\t\t\t\t\t{{ $locale.baseText('credentialEdit.credentialSharing.info.owner') }}\n\t\t\t\t</template>\n\t\t\t\t<template v-else>\n\t\t\t\t\t{{\n\t\t\t\t\t\t$locale.baseText('credentialEdit.credentialSharing.info.sharee', {\n\t\t\t\t\t\t\tinterpolate: { credentialOwnerName },\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t</template>\n\t\t\t</n8n-info-tip>\n\t\t\t<n8n-info-tip\n\t\t\t\tv-if=\"\n\t\t\t\t\t!credentialPermissions.isOwner &&\n\t\t\t\t\t!credentialPermissions.isSharee &&\n\t\t\t\t\tcredentialPermissions.isInstanceOwner\n\t\t\t\t\"\n\t\t\t\tclass=\"mb-s\"\n\t\t\t\t:bold=\"false\"\n\t\t\t>\n\t\t\t\t{{ $locale.baseText('credentialEdit.credentialSharing.info.instanceOwner') }}\n\t\t\t</n8n-info-tip>\n\t\t\t<n8n-user-select\n\t\t\t\tv-if=\"credentialPermissions.updateSharing\"\n\t\t\t\tclass=\"mb-s\"\n\t\t\t\tsize=\"large\"\n\t\t\t\t:users=\"usersList\"\n\t\t\t\t:currentUserId=\"usersStore.currentUser.id\"\n\t\t\t\t:placeholder=\"$locale.baseText('credentialEdit.credentialSharing.select.placeholder')\"\n\t\t\t\tdata-test-id=\"credential-sharing-modal-users-select\"\n\t\t\t\t@input=\"onAddSharee\"\n\t\t\t>\n\t\t\t\t<template #prefix>\n\t\t\t\t\t<n8n-icon icon=\"search\" />\n\t\t\t\t</template>\n\t\t\t</n8n-user-select>\n\t\t\t<n8n-users-list\n\t\t\t\t:actions=\"usersListActions\"\n\t\t\t\t:users=\"sharedWithList\"\n\t\t\t\t:currentUserId=\"usersStore.currentUser.id\"\n\t\t\t\t:readonly=\"!credentialPermissions.updateSharing\"\n\t\t\t\t@delete=\"onRemoveSharee\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport type { IUser, IUserListAction } from '@/Interface';\nimport mixins from 'vue-typed-mixins';\nimport { showMessage } from '@/mixins/showMessage';\nimport { mapStores } from 'pinia';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useCredentialsStore } from '@/stores/credentials.store';\nimport { useUsageStore } from '@/stores/usage.store';\nimport { EnterpriseEditionFeature, VIEWS } from '@/constants';\n\nexport default mixins(showMessage).extend({\n\tname: 'CredentialSharing',\n\tprops: [\n\t\t'credential',\n\t\t'credentialId',\n\t\t'credentialData',\n\t\t'sharedWith',\n\t\t'credentialPermissions',\n\t\t'modalBus',\n\t],\n\tcomputed: {\n\t\t...mapStores(useCredentialsStore, useUsersStore, useUsageStore, useUIStore, useSettingsStore),\n\t\tusersListActions(): IUserListAction[] {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('credentialEdit.credentialSharing.list.delete'),\n\t\t\t\t\tvalue: 'delete',\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t\tisDefaultUser(): boolean {\n\t\t\treturn this.usersStore.isDefaultUser;\n\t\t},\n\t\tisSharingEnabled(): boolean {\n\t\t\treturn this.settingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.Sharing);\n\t\t},\n\t\tusersList(): IUser[] {\n\t\t\treturn this.usersStore.allUsers.filter((user: IUser) => {\n\t\t\t\tconst isCurrentUser = user.id === this.usersStore.currentUser?.id;\n\t\t\t\tconst isAlreadySharedWithUser = (this.credentialData.sharedWith || []).find(\n\t\t\t\t\t(sharee: IUser) => sharee.id === user.id,\n\t\t\t\t);\n\n\t\t\t\treturn !isCurrentUser && !isAlreadySharedWithUser;\n\t\t\t});\n\t\t},\n\t\tsharedWithList(): IUser[] {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\t...(this.credential ? this.credential.ownedBy : this.usersStore.currentUser),\n\t\t\t\t\tisOwner: true,\n\t\t\t\t},\n\t\t\t].concat(this.credentialData.sharedWith || []);\n\t\t},\n\t\tcredentialOwnerName(): string {\n\t\t\treturn this.credentialsStore.getCredentialOwnerNameById(`${this.credentialId}`);\n\t\t},\n\t},\n\tmethods: {\n\t\tasync onAddSharee(userId: string) {\n\t\t\tconst sharee = { ...this.usersStore.getUserById(userId), isOwner: false };\n\t\t\tthis.$emit('change', (this.credentialData.sharedWith || []).concat(sharee));\n\t\t},\n\t\tasync onRemoveSharee(userId: string) {\n\t\t\tconst user = this.usersStore.getUserById(userId);\n\n\t\t\tif (user) {\n\t\t\t\tconst confirm = await this.confirmMessage(\n\t\t\t\t\tthis.$locale.baseText('credentialEdit.credentialSharing.list.delete.confirm.message', {\n\t\t\t\t\t\tinterpolate: { name: user.fullName || '' },\n\t\t\t\t\t}),\n\t\t\t\t\tthis.$locale.baseText('credentialEdit.credentialSharing.list.delete.confirm.title'),\n\t\t\t\t\tnull,\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialSharing.list.delete.confirm.confirmButtonText',\n\t\t\t\t\t),\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialSharing.list.delete.confirm.cancelButtonText',\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\tif (confirm) {\n\t\t\t\t\tthis.$emit(\n\t\t\t\t\t\t'change',\n\t\t\t\t\t\tthis.credentialData.sharedWith.filter((sharee: IUser) => {\n\t\t\t\t\t\t\treturn sharee.id !== user.id;\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync loadUsers() {\n\t\t\tawait this.usersStore.fetchUsers();\n\t\t},\n\t\tgoToUsersSettings() {\n\t\t\tvoid this.$router.push({ name: VIEWS.USERS_SETTINGS });\n\t\t\tthis.modalBus.emit('close');\n\t\t},\n\t\tgoToUpgrade() {\n\t\t\tthis.uiStore.goToUpgrade('credential_sharing', 'upgrade-credentials-sharing');\n\t\t},\n\t},\n\tmounted() {\n\t\tvoid this.loadUsers();\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\twidth: 100%;\n\t> * {\n\t\tmargin-bottom: var(--spacing-l);\n\t}\n}\n</style>\n","<template>\n\t<span :class=\"$style.container\" data-test-id=\"save-button\">\n\t\t<span :class=\"$style.saved\" v-if=\"saved\">{{ $locale.baseText('saveButton.saved') }}</span>\n\t\t<n8n-button\n\t\t\tv-else\n\t\t\t:label=\"saveButtonLabel\"\n\t\t\t:loading=\"isSaving\"\n\t\t\t:disabled=\"disabled\"\n\t\t\t:class=\"$style.button\"\n\t\t\t:type=\"type\"\n\t\t\t@click=\"$emit('click')\"\n\t\t/>\n\t</span>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tname: 'SaveButton',\n\tprops: {\n\t\tsaved: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tisSaving: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tsaveLabel: {\n\t\t\ttype: String,\n\t\t},\n\t\tsavingLabel: {\n\t\t\ttype: String,\n\t\t},\n\t\tsavedLabel: {\n\t\t\ttype: String,\n\t\t},\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefault: 'primary',\n\t\t},\n\t},\n\tcomputed: {\n\t\tsaveButtonLabel() {\n\t\t\treturn this.isSaving\n\t\t\t\t? this.$locale.baseText('saveButton.saving')\n\t\t\t\t: this.$locale.baseText('saveButton.save');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 30px;\n}\n\n.button {\n\theight: 30px;\n}\n\n.saved {\n\tcolor: $custom-font-very-light;\n\tfont-size: 12px;\n\tfont-weight: 600;\n\tline-height: 12px;\n\ttext-align: center;\n\tpadding: var(--spacing-2xs) var(--spacing-2xs);\n\tmin-width: 53px;\n}\n</style>\n","<template>\n\t<div class=\"ph-no-capture\" :class=\"$style.container\">\n\t\t<span v-if=\"readonly\" :class=\"$style.headline\">\n\t\t\t{{ name }}\n\t\t</span>\n\t\t<div\n\t\t\tv-else\n\t\t\t:class=\"[$style.headline, $style['headline-editable']]\"\n\t\t\t@keydown.stop\n\t\t\t@click=\"enableNameEdit\"\n\t\t\tv-click-outside=\"disableNameEdit\"\n\t\t>\n\t\t\t<div v-if=\"!isNameEdit\">\n\t\t\t\t<span>{{ name }}</span>\n\t\t\t\t<i><font-awesome-icon icon=\"pen\" /></i>\n\t\t\t</div>\n\t\t\t<div v-else :class=\"$style.nameInput\">\n\t\t\t\t<n8n-input\n\t\t\t\t\t:value=\"name\"\n\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\tref=\"nameInput\"\n\t\t\t\t\t@input=\"onNameEdit\"\n\t\t\t\t\t@change=\"disableNameEdit\"\n\t\t\t\t\t:maxlength=\"64\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t\t<div :class=\"$style.subtitle\" v-if=\"!isNameEdit && subtitle\">\n\t\t\t{{ subtitle }}\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\nimport { showMessage } from '@/mixins/showMessage';\n\nexport default mixins(showMessage).extend({\n\tname: 'InlineNameEdit',\n\tprops: {\n\t\tname: {\n\t\t\ttype: String,\n\t\t},\n\t\tsubtitle: {\n\t\t\ttype: String,\n\t\t},\n\t\ttype: {\n\t\t\ttype: String,\n\t\t},\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisNameEdit: false,\n\t\t};\n\t},\n\tmethods: {\n\t\tonNameEdit(value: string) {\n\t\t\tthis.$emit('input', value);\n\t\t},\n\t\tenableNameEdit() {\n\t\t\tthis.isNameEdit = true;\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst inputRef = this.$refs.nameInput as HTMLInputElement | undefined;\n\t\t\t\tif (inputRef) {\n\t\t\t\t\tinputRef.focus();\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t},\n\t\tdisableNameEdit() {\n\t\t\tif (!this.name) {\n\t\t\t\tthis.$emit('input', `Untitled ${this.type}`);\n\n\t\t\t\tthis.$showToast({\n\t\t\t\t\ttitle: 'Error',\n\t\t\t\t\tmessage: `${this.type} name cannot be empty`,\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.isNameEdit = false;\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.container {\n\tdisplay: flex;\n\talign-items: flex-start;\n\tjustify-content: center;\n\tflex-direction: column;\n\tmin-height: 36px;\n}\n\n.headline {\n\tfont-size: var(--font-size-m);\n\tline-height: 1.4;\n\tmargin-bottom: var(--spacing-5xs);\n\tdisplay: inline-block;\n\tpadding: 0 var(--spacing-4xs);\n\tborder-radius: var(--border-radius-base);\n\tposition: relative;\n\tmin-height: 22px;\n\tmax-height: 22px;\n\tfont-weight: 400;\n\n\ti {\n\t\tdisplay: var(--headline-icon-display, none);\n\t\tfont-size: 0.75em;\n\t\tmargin-left: 8px;\n\t\tcolor: var(--color-text-base);\n\t}\n}\n\n.headline-editable {\n\tcursor: pointer;\n\n\t&:hover {\n\t\tbackground-color: var(--color-background-base);\n\t\t--headline-icon-display: inline-flex;\n\t}\n}\n\n.nameInput {\n\tz-index: 1;\n\tposition: absolute;\n\tmargin-top: 1px;\n\ttop: 50%;\n\tleft: 0;\n\twidth: 400px;\n\ttransform: translateY(-50%);\n}\n\n.subtitle {\n\tfont-size: var(--font-size-2xs);\n\tcolor: var(--color-text-light);\n\tmargin-left: 4px;\n\tfont-weight: 400;\n}\n</style>\n","<template>\n\t<div v-if=\"featureInfo\" :class=\"[$style.container]\">\n\t\t<div v-if=\"showTitle\" class=\"mb-2xl\">\n\t\t\t<n8n-heading size=\"2xlarge\">\n\t\t\t\t{{ $locale.baseText(featureInfo.featureName) }}\n\t\t\t</n8n-heading>\n\t\t</div>\n\t\t<div v-if=\"featureInfo.infoText\" class=\"mb-l\">\n\t\t\t<n8n-info-tip theme=\"info\" type=\"note\">\n\t\t\t\t<template>\n\t\t\t\t\t<span v-html=\"$locale.baseText(featureInfo.infoText)\"></span>\n\t\t\t\t</template>\n\t\t\t</n8n-info-tip>\n\t\t</div>\n\t\t<div :class=\"$style.actionBoxContainer\">\n\t\t\t<n8n-action-box\n\t\t\t\t:description=\"$locale.baseText(featureInfo.actionBoxDescription)\"\n\t\t\t\t:buttonText=\"\n\t\t\t\t\t$locale.baseText(featureInfo.actionBoxButtonLabel || 'fakeDoor.actionBox.button.label')\n\t\t\t\t\"\n\t\t\t\t@click=\"openLinkPage\"\n\t\t\t>\n\t\t\t\t<template #heading>\n\t\t\t\t\t<span v-html=\"$locale.baseText(featureInfo.actionBoxTitle)\" />\n\t\t\t\t</template>\n\t\t\t</n8n-action-box>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport type { IFakeDoor } from '@/Interface';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { mapStores } from 'pinia';\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tname: 'FeatureComingSoon',\n\tprops: {\n\t\tfeatureId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tshowTitle: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useRootStore, useSettingsStore, useUIStore, useUsersStore),\n\t\tuserId(): string {\n\t\t\treturn this.usersStore.currentUserId || '';\n\t\t},\n\t\tinstanceId(): string {\n\t\t\treturn this.rootStore.instanceId;\n\t\t},\n\t\tfeatureInfo(): IFakeDoor | undefined {\n\t\t\treturn this.uiStore.getFakeDoorById(this.featureId);\n\t\t},\n\t},\n\tmethods: {\n\t\topenLinkPage() {\n\t\t\tif (this.featureInfo) {\n\t\t\t\twindow.open(\n\t\t\t\t\t`${this.featureInfo.linkURL}&u=${this.instanceId}#${this.userId}&v=${this.rootStore.versionCli}`,\n\t\t\t\t\t'_blank',\n\t\t\t\t);\n\t\t\t\tthis.$telemetry.track('user clicked feature waiting list button', {\n\t\t\t\t\tfeature: this.featureId,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.actionBoxContainer {\n\ttext-align: center;\n}\n</style>\n","<template>\n\t<Modal\n\t\t:name=\"modalName\"\n\t\t:customClass=\"$style.credentialModal\"\n\t\t:eventBus=\"modalBus\"\n\t\t:loading=\"loading\"\n\t\t:beforeClose=\"beforeClose\"\n\t\twidth=\"70%\"\n\t\theight=\"80%\"\n\t>\n\t\t<template #header>\n\t\t\t<div :class=\"$style.header\">\n\t\t\t\t<div :class=\"$style.credInfo\">\n\t\t\t\t\t<div :class=\"$style.credIcon\">\n\t\t\t\t\t\t<CredentialIcon :credentialTypeName=\"defaultCredentialTypeName\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<InlineNameEdit\n\t\t\t\t\t\t:name=\"credentialName\"\n\t\t\t\t\t\t:subtitle=\"credentialType ? credentialType.displayName : ''\"\n\t\t\t\t\t\t:readonly=\"!credentialPermissions.updateName || !credentialType\"\n\t\t\t\t\t\ttype=\"Credential\"\n\t\t\t\t\t\t@input=\"onNameEdit\"\n\t\t\t\t\t\tdata-test-id=\"credential-name\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"$style.credActions\">\n\t\t\t\t\t<n8n-icon-button\n\t\t\t\t\t\tv-if=\"currentCredential && credentialPermissions.delete\"\n\t\t\t\t\t\t:title=\"$locale.baseText('credentialEdit.credentialEdit.delete')\"\n\t\t\t\t\t\ticon=\"trash\"\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t:disabled=\"isSaving\"\n\t\t\t\t\t\t:loading=\"isDeleting\"\n\t\t\t\t\t\t@click=\"deleteCredential\"\n\t\t\t\t\t\tdata-test-id=\"credential-delete-button\"\n\t\t\t\t\t/>\n\t\t\t\t\t<SaveButton\n\t\t\t\t\t\tv-if=\"(hasUnsavedChanges || credentialId) && credentialPermissions.save\"\n\t\t\t\t\t\t:saved=\"!hasUnsavedChanges && !isTesting\"\n\t\t\t\t\t\t:isSaving=\"isSaving || isTesting\"\n\t\t\t\t\t\t:savingLabel=\"\n\t\t\t\t\t\t\tisTesting\n\t\t\t\t\t\t\t\t? $locale.baseText('credentialEdit.credentialEdit.testing')\n\t\t\t\t\t\t\t\t: $locale.baseText('credentialEdit.credentialEdit.saving')\n\t\t\t\t\t\t\"\n\t\t\t\t\t\t@click=\"saveCredential\"\n\t\t\t\t\t\tdata-test-id=\"credential-save-button\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t</template>\n\t\t<template #content>\n\t\t\t<div :class=\"$style.container\" data-test-id=\"credential-edit-dialog\">\n\t\t\t\t<div :class=\"$style.sidebar\">\n\t\t\t\t\t<n8n-menu mode=\"tabs\" :items=\"sidebarItems\" @select=\"onTabSelect\"></n8n-menu>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"activeTab === 'connection'\" :class=\"$style.mainContent\" ref=\"content\">\n\t\t\t\t\t<CredentialConfig\n\t\t\t\t\t\t:credentialType=\"credentialType\"\n\t\t\t\t\t\t:credentialProperties=\"credentialProperties\"\n\t\t\t\t\t\t:credentialData=\"credentialData\"\n\t\t\t\t\t\t:credentialId=\"credentialId\"\n\t\t\t\t\t\t:showValidationWarning=\"showValidationWarning\"\n\t\t\t\t\t\t:authError=\"authError\"\n\t\t\t\t\t\t:testedSuccessfully=\"testedSuccessfully\"\n\t\t\t\t\t\t:isOAuthType=\"isOAuthType\"\n\t\t\t\t\t\t:isOAuthConnected=\"isOAuthConnected\"\n\t\t\t\t\t\t:isRetesting=\"isRetesting\"\n\t\t\t\t\t\t:parentTypes=\"parentTypes\"\n\t\t\t\t\t\t:requiredPropertiesFilled=\"requiredPropertiesFilled\"\n\t\t\t\t\t\t:credentialPermissions=\"credentialPermissions\"\n\t\t\t\t\t\t:mode=\"mode\"\n\t\t\t\t\t\t:selectedCredential=\"selectedCredential\"\n\t\t\t\t\t\t:showAuthTypeSelector=\"requiredCredentials\"\n\t\t\t\t\t\t@change=\"onDataChange\"\n\t\t\t\t\t\t@oauth=\"oAuthCredentialAuthorize\"\n\t\t\t\t\t\t@retest=\"retestCredential\"\n\t\t\t\t\t\t@scrollToTop=\"scrollToTop\"\n\t\t\t\t\t\t@authTypeChanged=\"onAuthTypeChanged\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div v-else-if=\"activeTab === 'sharing' && credentialType\" :class=\"$style.mainContent\">\n\t\t\t\t\t<CredentialSharing\n\t\t\t\t\t\t:credential=\"currentCredential\"\n\t\t\t\t\t\t:credentialData=\"credentialData\"\n\t\t\t\t\t\t:credentialId=\"credentialId\"\n\t\t\t\t\t\t:credentialPermissions=\"credentialPermissions\"\n\t\t\t\t\t\t:modalBus=\"modalBus\"\n\t\t\t\t\t\t@change=\"onChangeSharedWith\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div v-else-if=\"activeTab === 'details' && credentialType\" :class=\"$style.mainContent\">\n\t\t\t\t\t<CredentialInfo\n\t\t\t\t\t\t:nodeAccess=\"nodeAccess\"\n\t\t\t\t\t\t:nodesWithAccess=\"nodesWithAccess\"\n\t\t\t\t\t\t:currentCredential=\"currentCredential\"\n\t\t\t\t\t\t:credentialPermissions=\"credentialPermissions\"\n\t\t\t\t\t\t@accessChange=\"onNodeAccessChange\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div v-else-if=\"activeTab.startsWith('coming-soon')\" :class=\"$style.mainContent\">\n\t\t\t\t\t<FeatureComingSoon :featureId=\"activeTab.split('/')[1]\"></FeatureComingSoon>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\n\nimport type { ICredentialsResponse, IUser } from '@/Interface';\n\nimport type {\n\tCredentialInformation,\n\tICredentialDataDecryptedObject,\n\tICredentialNodeAccess,\n\tICredentialsDecrypted,\n\tICredentialType,\n\tINode,\n\tINodeCredentialDescription,\n\tINodeParameters,\n\tINodeProperties,\n\tINodeTypeDescription,\n\tITelemetryTrackProperties,\n} from 'n8n-workflow';\nimport { NodeHelpers } from 'n8n-workflow';\nimport CredentialIcon from '../CredentialIcon.vue';\n\nimport mixins from 'vue-typed-mixins';\nimport { nodeHelpers } from '@/mixins/nodeHelpers';\nimport { showMessage } from '@/mixins/showMessage';\n\nimport CredentialConfig from './CredentialConfig.vue';\nimport CredentialInfo from './CredentialInfo.vue';\nimport CredentialSharing from './CredentialSharing.ee.vue';\nimport SaveButton from '../SaveButton.vue';\nimport Modal from '../Modal.vue';\nimport InlineNameEdit from '../InlineNameEdit.vue';\nimport { CREDENTIAL_EDIT_MODAL_KEY, EnterpriseEditionFeature } from '@/constants';\nimport type { IDataObject } from 'n8n-workflow';\nimport FeatureComingSoon from '../FeatureComingSoon.vue';\nimport type { IPermissions } from '@/permissions';\nimport { getCredentialPermissions } from '@/permissions';\nimport type { IMenuItem } from 'n8n-design-system';\nimport { createEventBus } from 'n8n-design-system';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useCredentialsStore } from '@/stores/credentials.store';\nimport {\n\tisValidCredentialResponse,\n\tgetNodeAuthOptions,\n\tgetNodeCredentialForSelectedAuthType,\n\tupdateNodeAuthType,\n\tisCredentialModalState,\n} from '@/utils';\n\ninterface NodeAccessMap {\n\t[nodeType: string]: ICredentialNodeAccess | null;\n}\n\nexport default mixins(showMessage, nodeHelpers).extend({\n\tname: 'CredentialEdit',\n\tcomponents: {\n\t\tCredentialSharing,\n\t\tCredentialConfig,\n\t\tCredentialIcon,\n\t\tCredentialInfo,\n\t\tInlineNameEdit,\n\t\tModal,\n\t\tSaveButton,\n\t\tFeatureComingSoon,\n\t},\n\tprops: {\n\t\tmodalName: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tactiveId: {\n\t\t\ttype: [String, Number],\n\t\t\trequired: false,\n\t\t},\n\t\tmode: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tactiveTab: 'connection',\n\t\t\tauthError: '',\n\t\t\tcredentialId: '',\n\t\t\tcredentialName: '',\n\t\t\tcredentialData: {} as ICredentialDataDecryptedObject,\n\t\t\tmodalBus: createEventBus(),\n\t\t\tnodeAccess: {} as NodeAccessMap,\n\t\t\tisDeleting: false,\n\t\t\tisSaving: false,\n\t\t\tisTesting: false,\n\t\t\thasUnsavedChanges: false,\n\t\t\tloading: true,\n\t\t\tshowValidationWarning: false,\n\t\t\ttestedSuccessfully: false,\n\t\t\tisRetesting: false,\n\t\t\tEnterpriseEditionFeature,\n\t\t\tselectedCredential: '',\n\t\t\trequiredCredentials: false, // Are credentials required or optional for the node\n\t\t\thasUserSpecifiedName: false,\n\t\t};\n\t},\n\tasync mounted() {\n\t\tthis.requiredCredentials =\n\t\t\tisCredentialModalState(this.uiStore.modals[CREDENTIAL_EDIT_MODAL_KEY]) &&\n\t\t\tthis.uiStore.modals[CREDENTIAL_EDIT_MODAL_KEY].showAuthSelector === true;\n\n\t\tthis.setupNodeAccess();\n\n\t\tif (this.mode === 'new' && this.credentialTypeName) {\n\t\t\tthis.credentialName = await this.credentialsStore.getNewCredentialName({\n\t\t\t\tcredentialTypeName: this.defaultCredentialTypeName,\n\t\t\t});\n\n\t\t\tif (this.currentUser) {\n\t\t\t\tVue.set(this.credentialData, 'ownedBy', {\n\t\t\t\t\tid: this.currentUser.id,\n\t\t\t\t\tfirstName: this.currentUser.firstName,\n\t\t\t\t\tlastName: this.currentUser.lastName,\n\t\t\t\t\temail: this.currentUser.email,\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tawait this.loadCurrentCredential();\n\t\t}\n\n\t\tif (this.credentialType) {\n\t\t\tfor (const property of this.credentialType.properties) {\n\t\t\t\tif (\n\t\t\t\t\t!this.credentialData.hasOwnProperty(property.name) &&\n\t\t\t\t\t!this.credentialType.__overwrittenProperties?.includes(property.name)\n\t\t\t\t) {\n\t\t\t\t\tVue.set(this.credentialData, property.name, property.default as CredentialInformation);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tawait this.$externalHooks().run('credentialsEdit.credentialModalOpened', {\n\t\t\tcredentialType: this.credentialTypeName,\n\t\t\tisEditingCredential: this.mode === 'edit',\n\t\t\tactiveNode: this.ndvStore.activeNode,\n\t\t});\n\n\t\tsetTimeout(async () => {\n\t\t\tif (this.credentialId) {\n\t\t\t\tif (!this.requiredPropertiesFilled && this.credentialPermissions.isOwner === true) {\n\t\t\t\t\t// sharees can't see properties, so this check would always fail for them\n\t\t\t\t\t// if the credential contains required fields.\n\t\t\t\t\tthis.showValidationWarning = true;\n\t\t\t\t} else {\n\t\t\t\t\tawait this.retestCredential();\n\t\t\t\t}\n\t\t\t}\n\t\t}, 0);\n\n\t\tthis.loading = false;\n\t},\n\tcomputed: {\n\t\t...mapStores(\n\t\t\tuseCredentialsStore,\n\t\t\tuseNDVStore,\n\t\t\tuseSettingsStore,\n\t\t\tuseUIStore,\n\t\t\tuseUsersStore,\n\t\t\tuseWorkflowsStore,\n\t\t),\n\t\tactiveNodeType(): INodeTypeDescription | null {\n\t\t\tconst activeNode = this.ndvStore.activeNode;\n\n\t\t\tif (activeNode) {\n\t\t\t\treturn this.nodeTypesStore.getNodeType(activeNode.type, activeNode.typeVersion);\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tselectedCredentialType(): INodeCredentialDescription | null {\n\t\t\tif (this.mode !== 'new') {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// If there is already selected type, use it\n\t\t\tif (this.selectedCredential !== '') {\n\t\t\t\treturn this.credentialsStore.getCredentialTypeByName(this.selectedCredential);\n\t\t\t} else if (this.requiredCredentials) {\n\t\t\t\t// Otherwise, use credential type that corresponds to the first auth option in the node definition\n\t\t\t\tconst nodeAuthOptions = getNodeAuthOptions(this.activeNodeType);\n\t\t\t\t// But only if there is zero or one auth options available\n\t\t\t\tif (nodeAuthOptions.length > 0 && this.activeNodeType?.credentials) {\n\t\t\t\t\treturn getNodeCredentialForSelectedAuthType(\n\t\t\t\t\t\tthis.activeNodeType,\n\t\t\t\t\t\tnodeAuthOptions[0].value,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.activeNodeType?.credentials ? this.activeNodeType.credentials[0] : null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tcurrentUser(): IUser | null {\n\t\t\treturn this.usersStore.currentUser;\n\t\t},\n\t\tcurrentCredential(): ICredentialsResponse | null {\n\t\t\tif (!this.credentialId) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.credentialsStore.getCredentialById(this.credentialId);\n\t\t},\n\t\tcredentialTypeName(): string | null {\n\t\t\tif (this.mode === 'edit') {\n\t\t\t\tif (this.currentCredential) {\n\t\t\t\t\treturn this.currentCredential.type;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.selectedCredentialType) {\n\t\t\t\treturn this.selectedCredentialType.name;\n\t\t\t}\n\t\t\treturn `${this.activeId}`;\n\t\t},\n\t\tcredentialType(): ICredentialType | null {\n\t\t\tif (!this.credentialTypeName) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst type = this.credentialsStore.getCredentialTypeByName(this.credentialTypeName);\n\n\t\t\tif (!type) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...type,\n\t\t\t\tproperties: this.getCredentialProperties(this.credentialTypeName),\n\t\t\t};\n\t\t},\n\t\tisCredentialTestable(): boolean {\n\t\t\t// Sharees can always test since they can't see the data.\n\t\t\tif (this.credentialPermissions.isOwner === false) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.isOAuthType || !this.requiredPropertiesFilled) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst { ownedBy, sharedWith, ...credentialData } = this.credentialData;\n\t\t\tconst hasExpressions = Object.values(credentialData).reduce(\n\t\t\t\t(accu: boolean, value: CredentialInformation) =>\n\t\t\t\t\taccu || (typeof value === 'string' && value.startsWith('=')),\n\t\t\t\tfalse,\n\t\t\t);\n\t\t\tif (hasExpressions) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst nodesThatCanTest = this.nodesWithAccess.filter((node) => {\n\t\t\t\tif (node.credentials) {\n\t\t\t\t\t// Returns a list of nodes that can test this credentials\n\t\t\t\t\tconst eligibleTesters = node.credentials.filter((credential) => {\n\t\t\t\t\t\treturn credential.name === this.credentialTypeName && credential.testedBy;\n\t\t\t\t\t});\n\t\t\t\t\t// If we have any node that can test, return true.\n\t\t\t\t\treturn !!eligibleTesters.length;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\treturn !!nodesThatCanTest.length || (!!this.credentialType && !!this.credentialType.test);\n\t\t},\n\t\tnodesWithAccess(): INodeTypeDescription[] {\n\t\t\tif (this.credentialTypeName) {\n\t\t\t\treturn this.credentialsStore.getNodesWithAccess(this.credentialTypeName);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\t\tparentTypes(): string[] {\n\t\t\tif (this.credentialTypeName) {\n\t\t\t\treturn this.getParentTypes(this.credentialTypeName);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\t\tisOAuthType(): boolean {\n\t\t\treturn (\n\t\t\t\t!!this.credentialTypeName &&\n\t\t\t\t(((this.credentialTypeName === 'oAuth2Api' || this.parentTypes.includes('oAuth2Api')) &&\n\t\t\t\t\tthis.credentialData.grantType === 'authorizationCode') ||\n\t\t\t\t\tthis.credentialTypeName === 'oAuth1Api' ||\n\t\t\t\t\tthis.parentTypes.includes('oAuth1Api'))\n\t\t\t);\n\t\t},\n\t\tisOAuthConnected(): boolean {\n\t\t\treturn this.isOAuthType && !!this.credentialData.oauthTokenData;\n\t\t},\n\t\tcredentialProperties(): INodeProperties[] {\n\t\t\tif (!this.credentialType) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn this.credentialType.properties.filter((propertyData: INodeProperties) => {\n\t\t\t\tif (!this.displayCredentialParameter(propertyData)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t!this.credentialType!.__overwrittenProperties ||\n\t\t\t\t\t!this.credentialType!.__overwrittenProperties.includes(propertyData.name)\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\t\trequiredPropertiesFilled(): boolean {\n\t\t\tfor (const property of this.credentialProperties) {\n\t\t\t\tif (property.required !== true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (property.type === 'string' && !this.credentialData[property.name]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (property.type === 'number' && typeof this.credentialData[property.name] !== 'number') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t\tcredentialPermissions(): IPermissions {\n\t\t\tif (this.loading) {\n\t\t\t\treturn {};\n\t\t\t}\n\n\t\t\treturn getCredentialPermissions(\n\t\t\t\tthis.currentUser,\n\t\t\t\t(this.credentialId ? this.currentCredential : this.credentialData) as ICredentialsResponse,\n\t\t\t);\n\t\t},\n\t\tsidebarItems(): IMenuItem[] {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: 'connection',\n\t\t\t\t\tlabel: this.$locale.baseText('credentialEdit.credentialEdit.connection'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'sharing',\n\t\t\t\t\tlabel: this.$locale.baseText('credentialEdit.credentialEdit.sharing'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'details',\n\t\t\t\t\tlabel: this.$locale.baseText('credentialEdit.credentialEdit.details'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t\tisSharingAvailable(): boolean {\n\t\t\treturn this.settingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.Sharing);\n\t\t},\n\t\tdefaultCredentialTypeName(): string {\n\t\t\tlet credentialTypeName = this.credentialTypeName;\n\t\t\tif (!credentialTypeName || credentialTypeName === 'null') {\n\t\t\t\tif (this.activeNodeType && this.activeNodeType.credentials) {\n\t\t\t\t\tcredentialTypeName = this.activeNodeType.credentials[0].name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn credentialTypeName || '';\n\t\t},\n\t},\n\tmethods: {\n\t\tasync beforeClose() {\n\t\t\tlet keepEditing = false;\n\n\t\t\tif (this.hasUnsavedChanges) {\n\t\t\t\tconst displayName = this.credentialType ? this.credentialType.displayName : '';\n\t\t\t\tkeepEditing = await this.confirmMessage(\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.beforeClose1.message',\n\t\t\t\t\t\t{ interpolate: { credentialDisplayName: displayName } },\n\t\t\t\t\t),\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.beforeClose1.headline',\n\t\t\t\t\t),\n\t\t\t\t\tnull,\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.beforeClose1.cancelButtonText',\n\t\t\t\t\t),\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.beforeClose1.confirmButtonText',\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else if (this.credentialPermissions.isOwner && this.isOAuthType && !this.isOAuthConnected) {\n\t\t\t\tkeepEditing = await this.confirmMessage(\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.beforeClose2.message',\n\t\t\t\t\t),\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.beforeClose2.headline',\n\t\t\t\t\t),\n\t\t\t\t\tnull,\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.beforeClose2.cancelButtonText',\n\t\t\t\t\t),\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.beforeClose2.confirmButtonText',\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!keepEditing) {\n\t\t\t\treturn true;\n\t\t\t} else if (!this.requiredPropertiesFilled) {\n\t\t\t\tthis.showValidationWarning = true;\n\t\t\t\tthis.scrollToTop();\n\t\t\t} else if (this.isOAuthType) {\n\t\t\t\tthis.scrollToBottom();\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\tdisplayCredentialParameter(parameter: INodeProperties): boolean {\n\t\t\tif (parameter.type === 'hidden') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (parameter.displayOptions === undefined) {\n\t\t\t\t// If it is not defined no need to do a proper check\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn this.displayParameter(this.credentialData as INodeParameters, parameter, '', null);\n\t\t},\n\t\tgetCredentialProperties(name: string): INodeProperties[] {\n\t\t\tconst credentialTypeData = this.credentialsStore.getCredentialTypeByName(name);\n\n\t\t\tif (!credentialTypeData) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tif (credentialTypeData.extends === undefined) {\n\t\t\t\treturn credentialTypeData.properties;\n\t\t\t}\n\n\t\t\tconst combineProperties = [] as INodeProperties[];\n\t\t\tfor (const credentialsTypeName of credentialTypeData.extends) {\n\t\t\t\tconst mergeCredentialProperties = this.getCredentialProperties(credentialsTypeName);\n\t\t\t\tNodeHelpers.mergeNodeProperties(combineProperties, mergeCredentialProperties);\n\t\t\t}\n\n\t\t\t// The properties defined on the parent credentials take precedence\n\t\t\tNodeHelpers.mergeNodeProperties(combineProperties, credentialTypeData.properties);\n\n\t\t\treturn combineProperties;\n\t\t},\n\n\t\tasync loadCurrentCredential() {\n\t\t\tthis.credentialId = this.activeId;\n\n\t\t\ttry {\n\t\t\t\tconst currentCredentials = await this.credentialsStore.getCredentialData({\n\t\t\t\t\tid: this.credentialId,\n\t\t\t\t});\n\n\t\t\t\tif (!currentCredentials) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\tthis.$locale.baseText('credentialEdit.credentialEdit.couldNotFindCredentialWithId') +\n\t\t\t\t\t\t\t':' +\n\t\t\t\t\t\t\tthis.credentialId,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis.credentialData = currentCredentials.data || {};\n\t\t\t\tif (currentCredentials.sharedWith) {\n\t\t\t\t\tVue.set(this.credentialData, 'sharedWith', currentCredentials.sharedWith);\n\t\t\t\t}\n\t\t\t\tif (currentCredentials.ownedBy) {\n\t\t\t\t\tVue.set(this.credentialData, 'ownedBy', currentCredentials.ownedBy);\n\t\t\t\t}\n\n\t\t\t\tthis.credentialName = currentCredentials.name;\n\t\t\t\tcurrentCredentials.nodesAccess.forEach((access: { nodeType: string }) => {\n\t\t\t\t\t// keep node access structure to keep dates when updating\n\t\t\t\t\tthis.nodeAccess[access.nodeType] = access;\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('credentialEdit.credentialEdit.showError.loadCredential.title'),\n\t\t\t\t);\n\t\t\t\tthis.closeDialog();\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\tonTabSelect(tab: string) {\n\t\t\tthis.activeTab = tab;\n\t\t\tconst tabName: string = tab.replaceAll('coming-soon/', '');\n\t\t\tconst credType: string = this.credentialType ? this.credentialType.name : '';\n\t\t\tconst activeNode: INode | null = this.ndvStore.activeNode;\n\n\t\t\tthis.$telemetry.track('User viewed credential tab', {\n\t\t\t\tcredential_type: credType,\n\t\t\t\tnode_type: activeNode ? activeNode.type : null,\n\t\t\t\ttab: tabName,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\tcredential_id: this.credentialId,\n\t\t\t\tsharing_enabled: EnterpriseEditionFeature.Sharing,\n\t\t\t});\n\t\t},\n\t\tonNodeAccessChange({ name, value }: { name: string; value: boolean }) {\n\t\t\tthis.hasUnsavedChanges = true;\n\n\t\t\tif (value) {\n\t\t\t\tthis.nodeAccess = {\n\t\t\t\t\t...this.nodeAccess,\n\t\t\t\t\t[name]: {\n\t\t\t\t\t\tnodeType: name,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tthis.nodeAccess = {\n\t\t\t\t\t...this.nodeAccess,\n\t\t\t\t\t[name]: null,\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\tonChangeSharedWith(sharees: IDataObject[]) {\n\t\t\tVue.set(this.credentialData, 'sharedWith', sharees);\n\t\t\tthis.hasUnsavedChanges = true;\n\t\t},\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tonDataChange({ name, value }: { name: string; value: any }) {\n\t\t\tthis.hasUnsavedChanges = true;\n\n\t\t\tconst { oauthTokenData, ...credData } = this.credentialData;\n\n\t\t\tthis.credentialData = {\n\t\t\t\t...credData,\n\t\t\t\t[name]: value,\n\t\t\t};\n\t\t},\n\t\tcloseDialog() {\n\t\t\tthis.modalBus.emit('close');\n\t\t},\n\n\t\tgetParentTypes(name: string): string[] {\n\t\t\tconst credentialType = this.credentialsStore.getCredentialTypeByName(name);\n\n\t\t\tif (credentialType === undefined || credentialType.extends === undefined) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst types: string[] = [];\n\t\t\tfor (const typeName of credentialType.extends) {\n\t\t\t\ttypes.push(typeName);\n\t\t\t\ttypes.push.apply(types, this.getParentTypes(typeName)); // eslint-disable-line prefer-spread\n\t\t\t}\n\n\t\t\treturn types;\n\t\t},\n\n\t\tonNameEdit(text: string) {\n\t\t\tthis.hasUnsavedChanges = true;\n\t\t\tthis.hasUserSpecifiedName = true;\n\t\t\tthis.credentialName = text;\n\t\t},\n\n\t\tscrollToTop() {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst contentRef = this.$refs.content as Element | undefined;\n\t\t\t\tif (contentRef) {\n\t\t\t\t\tcontentRef.scrollTop = 0;\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t},\n\n\t\tscrollToBottom() {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst contentRef = this.$refs.content as Element | undefined;\n\t\t\t\tif (contentRef) {\n\t\t\t\t\tcontentRef.scrollTop = contentRef.scrollHeight;\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t},\n\n\t\tasync retestCredential() {\n\t\t\tif (!this.isCredentialTestable) {\n\t\t\t\tthis.authError = '';\n\t\t\t\tthis.testedSuccessfully = false;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nodesAccess = Object.values(this.nodeAccess).filter(\n\t\t\t\t(access) => !!access,\n\t\t\t) as ICredentialNodeAccess[];\n\n\t\t\tconst { ownedBy, sharedWith, ...credentialData } = this.credentialData;\n\t\t\tconst details: ICredentialsDecrypted = {\n\t\t\t\tid: this.credentialId,\n\t\t\t\tname: this.credentialName,\n\t\t\t\ttype: this.credentialTypeName!,\n\t\t\t\tdata: credentialData,\n\t\t\t\tnodesAccess,\n\t\t\t};\n\n\t\t\tthis.isRetesting = true;\n\t\t\tawait this.testCredential(details);\n\t\t\tthis.isRetesting = false;\n\t\t},\n\n\t\tasync testCredential(credentialDetails: ICredentialsDecrypted) {\n\t\t\tconst result = await this.credentialsStore.testCredential(credentialDetails);\n\t\t\tif (result.status === 'Error') {\n\t\t\t\tthis.authError = result.message;\n\t\t\t\tthis.testedSuccessfully = false;\n\t\t\t} else {\n\t\t\t\tthis.authError = '';\n\t\t\t\tthis.testedSuccessfully = true;\n\t\t\t}\n\n\t\t\tthis.scrollToTop();\n\t\t},\n\n\t\tasync saveCredential(): Promise<ICredentialsResponse | null> {\n\t\t\tif (!this.requiredPropertiesFilled) {\n\t\t\t\tthis.showValidationWarning = true;\n\t\t\t\tthis.scrollToTop();\n\t\t\t} else {\n\t\t\t\tthis.showValidationWarning = false;\n\t\t\t}\n\n\t\t\tthis.isSaving = true;\n\t\t\tconst nodesAccess = Object.values(this.nodeAccess).filter(\n\t\t\t\t(access) => !!access,\n\t\t\t) as ICredentialNodeAccess[];\n\n\t\t\t// Save only the none default data\n\t\t\tconst data = NodeHelpers.getNodeParameters(\n\t\t\t\tthis.credentialType!.properties,\n\t\t\t\tthis.credentialData as INodeParameters,\n\t\t\t\tfalse,\n\t\t\t\tfalse,\n\t\t\t\tnull,\n\t\t\t);\n\n\t\t\tlet sharedWith: IUser[] | undefined;\n\t\t\tlet ownedBy: IUser | undefined;\n\t\t\tif (this.settingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.Sharing)) {\n\t\t\t\tsharedWith = this.credentialData.sharedWith as unknown as IUser[];\n\t\t\t\townedBy = this.credentialData.ownedBy as unknown as IUser;\n\t\t\t}\n\n\t\t\tconst credentialDetails: ICredentialsDecrypted = {\n\t\t\t\tid: this.credentialId,\n\t\t\t\tname: this.credentialName,\n\t\t\t\ttype: this.credentialTypeName!,\n\t\t\t\tdata: data as unknown as ICredentialDataDecryptedObject,\n\t\t\t\tnodesAccess,\n\t\t\t\tsharedWith,\n\t\t\t\townedBy,\n\t\t\t};\n\n\t\t\tlet credential;\n\n\t\t\tconst isNewCredential = this.mode === 'new' && !this.credentialId;\n\n\t\t\tif (isNewCredential) {\n\t\t\t\tcredential = await this.createCredential(credentialDetails);\n\t\t\t} else {\n\t\t\t\tcredential = await this.updateCredential(credentialDetails);\n\t\t\t}\n\n\t\t\tthis.isSaving = false;\n\t\t\tif (credential) {\n\t\t\t\tthis.credentialId = credential.id as string;\n\n\t\t\t\tif (this.isCredentialTestable) {\n\t\t\t\t\tthis.isTesting = true;\n\t\t\t\t\t// Add the full data including defaults for testing\n\t\t\t\t\tcredentialDetails.data = this.credentialData;\n\n\t\t\t\t\tcredentialDetails.id = this.credentialId;\n\n\t\t\t\t\tawait this.testCredential(credentialDetails);\n\t\t\t\t\tthis.isTesting = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.authError = '';\n\t\t\t\t\tthis.testedSuccessfully = false;\n\t\t\t\t}\n\n\t\t\t\tconst trackProperties: ITelemetryTrackProperties = {\n\t\t\t\t\tcredential_type: credentialDetails.type,\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\tcredential_id: credential.id,\n\t\t\t\t\tis_complete: !!this.requiredPropertiesFilled,\n\t\t\t\t\tis_new: isNewCredential,\n\t\t\t\t};\n\n\t\t\t\tif (this.isOAuthType) {\n\t\t\t\t\ttrackProperties.is_valid = !!this.isOAuthConnected;\n\t\t\t\t} else if (this.isCredentialTestable) {\n\t\t\t\t\ttrackProperties.is_valid = !!this.testedSuccessfully;\n\t\t\t\t}\n\n\t\t\t\tif (this.ndvStore.activeNode) {\n\t\t\t\t\ttrackProperties.node_type = this.ndvStore.activeNode.type;\n\t\t\t\t}\n\n\t\t\t\tif (this.authError && this.authError !== '') {\n\t\t\t\t\ttrackProperties.authError = this.authError;\n\t\t\t\t}\n\n\t\t\t\tthis.$telemetry.track('User saved credentials', trackProperties);\n\t\t\t\tawait this.$externalHooks().run('credentialEdit.saveCredential', trackProperties);\n\t\t\t}\n\n\t\t\treturn credential;\n\t\t},\n\n\t\tasync createCredential(\n\t\t\tcredentialDetails: ICredentialsDecrypted,\n\t\t): Promise<ICredentialsResponse | null> {\n\t\t\tlet credential;\n\n\t\t\ttry {\n\t\t\t\tcredential = await this.credentialsStore.createNewCredential(credentialDetails);\n\t\t\t\tthis.hasUnsavedChanges = false;\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('credentialEdit.credentialEdit.showError.createCredential.title'),\n\t\t\t\t);\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tawait this.$externalHooks().run('credential.saved', {\n\t\t\t\tcredential_type: credentialDetails.type,\n\t\t\t\tcredential_id: credential.id,\n\t\t\t\tis_new: true,\n\t\t\t});\n\n\t\t\tthis.$telemetry.track('User created credentials', {\n\t\t\t\tcredential_type: credentialDetails.type,\n\t\t\t\tcredential_id: credential.id,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t});\n\n\t\t\treturn credential;\n\t\t},\n\n\t\tasync updateCredential(\n\t\t\tcredentialDetails: ICredentialsDecrypted,\n\t\t): Promise<ICredentialsResponse | null> {\n\t\t\tlet credential;\n\t\t\ttry {\n\t\t\t\tcredential = await this.credentialsStore.updateCredential({\n\t\t\t\t\tid: this.credentialId,\n\t\t\t\t\tdata: credentialDetails,\n\t\t\t\t});\n\t\t\t\tthis.hasUnsavedChanges = false;\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('credentialEdit.credentialEdit.showError.updateCredential.title'),\n\t\t\t\t);\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tawait this.$externalHooks().run('credential.saved', {\n\t\t\t\tcredential_type: credentialDetails.type,\n\t\t\t\tcredential_id: credential.id,\n\t\t\t\tis_new: false,\n\t\t\t});\n\n\t\t\t// Now that the credentials changed check if any nodes use credentials\n\t\t\t// which have now a different name\n\t\t\tthis.updateNodesCredentialsIssues();\n\n\t\t\treturn credential;\n\t\t},\n\n\t\tasync deleteCredential() {\n\t\t\tif (!this.currentCredential) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst savedCredentialName = this.currentCredential.name;\n\n\t\t\tconst deleteConfirmed = await this.confirmMessage(\n\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.deleteCredential.message',\n\t\t\t\t\t{ interpolate: { savedCredentialName } },\n\t\t\t\t),\n\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.deleteCredential.headline',\n\t\t\t\t),\n\t\t\t\tnull,\n\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.deleteCredential.confirmButtonText',\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tif (deleteConfirmed === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.isDeleting = true;\n\t\t\t\tawait this.credentialsStore.deleteCredential({ id: this.credentialId });\n\t\t\t\tthis.hasUnsavedChanges = false;\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('credentialEdit.credentialEdit.showError.deleteCredential.title'),\n\t\t\t\t);\n\t\t\t\tthis.isDeleting = false;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.isDeleting = false;\n\t\t\t// Now that the credentials were removed check if any nodes used them\n\t\t\tthis.updateNodesCredentialsIssues();\n\t\t\tthis.credentialData = {};\n\n\t\t\tthis.$showMessage({\n\t\t\t\ttitle: this.$locale.baseText('credentialEdit.credentialEdit.showMessage.title'),\n\t\t\t\ttype: 'success',\n\t\t\t});\n\t\t\tthis.closeDialog();\n\t\t},\n\n\t\tasync oAuthCredentialAuthorize() {\n\t\t\tlet url;\n\n\t\t\tconst credential = await this.saveCredential();\n\t\t\tif (!credential) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst types = this.parentTypes;\n\n\t\t\ttry {\n\t\t\t\tconst credData = { id: credential.id, ...this.credentialData };\n\t\t\t\tif (this.credentialTypeName === 'oAuth2Api' || types.includes('oAuth2Api')) {\n\t\t\t\t\tif (isValidCredentialResponse(credData)) {\n\t\t\t\t\t\turl = await this.credentialsStore.oAuth2Authorize(credData);\n\t\t\t\t\t}\n\t\t\t\t} else if (this.credentialTypeName === 'oAuth1Api' || types.includes('oAuth1Api')) {\n\t\t\t\t\tif (isValidCredentialResponse(credData)) {\n\t\t\t\t\t\turl = await this.credentialsStore.oAuth1Authorize(credData);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialEdit.showError.generateAuthorizationUrl.title',\n\t\t\t\t\t),\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialEdit.showError.generateAuthorizationUrl.message',\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst params =\n\t\t\t\t'scrollbars=no,resizable=yes,status=no,titlebar=noe,location=no,toolbar=no,menubar=no,width=500,height=700';\n\t\t\tconst oauthPopup = window.open(url, 'OAuth2 Authorization', params);\n\t\t\tVue.set(this.credentialData, 'oauthTokenData', null);\n\n\t\t\tconst receiveMessage = (event: MessageEvent) => {\n\t\t\t\t// // TODO: Add check that it came from n8n\n\t\t\t\t// if (event.origin !== 'http://example.org:8080') {\n\t\t\t\t// \treturn;\n\t\t\t\t// }\n\t\t\t\tif (event.data === 'success') {\n\t\t\t\t\twindow.removeEventListener('message', receiveMessage, false);\n\n\t\t\t\t\t// Set some kind of data that status changes.\n\t\t\t\t\t// As data does not get displayed directly it does not matter what data.\n\t\t\t\t\tVue.set(this.credentialData, 'oauthTokenData', {});\n\t\t\t\t\tthis.credentialsStore.enableOAuthCredential(credential);\n\n\t\t\t\t\t// Close the window\n\t\t\t\t\tif (oauthPopup) {\n\t\t\t\t\t\toauthPopup.close();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\twindow.addEventListener('message', receiveMessage, false);\n\t\t},\n\t\tasync onAuthTypeChanged(type: string): Promise<void> {\n\t\t\tif (!this.activeNodeType?.credentials) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst credentialsForType = getNodeCredentialForSelectedAuthType(this.activeNodeType, type);\n\t\t\tif (credentialsForType) {\n\t\t\t\tthis.selectedCredential = credentialsForType.name;\n\t\t\t\tthis.resetCredentialData();\n\t\t\t\tthis.setupNodeAccess();\n\t\t\t\t// Update current node auth type so credentials dropdown can be displayed properly\n\t\t\t\tupdateNodeAuthType(this.ndvStore.activeNode, type);\n\t\t\t\t// Also update credential name but only if the default name is still used\n\t\t\t\tif (this.hasUnsavedChanges && !this.hasUserSpecifiedName) {\n\t\t\t\t\tconst newDefaultName = await this.credentialsStore.getNewCredentialName({\n\t\t\t\t\t\tcredentialTypeName: this.defaultCredentialTypeName,\n\t\t\t\t\t});\n\t\t\t\t\tthis.credentialName = newDefaultName;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetupNodeAccess(): void {\n\t\t\tthis.nodeAccess = this.nodesWithAccess.reduce(\n\t\t\t\t(accu: NodeAccessMap, node: { name: string }) => {\n\t\t\t\t\tif (this.mode === 'new') {\n\t\t\t\t\t\taccu[node.name] = { nodeType: node.name }; // enable all nodes by default\n\t\t\t\t\t} else {\n\t\t\t\t\t\taccu[node.name] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn accu;\n\t\t\t\t},\n\t\t\t\t{},\n\t\t\t);\n\t\t},\n\t\tresetCredentialData(): void {\n\t\t\tif (!this.credentialType) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (const property of this.credentialType.properties) {\n\t\t\t\tif (!this.credentialType.__overwrittenProperties?.includes(property.name)) {\n\t\t\t\t\tVue.set(this.credentialData, property.name, property.default as CredentialInformation);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.credentialModal {\n\t--dialog-max-width: 900px;\n\t--dialog-close-top: 31px;\n}\n\n.mainContent {\n\tflex: 1;\n\toverflow: auto;\n\tpadding-bottom: 100px;\n}\n\n.sidebar {\n\tmax-width: 170px;\n\tmin-width: 170px;\n\tmargin-right: var(--spacing-l);\n\tflex-grow: 1;\n\n\tul {\n\t\tpadding: 0 !important;\n\t}\n}\n\n.header {\n\tdisplay: flex;\n}\n\n.container {\n\tdisplay: flex;\n\theight: 100%;\n}\n\n.credInfo {\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: row;\n\tflex-grow: 1;\n\tmargin-bottom: var(--spacing-l);\n}\n\n.credActions {\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tmargin-right: var(--spacing-xl);\n\tmargin-bottom: var(--spacing-l);\n\n\t> * {\n\t\tmargin-left: var(--spacing-2xs);\n\t}\n}\n\n.credIcon {\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-right: var(--spacing-xs);\n}\n</style>\n","<template>\n\t<Modal\n\t\t:name=\"INVITE_USER_MODAL_KEY\"\n\t\t@enter=\"onSubmit\"\n\t\t:title=\"\n\t\t\t$locale.baseText(\n\t\t\t\tshowInviteUrls ? 'settings.users.copyInviteUrls' : 'settings.users.inviteNewUsers',\n\t\t\t)\n\t\t\"\n\t\t:center=\"true\"\n\t\twidth=\"460px\"\n\t\t:eventBus=\"modalBus\"\n\t>\n\t\t<template #content>\n\t\t\t<div v-if=\"showInviteUrls\">\n\t\t\t\t<n8n-users-list :users=\"invitedUsers\">\n\t\t\t\t\t<template #actions=\"{ user }\">\n\t\t\t\t\t\t<n8n-tooltip>\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t{{ $locale.baseText('settings.users.inviteLink.copy') }}\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<n8n-icon-button\n\t\t\t\t\t\t\t\ticon=\"link\"\n\t\t\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t\t\tdata-test-id=\"copy-invite-link-button\"\n\t\t\t\t\t\t\t\t:data-invite-link=\"user.inviteAcceptUrl\"\n\t\t\t\t\t\t\t\t@click=\"onCopyInviteLink(user)\"\n\t\t\t\t\t\t\t></n8n-icon-button>\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</template>\n\t\t\t\t</n8n-users-list>\n\t\t\t</div>\n\t\t\t<n8n-form-inputs\n\t\t\t\tv-else\n\t\t\t\t:inputs=\"config\"\n\t\t\t\t:eventBus=\"formBus\"\n\t\t\t\t:columnView=\"true\"\n\t\t\t\t@input=\"onInput\"\n\t\t\t\t@submit=\"onSubmit\"\n\t\t\t/>\n\t\t\t<n8n-info-tip v-if=\"!settingsStore.isSmtpSetup\" class=\"mt-s\">\n\t\t\t\t<i18n path=\"settings.users.setupSMTPInfo\">\n\t\t\t\t\t<template #link>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://docs.n8n.io/reference/user-management.html#step-one-smtp\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ $locale.baseText('settings.users.setupSMTPInfo.link') }}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</template>\n\t\t\t\t</i18n>\n\t\t\t</n8n-info-tip>\n\t\t</template>\n\t\t<template v-if=\"!showInviteUrls\" #footer>\n\t\t\t<n8n-button\n\t\t\t\t:loading=\"loading\"\n\t\t\t\t:disabled=\"!enabledButton\"\n\t\t\t\t:label=\"buttonLabel\"\n\t\t\t\t@click=\"onSubmitClick\"\n\t\t\t\tfloat=\"right\"\n\t\t\t/>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\n\nimport { showMessage } from '@/mixins/showMessage';\nimport { copyPaste } from '@/mixins/copyPaste';\nimport Modal from './Modal.vue';\nimport type { IFormInputs, IInviteResponse, IUser } from '@/Interface';\nimport { VALID_EMAIL_REGEX, INVITE_USER_MODAL_KEY } from '@/constants';\nimport { ROLE } from '@/utils';\nimport { mapStores } from 'pinia';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { createEventBus } from '@/event-bus';\n\nconst NAME_EMAIL_FORMAT_REGEX = /^.* <(.*)>$/;\n\nfunction getEmail(email: string): string {\n\tlet parsed = email.trim();\n\tif (NAME_EMAIL_FORMAT_REGEX.test(parsed)) {\n\t\tconst matches = parsed.match(NAME_EMAIL_FORMAT_REGEX);\n\t\tif (matches && matches.length === 2) {\n\t\t\tparsed = matches[1];\n\t\t}\n\t}\n\treturn parsed;\n}\n\nexport default mixins(showMessage, copyPaste).extend({\n\tcomponents: { Modal },\n\tname: 'InviteUsersModal',\n\tprops: {\n\t\tmodalName: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tconfig: null as IFormInputs | null,\n\t\t\tformBus: createEventBus(),\n\t\t\tmodalBus: createEventBus(),\n\t\t\temails: '',\n\t\t\tshowInviteUrls: null as IInviteResponse[] | null,\n\t\t\tloading: false,\n\t\t\tINVITE_USER_MODAL_KEY,\n\t\t};\n\t},\n\tmounted() {\n\t\tthis.config = [\n\t\t\t{\n\t\t\t\tname: 'emails',\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: this.$locale.baseText('settings.users.newEmailsToInvite'),\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalidationRules: [{ name: 'VALID_EMAILS' }],\n\t\t\t\t\tvalidators: {\n\t\t\t\t\t\tVALID_EMAILS: {\n\t\t\t\t\t\t\tvalidate: this.validateEmails,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tplaceholder: 'name1@email.com, name2@email.com, ...',\n\t\t\t\t\tcapitalize: true,\n\t\t\t\t\tfocusInitially: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'role',\n\t\t\t\tinitialValue: 'member',\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: this.$locale.baseText('auth.role'),\n\t\t\t\t\trequired: true,\n\t\t\t\t\ttype: 'select',\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: ROLE.Member,\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('auth.roles.member'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tcapitalize: true,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t},\n\tcomputed: {\n\t\t...mapStores(useUsersStore, useSettingsStore),\n\t\temailsCount(): number {\n\t\t\treturn this.emails.split(',').filter((email: string) => !!email.trim()).length;\n\t\t},\n\t\tbuttonLabel(): string {\n\t\t\tif (this.emailsCount > 1) {\n\t\t\t\treturn this.$locale.baseText(\n\t\t\t\t\t`settings.users.inviteXUser${this.settingsStore.isSmtpSetup ? '' : '.inviteUrl'}`,\n\t\t\t\t\t{\n\t\t\t\t\t\tinterpolate: { count: this.emailsCount.toString() },\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this.$locale.baseText(\n\t\t\t\t`settings.users.inviteUser${this.settingsStore.isSmtpSetup ? '' : '.inviteUrl'}`,\n\t\t\t);\n\t\t},\n\t\tenabledButton(): boolean {\n\t\t\treturn this.emailsCount >= 1;\n\t\t},\n\t\tinvitedUsers(): IUser[] {\n\t\t\treturn this.showInviteUrls\n\t\t\t\t? this.usersStore.allUsers.filter((user) =>\n\t\t\t\t\t\tthis.showInviteUrls!.find((invite) => invite.user.id === user.id),\n\t\t\t\t  )\n\t\t\t\t: [];\n\t\t},\n\t},\n\tmethods: {\n\t\tvalidateEmails(value: string | number | boolean | null | undefined) {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst emails = value.split(',');\n\t\t\tfor (let i = 0; i < emails.length; i++) {\n\t\t\t\tconst email = emails[i];\n\t\t\t\tconst parsed = getEmail(email);\n\n\t\t\t\tif (!!parsed.trim() && !VALID_EMAIL_REGEX.test(String(parsed).trim().toLowerCase())) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmessageKey: 'settings.users.invalidEmailError',\n\t\t\t\t\t\toptions: { interpolate: { email: parsed } },\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\tonInput(e: { name: string; value: string }) {\n\t\t\tif (e.name === 'emails') {\n\t\t\t\tthis.emails = e.value;\n\t\t\t}\n\t\t},\n\t\tasync onSubmit() {\n\t\t\ttry {\n\t\t\t\tthis.loading = true;\n\n\t\t\t\tconst emails = this.emails\n\t\t\t\t\t.split(',')\n\t\t\t\t\t.map((email) => ({ email: getEmail(email) }))\n\t\t\t\t\t.filter((invite) => !!invite.email);\n\n\t\t\t\tif (emails.length === 0) {\n\t\t\t\t\tthrow new Error(this.$locale.baseText('settings.users.noUsersToInvite'));\n\t\t\t\t}\n\n\t\t\t\tconst invited: IInviteResponse[] = await this.usersStore.inviteUsers(emails);\n\t\t\t\tconst erroredInvites = invited.filter((invite) => invite.error);\n\t\t\t\tconst successfulEmailInvites = invited.filter(\n\t\t\t\t\t(invite) => !invite.error && invite.user.emailSent,\n\t\t\t\t);\n\t\t\t\tconst successfulUrlInvites = invited.filter(\n\t\t\t\t\t(invite) => !invite.error && !invite.user.emailSent,\n\t\t\t\t);\n\n\t\t\t\tif (successfulEmailInvites.length) {\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttitle: this.$locale.baseText(\n\t\t\t\t\t\t\tsuccessfulEmailInvites.length > 1\n\t\t\t\t\t\t\t\t? 'settings.users.usersInvited'\n\t\t\t\t\t\t\t\t: 'settings.users.userInvited',\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmessage: this.$locale.baseText('settings.users.emailInvitesSent', {\n\t\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\t\temails: successfulEmailInvites.map(({ user }) => user.email).join(', '),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (successfulUrlInvites.length) {\n\t\t\t\t\tif (successfulUrlInvites.length === 1) {\n\t\t\t\t\t\tthis.copyToClipboard(successfulUrlInvites[0].user.inviteAcceptUrl);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttitle: this.$locale.baseText(\n\t\t\t\t\t\t\tsuccessfulUrlInvites.length > 1\n\t\t\t\t\t\t\t\t? 'settings.users.multipleInviteUrlsCreated'\n\t\t\t\t\t\t\t\t: 'settings.users.inviteUrlCreated',\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmessage: this.$locale.baseText(\n\t\t\t\t\t\t\tsuccessfulUrlInvites.length > 1\n\t\t\t\t\t\t\t\t? 'settings.users.multipleInviteUrlsCreated.message'\n\t\t\t\t\t\t\t\t: 'settings.users.inviteUrlCreated.message',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\t\t\temails: successfulUrlInvites.map(({ user }) => user.email).join(', '),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (erroredInvites.length) {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\ttitle: this.$locale.baseText('settings.users.usersEmailedError'),\n\t\t\t\t\t\t\tmessage: this.$locale.baseText('settings.users.emailInvitesSentError', {\n\t\t\t\t\t\t\t\tinterpolate: { emails: erroredInvites.map(({ error }) => error).join(', ') },\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t});\n\t\t\t\t\t}, 0); // notifications stack on top of each other otherwise\n\t\t\t\t}\n\n\t\t\t\tif (successfulUrlInvites.length > 1) {\n\t\t\t\t\tthis.showInviteUrls = successfulUrlInvites;\n\t\t\t\t} else {\n\t\t\t\t\tthis.modalBus.emit('close');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('settings.users.usersInvitedError'));\n\t\t\t}\n\t\t\tthis.loading = false;\n\t\t},\n\t\tshowCopyInviteLinkToast(successfulUrlInvites: IInviteResponse[]) {\n\t\t\tthis.$showMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\ttitle: this.$locale.baseText(\n\t\t\t\t\tsuccessfulUrlInvites.length > 1\n\t\t\t\t\t\t? 'settings.users.multipleInviteUrlsCreated'\n\t\t\t\t\t\t: 'settings.users.inviteUrlCreated',\n\t\t\t\t),\n\t\t\t\tmessage: this.$locale.baseText(\n\t\t\t\t\tsuccessfulUrlInvites.length > 1\n\t\t\t\t\t\t? 'settings.users.multipleInviteUrlsCreated.message'\n\t\t\t\t\t\t: 'settings.users.inviteUrlCreated.message',\n\t\t\t\t\t{\n\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\temails: successfulUrlInvites.map(({ user }) => user.email).join(', '),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t});\n\t\t},\n\t\tonSubmitClick() {\n\t\t\tthis.formBus.emit('submit');\n\t\t},\n\t\tonCopyInviteLink(user: IUser) {\n\t\t\tif (user.inviteAcceptUrl && this.showInviteUrls) {\n\t\t\t\tthis.copyToClipboard(user.inviteAcceptUrl);\n\t\t\t\tthis.showCopyInviteLinkToast([]);\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<Modal\n\t\t:name=\"CREDENTIAL_SELECT_MODAL_KEY\"\n\t\t:eventBus=\"modalBus\"\n\t\twidth=\"50%\"\n\t\t:center=\"true\"\n\t\t:loading=\"loading\"\n\t\tmaxWidth=\"460px\"\n\t\tminHeight=\"250px\"\n\t>\n\t\t<template #header>\n\t\t\t<h2 :class=\"$style.title\">\n\t\t\t\t{{ $locale.baseText('credentialSelectModal.addNewCredential') }}\n\t\t\t</h2>\n\t\t</template>\n\t\t<template #content>\n\t\t\t<div>\n\t\t\t\t<div :class=\"$style.subtitle\">\n\t\t\t\t\t{{ $locale.baseText('credentialSelectModal.selectAnAppOrServiceToConnectTo') }}\n\t\t\t\t</div>\n\t\t\t\t<n8n-select\n\t\t\t\t\tfilterable\n\t\t\t\t\tdefaultFirstOption\n\t\t\t\t\t:placeholder=\"$locale.baseText('credentialSelectModal.searchForApp')\"\n\t\t\t\t\tsize=\"xlarge\"\n\t\t\t\t\tref=\"select\"\n\t\t\t\t\t:value=\"selected\"\n\t\t\t\t\t@change=\"onSelect\"\n\t\t\t\t\tdata-test-id=\"new-credential-type-select\"\n\t\t\t\t>\n\t\t\t\t\t<template #prefix>\n\t\t\t\t\t\t<font-awesome-icon icon=\"search\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t<n8n-option\n\t\t\t\t\t\tv-for=\"credential in credentialsStore.allCredentialTypes\"\n\t\t\t\t\t\t:value=\"credential.name\"\n\t\t\t\t\t\t:key=\"credential.name\"\n\t\t\t\t\t\t:label=\"credential.displayName\"\n\t\t\t\t\t\tfilterable\n\t\t\t\t\t\tdata-test-id=\"new-credential-type-select-option\"\n\t\t\t\t\t/>\n\t\t\t\t</n8n-select>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<div :class=\"$style.footer\">\n\t\t\t\t<n8n-button\n\t\t\t\t\t:label=\"$locale.baseText('credentialSelectModal.continue')\"\n\t\t\t\t\tfloat=\"right\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t:disabled=\"!selected\"\n\t\t\t\t\t@click=\"openCredentialType\"\n\t\t\t\t\tdata-test-id=\"new-credential-type-button\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\nimport Modal from './Modal.vue';\nimport { CREDENTIAL_SELECT_MODAL_KEY } from '../constants';\nimport { externalHooks } from '@/mixins/externalHooks';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useCredentialsStore } from '@/stores/credentials.store';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins(externalHooks).extend({\n\tname: 'CredentialsSelectModal',\n\tcomponents: {\n\t\tModal,\n\t},\n\tasync mounted() {\n\t\ttry {\n\t\t\tawait this.credentialsStore.fetchCredentialTypes(false);\n\t\t} catch (e) {}\n\t\tthis.loading = false;\n\n\t\tsetTimeout(() => {\n\t\t\tconst elementRef = this.$refs.select as HTMLSelectElement | undefined;\n\t\t\tif (elementRef) {\n\t\t\t\telementRef.focus();\n\t\t\t}\n\t\t}, 0);\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tmodalBus: createEventBus(),\n\t\t\tselected: '',\n\t\t\tloading: true,\n\t\t\tCREDENTIAL_SELECT_MODAL_KEY,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useCredentialsStore, useUIStore, useWorkflowsStore),\n\t},\n\tmethods: {\n\t\tonSelect(type: string) {\n\t\t\tthis.selected = type;\n\t\t},\n\t\topenCredentialType() {\n\t\t\tthis.modalBus.emit('close');\n\t\t\tthis.uiStore.openNewCredential(this.selected);\n\n\t\t\tconst telemetryPayload = {\n\t\t\t\tcredential_type: this.selected,\n\t\t\t\tsource: 'primary_menu',\n\t\t\t\tnew_credential: true,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t};\n\n\t\t\tthis.$telemetry.track('User opened Credential modal', telemetryPayload);\n\t\t\tvoid this.$externalHooks().run('credentialsSelectModal.openCredentialType', telemetryPayload);\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.title {\n\tfont-size: var(--font-size-xl);\n\tline-height: var(--font-line-height-regular);\n}\n\n.subtitle {\n\tmargin-bottom: var(--spacing-s);\n\tfont-size: var(--font-size-m);\n\tline-height: var(--font-line-height-xloose);\n}\n</style>\n","<template>\n\t<div :class=\"{ 'tags-container': true, focused }\" @keydown.stop v-click-outside=\"onClickOutside\">\n\t\t<n8n-select\n\t\t\t:popperAppendToBody=\"false\"\n\t\t\t:value=\"appliedTags\"\n\t\t\t:loading=\"tagsStore.isLoading\"\n\t\t\t:placeholder=\"placeholder\"\n\t\t\t:filter-method=\"filterOptions\"\n\t\t\t@change=\"onTagsUpdated\"\n\t\t\t@visible-change=\"onVisibleChange\"\n\t\t\t@remove-tag=\"onRemoveTag\"\n\t\t\tfilterable\n\t\t\tmultiple\n\t\t\tref=\"select\"\n\t\t\tloading-text=\"...\"\n\t\t\tpopper-class=\"tags-dropdown\"\n\t\t\tsize=\"medium\"\n\t\t>\n\t\t\t<n8n-option\n\t\t\t\tv-if=\"options.length === 0 && filter && createEnabled\"\n\t\t\t\t:key=\"CREATE_KEY\"\n\t\t\t\t:value=\"CREATE_KEY\"\n\t\t\t\tclass=\"ops\"\n\t\t\t\tref=\"create\"\n\t\t\t>\n\t\t\t\t<font-awesome-icon icon=\"plus-circle\" />\n\t\t\t\t<span>\n\t\t\t\t\t{{ $locale.baseText('tagsDropdown.createTag', { interpolate: { filter } }) }}\n\t\t\t\t</span>\n\t\t\t</n8n-option>\n\t\t\t<n8n-option v-else-if=\"options.length === 0\" value=\"message\" disabled>\n\t\t\t\t<span v-if=\"createEnabled\">{{ $locale.baseText('tagsDropdown.typeToCreateATag') }}</span>\n\t\t\t\t<span v-else-if=\"allTags.length > 0\">{{\n\t\t\t\t\t$locale.baseText('tagsDropdown.noMatchingTagsExist')\n\t\t\t\t}}</span>\n\t\t\t\t<span v-else>{{ $locale.baseText('tagsDropdown.noTagsExist') }}</span>\n\t\t\t</n8n-option>\n\n\t\t\t<!-- key is id+index for keyboard navigation to work well with filter -->\n\t\t\t<n8n-option\n\t\t\t\tv-for=\"(tag, i) in options\"\n\t\t\t\t:value=\"tag.id\"\n\t\t\t\t:key=\"tag.id + '_' + i\"\n\t\t\t\t:label=\"tag.name\"\n\t\t\t\tclass=\"tag\"\n\t\t\t\tref=\"tag\"\n\t\t\t/>\n\n\t\t\t<n8n-option :key=\"MANAGE_KEY\" :value=\"MANAGE_KEY\" class=\"ops manage-tags\">\n\t\t\t\t<font-awesome-icon icon=\"cog\" />\n\t\t\t\t<span>{{ $locale.baseText('tagsDropdown.manageTags') }}</span>\n\t\t\t</n8n-option>\n\t\t</n8n-select>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\n\nimport type { ITag } from '@/Interface';\nimport { MAX_TAG_NAME_LENGTH, TAGS_MANAGER_MODAL_KEY } from '@/constants';\n\nimport { showMessage } from '@/mixins/showMessage';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useTagsStore } from '@/stores/tags.store';\nimport type { EventBus } from '@/event-bus';\nimport type { PropType } from 'vue';\nimport type { N8nOption, N8nSelect } from 'n8n-design-system';\n\ntype SelectRef = InstanceType<typeof N8nSelect>;\ntype TagRef = InstanceType<typeof N8nOption>;\ntype CreateRef = InstanceType<typeof N8nOption>;\n\nconst MANAGE_KEY = '__manage';\nconst CREATE_KEY = '__create';\n\nexport default mixins(showMessage).extend({\n\tname: 'TagsDropdown',\n\tprops: {\n\t\tplaceholder: {},\n\t\tcurrentTagIds: {\n\t\t\ttype: Array as PropType<string[]>,\n\t\t\tdefault: () => [],\n\t\t},\n\t\tcreateEnabled: {},\n\t\teventBus: {\n\t\t\ttype: Object as PropType<EventBus>,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tfilter: '',\n\t\t\tMANAGE_KEY,\n\t\t\tCREATE_KEY,\n\t\t\tfocused: false,\n\t\t\tpreventUpdate: false,\n\t\t};\n\t},\n\tmounted() {\n\t\tconst selectRef = this.$refs.select as SelectRef | undefined;\n\t\tconst select = selectRef?.$refs?.innerSelect;\n\t\tif (select) {\n\t\t\tconst input = select.$refs.input as Element | undefined;\n\t\t\tif (input) {\n\t\t\t\tinput.setAttribute('maxlength', `${MAX_TAG_NAME_LENGTH}`);\n\t\t\t\tinput.addEventListener('keydown', (e: Event) => {\n\t\t\t\t\tconst keyboardEvent = e as KeyboardEvent;\n\t\t\t\t\t// events don't bubble outside of select, so need to hook onto input\n\t\t\t\t\tif (keyboardEvent.key === 'Escape') {\n\t\t\t\t\t\tthis.$emit('esc');\n\t\t\t\t\t} else if (keyboardEvent.key === 'Enter' && this.filter.length === 0) {\n\t\t\t\t\t\tthis.$data.preventUpdate = true;\n\t\t\t\t\t\tthis.$emit('blur');\n\n\t\t\t\t\t\tif (typeof selectRef?.blur === 'function') {\n\t\t\t\t\t\t\tselectRef.blur();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.eventBus?.on('focus', this.onBusFocus);\n\n\t\tvoid this.tagsStore.fetchAll();\n\t},\n\tdestroyed() {\n\t\tthis.eventBus?.off('focus', this.onBusFocus);\n\t},\n\tcomputed: {\n\t\t...mapStores(useTagsStore, useUIStore),\n\t\tallTags(): ITag[] {\n\t\t\treturn this.tagsStore.allTags;\n\t\t},\n\t\thasTags(): boolean {\n\t\t\treturn this.tagsStore.hasTags;\n\t\t},\n\t\toptions(): ITag[] {\n\t\t\treturn this.allTags.filter(\n\t\t\t\t(tag: ITag) => tag && tag.name.toLowerCase().includes(this.$data.filter.toLowerCase()),\n\t\t\t);\n\t\t},\n\t\tappliedTags(): string[] {\n\t\t\treturn this.currentTagIds.filter((id: string) => this.tagsStore.getTagById(id));\n\t\t},\n\t},\n\tmethods: {\n\t\tonBusFocus() {\n\t\t\tthis.focusOnInput();\n\t\t\tthis.focusOnTopOption();\n\t\t},\n\t\tfilterOptions(filter = '') {\n\t\t\tthis.$data.filter = filter.trim();\n\t\t\tthis.$nextTick(() => this.focusOnTopOption());\n\t\t},\n\t\tasync onCreate() {\n\t\t\tconst name = this.$data.filter;\n\t\t\ttry {\n\t\t\t\tconst newTag = await this.tagsStore.create(name);\n\t\t\t\tthis.$emit('update', [...this.currentTagIds, newTag.id]);\n\t\t\t\tthis.$nextTick(() => this.focusOnTag(newTag.id));\n\n\t\t\t\tthis.$data.filter = '';\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('tagsDropdown.showError.title'),\n\t\t\t\t\tthis.$locale.baseText('tagsDropdown.showError.message', { interpolate: { name } }),\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tonTagsUpdated(selected: string[]) {\n\t\t\tconst ops = selected.find((value) => value === MANAGE_KEY || value === CREATE_KEY);\n\t\t\tif (ops === MANAGE_KEY) {\n\t\t\t\tthis.$data.filter = '';\n\t\t\t\tthis.uiStore.openModal(TAGS_MANAGER_MODAL_KEY);\n\t\t\t} else if (ops === CREATE_KEY) {\n\t\t\t\tvoid this.onCreate();\n\t\t\t} else {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (!this.$data.preventUpdate) {\n\t\t\t\t\t\tthis.$emit('update', selected);\n\t\t\t\t\t}\n\t\t\t\t\tthis.$data.preventUpdate = false;\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t},\n\t\tfocusOnTopOption() {\n\t\t\tconst tagRefs = this.$refs.tag as TagRef[] | undefined;\n\t\t\tconst createRef = this.$refs.create as CreateRef | undefined;\n\t\t\t// focus on create option\n\t\t\tif (createRef && createRef.hoverItem) {\n\t\t\t\tcreateRef.hoverItem();\n\t\t\t}\n\t\t\t// focus on top option after filter\n\t\t\telse if (tagRefs && tagRefs[0] && tagRefs[0].hoverItem) {\n\t\t\t\ttagRefs[0].hoverItem();\n\t\t\t}\n\t\t},\n\t\tfocusOnTag(tagId: string) {\n\t\t\tconst tagOptions = (this.$refs.tag as TagRef[]) || [];\n\t\t\tif (tagOptions && tagOptions.length) {\n\t\t\t\tconst added = tagOptions.find((ref) => ref.value === tagId);\n\t\t\t}\n\t\t},\n\t\tfocusOnInput() {\n\t\t\tconst selectRef = this.$refs.select as SelectRef | undefined;\n\t\t\tif (selectRef) {\n\t\t\t\tselectRef.focusOnInput();\n\t\t\t\tthis.focused = true;\n\t\t\t}\n\t\t},\n\t\tonVisibleChange(visible: boolean) {\n\t\t\tif (!visible) {\n\t\t\t\tthis.$data.filter = '';\n\t\t\t\tthis.focused = false;\n\t\t\t} else {\n\t\t\t\tthis.focused = true;\n\t\t\t}\n\t\t},\n\t\tonRemoveTag() {\n\t\t\tthis.$nextTick(() => {\n\t\t\t\tthis.focusOnInput();\n\t\t\t});\n\t\t},\n\t\tonClickOutside(e: Event) {\n\t\t\tif (e.type === 'click') {\n\t\t\t\tthis.$emit('blur');\n\t\t\t}\n\t\t},\n\t},\n\twatch: {\n\t\tallTags() {\n\t\t\t// keep applied tags in sync with store\n\t\t\t// for example in case tag is deleted from store\n\t\t\tif (this.currentTagIds.length !== this.appliedTags.length) {\n\t\t\t\tthis.$emit('update', this.appliedTags);\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" scoped>\n$--max-input-height: 60px;\n\n::v-deep .el-select {\n\t.el-select__tags {\n\t\tmax-height: $--max-input-height;\n\t\toverflow-y: scroll;\n\t\toverflow-x: hidden;\n\t}\n\n\tinput {\n\t\tmax-height: $--max-input-height;\n\t}\n}\n</style>\n\n<style lang=\"scss\">\n.tags-container {\n\t.el-tag {\n\t\tpadding: 1px var(--spacing-4xs);\n\t\tcolor: var(--color-text-dark);\n\t\tbackground-color: var(--color-background-base);\n\t\tborder-radius: var(--border-radius-base);\n\t\tfont-size: var(--font-size-2xs);\n\t\tborder: 0;\n\n\t\t.el-tag__close {\n\t\t\tmax-height: 14px;\n\t\t\tmax-width: 14px;\n\t\t\tline-height: 14px;\n\t\t}\n\t}\n}\n\n.tags-dropdown {\n\t$--item-font-size: 14px;\n\t$--item-line-height: 18px;\n\t$--item-vertical-padding: 10px;\n\t$--item-horizontal-padding: 20px;\n\t$--item-height: $--item-line-height + $--item-vertical-padding * 2;\n\t$--items-to-show: 7;\n\t$--item-padding: $--item-vertical-padding $--item-horizontal-padding;\n\t$--dropdown-height: $--item-height * $--items-to-show;\n\t$--dropdown-width: 224px;\n\n\tmin-width: $--dropdown-width !important;\n\tmax-width: $--dropdown-width;\n\n\t.el-tag {\n\t\twhite-space: normal;\n\t}\n\n\t.el-scrollbar {\n\t\tposition: relative;\n\t\tmax-height: $--dropdown-height;\n\n\t\t> div {\n\t\t\toverflow: auto;\n\t\t\tmargin-bottom: 0 !important;\n\t\t}\n\n\t\tul {\n\t\t\tpadding: 0;\n\t\t\tmax-height: $--dropdown-height - $--item-height;\n\n\t\t\t::-webkit-scrollbar {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\n\t\t&:after {\n\t\t\tcontent: ' ';\n\t\t\tdisplay: block;\n\t\t\tmin-height: $--item-height;\n\t\t\twidth: $--dropdown-width;\n\t\t\tpadding: $--item-padding;\n\t\t}\n\n\t\t// override theme scrollbars in safari when overscrolling\n\t\t::-webkit-scrollbar-thumb {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\tli {\n\t\theight: $--item-height;\n\t\tbackground-color: var(--color-foreground-xlight);\n\t\tpadding: $--item-padding;\n\t\tmargin: 0;\n\t\tline-height: $--item-line-height;\n\t\tfont-weight: 400;\n\t\tfont-size: $--item-font-size;\n\n\t\t&.is-disabled {\n\t\t\tcolor: $custom-font-light;\n\t\t\tcursor: default;\n\t\t}\n\n\t\t&.selected {\n\t\t\tfont-weight: bold;\n\n\t\t\t> span {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: calc(100% - #{$--item-font-size});\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-overflow: ellipsis;\n\t\t\t}\n\n\t\t\t&:after {\n\t\t\t\t// selected check\n\t\t\t\tfont-size: $--item-font-size !important;\n\t\t\t}\n\t\t}\n\n\t\t&.ops {\n\t\t\tcolor: $color-primary;\n\t\t\tcursor: pointer;\n\n\t\t\t:first-child {\n\t\t\t\tmargin-right: 5px;\n\t\t\t}\n\t\t}\n\n\t\t&.tag {\n\t\t\tborder-top: none;\n\t\t}\n\n\t\t&.manage-tags {\n\t\t\tposition: absolute;\n\t\t\tbottom: 0;\n\t\t\tmin-width: $--dropdown-width;\n\t\t\tborder-top: 1px solid var(--color-foreground-base);\n\t\t}\n\t}\n}\n</style>\n","<template>\n\t<Modal\n\t\t:name=\"modalName\"\n\t\t:eventBus=\"modalBus\"\n\t\t@enter=\"save\"\n\t\t:title=\"$locale.baseText('duplicateWorkflowDialog.duplicateWorkflow')\"\n\t\t:center=\"true\"\n\t\twidth=\"420px\"\n\t>\n\t\t<template #content>\n\t\t\t<div :class=\"$style.content\">\n\t\t\t\t<n8n-input\n\t\t\t\t\tv-model=\"name\"\n\t\t\t\t\tref=\"nameInput\"\n\t\t\t\t\t:placeholder=\"$locale.baseText('duplicateWorkflowDialog.enterWorkflowName')\"\n\t\t\t\t\t:maxlength=\"MAX_WORKFLOW_NAME_LENGTH\"\n\t\t\t\t/>\n\t\t\t\t<TagsDropdown\n\t\t\t\t\tv-if=\"settingsStore.areTagsEnabled\"\n\t\t\t\t\t:createEnabled=\"true\"\n\t\t\t\t\t:currentTagIds=\"currentTagIds\"\n\t\t\t\t\t:eventBus=\"dropdownBus\"\n\t\t\t\t\t@blur=\"onTagsBlur\"\n\t\t\t\t\t@esc=\"onTagsEsc\"\n\t\t\t\t\t@update=\"onTagsUpdate\"\n\t\t\t\t\t:placeholder=\"$locale.baseText('duplicateWorkflowDialog.chooseOrCreateATag')\"\n\t\t\t\t\tref=\"dropdown\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #footer=\"{ close }\">\n\t\t\t<div :class=\"$style.footer\">\n\t\t\t\t<n8n-button\n\t\t\t\t\t@click=\"save\"\n\t\t\t\t\t:loading=\"isSaving\"\n\t\t\t\t\t:label=\"$locale.baseText('duplicateWorkflowDialog.save')\"\n\t\t\t\t\tfloat=\"right\"\n\t\t\t\t/>\n\t\t\t\t<n8n-button\n\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t@click=\"close\"\n\t\t\t\t\t:disabled=\"isSaving\"\n\t\t\t\t\t:label=\"$locale.baseText('duplicateWorkflowDialog.cancel')\"\n\t\t\t\t\tfloat=\"right\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\n\nimport { MAX_WORKFLOW_NAME_LENGTH, PLACEHOLDER_EMPTY_WORKFLOW_ID } from '@/constants';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport { showMessage } from '@/mixins/showMessage';\nimport TagsDropdown from '@/components/TagsDropdown.vue';\nimport Modal from './Modal.vue';\nimport { mapStores } from 'pinia';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport type { IWorkflowDataUpdate } from '@/Interface';\nimport type { IPermissions } from '@/permissions';\nimport { getWorkflowPermissions } from '@/permissions';\nimport { useUsersStore } from '@/stores/users.store';\nimport { createEventBus } from '@/event-bus';\nimport { useCredentialsStore } from '@/stores';\n\nexport default mixins(showMessage, workflowHelpers).extend({\n\tcomponents: { TagsDropdown, Modal },\n\tname: 'DuplicateWorkflow',\n\tprops: ['modalName', 'isActive', 'data'],\n\tdata() {\n\t\tconst currentTagIds = this.data.tags;\n\n\t\treturn {\n\t\t\tname: '',\n\t\t\tcurrentTagIds,\n\t\t\tisSaving: false,\n\t\t\tmodalBus: createEventBus(),\n\t\t\tdropdownBus: createEventBus(),\n\t\t\tMAX_WORKFLOW_NAME_LENGTH,\n\t\t\tprevTagIds: currentTagIds,\n\t\t};\n\t},\n\tasync mounted() {\n\t\tthis.name = await this.workflowsStore.getDuplicateCurrentWorkflowName(this.data.name);\n\t\tthis.$nextTick(() => this.focusOnNameInput());\n\t},\n\tcomputed: {\n\t\t...mapStores(useCredentialsStore, useUsersStore, useSettingsStore, useWorkflowsStore),\n\t\tworkflowPermissions(): IPermissions {\n\t\t\tconst isEmptyWorkflow = this.data.id === PLACEHOLDER_EMPTY_WORKFLOW_ID;\n\t\t\tconst isCurrentWorkflowEmpty =\n\t\t\t\tthis.workflowsStore.workflow.id === PLACEHOLDER_EMPTY_WORKFLOW_ID;\n\n\t\t\t// If the workflow to be duplicated is empty and the current workflow is also empty\n\t\t\t// we need to use the current workflow to get the permissions\n\t\t\tconst currentWorkflow =\n\t\t\t\tisEmptyWorkflow && isCurrentWorkflowEmpty\n\t\t\t\t\t? this.workflowsStore.workflow\n\t\t\t\t\t: this.workflowsStore.getWorkflowById(this.data.id);\n\n\t\t\treturn getWorkflowPermissions(this.usersStore.currentUser, currentWorkflow);\n\t\t},\n\t},\n\twatch: {\n\t\tisActive(active) {\n\t\t\tif (active) {\n\t\t\t\tthis.focusOnSelect();\n\t\t\t}\n\t\t},\n\t},\n\tmethods: {\n\t\tfocusOnSelect() {\n\t\t\tthis.dropdownBus.emit('focus');\n\t\t},\n\t\tfocusOnNameInput() {\n\t\t\tconst inputRef = this.$refs.nameInput as HTMLElement | undefined;\n\t\t\tif (inputRef && inputRef.focus) {\n\t\t\t\tinputRef.focus();\n\t\t\t}\n\t\t},\n\t\tonTagsBlur() {\n\t\t\tthis.prevTagIds = this.currentTagIds;\n\t\t},\n\t\tonTagsEsc() {\n\t\t\t// revert last changes\n\t\t\tthis.currentTagIds = this.prevTagIds;\n\t\t},\n\t\tonTagsUpdate(tagIds: string[]) {\n\t\t\tthis.currentTagIds = tagIds;\n\t\t},\n\t\tasync save(): Promise<void> {\n\t\t\tconst name = this.name.trim();\n\t\t\tif (!name) {\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('duplicateWorkflowDialog.errors.missingName.title'),\n\t\t\t\t\tmessage: this.$locale.baseText('duplicateWorkflowDialog.errors.missingName.message'),\n\t\t\t\t\ttype: 'error',\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentWorkflowId = this.data.id;\n\n\t\t\tthis.isSaving = true;\n\n\t\t\ttry {\n\t\t\t\tlet workflowToUpdate: IWorkflowDataUpdate | undefined;\n\t\t\t\tif (currentWorkflowId !== PLACEHOLDER_EMPTY_WORKFLOW_ID) {\n\t\t\t\t\tconst { createdAt, updatedAt, usedCredentials, ...workflow } =\n\t\t\t\t\t\tawait this.workflowsStore.fetchWorkflow(this.data.id);\n\t\t\t\t\tworkflowToUpdate = workflow;\n\n\t\t\t\t\tthis.removeForeignCredentialsFromWorkflow(\n\t\t\t\t\t\tworkflowToUpdate,\n\t\t\t\t\t\tthis.credentialsStore.allCredentials,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst saved = await this.saveAsNewWorkflow({\n\t\t\t\t\tname,\n\t\t\t\t\tdata: workflowToUpdate,\n\t\t\t\t\ttags: this.currentTagIds,\n\t\t\t\t\tresetWebhookUrls: true,\n\t\t\t\t\topenInNewWindow: true,\n\t\t\t\t\tresetNodeIds: true,\n\t\t\t\t});\n\n\t\t\t\tif (saved) {\n\t\t\t\t\tthis.closeDialog();\n\t\t\t\t\tthis.$telemetry.track('User duplicated workflow', {\n\t\t\t\t\t\told_workflow_id: currentWorkflowId,\n\t\t\t\t\t\tworkflow_id: this.data.id,\n\t\t\t\t\t\tsharing_role: this.workflowPermissions.isOwner ? 'owner' : 'sharee',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (error.httpStatusCode === 403) {\n\t\t\t\t\terror.message = this.$locale.baseText('duplicateWorkflowDialog.errors.forbidden.message');\n\n\t\t\t\t\tthis.$showError(\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tthis.$locale.baseText('duplicateWorkflowDialog.errors.forbidden.title'),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.$showError(\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tthis.$locale.baseText('duplicateWorkflowDialog.errors.generic.title'),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tthis.isSaving = false;\n\t\t\t}\n\t\t},\n\t\tcloseDialog(): void {\n\t\t\tthis.modalBus.emit('close');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.content {\n\t> *:not(:last-child) {\n\t\tmargin-bottom: var(--spacing-m);\n\t}\n}\n\n.footer {\n\t> * {\n\t\tmargin-left: var(--spacing-3xs);\n\t}\n}\n</style>\n","<template>\n\t<div v-if=\"uiStore.isModalOpen(name) || keepAlive\">\n\t\t<slot\n\t\t\t:modalName=\"name\"\n\t\t\t:active=\"uiStore.isModalActive(name)\"\n\t\t\t:open=\"uiStore.isModalOpen(name)\"\n\t\t\t:activeId=\"uiStore.getModalActiveId(name)\"\n\t\t\t:mode=\"uiStore.getModalMode(name)\"\n\t\t\t:data=\"uiStore.getModalData(name)\"\n\t\t></slot>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { useUIStore } from '@/stores/ui.store';\nimport { mapStores } from 'pinia';\n\nexport default defineComponent({\n\tname: 'ModalRoot',\n\tprops: {\n\t\tname: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tkeepAlive: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore),\n\t},\n});\n</script>\n","<template>\n\t<Modal\n\t\t:name=\"ONBOARDING_CALL_SIGNUP_MODAL_KEY\"\n\t\t:title=\"$locale.baseText('onboardingCallSignupModal.title')\"\n\t\t:eventBus=\"modalBus\"\n\t\t:center=\"true\"\n\t\t:showClose=\"false\"\n\t\t:beforeClose=\"onModalClose\"\n\t\twidth=\"460px\"\n\t>\n\t\t<template #content>\n\t\t\t<div class=\"pb-m\">\n\t\t\t\t<n8n-text>\n\t\t\t\t\t{{ $locale.baseText('onboardingCallSignupModal.description') }}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t\t<div @keyup.enter=\"onSignup\">\n\t\t\t\t<n8n-input\n\t\t\t\t\tv-model=\"email\"\n\t\t\t\t\t:placeholder=\"$locale.baseText('onboardingCallSignupModal.emailInput.placeholder')\"\n\t\t\t\t/>\n\t\t\t\t<n8n-text v-if=\"showError\" size=\"small\" class=\"mt-4xs\" tag=\"div\" color=\"danger\">\n\t\t\t\t\t{{ $locale.baseText('onboardingCallSignupModal.infoText.emailError') }}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<div :class=\"$style.buttonsContainer\">\n\t\t\t\t<n8n-button\n\t\t\t\t\t:label=\"$locale.baseText('onboardingCallSignupModal.cancelButton.label')\"\n\t\t\t\t\t:disabled=\"loading\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tfloat=\"right\"\n\t\t\t\t\ttype=\"outline\"\n\t\t\t\t\t@click=\"onCancel\"\n\t\t\t\t/>\n\t\t\t\t<n8n-button\n\t\t\t\t\t:disabled=\"email === '' || loading\"\n\t\t\t\t\t:label=\"$locale.baseText('onboardingCallSignupModal.signupButton.label')\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tfloat=\"right\"\n\t\t\t\t\t:loading=\"loading\"\n\t\t\t\t\t@click=\"onSignup\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport { ONBOARDING_CALL_SIGNUP_MODAL_KEY, VALID_EMAIL_REGEX } from '@/constants';\nimport Modal from './Modal.vue';\n\nimport mixins from 'vue-typed-mixins';\nimport { showMessage } from '@/mixins/showMessage';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins(showMessage).extend({\n\tcomponents: {\n\t\tModal,\n\t},\n\tname: 'OnboardingCallSignupModal',\n\tprops: ['modalName'],\n\tdata() {\n\t\treturn {\n\t\t\temail: '',\n\t\t\tmodalBus: createEventBus(),\n\t\t\tONBOARDING_CALL_SIGNUP_MODAL_KEY,\n\t\t\tshowError: false,\n\t\t\tokToClose: false,\n\t\t\tloading: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore),\n\t\tisEmailValid(): boolean {\n\t\t\treturn VALID_EMAIL_REGEX.test(String(this.email).toLowerCase());\n\t\t},\n\t},\n\tmethods: {\n\t\tasync onSignup() {\n\t\t\tif (!this.isEmailValid) {\n\t\t\t\tthis.showError = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.showError = false;\n\t\t\tthis.loading = true;\n\t\t\tthis.okToClose = false;\n\n\t\t\ttry {\n\t\t\t\tawait this.uiStore.applyForOnboardingCall(this.email);\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\ttitle: this.$locale.baseText('onboardingCallSignupSucess.title'),\n\t\t\t\t\tmessage: this.$locale.baseText('onboardingCallSignupSucess.message'),\n\t\t\t\t});\n\t\t\t\tthis.okToClose = true;\n\t\t\t\tthis.modalBus.emit('close');\n\t\t\t} catch (e) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\te,\n\t\t\t\t\tthis.$locale.baseText('onboardingCallSignupFailed.title'),\n\t\t\t\t\tthis.$locale.baseText('onboardingCallSignupFailed.message'),\n\t\t\t\t);\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.okToClose = true;\n\t\t\t}\n\t\t},\n\t\tasync onCancel() {\n\t\t\tthis.okToClose = true;\n\t\t\tthis.modalBus.emit('close');\n\t\t},\n\t\tonModalClose() {\n\t\t\treturn this.okToClose;\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.buttonsContainer {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tcolumn-gap: var(--spacing-xs);\n}\n</style>\n","<template>\n\t<Modal\n\t\t:name=\"PERSONALIZATION_MODAL_KEY\"\n\t\t:title=\"$locale.baseText('personalizationModal.customizeN8n')\"\n\t\t:subtitle=\"$locale.baseText('personalizationModal.theseQuestionsHelpUs')\"\n\t\t:centerTitle=\"true\"\n\t\t:showClose=\"false\"\n\t\t:eventBus=\"modalBus\"\n\t\t:closeOnClickModal=\"false\"\n\t\t:closeOnPressEscape=\"false\"\n\t\twidth=\"460px\"\n\t\tdata-test-id=\"personalization-form\"\n\t\t@enter=\"onSave\"\n\t>\n\t\t<template #content>\n\t\t\t<div :class=\"$style.container\">\n\t\t\t\t<n8n-form-inputs\n\t\t\t\t\t:inputs=\"survey\"\n\t\t\t\t\t:columnView=\"true\"\n\t\t\t\t\t:eventBus=\"formBus\"\n\t\t\t\t\t@submit=\"onSubmit\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<div>\n\t\t\t\t<n8n-button\n\t\t\t\t\t@click=\"onSave\"\n\t\t\t\t\t:loading=\"isSaving\"\n\t\t\t\t\t:label=\"$locale.baseText('personalizationModal.getStarted')\"\n\t\t\t\t\tfloat=\"right\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\n\nconst SURVEY_VERSION = 'v4';\n\nimport {\n\tCOMPANY_SIZE_100_499,\n\tCOMPANY_SIZE_1000_OR_MORE,\n\tCOMPANY_SIZE_20_OR_LESS,\n\tCOMPANY_SIZE_20_99,\n\tCOMPANY_SIZE_500_999,\n\tCOMPANY_SIZE_KEY,\n\tCOMPANY_SIZE_PERSONAL_USE,\n\tGOVERNMENT_INDUSTRY,\n\tHEALTHCARE_INDUSTRY,\n\tLEGAL_INDUSTRY,\n\tOTHER_INDUSTRY_OPTION,\n\tPERSONALIZATION_MODAL_KEY,\n\tSECURITY_INDUSTRY,\n\tEDUCATION_TYPE,\n\tFINANCE_INSURANCE_INDUSTRY,\n\tIT_INDUSTRY,\n\tMARKETING_INDUSTRY,\n\tMEDIA_INDUSTRY,\n\tMANUFACTURING_INDUSTRY,\n\tPHYSICAL_RETAIL_OR_SERVICES,\n\tREAL_ESTATE_OR_CONSTRUCTION,\n\tTELECOMS_INDUSTRY,\n\tOTHER_AUTOMATION_GOAL,\n\tCOMPANY_TYPE_KEY,\n\tEMAIL_KEY,\n\tSAAS_COMPANY_TYPE,\n\tECOMMERCE_COMPANY_TYPE,\n\tMSP_INDUSTRY,\n\tDIGITAL_AGENCY_COMPANY_TYPE,\n\tSYSTEMS_INTEGRATOR_COMPANY_TYPE,\n\tOTHER_COMPANY_TYPE,\n\tPERSONAL_COMPANY_TYPE,\n\tCOMPANY_INDUSTRY_EXTENDED_KEY,\n\tOTHER_COMPANY_INDUSTRY_EXTENDED_KEY,\n\tONBOARDING_PROMPT_TIMEBOX,\n\tFIRST_ONBOARDING_PROMPT_TIMEOUT,\n\tONBOARDING_CALL_SIGNUP_MODAL_KEY,\n\tMARKETING_AUTOMATION_GOAL_KEY,\n\tMARKETING_AUTOMATION_LEAD_GENERATION_GOAL,\n\tMARKETING_AUTOMATION_CUSTOMER_COMMUNICATION,\n\tMARKETING_AUTOMATION_ACTIONS,\n\tMARKETING_AUTOMATION_AD_CAMPAIGN,\n\tMARKETING_AUTOMATION_REPORTING,\n\tMARKETING_AUTOMATION_DATA_SYNCHING,\n\tMARKETING_AUTOMATION_OTHER,\n\tOTHER_MARKETING_AUTOMATION_GOAL_KEY,\n\tROLE_KEY,\n\tROLE_BUSINESS_OWNER,\n\tROLE_CUSTOMER_SUPPORT,\n\tROLE_ENGINEERING,\n\tROLE_DATA_SCIENCE,\n\tROLE_DEVOPS,\n\tROLE_IT,\n\tROLE_SALES_AND_MARKETING,\n\tROLE_SECURITY,\n\tROLE_OTHER,\n\tROLE_OTHER_KEY,\n\tDEVOPS_AUTOMATION_GOAL_OTHER_KEY,\n\tDEVOPS_AUTOMATION_GOAL_KEY,\n\tDEVOPS_AUTOMATION_OTHER,\n\tDEVOPS_AUTOMATION_CI_CD_GOAL,\n\tDEVOPS_AUTOMATION_CLOUD_INFRASTRUCTURE_ORCHESTRATION_GOAL,\n\tDEVOPS_AUTOMATION_DATA_SYNCING_GOAL,\n\tDEVOPS_INCIDENT_RESPONSE_GOAL,\n\tDEVOPS_MONITORING_AND_ALERTING_GOAL,\n\tDEVOPS_REPORTING_GOAL,\n\tDEVOPS_TICKETING_SYSTEMS_INTEGRATIONS_GOAL,\n\tAUTOMATION_BENEFICIARY_KEY,\n\tAUTOMATION_BENEFICIARY_SELF,\n\tAUTOMATION_BENEFICIARY_MY_TEAM,\n\tAUTOMATION_BENEFICIARY_OTHER_TEAMS,\n\tREPORTED_SOURCE_KEY,\n\tREPORTED_SOURCE_GOOGLE,\n\tREPORTED_SOURCE_TWITTER,\n\tREPORTED_SOURCE_LINKEDIN,\n\tREPORTED_SOURCE_YOUTUBE,\n\tREPORTED_SOURCE_FRIEND,\n\tREPORTED_SOURCE_PODCAST,\n\tREPORTED_SOURCE_EVENT,\n\tREPORTED_SOURCE_OTHER,\n\tREPORTED_SOURCE_OTHER_KEY,\n\tVIEWS,\n} from '@/constants';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport { showMessage } from '@/mixins/showMessage';\nimport Modal from './Modal.vue';\nimport type { IFormInputs, IPersonalizationLatestVersion, IUser } from '@/Interface';\nimport { getAccountAge } from '@/utils';\nimport type { GenericValue } from 'n8n-workflow';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins(showMessage, workflowHelpers).extend({\n\tcomponents: { Modal },\n\tname: 'PersonalizationModal',\n\tdata() {\n\t\treturn {\n\t\t\tisSaving: false,\n\t\t\tPERSONALIZATION_MODAL_KEY,\n\t\t\totherWorkAreaFieldVisible: false,\n\t\t\totherCompanyIndustryFieldVisible: false,\n\t\t\tshowAllIndustryQuestions: true,\n\t\t\tmodalBus: createEventBus(),\n\t\t\tformBus: createEventBus(),\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useRootStore, useSettingsStore, useUIStore, useUsersStore),\n\t\tsurvey() {\n\t\t\tconst survey: IFormInputs = [\n\t\t\t\t{\n\t\t\t\t\tname: EMAIL_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.yourEmailAddress'),\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\tplaceholder: this.$locale.baseText('personalizationModal.email'),\n\t\t\t\t\t},\n\t\t\t\t\tshouldDisplay: () =>\n\t\t\t\t\t\tthis.settingsStore.isDesktopDeployment && !this.usersStore.currentUser?.firstName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: COMPANY_TYPE_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.whatBestDescribesYourCompany'),\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tplaceholder: this.$locale.baseText('personalizationModal.select'),\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.saas'),\n\t\t\t\t\t\t\t\tvalue: SAAS_COMPANY_TYPE,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.eCommerce'),\n\t\t\t\t\t\t\t\tvalue: ECOMMERCE_COMPANY_TYPE,\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.digitalAgencyOrConsultant'),\n\t\t\t\t\t\t\t\tvalue: DIGITAL_AGENCY_COMPANY_TYPE,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.systemsIntegrator'),\n\t\t\t\t\t\t\t\tvalue: SYSTEMS_INTEGRATOR_COMPANY_TYPE,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: EDUCATION_TYPE,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.education'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.other'),\n\t\t\t\t\t\t\t\tvalue: OTHER_COMPANY_TYPE,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.imNotUsingN8nForWork'),\n\t\t\t\t\t\t\t\tvalue: PERSONAL_COMPANY_TYPE,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: COMPANY_INDUSTRY_EXTENDED_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\ttype: 'multi-select',\n\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.whichIndustriesIsYourCompanyIn'),\n\t\t\t\t\t\tplaceholder: this.$locale.baseText('personalizationModal.select'),\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: FINANCE_INSURANCE_INDUSTRY,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.financeOrInsurance'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: GOVERNMENT_INDUSTRY,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.government'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: HEALTHCARE_INDUSTRY,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.healthcare'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: IT_INDUSTRY,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.it'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: LEGAL_INDUSTRY,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.legal'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: MSP_INDUSTRY,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.managedServiceProvider'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: MARKETING_INDUSTRY,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.marketing'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: MEDIA_INDUSTRY,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.media'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: MANUFACTURING_INDUSTRY,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.manufacturing'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: PHYSICAL_RETAIL_OR_SERVICES,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.physicalRetailOrServices'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: REAL_ESTATE_OR_CONSTRUCTION,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.realEstateOrConstruction'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: SECURITY_INDUSTRY,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.security'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: TELECOMS_INDUSTRY,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.telecoms'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: OTHER_INDUSTRY_OPTION,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.otherPleaseSpecify'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tshouldDisplay(values): boolean {\n\t\t\t\t\t\tconst companyType = (values as IPersonalizationLatestVersion)[COMPANY_TYPE_KEY];\n\t\t\t\t\t\treturn companyType === OTHER_COMPANY_TYPE;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: OTHER_COMPANY_INDUSTRY_EXTENDED_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tplaceholder: this.$locale.baseText('personalizationModal.specifyYourCompanysIndustry'),\n\t\t\t\t\t},\n\t\t\t\t\tshouldDisplay(values): boolean {\n\t\t\t\t\t\tconst companyType = (values as IPersonalizationLatestVersion)[COMPANY_TYPE_KEY];\n\t\t\t\t\t\tconst companyIndustry = (values as IPersonalizationLatestVersion)[\n\t\t\t\t\t\t\tCOMPANY_INDUSTRY_EXTENDED_KEY\n\t\t\t\t\t\t];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tcompanyType === OTHER_COMPANY_TYPE &&\n\t\t\t\t\t\t\t!!companyIndustry &&\n\t\t\t\t\t\t\tcompanyIndustry.includes(OTHER_INDUSTRY_OPTION)\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: ROLE_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.whichRoleBestDescribesYou'),\n\t\t\t\t\t\tplaceholder: this.$locale.baseText('personalizationModal.select'),\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: ROLE_BUSINESS_OWNER,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.businessOwner'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: ROLE_CUSTOMER_SUPPORT,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.customerSupport'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: ROLE_DATA_SCIENCE,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.dataScience'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: ROLE_DEVOPS,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.devops'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: ROLE_IT,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.it'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: ROLE_ENGINEERING,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.engineering'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: ROLE_SALES_AND_MARKETING,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.salesAndMarketing'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: ROLE_SECURITY,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.security'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: ROLE_OTHER,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.otherPleaseSpecify'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tshouldDisplay(values): boolean {\n\t\t\t\t\t\tconst companyType = (values as IPersonalizationLatestVersion)[COMPANY_TYPE_KEY];\n\t\t\t\t\t\treturn companyType !== PERSONAL_COMPANY_TYPE;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: ROLE_OTHER_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tplaceholder: this.$locale.baseText('personalizationModal.specifyYourRole'),\n\t\t\t\t\t},\n\t\t\t\t\tshouldDisplay(values): boolean {\n\t\t\t\t\t\tconst companyType = (values as IPersonalizationLatestVersion)[COMPANY_TYPE_KEY];\n\t\t\t\t\t\tconst role = (values as IPersonalizationLatestVersion)[ROLE_KEY];\n\t\t\t\t\t\treturn companyType !== PERSONAL_COMPANY_TYPE && role === ROLE_OTHER;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: DEVOPS_AUTOMATION_GOAL_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\ttype: 'multi-select',\n\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.whatAreYouLookingToAutomate'),\n\t\t\t\t\t\tplaceholder: this.$locale.baseText('personalizationModal.select'),\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: DEVOPS_AUTOMATION_CI_CD_GOAL,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.cicd'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: DEVOPS_AUTOMATION_CLOUD_INFRASTRUCTURE_ORCHESTRATION_GOAL,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText(\n\t\t\t\t\t\t\t\t\t'personalizationModal.cloudInfrastructureOrchestration',\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: DEVOPS_AUTOMATION_DATA_SYNCING_GOAL,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.dataSynching'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: DEVOPS_INCIDENT_RESPONSE_GOAL,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.incidentResponse'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: DEVOPS_MONITORING_AND_ALERTING_GOAL,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.monitoringAndAlerting'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: DEVOPS_REPORTING_GOAL,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.reporting'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: DEVOPS_TICKETING_SYSTEMS_INTEGRATIONS_GOAL,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.ticketingSystemsIntegrations'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: OTHER_AUTOMATION_GOAL,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.other'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tshouldDisplay(values): boolean {\n\t\t\t\t\t\tconst companyType = (values as IPersonalizationLatestVersion)[COMPANY_TYPE_KEY];\n\t\t\t\t\t\tconst role = (values as IPersonalizationLatestVersion)[ROLE_KEY] as string;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tcompanyType !== PERSONAL_COMPANY_TYPE &&\n\t\t\t\t\t\t\t[ROLE_DEVOPS, ROLE_ENGINEERING, ROLE_IT].includes(role)\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: DEVOPS_AUTOMATION_GOAL_OTHER_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tplaceholder: this.$locale.baseText('personalizationModal.specifyYourAutomationGoal'),\n\t\t\t\t\t},\n\t\t\t\t\tshouldDisplay(values): boolean {\n\t\t\t\t\t\tconst companyType = (values as IPersonalizationLatestVersion)[COMPANY_TYPE_KEY];\n\t\t\t\t\t\tconst goals = (values as IPersonalizationLatestVersion)[DEVOPS_AUTOMATION_GOAL_KEY];\n\t\t\t\t\t\tconst role = (values as IPersonalizationLatestVersion)[ROLE_KEY] as string;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tcompanyType !== PERSONAL_COMPANY_TYPE &&\n\t\t\t\t\t\t\t[ROLE_DEVOPS, ROLE_ENGINEERING, ROLE_IT].includes(role) &&\n\t\t\t\t\t\t\t!!goals &&\n\t\t\t\t\t\t\tgoals.includes(DEVOPS_AUTOMATION_OTHER)\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: MARKETING_AUTOMATION_GOAL_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\ttype: 'multi-select',\n\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.specifySalesMarketingGoal'),\n\t\t\t\t\t\tplaceholder: this.$locale.baseText('personalizationModal.select'),\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.leadGeneration'),\n\t\t\t\t\t\t\t\tvalue: MARKETING_AUTOMATION_LEAD_GENERATION_GOAL,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.customerCommunication'),\n\t\t\t\t\t\t\t\tvalue: MARKETING_AUTOMATION_CUSTOMER_COMMUNICATION,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.customerActions'),\n\t\t\t\t\t\t\t\tvalue: MARKETING_AUTOMATION_ACTIONS,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.adCampaign'),\n\t\t\t\t\t\t\t\tvalue: MARKETING_AUTOMATION_AD_CAMPAIGN,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.reporting'),\n\t\t\t\t\t\t\t\tvalue: MARKETING_AUTOMATION_REPORTING,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.dataSynching'),\n\t\t\t\t\t\t\t\tvalue: MARKETING_AUTOMATION_DATA_SYNCHING,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.other'),\n\t\t\t\t\t\t\t\tvalue: MARKETING_AUTOMATION_OTHER,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tshouldDisplay(values): boolean {\n\t\t\t\t\t\tconst companyType = (values as IPersonalizationLatestVersion)[COMPANY_TYPE_KEY];\n\t\t\t\t\t\tconst role = (values as IPersonalizationLatestVersion)[ROLE_KEY];\n\t\t\t\t\t\treturn companyType !== PERSONAL_COMPANY_TYPE && role === ROLE_SALES_AND_MARKETING;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: OTHER_MARKETING_AUTOMATION_GOAL_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tplaceholder: this.$locale.baseText(\n\t\t\t\t\t\t\t'personalizationModal.specifyOtherSalesAndMarketingGoal',\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tshouldDisplay(values): boolean {\n\t\t\t\t\t\tconst companyType = (values as IPersonalizationLatestVersion)[COMPANY_TYPE_KEY];\n\t\t\t\t\t\tconst goals = (values as IPersonalizationLatestVersion)[MARKETING_AUTOMATION_GOAL_KEY];\n\t\t\t\t\t\tconst role = (values as IPersonalizationLatestVersion)[ROLE_KEY];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tcompanyType !== PERSONAL_COMPANY_TYPE &&\n\t\t\t\t\t\t\trole === ROLE_SALES_AND_MARKETING &&\n\t\t\t\t\t\t\t!!goals &&\n\t\t\t\t\t\t\tgoals.includes(MARKETING_AUTOMATION_OTHER)\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AUTOMATION_BENEFICIARY_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.specifyAutomationBeneficiary'),\n\t\t\t\t\t\tplaceholder: this.$locale.baseText('personalizationModal.select'),\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.myself'),\n\t\t\t\t\t\t\t\tvalue: AUTOMATION_BENEFICIARY_SELF,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.myTeam'),\n\t\t\t\t\t\t\t\tvalue: AUTOMATION_BENEFICIARY_MY_TEAM,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.otherTeams'),\n\t\t\t\t\t\t\t\tvalue: AUTOMATION_BENEFICIARY_OTHER_TEAMS,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tshouldDisplay(values): boolean {\n\t\t\t\t\t\tconst companyType = (values as IPersonalizationLatestVersion)[COMPANY_TYPE_KEY];\n\t\t\t\t\t\treturn companyType !== PERSONAL_COMPANY_TYPE;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: COMPANY_SIZE_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.howBigIsYourCompany'),\n\t\t\t\t\t\tplaceholder: this.$locale.baseText('personalizationModal.select'),\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.lessThan20People'),\n\t\t\t\t\t\t\t\tvalue: COMPANY_SIZE_20_OR_LESS,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: `20-99 ${this.$locale.baseText('personalizationModal.people')}`,\n\t\t\t\t\t\t\t\tvalue: COMPANY_SIZE_20_99,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: `100-499 ${this.$locale.baseText('personalizationModal.people')}`,\n\t\t\t\t\t\t\t\tvalue: COMPANY_SIZE_100_499,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: `500-999 ${this.$locale.baseText('personalizationModal.people')}`,\n\t\t\t\t\t\t\t\tvalue: COMPANY_SIZE_500_999,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: `1000+ ${this.$locale.baseText('personalizationModal.people')}`,\n\t\t\t\t\t\t\t\tvalue: COMPANY_SIZE_1000_OR_MORE,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.imNotUsingN8nForWork'),\n\t\t\t\t\t\t\t\tvalue: COMPANY_SIZE_PERSONAL_USE,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tshouldDisplay(values): boolean {\n\t\t\t\t\t\tconst companyType = (values as IPersonalizationLatestVersion)[COMPANY_TYPE_KEY];\n\t\t\t\t\t\treturn companyType !== PERSONAL_COMPANY_TYPE;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: REPORTED_SOURCE_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.howDidYouHearAboutN8n'),\n\t\t\t\t\t\tplaceholder: this.$locale.baseText('personalizationModal.select'),\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'Google',\n\t\t\t\t\t\t\t\tvalue: REPORTED_SOURCE_GOOGLE,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'Twitter',\n\t\t\t\t\t\t\t\tvalue: REPORTED_SOURCE_TWITTER,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'LinkedIn',\n\t\t\t\t\t\t\t\tvalue: REPORTED_SOURCE_LINKEDIN,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: 'YouTube',\n\t\t\t\t\t\t\t\tvalue: REPORTED_SOURCE_YOUTUBE,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.friendWordOfMouth'),\n\t\t\t\t\t\t\t\tvalue: REPORTED_SOURCE_FRIEND,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.podcast'),\n\t\t\t\t\t\t\t\tvalue: REPORTED_SOURCE_PODCAST,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.event'),\n\t\t\t\t\t\t\t\tvalue: REPORTED_SOURCE_EVENT,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('personalizationModal.otherPleaseSpecify'),\n\t\t\t\t\t\t\t\tvalue: REPORTED_SOURCE_OTHER,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: REPORTED_SOURCE_OTHER_KEY,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tplaceholder: this.$locale.baseText('personalizationModal.specifyReportedSource'),\n\t\t\t\t\t},\n\t\t\t\t\tshouldDisplay(values): boolean {\n\t\t\t\t\t\tconst reportedSource = (values as IPersonalizationLatestVersion)[REPORTED_SOURCE_KEY];\n\t\t\t\t\t\treturn reportedSource === REPORTED_SOURCE_OTHER;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t];\n\n\t\t\treturn survey;\n\t\t},\n\t},\n\tmethods: {\n\t\tcloseDialog() {\n\t\t\tthis.modalBus.emit('close');\n\t\t\t// In case the redirect to canvas for new users didn't happen\n\t\t\t// we try again after closing the modal\n\t\t\tif (this.$route.name !== VIEWS.NEW_WORKFLOW) {\n\t\t\t\tvoid this.$router.replace({ name: VIEWS.NEW_WORKFLOW });\n\t\t\t}\n\t\t},\n\t\tonSave() {\n\t\t\tthis.formBus.emit('submit');\n\t\t},\n\t\tasync onSubmit(values: IPersonalizationLatestVersion): Promise<void> {\n\t\t\tthis.$data.isSaving = true;\n\n\t\t\ttry {\n\t\t\t\tconst survey: Record<string, GenericValue> = {\n\t\t\t\t\t...values,\n\t\t\t\t\tversion: SURVEY_VERSION,\n\t\t\t\t\tpersonalization_survey_submitted_at: new Date().toISOString(),\n\t\t\t\t\tpersonalization_survey_n8n_version: this.rootStore.versionCli,\n\t\t\t\t};\n\n\t\t\t\tawait this.$externalHooks().run('personalizationModal.onSubmit', survey);\n\n\t\t\t\tawait this.usersStore.submitPersonalizationSurvey(survey as IPersonalizationLatestVersion);\n\n\t\t\t\tif (Object.keys(values).length === 0) {\n\t\t\t\t\tthis.closeDialog();\n\t\t\t\t}\n\n\t\t\t\tawait this.fetchOnboardingPrompt();\n\t\t\t} catch (e) {\n\t\t\t\tthis.$showError(e, 'Error while submitting results');\n\t\t\t}\n\n\t\t\tthis.$data.isSaving = false;\n\t\t\tthis.closeDialog();\n\t\t},\n\t\tasync fetchOnboardingPrompt() {\n\t\t\tif (\n\t\t\t\tthis.settingsStore.onboardingCallPromptEnabled &&\n\t\t\t\tgetAccountAge(this.usersStore.currentUser || ({} as IUser)) <= ONBOARDING_PROMPT_TIMEBOX\n\t\t\t) {\n\t\t\t\tconst onboardingResponse = await this.uiStore.getNextOnboardingPrompt();\n\t\t\t\tconst promptTimeout =\n\t\t\t\t\tonboardingResponse.toast_sequence_number === 1 ? FIRST_ONBOARDING_PROMPT_TIMEOUT : 1000;\n\n\t\t\t\tif (onboardingResponse.title && onboardingResponse.description) {\n\t\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\t\tthis.$showToast({\n\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\ttitle: onboardingResponse.title,\n\t\t\t\t\t\t\tmessage: onboardingResponse.description,\n\t\t\t\t\t\t\tduration: 0,\n\t\t\t\t\t\t\tcustomClass: 'clickable',\n\t\t\t\t\t\t\tcloseOnClick: true,\n\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\tthis.$telemetry.track('user clicked onboarding toast', {\n\t\t\t\t\t\t\t\t\tseq_num: onboardingResponse.toast_sequence_number,\n\t\t\t\t\t\t\t\t\ttitle: onboardingResponse.title,\n\t\t\t\t\t\t\t\t\tdescription: onboardingResponse.description,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.uiStore.openModal(ONBOARDING_CALL_SIGNUP_MODAL_KEY);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}, promptTimeout);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\t> div,\n\tsection > div:not(:last-child) {\n\t\tmargin-bottom: var(--spacing-m);\n\t}\n}\n</style>\n","<template>\n\t<el-row class=\"tags-header\">\n\t\t<el-col :span=\"10\">\n\t\t\t<n8n-input\n\t\t\t\t:placeholder=\"$locale.baseText('tagsTableHeader.searchTags')\"\n\t\t\t\t:value=\"search\"\n\t\t\t\t@input=\"onSearchChange\"\n\t\t\t\t:disabled=\"disabled\"\n\t\t\t\tclearable\n\t\t\t\t:maxlength=\"maxLength\"\n\t\t\t>\n\t\t\t\t<template #prefix>\n\t\t\t\t\t<font-awesome-icon icon=\"search\" />\n\t\t\t\t</template>\n\t\t\t</n8n-input>\n\t\t</el-col>\n\t\t<el-col :span=\"14\">\n\t\t\t<n8n-button\n\t\t\t\t@click=\"onAddNew\"\n\t\t\t\t:disabled=\"disabled\"\n\t\t\t\ticon=\"plus\"\n\t\t\t\t:label=\"$locale.baseText('tagsTableHeader.addNew')\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tfloat=\"right\"\n\t\t\t/>\n\t\t</el-col>\n\t</el-row>\n</template>\n\n<script lang=\"ts\">\nimport { MAX_TAG_NAME_LENGTH } from '@/constants';\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tprops: {\n\t\tdisabled: {\n\t\t\tdefault: false,\n\t\t},\n\t\tsearch: {\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tmaxLength: MAX_TAG_NAME_LENGTH,\n\t\t};\n\t},\n\tmethods: {\n\t\tonAddNew() {\n\t\t\tthis.$emit('createEnable');\n\t\t},\n\t\tonSearchChange(search: string) {\n\t\t\tthis.$emit('searchChange', search);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.tags-header {\n\tmargin-bottom: 15px;\n}\n</style>\n","<template>\n\t<el-table\n\t\tstripe\n\t\tmax-height=\"450\"\n\t\tref=\"table\"\n\t\t:empty-text=\"$locale.baseText('tagsTable.noMatchingTagsExist')\"\n\t\t:data=\"rows\"\n\t\t:span-method=\"getSpan\"\n\t\t:row-class-name=\"getRowClasses\"\n\t\tv-loading=\"isLoading\"\n\t>\n\t\t<el-table-column :label=\"$locale.baseText('tagsTable.name')\">\n\t\t\t<template #default=\"scope\">\n\t\t\t\t<div class=\"name\" :key=\"scope.row.id\" @keydown.stop>\n\t\t\t\t\t<transition name=\"fade\" mode=\"out-in\">\n\t\t\t\t\t\t<n8n-input\n\t\t\t\t\t\t\tv-if=\"scope.row.create || scope.row.update\"\n\t\t\t\t\t\t\t:value=\"newName\"\n\t\t\t\t\t\t\t:maxlength=\"maxLength\"\n\t\t\t\t\t\t\t@input=\"onNewNameChange\"\n\t\t\t\t\t\t\tref=\"nameInput\"\n\t\t\t\t\t\t></n8n-input>\n\t\t\t\t\t\t<span v-else-if=\"scope.row.delete\">\n\t\t\t\t\t\t\t<span>{{ $locale.baseText('tagsTable.areYouSureYouWantToDeleteThisTag') }}</span>\n\t\t\t\t\t\t\t<input ref=\"deleteHiddenInput\" class=\"hidden\" />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span v-else :class=\"{ disabled: scope.row.disable }\">\n\t\t\t\t\t\t\t{{ scope.row.tag.name }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</transition>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</el-table-column>\n\t\t<el-table-column :label=\"$locale.baseText('tagsTable.usage')\" width=\"150\">\n\t\t\t<template #default=\"scope\">\n\t\t\t\t<transition name=\"fade\" mode=\"out-in\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if=\"!scope.row.create && !scope.row.delete\"\n\t\t\t\t\t\t:class=\"{ disabled: scope.row.disable }\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ scope.row.usage }}\n\t\t\t\t\t</div>\n\t\t\t\t</transition>\n\t\t\t</template>\n\t\t</el-table-column>\n\t\t<el-table-column>\n\t\t\t<template #default=\"scope\">\n\t\t\t\t<transition name=\"fade\" mode=\"out-in\">\n\t\t\t\t\t<div class=\"ops\" v-if=\"scope.row.create\">\n\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t:label=\"$locale.baseText('tagsTable.cancel')\"\n\t\t\t\t\t\t\t@click.stop=\"cancel\"\n\t\t\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t\t\t:disabled=\"isSaving\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t:label=\"$locale.baseText('tagsTable.createTag')\"\n\t\t\t\t\t\t\t@click.stop=\"apply\"\n\t\t\t\t\t\t\t:loading=\"isSaving\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"ops\" v-else-if=\"scope.row.update\">\n\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t:label=\"$locale.baseText('tagsTable.cancel')\"\n\t\t\t\t\t\t\t@click.stop=\"cancel\"\n\t\t\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t\t\t:disabled=\"isSaving\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t:label=\"$locale.baseText('tagsTable.saveChanges')\"\n\t\t\t\t\t\t\t@click.stop=\"apply\"\n\t\t\t\t\t\t\t:loading=\"isSaving\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"ops\" v-else-if=\"scope.row.delete\">\n\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t:label=\"$locale.baseText('tagsTable.cancel')\"\n\t\t\t\t\t\t\t@click.stop=\"cancel\"\n\t\t\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t\t\t:disabled=\"isSaving\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t:label=\"$locale.baseText('tagsTable.deleteTag')\"\n\t\t\t\t\t\t\t@click.stop=\"apply\"\n\t\t\t\t\t\t\t:loading=\"isSaving\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"ops main\" v-else-if=\"!scope.row.disable\">\n\t\t\t\t\t\t<n8n-icon-button\n\t\t\t\t\t\t\t:title=\"$locale.baseText('tagsTable.editTag')\"\n\t\t\t\t\t\t\t@click.stop=\"enableUpdate(scope.row)\"\n\t\t\t\t\t\t\ticon=\"pen\"\n\t\t\t\t\t\t\tdata-test-id=\"edit-tag-button\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<n8n-icon-button\n\t\t\t\t\t\t\tv-if=\"scope.row.canDelete\"\n\t\t\t\t\t\t\t:title=\"$locale.baseText('tagsTable.deleteTag')\"\n\t\t\t\t\t\t\t@click.stop=\"enableDelete(scope.row)\"\n\t\t\t\t\t\t\ticon=\"trash\"\n\t\t\t\t\t\t\tdata-test-id=\"delete-tag-button\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</transition>\n\t\t\t</template>\n\t\t</el-table-column>\n\t</el-table>\n</template>\n\n<script lang=\"ts\">\nimport type { Table as ElTable } from 'element-ui';\nimport { MAX_TAG_NAME_LENGTH } from '@/constants';\nimport type { ITagRow } from '@/Interface';\nimport { defineComponent } from 'vue';\nimport type { N8nInput } from 'n8n-design-system';\n\ntype TableRef = InstanceType<typeof ElTable>;\ntype N8nInputRef = InstanceType<typeof N8nInput>;\n\nconst INPUT_TRANSITION_TIMEOUT = 350;\nconst DELETE_TRANSITION_TIMEOUT = 100;\n\nexport default defineComponent({\n\tname: 'TagsTable',\n\tprops: ['rows', 'isLoading', 'newName', 'isSaving'],\n\tdata() {\n\t\treturn {\n\t\t\tmaxLength: MAX_TAG_NAME_LENGTH,\n\t\t};\n\t},\n\tmounted() {\n\t\tif (this.rows.length === 1 && this.rows[0].create) {\n\t\t\tthis.focusOnInput();\n\t\t}\n\t},\n\tmethods: {\n\t\tgetRowClasses: ({ row }: { row: ITagRow }): string => {\n\t\t\treturn row.disable ? 'disabled' : '';\n\t\t},\n\n\t\tgetSpan({ row, columnIndex }: { row: ITagRow; columnIndex: number }): number | number[] {\n\t\t\t// expand text column with delete message\n\t\t\tif (columnIndex === 0 && row.tag && row.delete) {\n\t\t\t\treturn [1, 2];\n\t\t\t}\n\t\t\t// hide usage column on delete\n\t\t\tif (columnIndex === 1 && row.tag && row.delete) {\n\t\t\t\treturn [0, 0];\n\t\t\t}\n\n\t\t\treturn 1;\n\t\t},\n\n\t\tenableUpdate(row: ITagRow): void {\n\t\t\tif (row.tag) {\n\t\t\t\tthis.$emit('updateEnable', row.tag.id);\n\t\t\t\tthis.$emit('newNameChange', row.tag.name);\n\t\t\t\tthis.focusOnInput();\n\t\t\t}\n\t\t},\n\n\t\tenableDelete(row: ITagRow): void {\n\t\t\tif (row.tag) {\n\t\t\t\tthis.$emit('deleteEnable', row.tag.id);\n\t\t\t\tthis.focusOnDelete();\n\t\t\t}\n\t\t},\n\n\t\tcancel(): void {\n\t\t\tthis.$emit('cancelOperation');\n\t\t},\n\t\tapply(): void {\n\t\t\tthis.$emit('applyOperation');\n\t\t},\n\n\t\tonNewNameChange(name: string): void {\n\t\t\tthis.$emit('newNameChange', name);\n\t\t},\n\n\t\tfocusOnInput(): void {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst inputRef = this.$refs.nameInput as N8nInputRef | undefined;\n\t\t\t\tif (inputRef && inputRef.focus) {\n\t\t\t\t\tinputRef.focus();\n\t\t\t\t}\n\t\t\t}, INPUT_TRANSITION_TIMEOUT);\n\t\t},\n\n\t\tfocusOnDelete(): void {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst inputRef = this.$refs.deleteHiddenInput as N8nInputRef | undefined;\n\t\t\t\tif (inputRef && inputRef.focus) {\n\t\t\t\t\tinputRef.focus();\n\t\t\t\t}\n\t\t\t}, DELETE_TRANSITION_TIMEOUT);\n\t\t},\n\n\t\tfocusOnCreate(): void {\n\t\t\tconst bodyWrapperRef = (this.$refs.table as TableRef).$refs.bodyWrapper as HTMLElement;\n\t\t\tif (bodyWrapperRef) {\n\t\t\t\tbodyWrapperRef.scrollTop = 0;\n\t\t\t}\n\n\t\t\tthis.focusOnInput();\n\t\t},\n\t},\n\twatch: {\n\t\trows(newValue: ITagRow[] | undefined) {\n\t\t\tif (newValue && newValue[0] && newValue[0].create) {\n\t\t\t\tthis.focusOnCreate();\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.name {\n\tmin-height: 45px;\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.ops {\n\tmin-height: 45px;\n\tjustify-content: flex-end;\n\talign-items: center;\n\tdisplay: flex;\n\tflex-wrap: nowrap;\n\tfloat: right;\n\n\t> * {\n\t\tmargin: 2px;\n\t}\n}\n\n.disabled {\n\tcolor: #afafaf;\n}\n\n.hidden {\n\tposition: absolute;\n\tz-index: 0;\n\topacity: 0;\n}\n\n.ops.main {\n\tdisplay: none;\n\tmargin-left: 2px;\n}\n\n::v-deep tr.disabled {\n\tpointer-events: none;\n}\n\ntr:hover .ops:not(.disabled) {\n\tdisplay: flex;\n}\n\n.fade-enter-active,\n.fade-leave-active {\n\ttransition: opacity 0.2s;\n}\n.fade-enter,\n.fade-leave-to {\n\topacity: 0;\n}\n</style>\n","<template>\n\t<div @keyup.enter=\"applyOperation\" @keyup.esc=\"cancelOperation\">\n\t\t<TagsTableHeader\n\t\t\t:search=\"search\"\n\t\t\t:disabled=\"isHeaderDisabled()\"\n\t\t\t@searchChange=\"onSearchChange\"\n\t\t\t@createEnable=\"onCreateEnable\"\n\t\t/>\n\t\t<TagsTable\n\t\t\t:rows=\"rows\"\n\t\t\t:isLoading=\"isLoading\"\n\t\t\t:isSaving=\"isSaving\"\n\t\t\t:newName=\"newName\"\n\t\t\t@newNameChange=\"onNewNameChange\"\n\t\t\t@updateEnable=\"onUpdateEnable\"\n\t\t\t@deleteEnable=\"onDeleteEnable\"\n\t\t\t@cancelOperation=\"cancelOperation\"\n\t\t\t@applyOperation=\"applyOperation\"\n\t\t\tref=\"tagsTable\"\n\t\t\tdata-test-id=\"tags-table\"\n\t\t/>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nimport type { ITag, ITagRow } from '@/Interface';\nimport TagsTableHeader from '@/components/TagsManager/TagsView/TagsTableHeader.vue';\nimport TagsTable from '@/components/TagsManager/TagsView/TagsTable.vue';\nimport { mapStores } from 'pinia';\nimport { useUsersStore } from '@/stores/users.store';\n\nconst matches = (name: string, filter: string) =>\n\tname.toLowerCase().trim().includes(filter.toLowerCase().trim());\n\nexport default defineComponent({\n\tcomponents: { TagsTableHeader, TagsTable },\n\tname: 'TagsView',\n\tprops: ['tags', 'isLoading'],\n\tdata() {\n\t\treturn {\n\t\t\tcreateEnabled: false,\n\t\t\tdeleteId: '',\n\t\t\tupdateId: '',\n\t\t\tsearch: '',\n\t\t\tnewName: '',\n\t\t\tstickyIds: new Set(),\n\t\t\tisSaving: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUsersStore),\n\t\tisCreateEnabled(): boolean {\n\t\t\treturn (this.tags || []).length === 0 || this.$data.createEnabled;\n\t\t},\n\t\trows(): ITagRow[] {\n\t\t\tconst getUsage = (count: number | undefined) =>\n\t\t\t\tcount && count > 0\n\t\t\t\t\t? this.$locale.baseText('tagsView.inUse', { adjustToNumber: count })\n\t\t\t\t\t: this.$locale.baseText('tagsView.notBeingUsed');\n\n\t\t\tconst disabled = this.isCreateEnabled || this.$data.updateId || this.$data.deleteId;\n\t\t\tconst tagRows = (this.tags || [])\n\t\t\t\t.filter((tag: ITag) => this.stickyIds.has(tag.id) || matches(tag.name, this.$data.search))\n\t\t\t\t.map(\n\t\t\t\t\t(tag: ITag): ITagRow => ({\n\t\t\t\t\t\ttag,\n\t\t\t\t\t\tusage: getUsage(tag.usageCount),\n\t\t\t\t\t\tdisable: disabled && tag.id !== this.deleteId && tag.id !== this.$data.updateId,\n\t\t\t\t\t\tupdate: disabled && tag.id === this.$data.updateId,\n\t\t\t\t\t\tdelete: disabled && tag.id === this.$data.deleteId,\n\t\t\t\t\t\tcanDelete: this.usersStore.canUserDeleteTags,\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\treturn this.isCreateEnabled ? [{ create: true }, ...tagRows] : tagRows;\n\t\t},\n\t},\n\tmethods: {\n\t\tonNewNameChange(name: string): void {\n\t\t\tthis.newName = name;\n\t\t},\n\t\tonSearchChange(search: string): void {\n\t\t\tthis.$data.stickyIds.clear();\n\t\t\tthis.$data.search = search;\n\t\t},\n\t\tisHeaderDisabled(): boolean {\n\t\t\treturn (\n\t\t\t\tthis.isLoading || !!(this.isCreateEnabled || this.$data.updateId || this.$data.deleteId)\n\t\t\t);\n\t\t},\n\n\t\tonUpdateEnable(updateId: string): void {\n\t\t\tthis.updateId = updateId;\n\t\t},\n\t\tdisableUpdate(): void {\n\t\t\tthis.updateId = '';\n\t\t\tthis.newName = '';\n\t\t},\n\t\tupdateTag(): void {\n\t\t\tthis.$data.isSaving = true;\n\t\t\tconst name = this.newName.trim();\n\t\t\tconst onUpdate = (updated: boolean) => {\n\t\t\t\tthis.$data.isSaving = false;\n\t\t\t\tif (updated) {\n\t\t\t\t\tthis.stickyIds.add(this.updateId);\n\t\t\t\t\tthis.disableUpdate();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.$emit('update', this.updateId, name, onUpdate);\n\t\t},\n\n\t\tonDeleteEnable(deleteId: string): void {\n\t\t\tthis.deleteId = deleteId;\n\t\t},\n\t\tdisableDelete(): void {\n\t\t\tthis.deleteId = '';\n\t\t},\n\t\tdeleteTag(): void {\n\t\t\tthis.$data.isSaving = true;\n\t\t\tconst onDelete = (deleted: boolean) => {\n\t\t\t\tif (deleted) {\n\t\t\t\t\tthis.disableDelete();\n\t\t\t\t}\n\t\t\t\tthis.$data.isSaving = false;\n\t\t\t};\n\n\t\t\tthis.$emit('delete', this.deleteId, onDelete);\n\t\t},\n\n\t\tonCreateEnable(): void {\n\t\t\tthis.$data.createEnabled = true;\n\t\t\tthis.$data.newName = '';\n\t\t},\n\t\tdisableCreate(): void {\n\t\t\tthis.$data.createEnabled = false;\n\t\t\tthis.$emit('disableCreate');\n\t\t},\n\t\tcreateTag(): void {\n\t\t\tthis.$data.isSaving = true;\n\t\t\tconst name = this.$data.newName.trim();\n\t\t\tconst onCreate = (created: ITag | null, error?: Error) => {\n\t\t\t\tif (created) {\n\t\t\t\t\tthis.stickyIds.add(created.id);\n\t\t\t\t\tthis.disableCreate();\n\t\t\t\t}\n\t\t\t\tthis.$data.isSaving = false;\n\t\t\t};\n\n\t\t\tthis.$emit('create', name, onCreate);\n\t\t},\n\n\t\tapplyOperation(): void {\n\t\t\tif (this.$data.isSaving) {\n\t\t\t\treturn;\n\t\t\t} else if (this.isCreateEnabled) {\n\t\t\t\tthis.createTag();\n\t\t\t} else if (this.$data.updateId) {\n\t\t\t\tthis.updateTag();\n\t\t\t} else if (this.$data.deleteId) {\n\t\t\t\tthis.deleteTag();\n\t\t\t}\n\t\t},\n\t\tcancelOperation(): void {\n\t\t\tif (this.$data.isSaving) {\n\t\t\t\treturn;\n\t\t\t} else if (this.isCreateEnabled) {\n\t\t\t\tthis.disableCreate();\n\t\t\t} else if (this.$data.updateId) {\n\t\t\t\tthis.disableUpdate();\n\t\t\t} else if (this.$data.deleteId) {\n\t\t\t\tthis.disableDelete();\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<div class=\"container\">\n\t\t<el-col class=\"notags\" :span=\"16\">\n\t\t\t<div class=\"icon\">🗄️</div>\n\t\t\t<div>\n\t\t\t\t<div class=\"headline\">\n\t\t\t\t\t{{ $locale.baseText('noTagsView.readyToOrganizeYourWorkflows') }}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"description\">\n\t\t\t\t\t{{ $locale.baseText('noTagsView.withWorkflowTagsYouReFree') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<n8n-button label=\"Create a tag\" size=\"large\" @click=\"$emit('enableCreate')\" />\n\t\t</el-col>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tname: 'NoTagsView',\n});\n</script>\n\n<style lang=\"scss\" scoped>\n$--footer-spacing: 45px;\n\n.container {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tmargin-top: $--footer-spacing;\n}\n\n.notags {\n\tword-break: normal;\n\ttext-align: center;\n\n\t> * {\n\t\tmargin-bottom: 32px;\n\t}\n}\n\n.icon {\n\tfont-size: 36px;\n\tline-height: 14px;\n}\n\n.headline {\n\tfont-size: 17.6px;\n\tcolor: black;\n\tmargin-bottom: 12px;\n}\n\n.description {\n\tfont-size: 14px;\n\tline-height: 21px;\n}\n</style>\n","<template>\n\t<Modal\n\t\t:title=\"$locale.baseText('tagsManager.manageTags')\"\n\t\t:name=\"TAGS_MANAGER_MODAL_KEY\"\n\t\t:eventBus=\"modalBus\"\n\t\t@enter=\"onEnter\"\n\t\tminWidth=\"620px\"\n\t\tminHeight=\"420px\"\n\t>\n\t\t<template #content>\n\t\t\t<el-row>\n\t\t\t\t<TagsView\n\t\t\t\t\tv-if=\"hasTags || isCreating\"\n\t\t\t\t\t:isLoading=\"isLoading\"\n\t\t\t\t\t:tags=\"tags\"\n\t\t\t\t\t@create=\"onCreate\"\n\t\t\t\t\t@update=\"onUpdate\"\n\t\t\t\t\t@delete=\"onDelete\"\n\t\t\t\t\t@disableCreate=\"onDisableCreate\"\n\t\t\t\t/>\n\t\t\t\t<NoTagsView @enableCreate=\"onEnableCreate\" v-else />\n\t\t\t</el-row>\n\t\t</template>\n\t\t<template #footer=\"{ close }\">\n\t\t\t<n8n-button :label=\"$locale.baseText('tagsManager.done')\" @click=\"close\" float=\"right\" />\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\n\nimport type { ITag } from '@/Interface';\n\nimport { showMessage } from '@/mixins/showMessage';\nimport TagsView from '@/components/TagsManager/TagsView/TagsView.vue';\nimport NoTagsView from '@/components/TagsManager/NoTagsView.vue';\nimport Modal from '@/components/Modal.vue';\nimport { TAGS_MANAGER_MODAL_KEY } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useTagsStore } from '@/stores/tags.store';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins(showMessage).extend({\n\tname: 'TagsManager',\n\tcreated() {\n\t\tvoid this.tagsStore.fetchAll({ force: true, withUsageCount: true });\n\t},\n\tdata() {\n\t\tconst tagIds = useTagsStore().allTags.map((tag) => tag.id);\n\t\treturn {\n\t\t\ttagIds,\n\t\t\tisCreating: false,\n\t\t\tmodalBus: createEventBus(),\n\t\t\tTAGS_MANAGER_MODAL_KEY,\n\t\t};\n\t},\n\tcomponents: {\n\t\tTagsView,\n\t\tNoTagsView,\n\t\tModal,\n\t},\n\tcomputed: {\n\t\t...mapStores(useTagsStore),\n\t\tisLoading(): boolean {\n\t\t\treturn this.tagsStore.isLoading;\n\t\t},\n\t\ttags(): ITag[] {\n\t\t\treturn this.$data.tagIds\n\t\t\t\t.map((tagId: string) => this.tagsStore.getTagById(tagId))\n\t\t\t\t.filter(Boolean); // if tag is deleted from store\n\t\t},\n\t\thasTags(): boolean {\n\t\t\treturn this.tags.length > 0;\n\t\t},\n\t},\n\tmethods: {\n\t\tonEnableCreate() {\n\t\t\tthis.$data.isCreating = true;\n\t\t},\n\n\t\tonDisableCreate() {\n\t\t\tthis.$data.isCreating = false;\n\t\t},\n\n\t\tasync onCreate(name: string, cb: (tag: ITag | null, error?: Error) => void) {\n\t\t\ttry {\n\t\t\t\tif (!name) {\n\t\t\t\t\tthrow new Error(this.$locale.baseText('tagsManager.tagNameCannotBeEmpty'));\n\t\t\t\t}\n\n\t\t\t\tconst newTag = await this.tagsStore.create(name);\n\t\t\t\tthis.$data.tagIds = [newTag.id].concat(this.$data.tagIds);\n\t\t\t\tcb(newTag);\n\t\t\t} catch (error) {\n\t\t\t\tconst escapedName = escape(name);\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('tagsManager.showError.onCreate.title'),\n\t\t\t\t\tthis.$locale.baseText('tagsManager.showError.onCreate.message', {\n\t\t\t\t\t\tinterpolate: { escapedName },\n\t\t\t\t\t}) + ':',\n\t\t\t\t);\n\t\t\t\tcb(null, error);\n\t\t\t}\n\t\t},\n\n\t\tasync onUpdate(id: string, name: string, cb: (tag: boolean, error?: Error) => void) {\n\t\t\tconst tag = this.tagsStore.getTagById(id);\n\t\t\tconst oldName = tag.name;\n\n\t\t\ttry {\n\t\t\t\tif (!name) {\n\t\t\t\t\tthrow new Error(this.$locale.baseText('tagsManager.tagNameCannotBeEmpty'));\n\t\t\t\t}\n\n\t\t\t\tif (name === oldName) {\n\t\t\t\t\tcb(true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst updatedTag = await this.tagsStore.rename({ id, name });\n\t\t\t\tcb(!!updatedTag);\n\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('tagsManager.showMessage.onUpdate.title'),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconst escapedName = escape(oldName);\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('tagsManager.showError.onUpdate.title'),\n\t\t\t\t\tthis.$locale.baseText('tagsManager.showError.onUpdate.message', {\n\t\t\t\t\t\tinterpolate: { escapedName },\n\t\t\t\t\t}) + ':',\n\t\t\t\t);\n\t\t\t\tcb(false, error);\n\t\t\t}\n\t\t},\n\n\t\tasync onDelete(id: string, cb: (deleted: boolean, error?: Error) => void) {\n\t\t\tconst tag = this.tagsStore.getTagById(id);\n\t\t\tconst name = tag.name;\n\n\t\t\ttry {\n\t\t\t\tconst deleted = await this.tagsStore.delete(id);\n\t\t\t\tif (!deleted) {\n\t\t\t\t\tthrow new Error(this.$locale.baseText('tagsManager.couldNotDeleteTag'));\n\t\t\t\t}\n\n\t\t\t\tthis.$data.tagIds = this.$data.tagIds.filter((tagId: string) => tagId !== id);\n\n\t\t\t\tcb(deleted);\n\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('tagsManager.showMessage.onDelete.title'),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconst escapedName = escape(name);\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('tagsManager.showError.onDelete.title'),\n\t\t\t\t\tthis.$locale.baseText('tagsManager.showError.onDelete.message', {\n\t\t\t\t\t\tinterpolate: { escapedName },\n\t\t\t\t\t}) + ':',\n\t\t\t\t);\n\t\t\t\tcb(false, error);\n\t\t\t}\n\t\t},\n\n\t\tonEnter() {\n\t\t\tif (this.isLoading) {\n\t\t\t\treturn;\n\t\t\t} else if (!this.hasTags) {\n\t\t\t\tthis.onEnableCreate();\n\t\t\t} else {\n\t\t\t\tthis.modalBus.emit('close');\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<el-drawer\n\t\t:direction=\"direction\"\n\t\t:visible=\"uiStore.isModalOpen(this.name)\"\n\t\t:size=\"width\"\n\t\t:before-close=\"close\"\n\t\t:modal=\"modal\"\n\t\t:wrapperClosable=\"wrapperClosable\"\n\t>\n\t\t<template #title>\n\t\t\t<slot name=\"header\" />\n\t\t</template>\n\t\t<template>\n\t\t\t<span @keydown.stop>\n\t\t\t\t<slot name=\"content\" />\n\t\t\t</span>\n\t\t</template>\n\t</el-drawer>\n</template>\n\n<script lang=\"ts\">\nimport { useUIStore } from '@/stores/ui.store';\nimport { mapStores } from 'pinia';\nimport { defineComponent } from 'vue';\nimport type { PropType } from 'vue';\nimport type { EventBus } from '@/event-bus';\n\nexport default defineComponent({\n\tname: 'ModalDrawer',\n\tprops: {\n\t\tname: {\n\t\t\ttype: String,\n\t\t},\n\t\tbeforeClose: {\n\t\t\ttype: Function,\n\t\t},\n\t\teventBus: {\n\t\t\ttype: Object as PropType<EventBus>,\n\t\t},\n\t\tdirection: {\n\t\t\ttype: String,\n\t\t},\n\t\tmodal: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\twidth: {\n\t\t\ttype: String,\n\t\t},\n\t\twrapperClosable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t},\n\tmounted() {\n\t\twindow.addEventListener('keydown', this.onWindowKeydown);\n\t\tthis.eventBus?.on('close', this.close);\n\n\t\tconst activeElement = document.activeElement as HTMLElement;\n\t\tif (activeElement) {\n\t\t\tactiveElement.blur();\n\t\t}\n\t},\n\tbeforeDestroy() {\n\t\tthis.eventBus?.off('close', this.close);\n\t\twindow.removeEventListener('keydown', this.onWindowKeydown);\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore),\n\t},\n\tmethods: {\n\t\tonWindowKeydown(event: KeyboardEvent) {\n\t\t\tif (!this.uiStore.isModalActive(this.name)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (event && event.keyCode === 13) {\n\t\t\t\tthis.handleEnter();\n\t\t\t}\n\t\t},\n\t\thandleEnter() {\n\t\t\tif (this.uiStore.isModalActive(this.name)) {\n\t\t\t\tthis.$emit('enter');\n\t\t\t}\n\t\t},\n\t\tasync close() {\n\t\t\tif (this.beforeClose) {\n\t\t\t\tconst shouldClose = await this.beforeClose();\n\t\t\t\tif (shouldClose === false) {\n\t\t\t\t\t// must be strictly false to stop modal from closing\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uiStore.closeModal(this.name);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\">\n.el-drawer__header {\n\tmargin: 0;\n\tpadding: 30px 30px 0 30px;\n}\n\n.el-drawer__body {\n\toverflow: hidden;\n}\n</style>\n","<template>\n\t<n8n-node-icon\n\t\t:type=\"type\"\n\t\t:src=\"iconSource.path || iconSource.fileBuffer\"\n\t\t:name=\"iconSource.icon\"\n\t\t:color=\"color\"\n\t\t:disabled=\"disabled\"\n\t\t:size=\"size\"\n\t\t:circle=\"circle\"\n\t\t:nodeTypeName=\"nodeType ? nodeType.displayName : ''\"\n\t\t:showTooltip=\"showTooltip\"\n\t\t@click=\"(e) => $emit('click')\"\n\t></n8n-node-icon>\n</template>\n\n<script lang=\"ts\">\nimport type { IVersionNode } from '@/Interface';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport type { INodeTypeDescription } from 'n8n-workflow';\nimport { mapStores } from 'pinia';\nimport { defineComponent } from 'vue';\n\ninterface NodeIconSource {\n\tpath?: string;\n\tfileBuffer?: string;\n\ticon?: string;\n}\n\nexport default defineComponent({\n\tname: 'NodeIcon',\n\tprops: {\n\t\tnodeType: {},\n\t\tsize: {\n\t\t\ttype: Number,\n\t\t\trequired: false,\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tcircle: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tshowTooltip: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useRootStore),\n\t\ttype(): string {\n\t\t\tconst nodeType = this.nodeType as INodeTypeDescription | IVersionNode | null;\n\t\t\tlet iconType = 'unknown';\n\t\t\tif (nodeType) {\n\t\t\t\tif (nodeType.iconUrl) return 'file';\n\t\t\t\tif ((nodeType as IVersionNode).iconData) {\n\t\t\t\t\ticonType = (nodeType as IVersionNode).iconData.type;\n\t\t\t\t} else if (nodeType.icon) {\n\t\t\t\t\ticonType = nodeType.icon.split(':')[0] === 'file' ? 'file' : 'icon';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn iconType;\n\t\t},\n\t\tcolor(): string {\n\t\t\tconst nodeType = this.nodeType as INodeTypeDescription | IVersionNode | null;\n\t\t\tif (nodeType && nodeType.defaults && nodeType.defaults.color) {\n\t\t\t\treturn nodeType.defaults.color.toString();\n\t\t\t}\n\t\t\treturn '';\n\t\t},\n\t\ticonSource(): NodeIconSource {\n\t\t\tconst nodeType = this.nodeType as INodeTypeDescription | IVersionNode | null;\n\t\t\tconst baseUrl = this.rootStore.getBaseUrl;\n\t\t\tconst iconSource = {} as NodeIconSource;\n\n\t\t\tif (nodeType) {\n\t\t\t\t// If node type has icon data, use it\n\t\t\t\tif ((nodeType as IVersionNode).iconData) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ticon: (nodeType as IVersionNode).iconData.icon,\n\t\t\t\t\t\tfileBuffer: (nodeType as IVersionNode).iconData.fileBuffer,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (nodeType.iconUrl) {\n\t\t\t\t\treturn { path: baseUrl + nodeType.iconUrl };\n\t\t\t\t}\n\t\t\t\t// Otherwise, extract it from icon prop\n\t\t\t\tif (nodeType.icon) {\n\t\t\t\t\tconst [type, path] = nodeType.icon.split(':');\n\t\t\t\t\tif (type === 'file') {\n\t\t\t\t\t\tthrow new Error(`Unexpected icon: ${nodeType.icon}`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ticonSource.icon = path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn iconSource;\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\"></style>\n","<template>\n\t<fragment>\n\t\t<el-tag v-if=\"type === 'danger'\" type=\"danger\" size=\"small\" :class=\"$style['danger']\">\n\t\t\t{{ text }}\n\t\t</el-tag>\n\t\t<el-tag v-else-if=\"type === 'warning'\" size=\"small\" :class=\"$style['warning']\">\n\t\t\t{{ text }}\n\t\t</el-tag>\n\t</fragment>\n</template>\n\n<script lang=\"ts\">\nexport default {\n\tprops: ['text', 'type'],\n};\n</script>\n\n<style lang=\"scss\" module>\n.badge {\n\tfont-size: 11px;\n\tline-height: 18px;\n\tmax-height: 18px;\n\tfont-weight: 400;\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: 2px 4px;\n}\n\n.danger {\n\tcomposes: badge;\n\tcolor: $badge-danger-color;\n\tbackground-color: $badge-danger-background-color;\n\tborder-color: $badge-danger-border-color;\n}\n\n.warning {\n\tcomposes: badge;\n\tbackground-color: $badge-warning-background-color;\n\tcolor: $badge-warning-color;\n\tborder: none;\n}\n</style>\n","<template>\n\t<!-- eslint-disable vue/no-mutating-props -->\n\t<a\n\t\tv-if=\"version\"\n\t\t:set=\"(version = version)\"\n\t\t:href=\"version.documentationUrl\"\n\t\ttarget=\"_blank\"\n\t\t:class=\"$style.card\"\n\t>\n\t\t<div :class=\"$style.header\">\n\t\t\t<div>\n\t\t\t\t<div :class=\"$style.name\">\n\t\t\t\t\t{{ `${$locale.baseText('versionCard.version')} ${version.name}` }}\n\t\t\t\t</div>\n\t\t\t\t<WarningTooltip v-if=\"version.hasSecurityIssue\">\n\t\t\t\t\t<template>\n\t\t\t\t\t\t<span v-html=\"$locale.baseText('versionCard.thisVersionHasASecurityIssue')\"></span>\n\t\t\t\t\t</template>\n\t\t\t\t</WarningTooltip>\n\t\t\t\t<Badge\n\t\t\t\t\tv-if=\"version.hasSecurityFix\"\n\t\t\t\t\t:text=\"$locale.baseText('versionCard.securityUpdate')\"\n\t\t\t\t\ttype=\"danger\"\n\t\t\t\t/>\n\t\t\t\t<Badge\n\t\t\t\t\tv-if=\"version.hasBreakingChange\"\n\t\t\t\t\t:text=\"$locale.baseText('versionCard.breakingChanges')\"\n\t\t\t\t\ttype=\"warning\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div :class=\"$style['release-date']\">\n\t\t\t\t{{ $locale.baseText('versionCard.released') }}&nbsp;<TimeAgo :date=\"version.createdAt\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\t:class=\"$style.divider\"\n\t\t\tv-if=\"version.description || (version.nodes && version.nodes.length)\"\n\t\t></div>\n\t\t<div>\n\t\t\t<div\n\t\t\t\tv-if=\"version.description\"\n\t\t\t\tv-html=\"version.description\"\n\t\t\t\t:class=\"$style.description\"\n\t\t\t></div>\n\t\t\t<div v-if=\"version.nodes && version.nodes.length > 0\" :class=\"$style.nodes\">\n\t\t\t\t<NodeIcon\n\t\t\t\t\tv-for=\"node in version.nodes\"\n\t\t\t\t\t:key=\"node.name\"\n\t\t\t\t\t:nodeType=\"node\"\n\t\t\t\t\t:title=\"$options.nodeName(node)\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t</a>\n</template>\n\n<script lang=\"ts\">\nimport Vue, { defineComponent } from 'vue';\nimport NodeIcon from './NodeIcon.vue';\nimport TimeAgo from './TimeAgo.vue';\nimport Badge from './Badge.vue';\nimport WarningTooltip from './WarningTooltip.vue';\nimport type { IVersionNode } from '@/Interface';\n\nVue.component('NodeIcon', NodeIcon);\nVue.component('TimeAgo', TimeAgo);\nVue.component('Badge', Badge);\nVue.component('WarningTooltip', WarningTooltip);\n\nexport default defineComponent({\n\tcomponents: { NodeIcon, TimeAgo, Badge, WarningTooltip },\n\tname: 'VersionCard',\n\tprops: ['version'],\n\t// @ts-ignore\n\tnodeName(node: IVersionNode): string {\n\t\treturn node !== null ? node.displayName : this.$locale.baseText('versionCard.unknown');\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.card {\n\tbackground-color: $version-card-background-color;\n\tborder: $version-card-border;\n\tborder-radius: 8px;\n\tdisplay: block;\n\tpadding: 16px;\n\ttext-decoration: none;\n\n\t&:hover {\n\t\tbox-shadow: 0px 2px 10px $version-card-box-shadow-color;\n\t}\n}\n\n.header {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\n\t> * {\n\t\tdisplay: flex;\n\t\tmargin-bottom: 5px;\n\t}\n\n\t> div:first-child {\n\t\tflex-grow: 1;\n\n\t\t> * {\n\t\t\tmargin-right: 5px;\n\t\t}\n\t}\n}\n\n.name {\n\tfont-weight: 600;\n\tfont-size: 16px;\n\tline-height: 18px;\n\tcolor: $version-card-name-text-color;\n}\n\n.divider {\n\tborder-bottom: $version-card-border;\n\twidth: 100%;\n\tmargin: 10px 0 15px 0;\n}\n\n.description {\n\tfont-size: 14px;\n\tfont-weight: 400;\n\tline-height: 19px;\n\tcolor: $version-card-description-text-color;\n}\n\n.release-date {\n\tfont-size: 12px;\n\tline-height: 18px;\n\tfont-weight: 400;\n\tcolor: $version-card-release-date-text-color;\n}\n\n.nodes {\n\tdisplay: grid;\n\tgrid-template-columns: repeat(10, 1fr);\n\tgrid-row-gap: 12px;\n\tmargin-block-start: 24px;\n}\n</style>\n","<template>\n\t<ModalDrawer :name=\"VERSIONS_MODAL_KEY\" direction=\"ltr\" width=\"520px\">\n\t\t<template #header>\n\t\t\t<span :class=\"$style.title\">\n\t\t\t\t{{ $locale.baseText('updatesPanel.weVeBeenBusy') }}\n\t\t\t</span>\n\t\t</template>\n\t\t<template #content>\n\t\t\t<section :class=\"$style['description']\">\n\t\t\t\t<p v-if=\"currentVersion\">\n\t\t\t\t\t{{\n\t\t\t\t\t\t$locale.baseText('updatesPanel.youReOnVersion', {\n\t\t\t\t\t\t\tinterpolate: { currentVersionName: currentVersion.name },\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\t<strong><TimeAgo :date=\"currentVersion.createdAt\" /></strong\n\t\t\t\t\t>{{ $locale.baseText('updatesPanel.andIs') }}\n\t\t\t\t\t<strong>{{\n\t\t\t\t\t\t$locale.baseText('updatesPanel.version', {\n\t\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\t\tnumberOfVersions: nextVersions.length,\n\t\t\t\t\t\t\t\thowManySuffix: nextVersions.length > 1 ? 's' : '',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t})\n\t\t\t\t\t}}</strong>\n\t\t\t\t\t{{ $locale.baseText('updatesPanel.behindTheLatest') }}\n\t\t\t\t</p>\n\n\t\t\t\t<n8n-link v-if=\"infoUrl\" :to=\"infoUrl\" :bold=\"true\">\n\t\t\t\t\t<font-awesome-icon icon=\"info-circle\"></font-awesome-icon>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{{ $locale.baseText('updatesPanel.howToUpdateYourN8nVersion') }}\n\t\t\t\t\t</span>\n\t\t\t\t</n8n-link>\n\t\t\t</section>\n\t\t\t<section :class=\"$style.versions\">\n\t\t\t\t<div v-for=\"version in nextVersions\" :key=\"version.name\" :class=\"$style['versions-card']\">\n\t\t\t\t\t<VersionCard :version=\"version\" />\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</template>\n\t</ModalDrawer>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nimport ModalDrawer from './ModalDrawer.vue';\nimport TimeAgo from './TimeAgo.vue';\nimport VersionCard from './VersionCard.vue';\nimport { VERSIONS_MODAL_KEY } from '../constants';\nimport { mapStores } from 'pinia';\nimport { useVersionsStore } from '@/stores/versions.store';\nimport type { IVersion } from '@/Interface';\n\nexport default defineComponent({\n\tname: 'UpdatesPanel',\n\tcomponents: {\n\t\tModalDrawer,\n\t\tVersionCard,\n\t\tTimeAgo,\n\t},\n\tcomputed: {\n\t\t...mapStores(useVersionsStore),\n\t\tnextVersions(): IVersion[] {\n\t\t\treturn this.versionsStore.nextVersions;\n\t\t},\n\t\tcurrentVersion(): IVersion | undefined {\n\t\t\treturn this.versionsStore.currentVersion;\n\t\t},\n\t\tinfoUrl(): string {\n\t\t\treturn this.versionsStore.infoUrl;\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tVERSIONS_MODAL_KEY,\n\t\t};\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.title {\n\tmargin: 0;\n\tfont-size: 24px;\n\tline-height: 24px;\n\tcolor: $updates-panel-text-color;\n\tfont-weight: 400;\n}\n\n.description {\n\tpadding: 0px 30px;\n\tmargin-block-start: 16px;\n\tmargin-block-end: 30px;\n\n\tp {\n\t\tfont-size: 16px;\n\t\tline-height: 22px;\n\t\tcolor: $updates-panel-description-text-color;\n\t\tfont-weight: 400;\n\t\tmargin: 0 0 16px 0;\n\t}\n\n\tdiv {\n\t\tpadding-top: 20px;\n\t}\n}\n\n.versions {\n\tbackground-color: $updates-panel-dark-background-color;\n\tborder-top: $updates-panel-border;\n\theight: 100%;\n\tpadding: 30px;\n\toverflow-y: scroll;\n\tpadding-bottom: 220px;\n}\n\n.versions-card {\n\tmargin-block-end: 15px;\n}\n</style>\n","<template>\n\t<ModalDrawer\n\t\t:name=\"VALUE_SURVEY_MODAL_KEY\"\n\t\t:eventBus=\"modalBus\"\n\t\t:beforeClose=\"closeDialog\"\n\t\t:modal=\"false\"\n\t\t:wrapperClosable=\"false\"\n\t\tdirection=\"btt\"\n\t\twidth=\"120px\"\n\t\tclass=\"value-survey\"\n\t>\n\t\t<template #header>\n\t\t\t<div :class=\"$style.title\">\n\t\t\t\t<n8n-heading tag=\"h2\" size=\"medium\" color=\"text-xlight\">{{ getTitle }}</n8n-heading>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #content>\n\t\t\t<section :class=\"$style.content\">\n\t\t\t\t<div v-if=\"showButtons\" :class=\"$style.wrapper\">\n\t\t\t\t\t<div :class=\"$style.buttons\">\n\t\t\t\t\t\t<div v-for=\"value in 11\" :key=\"value - 1\" :class=\"$style.container\">\n\t\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t\t\t:label=\"(value - 1).toString()\"\n\t\t\t\t\t\t\t\t@click=\"selectSurveyValue((value - 1).toString())\"\n\t\t\t\t\t\t\t\tsquare\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div :class=\"$style.text\">\n\t\t\t\t\t\t<n8n-text size=\"small\" color=\"text-xlight\">Not likely</n8n-text>\n\t\t\t\t\t\t<n8n-text size=\"small\" color=\"text-xlight\">Very likely</n8n-text>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-else :class=\"$style.email\">\n\t\t\t\t\t<div :class=\"$style.input\" @keyup.enter=\"send\">\n\t\t\t\t\t\t<n8n-input\n\t\t\t\t\t\t\tv-model=\"form.email\"\n\t\t\t\t\t\t\tplaceholder=\"Your email address\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t@input=\"onInputChange\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div :class=\"$style.button\">\n\t\t\t\t\t\t\t<n8n-button label=\"Send\" float=\"right\" @click=\"send\" :disabled=\"!isEmailValid\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div :class=\"$style.disclaimer\">\n\t\t\t\t\t\t<n8n-text size=\"small\" color=\"text-xlight\">\n\t\t\t\t\t\t\tDavid from our product team will get in touch personally\n\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</template>\n\t</ModalDrawer>\n</template>\n\n<script lang=\"ts\">\nimport { VALID_EMAIL_REGEX, VALUE_SURVEY_MODAL_KEY } from '@/constants';\nimport type { IN8nPromptResponse } from '@/Interface';\n\nimport ModalDrawer from './ModalDrawer.vue';\n\nimport mixins from 'vue-typed-mixins';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport { mapStores } from 'pinia';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { createEventBus } from '@/event-bus';\n\nconst DEFAULT_TITLE = 'How likely are you to recommend n8n to a friend or colleague?';\nconst GREAT_FEEDBACK_TITLE =\n\t'Great to hear! Can we reach out to see how we can make n8n even better for you?';\nconst DEFAULT_FEEDBACK_TITLE =\n\t\"Thanks for your feedback! We'd love to understand how we can improve. Can we reach out?\";\n\nexport default mixins(workflowHelpers).extend({\n\tname: 'ValueSurvey',\n\tprops: ['isActive'],\n\tcomponents: {\n\t\tModalDrawer,\n\t},\n\twatch: {\n\t\tisActive(isActive) {\n\t\t\tif (isActive) {\n\t\t\t\tthis.$telemetry.track('User shown value survey', {\n\t\t\t\t\tinstance_id: this.rootStore.instanceId,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useRootStore, useSettingsStore),\n\t\tgetTitle(): string {\n\t\t\tif (this.form.value !== '') {\n\t\t\t\tif (Number(this.form.value) > 7) {\n\t\t\t\t\treturn GREAT_FEEDBACK_TITLE;\n\t\t\t\t} else {\n\t\t\t\t\treturn DEFAULT_FEEDBACK_TITLE;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn DEFAULT_TITLE;\n\t\t\t}\n\t\t},\n\t\tisEmailValid(): boolean {\n\t\t\treturn VALID_EMAIL_REGEX.test(String(this.form.email).toLowerCase());\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tform: {\n\t\t\t\temail: '',\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\tshowButtons: true,\n\t\t\tVALUE_SURVEY_MODAL_KEY,\n\t\t\tmodalBus: createEventBus(),\n\t\t};\n\t},\n\tmethods: {\n\t\tcloseDialog(): void {\n\t\t\tif (this.form.value === '') {\n\t\t\t\tthis.$telemetry.track('User responded value survey score', {\n\t\t\t\t\tinstance_id: this.rootStore.instanceId,\n\t\t\t\t\tnps: '',\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (this.form.value !== '' && this.form.email === '') {\n\t\t\t\tthis.$telemetry.track('User responded value survey email', {\n\t\t\t\t\tinstance_id: this.rootStore.instanceId,\n\t\t\t\t\temail: '',\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tonInputChange(value: string) {\n\t\t\tthis.form.email = value;\n\t\t},\n\t\tasync selectSurveyValue(value: string) {\n\t\t\tthis.form.value = value;\n\t\t\tthis.showButtons = false;\n\n\t\t\tconst response: IN8nPromptResponse | undefined = await this.settingsStore.submitValueSurvey({\n\t\t\t\tvalue: this.form.value,\n\t\t\t});\n\n\t\t\tif (response && response.updated) {\n\t\t\t\tthis.$telemetry.track('User responded value survey score', {\n\t\t\t\t\tinstance_id: this.rootStore.instanceId,\n\t\t\t\t\tnps: this.form.value,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tasync send() {\n\t\t\tif (this.isEmailValid) {\n\t\t\t\tconst response: IN8nPromptResponse | undefined = await this.settingsStore.submitValueSurvey(\n\t\t\t\t\t{\n\t\t\t\t\t\temail: this.form.email,\n\t\t\t\t\t\tvalue: this.form.value,\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tif (response && response.updated) {\n\t\t\t\t\tthis.$telemetry.track('User responded value survey email', {\n\t\t\t\t\t\tinstance_id: this.rootStore.instanceId,\n\t\t\t\t\t\temail: this.form.email,\n\t\t\t\t\t});\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: 'Thanks for your feedback',\n\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t'If you’d like to help even more, leave us a <a target=\"_blank\" href=\"https://www.g2.com/products/n8n/reviews/start\">review on G2</a>.',\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tduration: 15000,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.form.value = '';\n\t\t\t\t\tthis.form.email = '';\n\t\t\t\t\tthis.showButtons = true;\n\t\t\t\t}, 1000);\n\t\t\t\tthis.modalBus.emit('close');\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.title {\n\theight: 16px;\n\ttext-align: center;\n\n\t@media (max-width: $breakpoint-xs) {\n\t\tmargin-top: 10px;\n\t\tpadding: 0 15px;\n\t}\n}\n\n.content {\n\tdisplay: flex;\n\tjustify-content: center;\n\n\t@media (max-width: $breakpoint-xs) {\n\t\tmargin-top: 20px;\n\t}\n}\n\n.wrapper {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.buttons {\n\tdisplay: flex;\n}\n\n.container {\n\tmargin: 0 8px;\n\n\t@media (max-width: $breakpoint-xs) {\n\t\tmargin: 0 4px;\n\t}\n\n\t&:first-child {\n\t\tmargin-left: 0;\n\t}\n\n\t&:last-child {\n\t\tmargin-right: 0;\n\t}\n}\n\n.text {\n\tmargin-top: 8px;\n\tdisplay: flex;\n\tjustify-content: space-between;\n}\n\n.input {\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.button {\n\tmargin-left: 10px;\n}\n\n.disclaimer {\n\tmargin-top: var(--spacing-4xs);\n}\n</style>\n\n<style lang=\"scss\">\n.value-survey {\n\theight: 120px;\n\ttop: auto;\n\n\t@media (max-width: $breakpoint-xs) {\n\t\theight: 140px;\n\t}\n\n\t.el-drawer {\n\t\tbackground: var(--color-background-dark);\n\n\t\t@media (max-width: $breakpoint-xs) {\n\t\t\theight: 140px !important;\n\t\t}\n\n\t\t&__header {\n\t\t\theight: 50px;\n\t\t\tmargin: 0;\n\t\t\tpadding: 18px 0 16px;\n\n\t\t\t.el-drawer__close-btn {\n\t\t\t\ttop: 12px;\n\t\t\t\tright: 16px;\n\t\t\t\tposition: absolute;\n\n\t\t\t\t@media (max-width: $breakpoint-xs) {\n\t\t\t\t\ttop: 2px;\n\t\t\t\t\tright: 2px;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.el-dialog__close {\n\t\t\t\tfont-weight: var(--font-weight-bold);\n\t\t\t\tcolor: var(--color-text-xlight);\n\t\t\t}\n\t\t}\n\t}\n}\n</style>\n","<template>\n\t<Modal\n\t\t:name=\"WORKFLOW_SETTINGS_MODAL_KEY\"\n\t\twidth=\"65%\"\n\t\tmaxHeight=\"80%\"\n\t\t:title=\"\n\t\t\t$locale.baseText('workflowSettings.settingsFor', {\n\t\t\t\tinterpolate: { workflowName, workflowId },\n\t\t\t})\n\t\t\"\n\t\t:eventBus=\"modalBus\"\n\t\t:scrollable=\"true\"\n\t>\n\t\t<template #content>\n\t\t\t<div v-loading=\"isLoading\" class=\"workflow-settings\" data-test-id=\"workflow-settings-dialog\">\n\t\t\t\t<el-row>\n\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n\t\t\t\t\t\t{{ $locale.baseText('workflowSettings.errorWorkflow') + ':' }}\n\t\t\t\t\t\t<n8n-tooltip class=\"setting-info\" placement=\"top\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<div v-html=\"helpTexts.errorWorkflow\"></div>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<font-awesome-icon icon=\"question-circle\" />\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</el-col>\n\t\t\t\t\t<el-col :span=\"14\" class=\"ignore-key-press\">\n\t\t\t\t\t\t<n8n-select\n\t\t\t\t\t\t\tv-model=\"workflowSettings.errorWorkflow\"\n\t\t\t\t\t\t\tplaceholder=\"Select Workflow\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tfilterable\n\t\t\t\t\t\t\t:limit-popper-width=\"true\"\n\t\t\t\t\t\t\tdata-test-id=\"workflow-settings-error-workflow\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<n8n-option\n\t\t\t\t\t\t\t\tv-for=\"item in workflows\"\n\t\t\t\t\t\t\t\t:key=\"item.id\"\n\t\t\t\t\t\t\t\t:label=\"item.name\"\n\t\t\t\t\t\t\t\t:value=\"item.id\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</n8n-option>\n\t\t\t\t\t\t</n8n-select>\n\t\t\t\t\t</el-col>\n\t\t\t\t</el-row>\n\t\t\t\t<div v-if=\"isSharingEnabled\">\n\t\t\t\t\t<el-row>\n\t\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n\t\t\t\t\t\t\t{{ $locale.baseText('workflowSettings.callerPolicy') + ':' }}\n\t\t\t\t\t\t\t<n8n-tooltip class=\"setting-info\" placement=\"top\">\n\t\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t\t<div v-text=\"helpTexts.workflowCallerPolicy\"></div>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<font-awesome-icon icon=\"question-circle\" />\n\t\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t\t</el-col>\n\n\t\t\t\t\t\t<el-col :span=\"14\" class=\"ignore-key-press\">\n\t\t\t\t\t\t\t<n8n-select\n\t\t\t\t\t\t\t\tv-model=\"workflowSettings.callerPolicy\"\n\t\t\t\t\t\t\t\t:placeholder=\"$locale.baseText('workflowSettings.selectOption')\"\n\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\tfilterable\n\t\t\t\t\t\t\t\t:limit-popper-width=\"true\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<n8n-option\n\t\t\t\t\t\t\t\t\tv-for=\"option of workflowCallerPolicyOptions\"\n\t\t\t\t\t\t\t\t\t:key=\"option.key\"\n\t\t\t\t\t\t\t\t\t:label=\"option.value\"\n\t\t\t\t\t\t\t\t\t:value=\"option.key\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</n8n-option>\n\t\t\t\t\t\t\t</n8n-select>\n\t\t\t\t\t\t</el-col>\n\t\t\t\t\t</el-row>\n\t\t\t\t\t<el-row v-if=\"workflowSettings.callerPolicy === 'workflowsFromAList'\">\n\t\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n\t\t\t\t\t\t\t{{ $locale.baseText('workflowSettings.callerIds') + ':' }}\n\t\t\t\t\t\t\t<n8n-tooltip class=\"setting-info\" placement=\"top\">\n\t\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t\t<div v-text=\"helpTexts.workflowCallerIds\"></div>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<font-awesome-icon icon=\"question-circle\" />\n\t\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t\t</el-col>\n\t\t\t\t\t\t<el-col :span=\"14\">\n\t\t\t\t\t\t\t<n8n-input\n\t\t\t\t\t\t\t\t:placeholder=\"$locale.baseText('workflowSettings.callerIds.placeholder')\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\tv-model=\"workflowSettings.callerIds\"\n\t\t\t\t\t\t\t\t@input=\"onCallerIdsInput\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</el-col>\n\t\t\t\t\t</el-row>\n\t\t\t\t</div>\n\t\t\t\t<el-row>\n\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n\t\t\t\t\t\t{{ $locale.baseText('workflowSettings.timezone') + ':' }}\n\t\t\t\t\t\t<n8n-tooltip class=\"setting-info\" placement=\"top\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<div v-text=\"helpTexts.timezone\"></div>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<font-awesome-icon icon=\"question-circle\" />\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</el-col>\n\t\t\t\t\t<el-col :span=\"14\" class=\"ignore-key-press\">\n\t\t\t\t\t\t<n8n-select\n\t\t\t\t\t\t\tv-model=\"workflowSettings.timezone\"\n\t\t\t\t\t\t\tplaceholder=\"Select Timezone\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tfilterable\n\t\t\t\t\t\t\t:limit-popper-width=\"true\"\n\t\t\t\t\t\t\tdata-test-id=\"workflow-settings-timezone\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<n8n-option\n\t\t\t\t\t\t\t\tv-for=\"timezone of timezones\"\n\t\t\t\t\t\t\t\t:key=\"timezone.key\"\n\t\t\t\t\t\t\t\t:label=\"timezone.value\"\n\t\t\t\t\t\t\t\t:value=\"timezone.key\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</n8n-option>\n\t\t\t\t\t\t</n8n-select>\n\t\t\t\t\t</el-col>\n\t\t\t\t</el-row>\n\t\t\t\t<el-row>\n\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n\t\t\t\t\t\t{{ $locale.baseText('workflowSettings.saveDataErrorExecution') + ':' }}\n\t\t\t\t\t\t<n8n-tooltip class=\"setting-info\" placement=\"top\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<div v-text=\"helpTexts.saveDataErrorExecution\"></div>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<font-awesome-icon icon=\"question-circle\" />\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</el-col>\n\t\t\t\t\t<el-col :span=\"14\" class=\"ignore-key-press\">\n\t\t\t\t\t\t<n8n-select\n\t\t\t\t\t\t\tv-model=\"workflowSettings.saveDataErrorExecution\"\n\t\t\t\t\t\t\t:placeholder=\"$locale.baseText('workflowSettings.selectOption')\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tfilterable\n\t\t\t\t\t\t\t:limit-popper-width=\"true\"\n\t\t\t\t\t\t\tdata-test-id=\"workflow-settings-save-failed-executions\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<n8n-option\n\t\t\t\t\t\t\t\tv-for=\"option of saveDataErrorExecutionOptions\"\n\t\t\t\t\t\t\t\t:key=\"option.key\"\n\t\t\t\t\t\t\t\t:label=\"option.value\"\n\t\t\t\t\t\t\t\t:value=\"option.key\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</n8n-option>\n\t\t\t\t\t\t</n8n-select>\n\t\t\t\t\t</el-col>\n\t\t\t\t</el-row>\n\t\t\t\t<el-row>\n\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n\t\t\t\t\t\t{{ $locale.baseText('workflowSettings.saveDataSuccessExecution') + ':' }}\n\t\t\t\t\t\t<n8n-tooltip class=\"setting-info\" placement=\"top\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<div v-text=\"helpTexts.saveDataSuccessExecution\"></div>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<font-awesome-icon icon=\"question-circle\" />\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</el-col>\n\t\t\t\t\t<el-col :span=\"14\" class=\"ignore-key-press\">\n\t\t\t\t\t\t<n8n-select\n\t\t\t\t\t\t\tv-model=\"workflowSettings.saveDataSuccessExecution\"\n\t\t\t\t\t\t\t:placeholder=\"$locale.baseText('workflowSettings.selectOption')\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tfilterable\n\t\t\t\t\t\t\t:limit-popper-width=\"true\"\n\t\t\t\t\t\t\tdata-test-id=\"workflow-settings-save-success-executions\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<n8n-option\n\t\t\t\t\t\t\t\tv-for=\"option of saveDataSuccessExecutionOptions\"\n\t\t\t\t\t\t\t\t:key=\"option.key\"\n\t\t\t\t\t\t\t\t:label=\"option.value\"\n\t\t\t\t\t\t\t\t:value=\"option.key\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</n8n-option>\n\t\t\t\t\t\t</n8n-select>\n\t\t\t\t\t</el-col>\n\t\t\t\t</el-row>\n\t\t\t\t<el-row>\n\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n\t\t\t\t\t\t{{ $locale.baseText('workflowSettings.saveManualExecutions') + ':' }}\n\t\t\t\t\t\t<n8n-tooltip class=\"setting-info\" placement=\"top\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<div v-text=\"helpTexts.saveManualExecutions\"></div>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<font-awesome-icon icon=\"question-circle\" />\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</el-col>\n\t\t\t\t\t<el-col :span=\"14\" class=\"ignore-key-press\">\n\t\t\t\t\t\t<n8n-select\n\t\t\t\t\t\t\tv-model=\"workflowSettings.saveManualExecutions\"\n\t\t\t\t\t\t\t:placeholder=\"$locale.baseText('workflowSettings.selectOption')\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tfilterable\n\t\t\t\t\t\t\t:limit-popper-width=\"true\"\n\t\t\t\t\t\t\tdata-test-id=\"workflow-settings-save-manual-executions\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<n8n-option\n\t\t\t\t\t\t\t\tv-for=\"option of saveManualOptions\"\n\t\t\t\t\t\t\t\t:key=\"option.key\"\n\t\t\t\t\t\t\t\t:label=\"option.value\"\n\t\t\t\t\t\t\t\t:value=\"option.key\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</n8n-option>\n\t\t\t\t\t\t</n8n-select>\n\t\t\t\t\t</el-col>\n\t\t\t\t</el-row>\n\t\t\t\t<el-row>\n\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n\t\t\t\t\t\t{{ $locale.baseText('workflowSettings.saveExecutionProgress') + ':' }}\n\t\t\t\t\t\t<n8n-tooltip class=\"setting-info\" placement=\"top\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<div v-text=\"helpTexts.saveExecutionProgress\"></div>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<font-awesome-icon icon=\"question-circle\" />\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</el-col>\n\t\t\t\t\t<el-col :span=\"14\" class=\"ignore-key-press\">\n\t\t\t\t\t\t<n8n-select\n\t\t\t\t\t\t\tv-model=\"workflowSettings.saveExecutionProgress\"\n\t\t\t\t\t\t\t:placeholder=\"$locale.baseText('workflowSettings.selectOption')\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tfilterable\n\t\t\t\t\t\t\t:limit-popper-width=\"true\"\n\t\t\t\t\t\t\tdata-test-id=\"workflow-settings-save-execution-progress\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<n8n-option\n\t\t\t\t\t\t\t\tv-for=\"option of saveExecutionProgressOptions\"\n\t\t\t\t\t\t\t\t:key=\"option.key\"\n\t\t\t\t\t\t\t\t:label=\"option.value\"\n\t\t\t\t\t\t\t\t:value=\"option.key\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</n8n-option>\n\t\t\t\t\t\t</n8n-select>\n\t\t\t\t\t</el-col>\n\t\t\t\t</el-row>\n\t\t\t\t<el-row>\n\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n\t\t\t\t\t\t{{ $locale.baseText('workflowSettings.timeoutWorkflow') + ':' }}\n\t\t\t\t\t\t<n8n-tooltip class=\"setting-info\" placement=\"top\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<div v-text=\"helpTexts.executionTimeoutToggle\"></div>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<font-awesome-icon icon=\"question-circle\" />\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</el-col>\n\t\t\t\t\t<el-col :span=\"14\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<el-switch\n\t\t\t\t\t\t\t\tref=\"inputField\"\n\t\t\t\t\t\t\t\t:value=\"workflowSettings.executionTimeout > -1\"\n\t\t\t\t\t\t\t\t@change=\"toggleTimeout\"\n\t\t\t\t\t\t\t\tactive-color=\"#13ce66\"\n\t\t\t\t\t\t\t\tdata-test-id=\"workflow-settings-timeout-workflow\"\n\t\t\t\t\t\t\t></el-switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</el-col>\n\t\t\t\t</el-row>\n\t\t\t\t<div\n\t\t\t\t\tv-if=\"workflowSettings.executionTimeout > -1\"\n\t\t\t\t\tdata-test-id=\"workflow-settings-timeout-form\"\n\t\t\t\t>\n\t\t\t\t\t<el-row>\n\t\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n\t\t\t\t\t\t\t{{ $locale.baseText('workflowSettings.timeoutAfter') + ':' }}\n\t\t\t\t\t\t\t<n8n-tooltip class=\"setting-info\" placement=\"top\">\n\t\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t\t<div v-text=\"helpTexts.executionTimeout\"></div>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<font-awesome-icon icon=\"question-circle\" />\n\t\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t\t</el-col>\n\t\t\t\t\t\t<el-col :span=\"4\">\n\t\t\t\t\t\t\t<n8n-input\n\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t:value=\"timeoutHMS.hours\"\n\t\t\t\t\t\t\t\t@input=\"(value) => setTimeout('hours', value)\"\n\t\t\t\t\t\t\t\t:min=\"0\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<template #append>{{ $locale.baseText('workflowSettings.hours') }}</template>\n\t\t\t\t\t\t\t</n8n-input>\n\t\t\t\t\t\t</el-col>\n\t\t\t\t\t\t<el-col :span=\"4\" class=\"timeout-input\">\n\t\t\t\t\t\t\t<n8n-input\n\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t:value=\"timeoutHMS.minutes\"\n\t\t\t\t\t\t\t\t@input=\"(value) => setTimeout('minutes', value)\"\n\t\t\t\t\t\t\t\t:min=\"0\"\n\t\t\t\t\t\t\t\t:max=\"60\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<template #append>{{ $locale.baseText('workflowSettings.minutes') }}</template>\n\t\t\t\t\t\t\t</n8n-input>\n\t\t\t\t\t\t</el-col>\n\t\t\t\t\t\t<el-col :span=\"4\" class=\"timeout-input\">\n\t\t\t\t\t\t\t<n8n-input\n\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t:value=\"timeoutHMS.seconds\"\n\t\t\t\t\t\t\t\t@input=\"(value) => setTimeout('seconds', value)\"\n\t\t\t\t\t\t\t\t:min=\"0\"\n\t\t\t\t\t\t\t\t:max=\"60\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<template #append>{{ $locale.baseText('workflowSettings.seconds') }}</template>\n\t\t\t\t\t\t\t</n8n-input>\n\t\t\t\t\t\t</el-col>\n\t\t\t\t\t</el-row>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<div class=\"action-buttons\" data-test-id=\"workflow-settings-save-button\">\n\t\t\t\t<n8n-button\n\t\t\t\t\t:label=\"$locale.baseText('workflowSettings.save')\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tfloat=\"right\"\n\t\t\t\t\t@click=\"saveSettings\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\n\nimport { externalHooks } from '@/mixins/externalHooks';\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport { showMessage } from '@/mixins/showMessage';\nimport type {\n\tITimeoutHMS,\n\tIUser,\n\tIWorkflowDataUpdate,\n\tIWorkflowDb,\n\tIWorkflowSettings,\n\tIWorkflowShortResponse,\n} from '@/Interface';\nimport Modal from './Modal.vue';\nimport {\n\tEnterpriseEditionFeature,\n\tPLACEHOLDER_EMPTY_WORKFLOW_ID,\n\tWORKFLOW_SETTINGS_MODAL_KEY,\n} from '../constants';\n\nimport mixins from 'vue-typed-mixins';\n\nimport type { WorkflowSettings } from 'n8n-workflow';\nimport { deepCopy } from 'n8n-workflow';\nimport { mapStores } from 'pinia';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport useWorkflowsEEStore from '@/stores/workflows.ee.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins(externalHooks, genericHelpers, showMessage).extend({\n\tname: 'WorkflowSettings',\n\tcomponents: {\n\t\tModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisLoading: true,\n\t\t\thelpTexts: {\n\t\t\t\terrorWorkflow: this.$locale.baseText('workflowSettings.helpTexts.errorWorkflow'),\n\t\t\t\ttimezone: this.$locale.baseText('workflowSettings.helpTexts.timezone'),\n\t\t\t\tsaveDataErrorExecution: this.$locale.baseText(\n\t\t\t\t\t'workflowSettings.helpTexts.saveDataErrorExecution',\n\t\t\t\t),\n\t\t\t\tsaveDataSuccessExecution: this.$locale.baseText(\n\t\t\t\t\t'workflowSettings.helpTexts.saveDataSuccessExecution',\n\t\t\t\t),\n\t\t\t\tsaveExecutionProgress: this.$locale.baseText(\n\t\t\t\t\t'workflowSettings.helpTexts.saveExecutionProgress',\n\t\t\t\t),\n\t\t\t\tsaveManualExecutions: this.$locale.baseText(\n\t\t\t\t\t'workflowSettings.helpTexts.saveManualExecutions',\n\t\t\t\t),\n\t\t\t\texecutionTimeoutToggle: this.$locale.baseText(\n\t\t\t\t\t'workflowSettings.helpTexts.executionTimeoutToggle',\n\t\t\t\t),\n\t\t\t\texecutionTimeout: this.$locale.baseText('workflowSettings.helpTexts.executionTimeout'),\n\t\t\t\tworkflowCallerPolicy: this.$locale.baseText(\n\t\t\t\t\t'workflowSettings.helpTexts.workflowCallerPolicy',\n\t\t\t\t),\n\t\t\t\tworkflowCallerIds: this.$locale.baseText('workflowSettings.helpTexts.workflowCallerIds'),\n\t\t\t},\n\t\t\tdefaultValues: {\n\t\t\t\ttimezone: 'America/New_York',\n\t\t\t\tsaveDataErrorExecution: 'all',\n\t\t\t\tsaveDataSuccessExecution: 'all',\n\t\t\t\tsaveExecutionProgress: false,\n\t\t\t\tsaveManualExecutions: false,\n\t\t\t\tworkflowCallerPolicy: 'workflowsFromSameOwner',\n\t\t\t},\n\t\t\tworkflowCallerPolicyOptions: [] as Array<{ key: string; value: string }>,\n\t\t\tsaveDataErrorExecutionOptions: [] as Array<{ key: string; value: string }>,\n\t\t\tsaveDataSuccessExecutionOptions: [] as Array<{ key: string; value: string }>,\n\t\t\tsaveExecutionProgressOptions: [] as Array<{ key: string | boolean; value: string }>,\n\t\t\tsaveManualOptions: [] as Array<{ key: string | boolean; value: string }>,\n\t\t\ttimezones: [] as Array<{ key: string; value: string }>,\n\t\t\tworkflowSettings: {} as IWorkflowSettings,\n\t\t\tworkflows: [] as IWorkflowShortResponse[],\n\t\t\texecutionTimeout: 0,\n\t\t\tmaxExecutionTimeout: 0,\n\t\t\ttimeoutHMS: { hours: 0, minutes: 0, seconds: 0 } as ITimeoutHMS,\n\t\t\tmodalBus: createEventBus(),\n\t\t\tWORKFLOW_SETTINGS_MODAL_KEY,\n\t\t};\n\t},\n\n\tcomputed: {\n\t\t...mapStores(\n\t\t\tuseRootStore,\n\t\t\tuseUsersStore,\n\t\t\tuseSettingsStore,\n\t\t\tuseWorkflowsStore,\n\t\t\tuseWorkflowsEEStore,\n\t\t),\n\t\tworkflowName(): string {\n\t\t\treturn this.workflowsStore.workflowName;\n\t\t},\n\t\tworkflowId(): string {\n\t\t\treturn this.workflowsStore.workflowId;\n\t\t},\n\t\tworkflow(): IWorkflowDb {\n\t\t\treturn this.workflowsStore.workflow;\n\t\t},\n\t\tcurrentUser(): IUser | null {\n\t\t\treturn this.usersStore.currentUser;\n\t\t},\n\t\tisSharingEnabled(): boolean {\n\t\t\treturn this.settingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.Sharing);\n\t\t},\n\t\tworkflowOwnerName(): string {\n\t\t\tconst fallback = this.$locale.baseText(\n\t\t\t\t'workflowSettings.callerPolicy.options.workflowsFromSameOwner.fallback',\n\t\t\t);\n\n\t\t\treturn this.workflowsEEStore.getWorkflowOwnerName(`${this.workflowId}`, fallback);\n\t\t},\n\t},\n\tasync mounted() {\n\t\tthis.executionTimeout = this.rootStore.executionTimeout;\n\t\tthis.maxExecutionTimeout = this.rootStore.maxExecutionTimeout;\n\n\t\tif (!this.workflowId || this.workflowId === PLACEHOLDER_EMPTY_WORKFLOW_ID) {\n\t\t\tthis.$showMessage({\n\t\t\t\ttitle: 'No workflow active',\n\t\t\t\tmessage: 'No workflow active to display settings of.',\n\t\t\t\ttype: 'error',\n\t\t\t\tduration: 0,\n\t\t\t});\n\t\t\tthis.closeDialog();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.defaultValues.saveDataErrorExecution = this.settingsStore.saveDataErrorExecution;\n\t\tthis.defaultValues.saveDataSuccessExecution = this.settingsStore.saveDataSuccessExecution;\n\t\tthis.defaultValues.saveManualExecutions = this.settingsStore.saveManualExecutions;\n\t\tthis.defaultValues.timezone = this.rootStore.timezone;\n\t\tthis.defaultValues.workflowCallerPolicy = this.settingsStore.workflowCallerPolicyDefaultOption;\n\n\t\tthis.isLoading = true;\n\t\tconst promises = [];\n\t\tpromises.push(this.loadWorkflows());\n\t\tpromises.push(this.loadSaveDataErrorExecutionOptions());\n\t\tpromises.push(this.loadSaveDataSuccessExecutionOptions());\n\t\tpromises.push(this.loadSaveExecutionProgressOptions());\n\t\tpromises.push(this.loadSaveManualOptions());\n\t\tpromises.push(this.loadTimezones());\n\t\tpromises.push(this.loadWorkflowCallerPolicyOptions());\n\n\t\ttry {\n\t\t\tawait Promise.all(promises);\n\t\t} catch (error) {\n\t\t\tthis.$showError(\n\t\t\t\terror,\n\t\t\t\t'Problem loading settings',\n\t\t\t\t'The following error occurred loading the data:',\n\t\t\t);\n\t\t}\n\n\t\tconst workflowSettings = deepCopy(this.workflowsStore.workflowSettings) as IWorkflowSettings;\n\n\t\tif (workflowSettings.timezone === undefined) {\n\t\t\tworkflowSettings.timezone = 'DEFAULT';\n\t\t}\n\t\tif (workflowSettings.saveDataErrorExecution === undefined) {\n\t\t\tworkflowSettings.saveDataErrorExecution = 'DEFAULT';\n\t\t}\n\t\tif (workflowSettings.saveDataSuccessExecution === undefined) {\n\t\t\tworkflowSettings.saveDataSuccessExecution = 'DEFAULT';\n\t\t}\n\t\tif (workflowSettings.saveExecutionProgress === undefined) {\n\t\t\tworkflowSettings.saveExecutionProgress = 'DEFAULT';\n\t\t}\n\t\tif (workflowSettings.saveManualExecutions === undefined) {\n\t\t\tworkflowSettings.saveManualExecutions = this.defaultValues.saveManualExecutions;\n\t\t}\n\t\tif (workflowSettings.callerPolicy === undefined) {\n\t\t\tworkflowSettings.callerPolicy = this.defaultValues\n\t\t\t\t.workflowCallerPolicy as WorkflowSettings.CallerPolicy;\n\t\t}\n\t\tif (workflowSettings.executionTimeout === undefined) {\n\t\t\tworkflowSettings.executionTimeout = this.rootStore.executionTimeout;\n\t\t}\n\t\tif (workflowSettings.maxExecutionTimeout === undefined) {\n\t\t\tworkflowSettings.maxExecutionTimeout = this.rootStore.maxExecutionTimeout;\n\t\t}\n\n\t\tVue.set(this, 'workflowSettings', workflowSettings);\n\t\tthis.timeoutHMS = this.convertToHMS(workflowSettings.executionTimeout);\n\t\tthis.isLoading = false;\n\n\t\tthis.$externalHooks().run('workflowSettings.dialogVisibleChanged', { dialogVisible: true });\n\t\tthis.$telemetry.track('User opened workflow settings', {\n\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t});\n\t},\n\tmethods: {\n\t\tonCallerIdsInput(str: string) {\n\t\t\tthis.workflowSettings.callerIds = /^[0-9,\\s]+$/.test(str)\n\t\t\t\t? str\n\t\t\t\t: str.replace(/[^0-9,\\s]/g, '');\n\t\t},\n\t\tcloseDialog() {\n\t\t\tthis.modalBus.emit('close');\n\t\t\tthis.$externalHooks().run('workflowSettings.dialogVisibleChanged', { dialogVisible: false });\n\t\t},\n\t\tsetTimeout(key: string, value: string) {\n\t\t\tconst time = value ? parseInt(value, 10) : 0;\n\n\t\t\tthis.timeoutHMS = {\n\t\t\t\t...this.timeoutHMS,\n\t\t\t\t[key]: time,\n\t\t\t};\n\t\t},\n\t\tasync loadWorkflowCallerPolicyOptions() {\n\t\t\tconst currentUserIsOwner = this.workflow.ownedBy?.id === this.currentUser?.id;\n\n\t\t\tthis.workflowCallerPolicyOptions = [\n\t\t\t\t{\n\t\t\t\t\tkey: 'none',\n\t\t\t\t\tvalue: this.$locale.baseText('workflowSettings.callerPolicy.options.none'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'workflowsFromSameOwner',\n\t\t\t\t\tvalue: this.$locale.baseText(\n\t\t\t\t\t\t'workflowSettings.callerPolicy.options.workflowsFromSameOwner',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\t\towner: currentUserIsOwner\n\t\t\t\t\t\t\t\t\t? this.$locale.baseText(\n\t\t\t\t\t\t\t\t\t\t\t'workflowSettings.callerPolicy.options.workflowsFromSameOwner.owner',\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t: this.workflowOwnerName,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'workflowsFromAList',\n\t\t\t\t\tvalue: this.$locale.baseText('workflowSettings.callerPolicy.options.workflowsFromAList'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'any',\n\t\t\t\t\tvalue: this.$locale.baseText('workflowSettings.callerPolicy.options.any'),\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t\tasync loadSaveDataErrorExecutionOptions() {\n\t\t\tthis.saveDataErrorExecutionOptions.length = 0;\n\t\t\tthis.saveDataErrorExecutionOptions.push.apply(\n\t\t\t\t// eslint-disable-line no-useless-call\n\t\t\t\tthis.saveDataErrorExecutionOptions,\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'DEFAULT',\n\t\t\t\t\t\tvalue: this.$locale.baseText(\n\t\t\t\t\t\t\t'workflowSettings.saveDataErrorExecutionOptions.defaultSave',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\t\t\tdefaultValue:\n\t\t\t\t\t\t\t\t\t\tthis.defaultValues.saveDataErrorExecution === 'all'\n\t\t\t\t\t\t\t\t\t\t\t? this.$locale.baseText('workflowSettings.saveDataErrorExecutionOptions.save')\n\t\t\t\t\t\t\t\t\t\t\t: this.$locale.baseText(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'workflowSettings.saveDataErrorExecutionOptions.doNotSave',\n\t\t\t\t\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'all',\n\t\t\t\t\t\tvalue: this.$locale.baseText('workflowSettings.saveDataErrorExecutionOptions.save'),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'none',\n\t\t\t\t\t\tvalue: this.$locale.baseText(\n\t\t\t\t\t\t\t'workflowSettings.saveDataErrorExecutionOptions.doNotSave',\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t);\n\t\t},\n\t\tasync loadSaveDataSuccessExecutionOptions() {\n\t\t\tthis.saveDataSuccessExecutionOptions.length = 0;\n\t\t\tthis.saveDataSuccessExecutionOptions.push.apply(\n\t\t\t\t// eslint-disable-line no-useless-call\n\t\t\t\tthis.saveDataSuccessExecutionOptions,\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'DEFAULT',\n\t\t\t\t\t\tvalue: this.$locale.baseText(\n\t\t\t\t\t\t\t'workflowSettings.saveDataSuccessExecutionOptions.defaultSave',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\t\t\tdefaultValue:\n\t\t\t\t\t\t\t\t\t\tthis.defaultValues.saveDataSuccessExecution === 'all'\n\t\t\t\t\t\t\t\t\t\t\t? this.$locale.baseText(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'workflowSettings.saveDataSuccessExecutionOptions.save',\n\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t: this.$locale.baseText(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'workflowSettings.saveDataSuccessExecutionOptions.doNotSave',\n\t\t\t\t\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'all',\n\t\t\t\t\t\tvalue: this.$locale.baseText('workflowSettings.saveDataSuccessExecutionOptions.save'),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'none',\n\t\t\t\t\t\tvalue: this.$locale.baseText(\n\t\t\t\t\t\t\t'workflowSettings.saveDataSuccessExecutionOptions.doNotSave',\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t);\n\t\t},\n\t\tasync loadSaveExecutionProgressOptions() {\n\t\t\tthis.saveExecutionProgressOptions.length = 0;\n\t\t\tthis.saveExecutionProgressOptions.push.apply(\n\t\t\t\t// eslint-disable-line no-useless-call\n\t\t\t\tthis.saveExecutionProgressOptions,\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'DEFAULT',\n\t\t\t\t\t\tvalue: this.$locale.baseText(\n\t\t\t\t\t\t\t'workflowSettings.saveExecutionProgressOptions.defaultSave',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\t\t\tdefaultValue: this.defaultValues.saveExecutionProgress\n\t\t\t\t\t\t\t\t\t\t? this.$locale.baseText('workflowSettings.saveExecutionProgressOptions.yes')\n\t\t\t\t\t\t\t\t\t\t: this.$locale.baseText('workflowSettings.saveExecutionProgressOptions.no'),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: true,\n\t\t\t\t\t\tvalue: this.$locale.baseText('workflowSettings.saveExecutionProgressOptions.yes'),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: false,\n\t\t\t\t\t\tvalue: this.$locale.baseText('workflowSettings.saveExecutionProgressOptions.no'),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t);\n\t\t},\n\t\tasync loadSaveManualOptions() {\n\t\t\tthis.saveManualOptions.length = 0;\n\t\t\tthis.saveManualOptions.push({\n\t\t\t\tkey: 'DEFAULT',\n\t\t\t\tvalue: this.$locale.baseText('workflowSettings.saveManualOptions.defaultSave', {\n\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\tdefaultValue: this.defaultValues.saveManualExecutions\n\t\t\t\t\t\t\t? this.$locale.baseText('workflowSettings.saveManualOptions.yes')\n\t\t\t\t\t\t\t: this.$locale.baseText('workflowSettings.saveManualOptions.no'),\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t});\n\t\t\tthis.saveManualOptions.push({\n\t\t\t\tkey: true,\n\t\t\t\tvalue: this.$locale.baseText('workflowSettings.saveManualOptions.yes'),\n\t\t\t});\n\t\t\tthis.saveManualOptions.push({\n\t\t\t\tkey: false,\n\t\t\t\tvalue: this.$locale.baseText('workflowSettings.saveManualOptions.no'),\n\t\t\t});\n\t\t},\n\n\t\tasync loadTimezones() {\n\t\t\tif (this.timezones.length !== 0) {\n\t\t\t\t// Data got already loaded\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst timezones = await this.settingsStore.getTimezones();\n\n\t\t\tlet defaultTimezoneValue = timezones[this.defaultValues.timezone] as string | undefined;\n\t\t\tif (defaultTimezoneValue === undefined) {\n\t\t\t\tdefaultTimezoneValue = this.$locale.baseText('workflowSettings.defaultTimezoneNotValid');\n\t\t\t}\n\n\t\t\tthis.timezones.push({\n\t\t\t\tkey: 'DEFAULT',\n\t\t\t\tvalue: this.$locale.baseText('workflowSettings.defaultTimezone', {\n\t\t\t\t\tinterpolate: { defaultTimezoneValue },\n\t\t\t\t}),\n\t\t\t});\n\t\t\tfor (const timezone of Object.keys(timezones)) {\n\t\t\t\tthis.timezones.push({\n\t\t\t\t\tkey: timezone,\n\t\t\t\t\tvalue: timezones[timezone] as string,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tasync loadWorkflows() {\n\t\t\tconst workflows = await this.workflowsStore.fetchAllWorkflows();\n\t\t\tworkflows.sort((a, b) => {\n\t\t\t\tif (a.name.toLowerCase() < b.name.toLowerCase()) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (a.name.toLowerCase() > b.name.toLowerCase()) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t\t// @ts-ignore\n\t\t\tworkflows.unshift({\n\t\t\t\tid: undefined as unknown as string,\n\t\t\t\tname: this.$locale.baseText('workflowSettings.noWorkflow'),\n\t\t\t});\n\n\t\t\tVue.set(this, 'workflows', workflows);\n\t\t},\n\t\tasync saveSettings() {\n\t\t\t// Set that the active state should be changed\n\t\t\tconst data: IWorkflowDataUpdate = {\n\t\t\t\tsettings: this.workflowSettings,\n\t\t\t};\n\n\t\t\t// Convert hours, minutes, seconds into seconds for the workflow timeout\n\t\t\tconst { hours, minutes, seconds } = this.timeoutHMS;\n\t\t\tdata.settings!.executionTimeout =\n\t\t\t\tdata.settings!.executionTimeout !== -1 ? hours * 3600 + minutes * 60 + seconds : -1;\n\n\t\t\tif (data.settings!.executionTimeout === 0) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\tnew Error(this.$locale.baseText('workflowSettings.showError.saveSettings1.errorMessage')),\n\t\t\t\t\tthis.$locale.baseText('workflowSettings.showError.saveSettings1.title'),\n\t\t\t\t\tthis.$locale.baseText('workflowSettings.showError.saveSettings1.message') + ':',\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// @ts-ignore\n\t\t\tif (data.settings!.executionTimeout > this.workflowSettings.maxExecutionTimeout) {\n\t\t\t\tconst { hours, minutes, seconds } = this.convertToHMS(\n\t\t\t\t\tthis.workflowSettings.maxExecutionTimeout as number,\n\t\t\t\t);\n\t\t\t\tthis.$showError(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\tthis.$locale.baseText('workflowSettings.showError.saveSettings2.errorMessage', {\n\t\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\t\thours: hours.toString(),\n\t\t\t\t\t\t\t\tminutes: minutes.toString(),\n\t\t\t\t\t\t\t\tseconds: seconds.toString(),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t\tthis.$locale.baseText('workflowSettings.showError.saveSettings2.title'),\n\t\t\t\t\tthis.$locale.baseText('workflowSettings.showError.saveSettings2.message') + ':',\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdelete data.settings!.maxExecutionTimeout;\n\n\t\t\tthis.isLoading = true;\n\t\t\tdata.versionId = this.workflowsStore.workflowVersionId;\n\n\t\t\ttry {\n\t\t\t\tconst workflow = await this.workflowsStore.updateWorkflow(this.$route.params.name, data);\n\t\t\t\tthis.workflowsStore.setWorkflowVersionId(workflow.versionId);\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('workflowSettings.showError.saveSettings3.title'),\n\t\t\t\t);\n\t\t\t\tthis.isLoading = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the settings without the defaults set for local workflow settings\n\t\t\tconst localWorkflowSettings: IWorkflowSettings = {};\n\t\t\tfor (const key of Object.keys(this.workflowSettings)) {\n\t\t\t\tif (this.workflowSettings[key] !== 'DEFAULT') {\n\t\t\t\t\tlocalWorkflowSettings[key] = this.workflowSettings[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst oldSettings = deepCopy(this.workflowsStore.workflowSettings);\n\n\t\t\tthis.workflowsStore.setWorkflowSettings(localWorkflowSettings);\n\n\t\t\tthis.isLoading = false;\n\n\t\t\tthis.$showMessage({\n\t\t\t\ttitle: this.$locale.baseText('workflowSettings.showMessage.saveSettings.title'),\n\t\t\t\ttype: 'success',\n\t\t\t});\n\n\t\t\tthis.closeDialog();\n\n\t\t\tthis.$externalHooks().run('workflowSettings.saveSettings', { oldSettings });\n\t\t\tthis.$telemetry.track('User updated workflow settings', {\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t});\n\t\t},\n\t\ttoggleTimeout() {\n\t\t\tthis.workflowSettings.executionTimeout =\n\t\t\t\tthis.workflowSettings.executionTimeout === -1 ? 0 : -1;\n\t\t},\n\t\tconvertToHMS(num: number): ITimeoutHMS {\n\t\t\tif (num > 0) {\n\t\t\t\tconst hours = Math.floor(num / 3600);\n\t\t\t\tconst remainder = num % 3600;\n\t\t\t\tconst minutes = Math.floor(remainder / 60);\n\t\t\t\tconst seconds = remainder % 60;\n\t\t\t\treturn { hours, minutes, seconds };\n\t\t\t}\n\t\t\treturn { hours: 0, minutes: 0, seconds: 0 };\n\t\t},\n\t},\n});\n</script>\n\n<style scoped lang=\"scss\">\n.workflow-settings {\n\tfont-size: var(--font-size-s);\n\t.el-row {\n\t\tpadding: 0.25em 0;\n\t}\n}\n\n.setting-info {\n\tdisplay: none;\n}\n\n.setting-name {\n\tline-height: 32px;\n}\n\n.setting-name:hover {\n\t.setting-info {\n\t\tdisplay: inline;\n\t}\n}\n\n.timeout-input {\n\tmargin-left: 5px;\n}\n</style>\n","<template>\n\t<Modal\n\t\t:name=\"modalName\"\n\t\t@enter=\"onSubmit\"\n\t\t:title=\"title\"\n\t\t:center=\"true\"\n\t\twidth=\"460px\"\n\t\t:eventBus=\"modalBus\"\n\t>\n\t\t<template #content>\n\t\t\t<div>\n\t\t\t\t<div v-if=\"isPending\">\n\t\t\t\t\t<n8n-text color=\"text-base\">{{\n\t\t\t\t\t\t$locale.baseText('settings.users.confirmUserDeletion')\n\t\t\t\t\t}}</n8n-text>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"$style.content\" v-else>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<n8n-text color=\"text-base\">{{\n\t\t\t\t\t\t\t$locale.baseText('settings.users.confirmDataHandlingAfterDeletion')\n\t\t\t\t\t\t}}</n8n-text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<el-radio :value=\"operation\" label=\"transfer\" @change=\"() => setOperation('transfer')\">\n\t\t\t\t\t\t<n8n-text color=\"text-dark\">{{\n\t\t\t\t\t\t\t$locale.baseText('settings.users.transferWorkflowsAndCredentials')\n\t\t\t\t\t\t}}</n8n-text>\n\t\t\t\t\t</el-radio>\n\t\t\t\t\t<div :class=\"$style.optionInput\" v-if=\"operation === 'transfer'\">\n\t\t\t\t\t\t<n8n-input-label :label=\"$locale.baseText('settings.users.userToTransferTo')\">\n\t\t\t\t\t\t\t<n8n-user-select\n\t\t\t\t\t\t\t\t:users=\"usersStore.allUsers\"\n\t\t\t\t\t\t\t\t:value=\"transferId\"\n\t\t\t\t\t\t\t\t:ignoreIds=\"ignoreIds\"\n\t\t\t\t\t\t\t\t:currentUserId=\"usersStore.currentUserId\"\n\t\t\t\t\t\t\t\t@input=\"setTransferId\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</n8n-input-label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<el-radio :value=\"operation\" label=\"delete\" @change=\"() => setOperation('delete')\">\n\t\t\t\t\t\t<n8n-text color=\"text-dark\">{{\n\t\t\t\t\t\t\t$locale.baseText('settings.users.deleteWorkflowsAndCredentials')\n\t\t\t\t\t\t}}</n8n-text>\n\t\t\t\t\t</el-radio>\n\t\t\t\t\t<div\n\t\t\t\t\t\t:class=\"$style.optionInput\"\n\t\t\t\t\t\tv-if=\"operation === 'delete'\"\n\t\t\t\t\t\tdata-test-id=\"delete-data-input\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<n8n-input-label :label=\"$locale.baseText('settings.users.deleteConfirmationMessage')\">\n\t\t\t\t\t\t\t<n8n-input\n\t\t\t\t\t\t\t\t:value=\"deleteConfirmText\"\n\t\t\t\t\t\t\t\t:placeholder=\"$locale.baseText('settings.users.deleteConfirmationText')\"\n\t\t\t\t\t\t\t\t@input=\"setConfirmText\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</n8n-input-label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<n8n-button\n\t\t\t\t:loading=\"loading\"\n\t\t\t\t:disabled=\"!enabled\"\n\t\t\t\t:label=\"$locale.baseText('settings.users.delete')\"\n\t\t\t\t@click=\"onSubmit\"\n\t\t\t\tfloat=\"right\"\n\t\t\t/>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\n\nimport { showMessage } from '@/mixins/showMessage';\nimport Modal from './Modal.vue';\nimport type { IUser } from '../Interface';\nimport { mapStores } from 'pinia';\nimport { useUsersStore } from '@/stores/users.store';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins(showMessage).extend({\n\tcomponents: {\n\t\tModal,\n\t},\n\tname: 'DeleteUserModal',\n\tprops: {\n\t\tmodalName: {\n\t\t\ttype: String,\n\t\t},\n\t\tactiveId: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tmodalBus: createEventBus(),\n\t\t\tloading: false,\n\t\t\toperation: '',\n\t\t\tdeleteConfirmText: '',\n\t\t\ttransferId: '',\n\t\t\tignoreIds: [this.activeId],\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUsersStore),\n\t\tuserToDelete(): IUser | null {\n\t\t\treturn this.usersStore.getUserById(this.activeId);\n\t\t},\n\t\tisPending(): boolean {\n\t\t\treturn this.userToDelete ? this.userToDelete && !this.userToDelete.firstName : false;\n\t\t},\n\t\ttitle(): string {\n\t\t\tconst user =\n\t\t\t\t(this.userToDelete && (this.userToDelete.fullName || this.userToDelete.email)) || '';\n\t\t\treturn this.$locale.baseText('settings.users.deleteUser', { interpolate: { user } });\n\t\t},\n\t\tenabled(): boolean {\n\t\t\tif (this.isPending) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.operation === 'delete' &&\n\t\t\t\tthis.deleteConfirmText === this.$locale.baseText('settings.users.deleteConfirmationText')\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (this.operation === 'transfer' && this.transferId) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t},\n\tmethods: {\n\t\tsetOperation(operation: string) {\n\t\t\tthis.operation = operation;\n\t\t\tthis.transferId = '';\n\t\t},\n\t\tsetConfirmText(text: string) {\n\t\t\tthis.deleteConfirmText = text;\n\t\t},\n\t\tsetTransferId(id: string) {\n\t\t\tthis.transferId = id;\n\t\t},\n\t\tasync onSubmit() {\n\t\t\ttry {\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.loading = true;\n\n\t\t\t\tconst params = { id: this.activeId } as { id: string; transferId?: string };\n\t\t\t\tif (this.operation === 'transfer') {\n\t\t\t\t\tparams.transferId = this.transferId;\n\t\t\t\t}\n\n\t\t\t\tawait this.usersStore.deleteUser(params);\n\n\t\t\t\tlet message = '';\n\t\t\t\tif (this.transferId) {\n\t\t\t\t\tconst transferUser: IUser | null = this.usersStore.getUserById(this.transferId);\n\t\t\t\t\tif (transferUser) {\n\t\t\t\t\t\tmessage = this.$locale.baseText('settings.users.transferredToUser', {\n\t\t\t\t\t\t\tinterpolate: { user: transferUser.fullName || '' },\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\ttitle: this.$locale.baseText('settings.users.userDeleted'),\n\t\t\t\t\tmessage,\n\t\t\t\t});\n\n\t\t\t\tthis.modalBus.emit('close');\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('settings.users.userDeletedError'));\n\t\t\t}\n\t\t\tthis.loading = false;\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.content {\n\tpadding-bottom: var(--spacing-2xs);\n\t> * {\n\t\tmargin-bottom: var(--spacing-s);\n\t}\n}\n\n.innerContent {\n\t> * {\n\t\tmargin-bottom: var(--spacing-2xs);\n\t}\n}\n\n.optionInput {\n\tpadding-left: var(--spacing-l);\n}\n</style>\n","<template>\n\t<span>\n\t\t{{ time }}\n\t</span>\n</template>\n\n<script lang=\"ts\">\nimport { genericHelpers } from '@/mixins/genericHelpers';\n\nimport mixins from 'vue-typed-mixins';\n\nexport default mixins(genericHelpers).extend({\n\tname: 'ExecutionTime',\n\tprops: ['startTime'],\n\tcomputed: {\n\t\ttime(): string {\n\t\t\tif (!this.startTime) {\n\t\t\t\treturn '...';\n\t\t\t}\n\t\t\tconst msPassed = this.nowTime - new Date(this.startTime).getTime();\n\t\t\treturn this.displayTimer(msPassed);\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tnowTime: -1,\n\t\t\tintervalTimer: null as null | NodeJS.Timeout,\n\t\t};\n\t},\n\tmounted() {\n\t\tthis.setNow();\n\t\tthis.intervalTimer = setInterval(() => {\n\t\t\tthis.setNow();\n\t\t}, 1000);\n\t},\n\tdestroyed() {\n\t\t// Make sure that the timer gets destroyed once no longer needed\n\t\tif (this.intervalTimer !== null) {\n\t\t\tclearInterval(this.intervalTimer);\n\t\t}\n\t},\n\tmethods: {\n\t\tsetNow() {\n\t\t\tthis.nowTime = new Date().getTime();\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\">\n// .data-display-wrapper {\n\n// }\n</style>\n","import { externalHooks } from '@/mixins/externalHooks';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport { showMessage } from '@/mixins/showMessage';\n\nimport mixins from 'vue-typed-mixins';\nimport {\n\tLOCAL_STORAGE_ACTIVATION_FLAG,\n\tPLACEHOLDER_EMPTY_WORKFLOW_ID,\n\tWORKFLOW_ACTIVE_MODAL_KEY,\n} from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\n\nexport const workflowActivate = mixins(externalHooks, workflowHelpers, showMessage).extend({\n\tdata() {\n\t\treturn {\n\t\t\tupdatingWorkflowActivation: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useSettingsStore, useUIStore, useWorkflowsStore),\n\t},\n\tmethods: {\n\t\tasync activateCurrentWorkflow(telemetrySource?: string) {\n\t\t\tconst workflowId = this.workflowsStore.workflowId;\n\t\t\treturn this.updateWorkflowActivation(workflowId, true, telemetrySource);\n\t\t},\n\t\tasync updateWorkflowActivation(\n\t\t\tworkflowId: string | undefined,\n\t\t\tnewActiveState: boolean,\n\t\t\ttelemetrySource?: string,\n\t\t) {\n\t\t\tthis.updatingWorkflowActivation = true;\n\t\t\tconst nodesIssuesExist = this.workflowsStore.nodesIssuesExist as boolean;\n\n\t\t\tlet currWorkflowId: string | undefined = workflowId;\n\t\t\tif (!currWorkflowId || currWorkflowId === PLACEHOLDER_EMPTY_WORKFLOW_ID) {\n\t\t\t\tconst saved = await this.saveCurrentWorkflow();\n\t\t\t\tif (!saved) {\n\t\t\t\t\tthis.updatingWorkflowActivation = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurrWorkflowId = this.workflowsStore.workflowId as string;\n\t\t\t}\n\t\t\tconst isCurrentWorkflow = currWorkflowId === this.workflowsStore.workflowId;\n\n\t\t\tconst activeWorkflows = this.workflowsStore.activeWorkflows;\n\t\t\tconst isWorkflowActive = activeWorkflows.includes(currWorkflowId);\n\n\t\t\tconst telemetryPayload = {\n\t\t\t\tworkflow_id: currWorkflowId,\n\t\t\t\tis_active: newActiveState,\n\t\t\t\tprevious_status: isWorkflowActive,\n\t\t\t\tndv_input: telemetrySource === 'ndv',\n\t\t\t};\n\t\t\tthis.$telemetry.track('User set workflow active status', telemetryPayload);\n\t\t\tthis.$externalHooks().run('workflowActivate.updateWorkflowActivation', telemetryPayload);\n\n\t\t\ttry {\n\t\t\t\tif (isWorkflowActive && newActiveState) {\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: this.$locale.baseText('workflowActivator.workflowIsActive'),\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t});\n\t\t\t\t\tthis.updatingWorkflowActivation = false;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (isCurrentWorkflow && nodesIssuesExist && newActiveState === true) {\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: this.$locale.baseText(\n\t\t\t\t\t\t\t'workflowActivator.showMessage.activeChangedNodesIssuesExistTrue.title',\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmessage: this.$locale.baseText(\n\t\t\t\t\t\t\t'workflowActivator.showMessage.activeChangedNodesIssuesExistTrue.message',\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.updatingWorkflowActivation = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait this.updateWorkflow({ workflowId: currWorkflowId, active: newActiveState });\n\t\t\t} catch (error) {\n\t\t\t\tconst newStateName = newActiveState === true ? 'activated' : 'deactivated';\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('workflowActivator.showError.title', {\n\t\t\t\t\t\tinterpolate: { newStateName },\n\t\t\t\t\t}) + ':',\n\t\t\t\t);\n\t\t\t\tthis.updatingWorkflowActivation = false;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst activationEventName = isCurrentWorkflow\n\t\t\t\t? 'workflow.activeChangeCurrent'\n\t\t\t\t: 'workflow.activeChange';\n\t\t\tthis.$externalHooks().run(activationEventName, {\n\t\t\t\tworkflowId: currWorkflowId,\n\t\t\t\tactive: newActiveState,\n\t\t\t});\n\n\t\t\tthis.$emit('workflowActiveChanged', { id: currWorkflowId, active: newActiveState });\n\t\t\tthis.updatingWorkflowActivation = false;\n\n\t\t\tif (isCurrentWorkflow) {\n\t\t\t\tif (\n\t\t\t\t\tnewActiveState &&\n\t\t\t\t\twindow.localStorage.getItem(LOCAL_STORAGE_ACTIVATION_FLAG) !== 'true'\n\t\t\t\t) {\n\t\t\t\t\tthis.uiStore.openModal(WORKFLOW_ACTIVE_MODAL_KEY);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.settingsStore.fetchPromptsData();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n});\n","<template>\n\t<div class=\"workflow-activator\">\n\t\t<div :class=\"$style.activeStatusText\" data-test-id=\"workflow-activator-status\">\n\t\t\t<n8n-text\n\t\t\t\tv-if=\"workflowActive\"\n\t\t\t\t:color=\"couldNotBeStarted ? 'danger' : 'success'\"\n\t\t\t\tsize=\"small\"\n\t\t\t\tbold\n\t\t\t>\n\t\t\t\t{{ $locale.baseText('workflowActivator.active') }}\n\t\t\t</n8n-text>\n\t\t\t<n8n-text v-else color=\"text-base\" size=\"small\" bold>\n\t\t\t\t{{ $locale.baseText('workflowActivator.inactive') }}\n\t\t\t</n8n-text>\n\t\t</div>\n\t\t<n8n-tooltip :disabled=\"!disabled\" placement=\"bottom\">\n\t\t\t<template #content>\n\t\t\t\t<div>{{ $locale.baseText('workflowActivator.thisWorkflowHasNoTriggerNodes') }}</div>\n\t\t\t</template>\n\t\t\t<el-switch\n\t\t\t\tv-loading=\"updatingWorkflowActivation\"\n\t\t\t\t:value=\"workflowActive\"\n\t\t\t\t@change=\"activeChanged\"\n\t\t\t\t:title=\"\n\t\t\t\t\tworkflowActive\n\t\t\t\t\t\t? $locale.baseText('workflowActivator.deactivateWorkflow')\n\t\t\t\t\t\t: $locale.baseText('workflowActivator.activateWorkflow')\n\t\t\t\t\"\n\t\t\t\t:disabled=\"disabled || updatingWorkflowActivation\"\n\t\t\t\t:active-color=\"getActiveColor\"\n\t\t\t\tinactive-color=\"#8899AA\"\n\t\t\t\telement-loading-spinner=\"el-icon-loading\"\n\t\t\t\tdata-test-id=\"workflow-activate-switch\"\n\t\t\t>\n\t\t\t</el-switch>\n\t\t</n8n-tooltip>\n\n\t\t<div class=\"could-not-be-started\" v-if=\"couldNotBeStarted\">\n\t\t\t<n8n-tooltip placement=\"top\">\n\t\t\t\t<template #content>\n\t\t\t\t\t<div\n\t\t\t\t\t\t@click=\"displayActivationError\"\n\t\t\t\t\t\tv-html=\"$locale.baseText('workflowActivator.theWorkflowIsSetToBeActiveBut')\"\n\t\t\t\t\t></div>\n\t\t\t\t</template>\n\t\t\t\t<font-awesome-icon @click=\"displayActivationError\" icon=\"exclamation-triangle\" />\n\t\t\t</n8n-tooltip>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { showMessage } from '@/mixins/showMessage';\nimport { workflowActivate } from '@/mixins/workflowActivate';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { mapStores } from 'pinia';\nimport mixins from 'vue-typed-mixins';\nimport { getActivatableTriggerNodes } from '@/utils';\n\nexport default mixins(showMessage, workflowActivate).extend({\n\tname: 'WorkflowActivator',\n\tprops: ['workflowActive', 'workflowId'],\n\tcomputed: {\n\t\t...mapStores(useUIStore, useWorkflowsStore),\n\t\tgetStateIsDirty(): boolean {\n\t\t\treturn this.uiStore.stateIsDirty;\n\t\t},\n\t\tnodesIssuesExist(): boolean {\n\t\t\treturn this.workflowsStore.nodesIssuesExist;\n\t\t},\n\t\tisWorkflowActive(): boolean {\n\t\t\tconst activeWorkflows = this.workflowsStore.activeWorkflows;\n\t\t\treturn activeWorkflows.includes(this.workflowId);\n\t\t},\n\t\tcouldNotBeStarted(): boolean {\n\t\t\treturn this.workflowActive === true && this.isWorkflowActive !== this.workflowActive;\n\t\t},\n\t\tgetActiveColor(): string {\n\t\t\tif (this.couldNotBeStarted === true) {\n\t\t\t\treturn '#ff4949';\n\t\t\t}\n\t\t\treturn '#13ce66';\n\t\t},\n\t\tisCurrentWorkflow(): boolean {\n\t\t\treturn this.workflowsStore.workflowId === this.workflowId;\n\t\t},\n\t\tdisabled(): boolean {\n\t\t\tconst isNewWorkflow = !this.workflowId;\n\t\t\tif (isNewWorkflow || this.isCurrentWorkflow) {\n\t\t\t\treturn !this.workflowActive && !this.containsTrigger;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\tcontainsTrigger(): boolean {\n\t\t\tconst foundTriggers = getActivatableTriggerNodes(this.workflowsStore.workflowTriggerNodes);\n\t\t\treturn foundTriggers.length > 0;\n\t\t},\n\t},\n\tmethods: {\n\t\tasync activeChanged(newActiveState: boolean) {\n\t\t\treturn this.updateWorkflowActivation(this.workflowId, newActiveState);\n\t\t},\n\t\tasync displayActivationError() {\n\t\t\tlet errorMessage: string;\n\t\t\ttry {\n\t\t\t\tconst errorData = await this.workflowsStore.getActivationError(this.workflowId);\n\n\t\t\t\tif (errorData === undefined) {\n\t\t\t\t\terrorMessage = this.$locale.baseText(\n\t\t\t\t\t\t'workflowActivator.showMessage.displayActivationError.message.errorDataUndefined',\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\terrorMessage = this.$locale.baseText(\n\t\t\t\t\t\t'workflowActivator.showMessage.displayActivationError.message.errorDataNotUndefined',\n\t\t\t\t\t\t{ interpolate: { message: errorData.error.message } },\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\terrorMessage = this.$locale.baseText(\n\t\t\t\t\t'workflowActivator.showMessage.displayActivationError.message.catchBlock',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.$showMessage({\n\t\t\t\ttitle: this.$locale.baseText('workflowActivator.showMessage.displayActivationError.title'),\n\t\t\t\tmessage: errorMessage,\n\t\t\t\ttype: 'warning',\n\t\t\t\tduration: 0,\n\t\t\t});\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.activeStatusText {\n\twidth: 64px; // Required to avoid jumping when changing active state\n\tpadding-right: var(--spacing-2xs);\n\tbox-sizing: border-box;\n\tdisplay: inline-block;\n\ttext-align: right;\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.workflow-activator {\n\tdisplay: inline-flex;\n\tflex-wrap: nowrap;\n\talign-items: center;\n}\n\n.could-not-be-started {\n\tdisplay: inline-block;\n\tcolor: #ff4949;\n\tmargin-left: 0.5em;\n}\n\n::v-deep .el-loading-spinner {\n\tmargin-top: -10px;\n}\n</style>\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","import copyToClipboard from 'copy-to-clipboard';\n\nexport function useCopyToClipboard(): (text: string) => void {\n\treturn copyToClipboard;\n}\n","import type { IExternalHooks } from '@/Interface';\nimport type { IDataObject } from 'n8n-workflow';\nimport { useWebhooksStore } from '@/stores';\nimport { runExternalHook } from '@/utils';\n\nexport function useExternalHooks(): IExternalHooks {\n\treturn {\n\t\tasync run(eventName: string, metadata?: IDataObject): Promise<void> {\n\t\t\treturn runExternalHook(eventName, useWebhooksStore(), metadata);\n\t\t},\n\t};\n}\n","/**\n * Creates event listeners for `data-action` attribute to allow for actions to be called from locale without using\n * unsafe onclick attribute\n */\nimport { reactive, del, computed, onMounted, onUnmounted, getCurrentInstance } from 'vue';\n\nconst state = reactive({\n\tcustomActions: {} as Record<string, Function>,\n});\n\nexport default () => {\n\tfunction registerCustomAction(key: string, action: Function) {\n\t\tstate.customActions[key] = action;\n\t}\n\tfunction unregisterCustomAction(key: string) {\n\t\tdel(state.customActions, key);\n\t}\n\tfunction delegateClick(e: MouseEvent) {\n\t\tconst clickedElement = e.target;\n\t\tif (!(clickedElement instanceof Element) || clickedElement.tagName !== 'A') return;\n\n\t\tconst actionAttribute = clickedElement.getAttribute('data-action');\n\t\tif (actionAttribute && typeof availableActions.value[actionAttribute] === 'function') {\n\t\t\te.preventDefault();\n\t\t\tavailableActions.value[actionAttribute]();\n\t\t}\n\t}\n\n\tfunction reload() {\n\t\tif (window.top) {\n\t\t\twindow.top.location.reload();\n\t\t} else {\n\t\t\twindow.location.reload();\n\t\t}\n\t}\n\n\tconst availableActions = computed<{ [key: string]: Function }>(() => ({\n\t\treload,\n\t\t...state.customActions,\n\t}));\n\n\tonMounted(() => {\n\t\tconst instance = getCurrentInstance();\n\t\twindow.addEventListener('click', delegateClick);\n\t\tinstance?.proxy.$root.$on('registerGlobalLinkAction', registerCustomAction);\n\t});\n\n\tonUnmounted(() => {\n\t\tconst instance = getCurrentInstance();\n\t\twindow.removeEventListener('click', delegateClick);\n\t\tinstance?.proxy.$root.$off('registerGlobalLinkAction', registerCustomAction);\n\t});\n\n\treturn {\n\t\tregisterCustomAction,\n\t\tunregisterCustomAction,\n\t};\n};\n","import { i18n } from '@/plugins/i18n';\nimport { useRootStore } from '@/stores/n8nRoot.store';\n\nexport function useI18n() {\n\tconst isEnglishLocale = useRootStore().defaultLocale === 'en';\n\n\tfunction localizeNodeName(nodeName: string, type: string) {\n\t\tif (isEnglishLocale) return nodeName;\n\n\t\tconst nodeTypeName = i18n.shortNodeType(type);\n\n\t\treturn i18n.headerText({\n\t\t\tkey: `headers.${nodeTypeName}.displayName`,\n\t\t\tfallback: nodeName,\n\t\t});\n\t}\n\n\treturn { i18n, localizeNodeName };\n}\n","import type _Vue from 'vue';\nimport type { ITelemetrySettings, ITelemetryTrackProperties, IDataObject } from 'n8n-workflow';\nimport type { Route } from 'vue-router';\n\nimport type { INodeCreateElement } from '@/Interface';\nimport type { IUserNodesPanelSession } from './telemetry.types';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { useTelemetryStore } from '@/stores/telemetry.store';\n\nexport class Telemetry {\n\tprivate pageEventQueue: Array<{ route: Route }>;\n\tprivate previousPath: string;\n\n\tprivate get rudderStack() {\n\t\treturn window.rudderanalytics;\n\t}\n\n\tprivate userNodesPanelSession: IUserNodesPanelSession = {\n\t\tsessionId: '',\n\t\tdata: {\n\t\t\tnodeFilter: '',\n\t\t\tresultsNodes: [],\n\t\t\tfilterMode: 'Regular',\n\t\t},\n\t};\n\n\tconstructor() {\n\t\tthis.pageEventQueue = [];\n\t\tthis.previousPath = '';\n\t}\n\n\tinit(\n\t\ttelemetrySettings: ITelemetrySettings,\n\t\t{\n\t\t\tinstanceId,\n\t\t\tuserId,\n\t\t\tversionCli,\n\t\t}: {\n\t\t\tinstanceId: string;\n\t\t\tuserId?: string;\n\t\t\tversionCli: string;\n\t\t},\n\t) {\n\t\tif (!telemetrySettings.enabled || !telemetrySettings.config || this.rudderStack) return;\n\n\t\tconst {\n\t\t\tconfig: { key, url },\n\t\t} = telemetrySettings;\n\n\t\tconst settingsStore = useSettingsStore();\n\t\tconst rootStore = useRootStore();\n\n\t\tconst logLevel = settingsStore.logLevel;\n\n\t\tconst logging = logLevel === 'debug' ? { logLevel: 'DEBUG' } : {};\n\n\t\tthis.initRudderStack(key, url, {\n\t\t\tintegrations: { All: false },\n\t\t\tloadIntegration: false,\n\t\t\tconfigUrl: 'https://api-rs.n8n.io',\n\t\t\t...logging,\n\t\t});\n\t\tuseTelemetryStore().init(this);\n\n\t\tthis.identify(instanceId, userId, versionCli);\n\n\t\tthis.flushPageEvents();\n\t\tthis.track('Session started', { session_id: rootStore.sessionId });\n\t}\n\n\tidentify(instanceId: string, userId?: string, versionCli?: string) {\n\t\tconst traits = { instance_id: instanceId, version_cli: versionCli };\n\t\tif (userId) {\n\t\t\tthis.rudderStack.identify(`${instanceId}#${userId}`, traits);\n\t\t} else {\n\t\t\tthis.rudderStack.reset();\n\t\t}\n\t}\n\n\ttrack(event: string, properties?: ITelemetryTrackProperties) {\n\t\tif (!this.rudderStack) return;\n\n\t\tconst updatedProperties = {\n\t\t\t...properties,\n\t\t\tversion_cli: useRootStore().versionCli,\n\t\t};\n\n\t\tthis.rudderStack.track(event, updatedProperties);\n\t}\n\n\tpage(route: Route) {\n\t\tif (this.rudderStack) {\n\t\t\tif (route.path === this.previousPath) {\n\t\t\t\t// avoid duplicate requests query is changed for example on search page\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.previousPath = route.path;\n\n\t\t\tconst pageName = route.name;\n\t\t\tlet properties: { [key: string]: string } = {};\n\t\t\tif (\n\t\t\t\troute.meta &&\n\t\t\t\troute.meta.telemetry &&\n\t\t\t\ttypeof route.meta.telemetry.getProperties === 'function'\n\t\t\t) {\n\t\t\t\tproperties = route.meta.telemetry.getProperties(route);\n\t\t\t}\n\n\t\t\tconst category =\n\t\t\t\t(route.meta && route.meta.telemetry && route.meta.telemetry.pageCategory) || 'Editor';\n\t\t\tthis.rudderStack.page(category, pageName!, properties);\n\t\t} else {\n\t\t\tthis.pageEventQueue.push({\n\t\t\t\troute,\n\t\t\t});\n\t\t}\n\t}\n\n\tflushPageEvents() {\n\t\tconst queue = this.pageEventQueue;\n\t\tthis.pageEventQueue = [];\n\t\tqueue.forEach(({ route }) => {\n\t\t\tthis.page(route);\n\t\t});\n\t}\n\n\ttrackNodesPanel(event: string, properties: IDataObject = {}) {\n\t\tif (this.rudderStack) {\n\t\t\tproperties.nodes_panel_session_id = this.userNodesPanelSession.sessionId;\n\t\t\tswitch (event) {\n\t\t\t\tcase 'nodeView.createNodeActiveChanged':\n\t\t\t\t\tif (properties.createNodeActive !== false) {\n\t\t\t\t\t\tthis.resetNodesPanelSession();\n\t\t\t\t\t\tproperties.nodes_panel_session_id = this.userNodesPanelSession.sessionId;\n\t\t\t\t\t\tthis.track('User opened nodes panel', properties);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'nodeCreateList.destroyed':\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.userNodesPanelSession.data.nodeFilter.length > 0 &&\n\t\t\t\t\t\tthis.userNodesPanelSession.data.nodeFilter !== ''\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.track('User entered nodes panel search term', this.generateNodesPanelEvent());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'nodeCreateList.nodeFilterChanged':\n\t\t\t\t\tif (\n\t\t\t\t\t\t(properties.newValue as string).length === 0 &&\n\t\t\t\t\t\tthis.userNodesPanelSession.data.nodeFilter.length > 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.track('User entered nodes panel search term', this.generateNodesPanelEvent());\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(properties.newValue as string).length > ((properties.oldValue as string) || '').length\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.userNodesPanelSession.data.nodeFilter = properties.newValue as string;\n\t\t\t\t\t\tthis.userNodesPanelSession.data.resultsNodes = (\n\t\t\t\t\t\t\t(properties.filteredNodes || []) as INodeCreateElement[]\n\t\t\t\t\t\t).map((node: INodeCreateElement) => node.key);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'nodeCreateList.onCategoryExpanded':\n\t\t\t\t\tproperties.is_subcategory = false;\n\t\t\t\t\tproperties.nodes_panel_session_id = this.userNodesPanelSession.sessionId;\n\t\t\t\t\tthis.track('User viewed node category', properties);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'nodeCreateList.onViewActions':\n\t\t\t\t\tproperties.nodes_panel_session_id = this.userNodesPanelSession.sessionId;\n\t\t\t\t\tthis.track('User viewed node actions', properties);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'nodeCreateList.onActionsCustmAPIClicked':\n\t\t\t\t\tproperties.nodes_panel_session_id = this.userNodesPanelSession.sessionId;\n\t\t\t\t\tthis.track('User clicked custom API from node actions', properties);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'nodeCreateList.addAction':\n\t\t\t\t\tproperties.nodes_panel_session_id = this.userNodesPanelSession.sessionId;\n\t\t\t\t\tthis.track('User added action', properties);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'nodeCreateList.onSubcategorySelected':\n\t\t\t\t\tproperties.category_name = properties.subcategory;\n\t\t\t\t\tproperties.is_subcategory = true;\n\t\t\t\t\tproperties.nodes_panel_session_id = this.userNodesPanelSession.sessionId;\n\t\t\t\t\tdelete properties.selected;\n\t\t\t\t\tthis.track('User viewed node category', properties);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'nodeView.addNodeButton':\n\t\t\t\t\tthis.track('User added node to workflow canvas', properties);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'nodeView.addSticky':\n\t\t\t\t\tthis.track('User inserted workflow note', properties);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate resetNodesPanelSession() {\n\t\tthis.userNodesPanelSession.sessionId = `nodes_panel_session_${new Date().valueOf()}`;\n\t\tthis.userNodesPanelSession.data = {\n\t\t\tnodeFilter: '',\n\t\t\tresultsNodes: [],\n\t\t\tfilterMode: 'All',\n\t\t};\n\t}\n\n\tprivate generateNodesPanelEvent() {\n\t\treturn {\n\t\t\tsearch_string: this.userNodesPanelSession.data.nodeFilter,\n\t\t\tresults_count: this.userNodesPanelSession.data.resultsNodes.length,\n\t\t\tfilter_mode: this.userNodesPanelSession.data.filterMode,\n\t\t\tnodes_panel_session_id: this.userNodesPanelSession.sessionId,\n\t\t};\n\t}\n\n\tprivate initRudderStack(key: string, url: string, options: IDataObject) {\n\t\twindow.rudderanalytics = window.rudderanalytics || [];\n\n\t\tthis.rudderStack.methods = [\n\t\t\t'load',\n\t\t\t'page',\n\t\t\t'track',\n\t\t\t'identify',\n\t\t\t'alias',\n\t\t\t'group',\n\t\t\t'ready',\n\t\t\t'reset',\n\t\t\t'getAnonymousId',\n\t\t\t'setAnonymousId',\n\t\t];\n\n\t\tthis.rudderStack.factory = (method: string) => {\n\t\t\treturn (...args: unknown[]) => {\n\t\t\t\tconst argsCopy = [method, ...args];\n\t\t\t\tthis.rudderStack.push(argsCopy);\n\n\t\t\t\treturn this.rudderStack;\n\t\t\t};\n\t\t};\n\n\t\tfor (const method of this.rudderStack.methods) {\n\t\t\tthis.rudderStack[method] = this.rudderStack.factory(method);\n\t\t}\n\n\t\tthis.rudderStack.loadJS = () => {\n\t\t\tconst script = document.createElement('script');\n\n\t\t\tscript.type = 'text/javascript';\n\t\t\tscript.async = !0;\n\t\t\tscript.src = 'https://cdn-rs.n8n.io/v1/ra.min.js';\n\n\t\t\tconst element: Element = document.getElementsByTagName('script')[0];\n\n\t\t\tif (element && element.parentNode) {\n\t\t\t\telement.parentNode.insertBefore(script, element);\n\t\t\t}\n\t\t};\n\n\t\tthis.rudderStack.loadJS();\n\t\tthis.rudderStack.load(key, url, options);\n\t}\n}\n\nexport const telemetry = new Telemetry();\n\nexport function TelemetryPlugin(vue: typeof _Vue): void {\n\tObject.defineProperty(vue, '$telemetry', {\n\t\tget() {\n\t\t\treturn telemetry;\n\t\t},\n\t});\n\tObject.defineProperty(vue.prototype, '$telemetry', {\n\t\tget() {\n\t\t\treturn telemetry;\n\t\t},\n\t});\n}\n","import type { Telemetry } from '@/plugins/telemetry';\nimport { telemetry } from '@/plugins/telemetry';\n\nexport function useTelemetry(): Telemetry {\n\treturn telemetry;\n}\n","import { Notification } from 'element-ui';\nimport type { ElNotificationComponent, ElNotificationOptions } from 'element-ui/types/notification';\nimport type { MessageType } from 'element-ui/types/message';\nimport { sanitizeHtml } from '@/utils';\nimport { useTelemetry } from '@/composables/useTelemetry';\nimport { useWorkflowsStore } from '@/stores';\nimport { useI18n } from './useI18n';\nimport { useExternalHooks } from './useExternalHooks';\n\nconst messageDefaults: Partial<Omit<ElNotificationOptions, 'message'>> = {\n\tdangerouslyUseHTMLString: true,\n\tposition: 'bottom-right',\n};\n\nconst stickyNotificationQueue: ElNotificationComponent[] = [];\n\nexport function useToast() {\n\tconst telemetry = useTelemetry();\n\tconst workflowsStore = useWorkflowsStore();\n\tconst externalHooks = useExternalHooks();\n\tconst { i18n } = useI18n();\n\n\tfunction showMessage(\n\t\tmessageData: Omit<ElNotificationOptions, 'message'> & { message?: string },\n\t\ttrack = true,\n\t) {\n\t\tmessageData = { ...messageDefaults, ...messageData };\n\t\tmessageData.message = messageData.message\n\t\t\t? sanitizeHtml(messageData.message)\n\t\t\t: messageData.message;\n\n\t\tconst notification = Notification(messageData as ElNotificationOptions);\n\n\t\tif (messageData.duration === 0) {\n\t\t\tstickyNotificationQueue.push(notification);\n\t\t}\n\n\t\tif (messageData.type === 'error' && track) {\n\t\t\ttelemetry.track('Instance FE emitted error', {\n\t\t\t\terror_title: messageData.title,\n\t\t\t\terror_message: messageData.message,\n\t\t\t\tworkflow_id: workflowsStore.workflowId,\n\t\t\t});\n\t\t}\n\n\t\treturn notification;\n\t}\n\n\tfunction showToast(config: {\n\t\ttitle: string;\n\t\tmessage: string;\n\t\tonClick?: () => void;\n\t\tonClose?: () => void;\n\t\tduration?: number;\n\t\tcustomClass?: string;\n\t\tcloseOnClick?: boolean;\n\t\ttype?: MessageType;\n\t}) {\n\t\t// eslint-disable-next-line prefer-const\n\t\tlet notification: ElNotificationComponent;\n\t\tif (config.closeOnClick) {\n\t\t\tconst cb = config.onClick;\n\t\t\tconfig.onClick = () => {\n\t\t\t\tif (notification) {\n\t\t\t\t\tnotification.close();\n\t\t\t\t}\n\n\t\t\t\tif (cb) {\n\t\t\t\t\tcb();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tnotification = showMessage({\n\t\t\ttitle: config.title,\n\t\t\tmessage: config.message,\n\t\t\tonClick: config.onClick,\n\t\t\tonClose: config.onClose,\n\t\t\tduration: config.duration,\n\t\t\tcustomClass: config.customClass,\n\t\t\ttype: config.type,\n\t\t});\n\n\t\treturn notification;\n\t}\n\n\tfunction collapsableDetails({ description, node }: Error) {\n\t\tif (!description) return '';\n\n\t\tconst errorDescription =\n\t\t\tdescription.length > 500 ? `${description.slice(0, 500)}...` : description;\n\n\t\treturn `\n\t\t\t\t<br>\n\t\t\t\t<br>\n\t\t\t\t<details>\n\t\t\t\t\t<summary\n\t\t\t\t\t\tstyle=\"color: #ff6d5a; font-weight: bold; cursor: pointer;\"\n\t\t\t\t\t>\n\t\t\t\t\t\t${i18n.baseText('showMessage.showDetails')}\n\t\t\t\t\t</summary>\n\t\t\t\t\t<p>${node.name}: ${errorDescription}</p>\n\t\t\t\t</details>\n\t\t\t`;\n\t}\n\n\tfunction showError(e: Error | unknown, title: string, message?: string) {\n\t\tconst error = e as Error;\n\t\tconst messageLine = message ? `${message}<br/>` : '';\n\t\tshowMessage(\n\t\t\t{\n\t\t\t\ttitle,\n\t\t\t\tmessage: `\n\t\t\t\t\t${messageLine}\n\t\t\t\t\t<i>${error.message}</i>\n\t\t\t\t\t${collapsableDetails(error)}`,\n\t\t\t\ttype: 'error',\n\t\t\t\tduration: 0,\n\t\t\t},\n\t\t\tfalse,\n\t\t);\n\n\t\tvoid externalHooks.run('showMessage.showError', {\n\t\t\ttitle,\n\t\t\tmessage,\n\t\t\terrorMessage: error.message,\n\t\t});\n\n\t\ttelemetry.track('Instance FE emitted error', {\n\t\t\terror_title: title,\n\t\t\terror_description: message,\n\t\t\terror_message: error.message,\n\t\t\tworkflow_id: workflowsStore.workflowId,\n\t\t});\n\t}\n\n\treturn {\n\t\tshowMessage,\n\t\tshowToast,\n\t\tshowError,\n\t};\n}\n","import type { BaseTextKey } from '@/plugins/i18n';\nimport { useUIStore, useUsageStore } from '@/stores';\nimport { useI18n } from './useI18n';\nimport { computed } from 'vue';\n\nexport function useUpgradeLink(queryParams = { default: '', desktop: '' }) {\n\tconst uiStore = useUIStore();\n\tconst usageStore = useUsageStore();\n\tconst { i18n } = useI18n();\n\n\tconst upgradeLinkUrl = computed(() => {\n\t\tconst linkUrlTranslationKey = uiStore.contextBasedTranslationKeys.upgradeLinkUrl as BaseTextKey;\n\t\tlet url = i18n.baseText(linkUrlTranslationKey);\n\n\t\tif (linkUrlTranslationKey.endsWith('.upgradeLinkUrl')) {\n\t\t\turl = `${usageStore.viewPlansUrl}${queryParams.default}`;\n\t\t} else if (linkUrlTranslationKey.endsWith('.desktop')) {\n\t\t\turl = `${url}${queryParams.desktop}`;\n\t\t}\n\n\t\treturn url;\n\t});\n\n\treturn { upgradeLinkUrl };\n}\n","<script lang=\"ts\" setup>\nimport { computed, reactive, onBeforeMount, ref } from 'vue';\nimport debounce from 'lodash/debounce';\nimport type { PopoverPlacement } from 'element-ui/types/popover';\nimport type {\n\tExecutionFilterType,\n\tExecutionFilterMetadata,\n\tIWorkflowShortResponse,\n} from '@/Interface';\nimport { i18n as locale } from '@/plugins/i18n';\nimport TagsDropdown from '@/components/TagsDropdown.vue';\nimport { getObjectKeys, isEmpty } from '@/utils';\nimport { EnterpriseEditionFeature } from '@/constants';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUsageStore } from '@/stores/usage.store';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useTelemetry } from '@/composables';\n\nexport type ExecutionFilterProps = {\n\tworkflows?: IWorkflowShortResponse[];\n\tpopoverPlacement?: PopoverPlacement;\n};\n\nconst DATE_TIME_MASK = 'yyyy-MM-dd HH:mm';\n\nconst settingsStore = useSettingsStore();\nconst usageStore = useUsageStore();\nconst uiStore = useUIStore();\n\nconst telemetry = useTelemetry();\n\nconst props = withDefaults(defineProps<ExecutionFilterProps>(), {\n\tpopoverPlacement: 'bottom',\n});\nconst emit = defineEmits<{\n\t(event: 'filterChanged', value: ExecutionFilterType): void;\n}>();\nconst debouncedEmit = debounce(emit, 500);\n\nconst isCustomDataFilterTracked = ref(false);\nconst isAdvancedExecutionFilterEnabled = computed(() =>\n\tsettingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.AdvancedExecutionFilters),\n);\nconst showTags = computed(() => false);\n\nconst getDefaultFilter = (): ExecutionFilterType => ({\n\tstatus: 'all',\n\tworkflowId: 'all',\n\ttags: [],\n\tstartDate: '',\n\tendDate: '',\n\tmetadata: [{ key: '', value: '' }],\n});\nconst filter = reactive(getDefaultFilter());\n\n// Automatically set up v-models based on filter properties\nconst vModel = reactive(\n\tgetObjectKeys(filter).reduce((acc, key) => {\n\t\tacc[key] = computed({\n\t\t\tget() {\n\t\t\t\treturn filter[key];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\t// TODO: find out what exactly is typechecker complaining about\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\tfilter[key] = value;\n\t\t\t\temit('filterChanged', filter);\n\t\t\t},\n\t\t});\n\t\treturn acc;\n\t}, {} as Record<keyof ExecutionFilterType, ReturnType<typeof computed>>),\n);\n\nconst statuses = computed(() => [\n\t{ id: 'all', name: locale.baseText('executionsList.anyStatus') },\n\t{ id: 'error', name: locale.baseText('executionsList.error') },\n\t{ id: 'canceled', name: locale.baseText('executionsList.canceled') },\n\t{ id: 'running', name: locale.baseText('executionsList.running') },\n\t{ id: 'success', name: locale.baseText('executionsList.success') },\n\t{ id: 'waiting', name: locale.baseText('executionsList.waiting') },\n]);\n\nconst countSelectedFilterProps = computed(() => {\n\tlet count = 0;\n\tif (filter.status !== 'all') {\n\t\tcount++;\n\t}\n\tif (filter.workflowId !== 'all') {\n\t\tcount++;\n\t}\n\tif (!isEmpty(filter.tags)) {\n\t\tcount++;\n\t}\n\tif (!isEmpty(filter.metadata)) {\n\t\tcount++;\n\t}\n\tif (!!filter.startDate) {\n\t\tcount++;\n\t}\n\tif (!!filter.endDate) {\n\t\tcount++;\n\t}\n\treturn count;\n});\n\n// vModel.metadata is a text input and needs a debounced emit to avoid too many requests\n// We use the :value and @input combo instead of v-model with this event listener\nconst onFilterMetaChange = (index: number, prop: keyof ExecutionFilterMetadata, value: string) => {\n\tif (!filter.metadata[index]) {\n\t\tfilter.metadata[index] = {\n\t\t\tkey: '',\n\t\t\tvalue: '',\n\t\t};\n\t}\n\tfilter.metadata[index][prop] = value;\n\n\tif (!isCustomDataFilterTracked.value) {\n\t\ttelemetry.track('User filtered executions with custom data');\n\t\tisCustomDataFilterTracked.value = true;\n\t}\n\n\tdebouncedEmit('filterChanged', filter);\n};\n\n// Can't use v-model on TagsDropdown component and thus vModel.tags is useless\n// We just emit the updated filter\nconst onTagsChange = (tags: string[]) => {\n\tfilter.tags = tags;\n\temit('filterChanged', filter);\n};\n\nconst onFilterReset = () => {\n\tObject.assign(filter, getDefaultFilter());\n\temit('filterChanged', filter);\n};\n\nconst goToUpgrade = () => {\n\tuiStore.goToUpgrade('custom-data-filter', 'upgrade-custom-data-filter');\n};\n\nonBeforeMount(() => {\n\tisCustomDataFilterTracked.value = false;\n\temit('filterChanged', filter);\n});\n</script>\n<template>\n\t<div :class=\"$style.filter\">\n\t\t<n8n-popover trigger=\"click\" :placement=\"popoverPlacement\">\n\t\t\t<template #reference>\n\t\t\t\t<n8n-button\n\t\t\t\t\ticon=\"filter\"\n\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t:active=\"!!countSelectedFilterProps\"\n\t\t\t\t\tdata-test-id=\"executions-filter-button\"\n\t\t\t\t>\n\t\t\t\t\t<n8n-badge\n\t\t\t\t\t\tv-if=\"!!countSelectedFilterProps\"\n\t\t\t\t\t\ttheme=\"primary\"\n\t\t\t\t\t\tclass=\"mr-4xs\"\n\t\t\t\t\t\tdata-test-id=\"execution-filter-badge\"\n\t\t\t\t\t\t>{{ countSelectedFilterProps }}</n8n-badge\n\t\t\t\t\t>\n\t\t\t\t\t{{ locale.baseText('executionsList.filters') }}\n\t\t\t\t</n8n-button>\n\t\t\t</template>\n\t\t\t<div data-test-id=\"execution-filter-form\">\n\t\t\t\t<div v-if=\"workflows?.length\" :class=\"$style.group\">\n\t\t\t\t\t<label for=\"execution-filter-workflows\">{{ locale.baseText('workflows.heading') }}</label>\n\t\t\t\t\t<n8n-select\n\t\t\t\t\t\tid=\"execution-filter-workflows\"\n\t\t\t\t\t\tv-model=\"vModel.workflowId\"\n\t\t\t\t\t\t:placeholder=\"locale.baseText('executionsFilter.selectWorkflow')\"\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\tfilterable\n\t\t\t\t\t\tdata-test-id=\"executions-filter-workflows-select\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"ph-no-capture\">\n\t\t\t\t\t\t\t<n8n-option\n\t\t\t\t\t\t\t\tv-for=\"(item, idx) in props.workflows\"\n\t\t\t\t\t\t\t\t:key=\"idx\"\n\t\t\t\t\t\t\t\t:label=\"item.name\"\n\t\t\t\t\t\t\t\t:value=\"item.id\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</n8n-select>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"showTags\" :class=\"$style.group\">\n\t\t\t\t\t<label for=\"execution-filter-tags\">{{ locale.baseText('workflows.filters.tags') }}</label>\n\t\t\t\t\t<TagsDropdown\n\t\t\t\t\t\tid=\"execution-filter-tags\"\n\t\t\t\t\t\t:placeholder=\"locale.baseText('workflowOpen.filterWorkflows')\"\n\t\t\t\t\t\t:currentTagIds=\"filter.tags\"\n\t\t\t\t\t\t:createEnabled=\"false\"\n\t\t\t\t\t\t@update=\"onTagsChange\"\n\t\t\t\t\t\tdata-test-id=\"executions-filter-tags-select\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"$style.group\">\n\t\t\t\t\t<label for=\"execution-filter-status\">{{\n\t\t\t\t\t\tlocale.baseText('executionsList.status')\n\t\t\t\t\t}}</label>\n\t\t\t\t\t<n8n-select\n\t\t\t\t\t\tid=\"execution-filter-status\"\n\t\t\t\t\t\tv-model=\"vModel.status\"\n\t\t\t\t\t\t:placeholder=\"locale.baseText('executionsFilter.selectStatus')\"\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\tfilterable\n\t\t\t\t\t\tdata-test-id=\"executions-filter-status-select\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<n8n-option\n\t\t\t\t\t\t\tv-for=\"(item, idx) in statuses\"\n\t\t\t\t\t\t\t:key=\"idx\"\n\t\t\t\t\t\t\t:label=\"item.name\"\n\t\t\t\t\t\t\t:value=\"item.id\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</n8n-select>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"$style.group\">\n\t\t\t\t\t<label for=\"execution-filter-start-date\">{{\n\t\t\t\t\t\tlocale.baseText('executionsFilter.start')\n\t\t\t\t\t}}</label>\n\t\t\t\t\t<div :class=\"$style.dates\">\n\t\t\t\t\t\t<el-date-picker\n\t\t\t\t\t\t\tid=\"execution-filter-start-date\"\n\t\t\t\t\t\t\ttype=\"datetime\"\n\t\t\t\t\t\t\tv-model=\"vModel.startDate\"\n\t\t\t\t\t\t\t:format=\"DATE_TIME_MASK\"\n\t\t\t\t\t\t\t:placeholder=\"locale.baseText('executionsFilter.startDate')\"\n\t\t\t\t\t\t\tdata-test-id=\"executions-filter-start-date-picker\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span :class=\"$style.divider\">to</span>\n\t\t\t\t\t\t<el-date-picker\n\t\t\t\t\t\t\tid=\"execution-filter-end-date\"\n\t\t\t\t\t\t\ttype=\"datetime\"\n\t\t\t\t\t\t\tv-model=\"vModel.endDate\"\n\t\t\t\t\t\t\t:format=\"DATE_TIME_MASK\"\n\t\t\t\t\t\t\t:placeholder=\"locale.baseText('executionsFilter.endDate')\"\n\t\t\t\t\t\t\tdata-test-id=\"executions-filter-end-date-picker\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"$style.group\">\n\t\t\t\t\t<n8n-tooltip placement=\"right\">\n\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t<i18n tag=\"span\" path=\"executionsFilter.customData.docsTooltip\">\n\t\t\t\t\t\t\t\t<template #link>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\thref=\"https://docs.n8n.io/workflows/executions/custom-executions-data/\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{{ locale.baseText('executionsFilter.customData.docsTooltip.link') }}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</i18n>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<span :class=\"$style.label\">\n\t\t\t\t\t\t\t{{ locale.baseText('executionsFilter.savedData') }}\n\t\t\t\t\t\t\t<n8n-icon :class=\"$style.tooltipIcon\" icon=\"question-circle\" size=\"small\" />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t<div :class=\"$style.subGroup\">\n\t\t\t\t\t\t<label for=\"execution-filter-saved-data-key\">{{\n\t\t\t\t\t\t\tlocale.baseText('executionsFilter.savedDataKey')\n\t\t\t\t\t\t}}</label>\n\t\t\t\t\t\t<n8n-tooltip :disabled=\"isAdvancedExecutionFilterEnabled\" placement=\"top\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<i18n tag=\"span\" path=\"executionsFilter.customData.inputTooltip\">\n\t\t\t\t\t\t\t\t\t<template #link>\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t\t\t\t\t@click.prevent=\"goToUpgrade\"\n\t\t\t\t\t\t\t\t\t\t\tdata-test-id=\"executions-filter-view-plans-link\"\n\t\t\t\t\t\t\t\t\t\t\t>{{ locale.baseText('executionsFilter.customData.inputTooltip.link') }}</a\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</i18n>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<n8n-input\n\t\t\t\t\t\t\t\tid=\"execution-filter-saved-data-key\"\n\t\t\t\t\t\t\t\tname=\"execution-filter-saved-data-key\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t:disabled=\"!isAdvancedExecutionFilterEnabled\"\n\t\t\t\t\t\t\t\t:placeholder=\"locale.baseText('executionsFilter.savedDataKeyPlaceholder')\"\n\t\t\t\t\t\t\t\t:value=\"filter.metadata[0]?.key\"\n\t\t\t\t\t\t\t\t@input=\"onFilterMetaChange(0, 'key', $event)\"\n\t\t\t\t\t\t\t\tdata-test-id=\"execution-filter-saved-data-key-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t\t<label for=\"execution-filter-saved-data-value\">{{\n\t\t\t\t\t\t\tlocale.baseText('executionsFilter.savedDataValue')\n\t\t\t\t\t\t}}</label>\n\t\t\t\t\t\t<n8n-tooltip :disabled=\"isAdvancedExecutionFilterEnabled\" placement=\"top\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<i18n tag=\"span\" path=\"executionsFilter.customData.inputTooltip\">\n\t\t\t\t\t\t\t\t\t<template #link>\n\t\t\t\t\t\t\t\t\t\t<a href=\"#\" @click.prevent=\"goToUpgrade\">{{\n\t\t\t\t\t\t\t\t\t\t\tlocale.baseText('executionsFilter.customData.inputTooltip.link')\n\t\t\t\t\t\t\t\t\t\t}}</a>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</i18n>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<n8n-input\n\t\t\t\t\t\t\t\tid=\"execution-filter-saved-data-value\"\n\t\t\t\t\t\t\t\tname=\"execution-filter-saved-data-value\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t:disabled=\"!isAdvancedExecutionFilterEnabled\"\n\t\t\t\t\t\t\t\t:placeholder=\"locale.baseText('executionsFilter.savedDataValuePlaceholder')\"\n\t\t\t\t\t\t\t\t:value=\"filter.metadata[0]?.value\"\n\t\t\t\t\t\t\t\t@input=\"onFilterMetaChange(0, 'value', $event)\"\n\t\t\t\t\t\t\t\tdata-test-id=\"execution-filter-saved-data-value-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<n8n-button\n\t\t\t\t\tv-if=\"!!countSelectedFilterProps\"\n\t\t\t\t\t:class=\"$style.resetBtn\"\n\t\t\t\t\t@click=\"onFilterReset\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\ttext\n\t\t\t\t\tdata-test-id=\"executions-filter-reset-button\"\n\t\t\t\t>\n\t\t\t\t\t{{ locale.baseText('executionsFilter.reset') }}\n\t\t\t\t</n8n-button>\n\t\t\t</div>\n\t\t</n8n-popover>\n\t</div>\n</template>\n<style lang=\"scss\" module>\n.filter {\n\tdisplay: inline-block;\n}\n\n.group {\n\tlabel,\n\t.label {\n\t\tdisplay: inline-block;\n\t\tfont-size: var(--font-size-2xs);\n\t\tmargin: var(--spacing-s) 0 var(--spacing-3xs);\n\t}\n}\n\n.subGroup {\n\tpadding: 0 0 var(--spacing-xs) var(--spacing-s);\n\n\tlabel,\n\t.label {\n\t\tfont-size: var(--font-size-3xs);\n\t\tmargin: var(--spacing-4xs) 0 var(--spacing-4xs);\n\t}\n}\n\n.dates {\n\tdisplay: flex;\n\tborder: 1px solid var(--color-foreground-base);\n\tborder-radius: var(--border-radius-base);\n\twhite-space: nowrap;\n\talign-items: center;\n}\n\n.divider {\n\tpadding: 0 var(--spacing-m);\n\tline-height: 100%;\n}\n\n.resetBtn {\n\tpadding: 0;\n\tmargin: var(--spacing-xs) 0 0;\n}\n\n.tooltipIcon {\n\tcolor: var(--color-text-light);\n}\n</style>\n\n<style lang=\"scss\" scoped>\n:deep(.el-date-editor) {\n\tinput {\n\t\theight: 36px;\n\t\tborder: 0;\n\t\tpadding-right: 0;\n\t}\n\n\t.el-input__prefix {\n\t\tcolor: var(--color-foreground-dark);\n\t}\n\n\t&:last-of-type {\n\t\tinput {\n\t\t\tpadding-left: 0;\n\t\t}\n\n\t\t.el-input__prefix {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n:deep(.el-select-dropdown.el-popper[x-placement^='bottom']) {\n\t> .popper__arrow {\n\t\ttop: -6px;\n\t\tleft: 50%;\n\t\tright: unset;\n\t\tmargin-bottom: 0;\n\t\tmargin-right: 3px;\n\t\tborder-left-width: 6px;\n\t\tborder-top-width: 0;\n\t\tborder-bottom-color: var(--border-color-light);\n\t\tborder-right-color: transparent;\n\n\t\t&::after {\n\t\t\ttop: 1px;\n\t\t\tleft: unset;\n\t\t\tbottom: unset;\n\t\t\tmargin-left: -6px;\n\t\t\tborder-left-width: 6px;\n\t\t\tborder-top-width: 0;\n\t\t\tborder-bottom-color: var(--color-foreground-xlight);\n\t\t\tborder-right-color: transparent;\n\t\t}\n\t}\n}\n</style>\n","import { useWorkflowsStore } from '@/stores/workflows.store';\nimport { i18n as locale } from '@/plugins/i18n';\nimport { mapStores } from 'pinia';\nimport mixins from 'vue-typed-mixins';\nimport { genericHelpers } from './genericHelpers';\nimport type { IExecutionsSummary } from 'n8n-workflow';\n\nexport interface IExecutionUIData {\n\tname: string;\n\tlabel: string;\n\tstartTime: string;\n\trunningTime: string;\n}\n\nexport const executionHelpers = mixins(genericHelpers).extend({\n\tcomputed: {\n\t\t...mapStores(useWorkflowsStore),\n\t\texecutionId(): string {\n\t\t\treturn this.$route.params.executionId;\n\t\t},\n\t\tworkflowName(): string {\n\t\t\treturn this.workflowsStore.workflowName;\n\t\t},\n\t\tcurrentWorkflow(): string {\n\t\t\treturn this.$route.params.name || this.workflowsStore.workflowId;\n\t\t},\n\t\texecutions(): IExecutionsSummary[] {\n\t\t\treturn this.workflowsStore.currentWorkflowExecutions;\n\t\t},\n\t\tactiveExecution(): IExecutionsSummary | null {\n\t\t\treturn this.workflowsStore.activeWorkflowExecution;\n\t\t},\n\t},\n\tmethods: {\n\t\tgetExecutionUIDetails(execution: IExecutionsSummary): IExecutionUIData {\n\t\t\tconst status = {\n\t\t\t\tname: 'unknown',\n\t\t\t\tstartTime: this.formatDate(execution.startedAt),\n\t\t\t\tlabel: 'Status unknown',\n\t\t\t\trunningTime: '',\n\t\t\t};\n\n\t\t\tif (execution.status === 'waiting' || execution.waitTill) {\n\t\t\t\tstatus.name = 'waiting';\n\t\t\t\tstatus.label = this.$locale.baseText('executionsList.waiting');\n\t\t\t} else if (\n\t\t\t\texecution.status === 'running' ||\n\t\t\t\texecution.status === 'new' ||\n\t\t\t\texecution.stoppedAt === undefined\n\t\t\t) {\n\t\t\t\tstatus.name = 'running';\n\t\t\t\tstatus.label = this.$locale.baseText('executionsList.running');\n\t\t\t} else if (execution.status === 'success' || execution.finished) {\n\t\t\t\tstatus.name = 'success';\n\t\t\t\tstatus.label = this.$locale.baseText('executionsList.succeeded');\n\t\t\t} else if (execution.status === 'failed' || execution.status === 'crashed') {\n\t\t\t\tstatus.name = 'error';\n\t\t\t\tstatus.label = this.$locale.baseText('executionsList.error');\n\t\t\t} else if (execution.status === 'canceled') {\n\t\t\t\tstatus.label = this.$locale.baseText('executionsList.canceled');\n\t\t\t}\n\n\t\t\tif (!execution.status) execution.status = 'unknown';\n\n\t\t\tif (execution.startedAt && execution.stoppedAt) {\n\t\t\t\tconst stoppedAt = execution.stoppedAt\n\t\t\t\t\t? new Date(execution.stoppedAt).getTime()\n\t\t\t\t\t: Date.now();\n\t\t\t\tstatus.runningTime = this.displayTimer(\n\t\t\t\t\tstoppedAt - new Date(execution.startedAt).getTime(),\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn status;\n\t\t},\n\t\tformatDate(fullDate: Date | string | number) {\n\t\t\tconst { date, time } = this.convertToDisplayDate(fullDate);\n\t\t\treturn locale.baseText('executionsList.started', { interpolate: { time, date } });\n\t\t},\n\t},\n});\n","import type { ExecutionStatus, IDataObject } from 'n8n-workflow';\nimport type { ExecutionFilterType, ExecutionsQueryFilter } from '@/Interface';\nimport { isEmpty } from '@/utils/typesUtils';\n\nexport const executionFilterToQueryFilter = (\n\tfilter: ExecutionFilterType,\n): ExecutionsQueryFilter => {\n\tconst queryFilter: IDataObject = {};\n\tif (filter.status === 'waiting') {\n\t\tqueryFilter.waitTill = true;\n\t} else if (filter.status !== 'all') {\n\t\tqueryFilter.finished = filter.status === 'success';\n\t}\n\n\tif (filter.workflowId !== 'all') {\n\t\tqueryFilter.workflowId = filter.workflowId;\n\t}\n\n\tif (!isEmpty(filter.tags)) {\n\t\tqueryFilter.tags = filter.tags;\n\t}\n\n\tif (!isEmpty(filter.metadata)) {\n\t\tqueryFilter.metadata = filter.metadata;\n\t}\n\n\tif (!!filter.startDate) {\n\t\tqueryFilter.startedAfter = filter.startDate;\n\t}\n\n\tif (!!filter.endDate) {\n\t\tqueryFilter.startedBefore = filter.endDate;\n\t}\n\n\tswitch (filter.status as ExecutionStatus) {\n\t\tcase 'waiting':\n\t\t\tqueryFilter.status = ['waiting'];\n\t\t\tbreak;\n\t\tcase 'error':\n\t\t\tqueryFilter.status = ['failed', 'crashed'];\n\t\t\tbreak;\n\t\tcase 'success':\n\t\t\tqueryFilter.status = ['success'];\n\t\t\tbreak;\n\t\tcase 'running':\n\t\t\tqueryFilter.status = ['running'];\n\t\t\tbreak;\n\t}\n\treturn queryFilter;\n};\n","<template>\n\t<div :class=\"$style.execListWrapper\">\n\t\t<div :class=\"$style.execList\">\n\t\t\t<div :class=\"$style.execListHeader\">\n\t\t\t\t<n8n-heading tag=\"h1\" size=\"2xlarge\">{{ this.pageTitle }}</n8n-heading>\n\t\t\t\t<div :class=\"$style.execListHeaderControls\">\n\t\t\t\t\t<n8n-loading v-if=\"isMounting\" :class=\"$style.filterLoader\" variant=\"custom\" />\n\t\t\t\t\t<el-checkbox\n\t\t\t\t\t\tv-else\n\t\t\t\t\t\tclass=\"mr-xl\"\n\t\t\t\t\t\tv-model=\"autoRefresh\"\n\t\t\t\t\t\t@change=\"handleAutoRefreshToggle\"\n\t\t\t\t\t\tdata-test-id=\"execution-auto-refresh-checkbox\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $locale.baseText('executionsList.autoRefresh') }}\n\t\t\t\t\t</el-checkbox>\n\t\t\t\t\t<execution-filter\n\t\t\t\t\t\tv-show=\"!isMounting\"\n\t\t\t\t\t\t:workflows=\"workflows\"\n\t\t\t\t\t\t@filterChanged=\"onFilterChanged\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<el-checkbox\n\t\t\t\tv-if=\"allVisibleSelected && finishedExecutionsCount > 0\"\n\t\t\t\t:class=\"$style.selectAll\"\n\t\t\t\t:label=\"\n\t\t\t\t\t$locale.baseText('executionsList.selectAll', {\n\t\t\t\t\t\tadjustToNumber: finishedExecutionsCount,\n\t\t\t\t\t\tinterpolate: { executionNum: finishedExecutionsCount },\n\t\t\t\t\t})\n\t\t\t\t\"\n\t\t\t\t:value=\"allExistingSelected\"\n\t\t\t\t@change=\"handleCheckAllExistingChange\"\n\t\t\t\tdata-test-id=\"select-all-executions-checkbox\"\n\t\t\t/>\n\n\t\t\t<div v-if=\"isMounting\">\n\t\t\t\t<n8n-loading :class=\"$style.tableLoader\" variant=\"custom\" />\n\t\t\t\t<n8n-loading :class=\"$style.tableLoader\" variant=\"custom\" />\n\t\t\t\t<n8n-loading :class=\"$style.tableLoader\" variant=\"custom\" />\n\t\t\t</div>\n\t\t\t<table v-else :class=\"$style.execTable\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t<el-checkbox\n\t\t\t\t\t\t\t\t:value=\"allVisibleSelected\"\n\t\t\t\t\t\t\t\t@change=\"handleCheckAllVisibleChange\"\n\t\t\t\t\t\t\t\t:disabled=\"finishedExecutionsCount < 1\"\n\t\t\t\t\t\t\t\tlabel=\"\"\n\t\t\t\t\t\t\t\tdata-test-id=\"select-visible-executions-checkbox\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>{{ $locale.baseText('executionsList.name') }}</th>\n\t\t\t\t\t\t<th>{{ $locale.baseText('executionsList.startedAt') }}</th>\n\t\t\t\t\t\t<th>{{ $locale.baseText('executionsList.status') }}</th>\n\t\t\t\t\t\t<th>{{ $locale.baseText('executionsList.id') }}</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr\n\t\t\t\t\t\tv-for=\"execution in combinedExecutions\"\n\t\t\t\t\t\t:key=\"execution.id\"\n\t\t\t\t\t\t:class=\"getRowClass(execution)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<el-checkbox\n\t\t\t\t\t\t\t\tv-if=\"execution.stoppedAt !== undefined && execution.id\"\n\t\t\t\t\t\t\t\t:value=\"selectedItems[execution.id] || allExistingSelected\"\n\t\t\t\t\t\t\t\t@change=\"handleCheckboxChanged(execution.id)\"\n\t\t\t\t\t\t\t\tlabel=\"\"\n\t\t\t\t\t\t\t\tdata-test-id=\"select-execution-checkbox\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span class=\"ph-no-capture\">{{\n\t\t\t\t\t\t\t\texecution.workflowName || $locale.baseText('executionsList.unsavedWorkflow')\n\t\t\t\t\t\t\t}}</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>{{ formatDate(execution.startedAt) }}</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<div :class=\"$style.statusColumn\">\n\t\t\t\t\t\t\t\t<span v-if=\"isRunning(execution)\" :class=\"$style.spinner\">\n\t\t\t\t\t\t\t\t\t<font-awesome-icon icon=\"spinner\" spin />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<i18n\n\t\t\t\t\t\t\t\t\tv-if=\"!isWaitTillIndefinite(execution)\"\n\t\t\t\t\t\t\t\t\t:path=\"getStatusTextTranslationPath(execution)\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<template #status>\n\t\t\t\t\t\t\t\t\t\t<span :class=\"$style.status\">{{ getStatusText(execution) }}</span>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<template #time>\n\t\t\t\t\t\t\t\t\t\t<span v-if=\"execution.waitTill\">{{ formatDate(execution.waitTill) }}</span>\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tv-else-if=\"execution.stoppedAt !== null && execution.stoppedAt !== undefined\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayTimer(\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew Date(execution.stoppedAt).getTime() -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnew Date(execution.startedAt).getTime(),\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<execution-time v-else :start-time=\"execution.startedAt\" />\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</i18n>\n\t\t\t\t\t\t\t\t<n8n-tooltip v-else placement=\"top\">\n\t\t\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t\t\t<span>{{ getStatusTooltipText(execution) }}</span>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t<span :class=\"$style.status\">{{ getStatusText(execution) }}</span>\n\t\t\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span v-if=\"execution.id\">#{{ execution.id }}</span>\n\t\t\t\t\t\t\t<span v-if=\"execution.retryOf !== undefined\">\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t({{ $locale.baseText('executionsList.retryOf') }} #{{ execution.retryOf }})\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span v-else-if=\"execution.retrySuccessId !== undefined\">\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t({{ $locale.baseText('executionsList.successRetry') }} #{{\n\t\t\t\t\t\t\t\t\t\texecution.retrySuccessId\n\t\t\t\t\t\t\t\t\t}})\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<n8n-tooltip v-if=\"execution.mode === 'manual'\" placement=\"top\">\n\t\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t\t<span>{{ $locale.baseText('executionsList.test') }}</span>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<font-awesome-icon icon=\"flask\" />\n\t\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<div :class=\"$style.buttonCell\">\n\t\t\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t\t\tv-if=\"execution.stoppedAt !== undefined && execution.id\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\t\t:label=\"$locale.baseText('executionsList.view')\"\n\t\t\t\t\t\t\t\t\t@click.stop=\"displayExecution(execution)\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<div :class=\"$style.buttonCell\">\n\t\t\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t\t\tv-if=\"execution.stoppedAt === undefined || execution.waitTill\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\t\t:label=\"$locale.baseText('executionsList.stop')\"\n\t\t\t\t\t\t\t\t\t@click.stop=\"stopExecution(execution.id)\"\n\t\t\t\t\t\t\t\t\t:loading=\"stoppingExecutions.includes(execution.id)\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<el-dropdown\n\t\t\t\t\t\t\t\tv-if=\"!isRunning(execution)\"\n\t\t\t\t\t\t\t\ttrigger=\"click\"\n\t\t\t\t\t\t\t\t@command=\"handleActionItemClick\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span class=\"retry-button\">\n\t\t\t\t\t\t\t\t\t<n8n-icon-button\n\t\t\t\t\t\t\t\t\t\ttext\n\t\t\t\t\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t\t\t\t\tsize=\"mini\"\n\t\t\t\t\t\t\t\t\t\t:title=\"$locale.baseText('executionsList.retryExecution')\"\n\t\t\t\t\t\t\t\t\t\ticon=\"ellipsis-v\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<template #dropdown>\n\t\t\t\t\t\t\t\t\t<el-dropdown-menu\n\t\t\t\t\t\t\t\t\t\t:class=\"{\n\t\t\t\t\t\t\t\t\t\t\t[$style.actions]: true,\n\t\t\t\t\t\t\t\t\t\t\t[$style.deleteOnly]: !isExecutionRetriable(execution),\n\t\t\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<el-dropdown-item\n\t\t\t\t\t\t\t\t\t\t\tv-if=\"isExecutionRetriable(execution)\"\n\t\t\t\t\t\t\t\t\t\t\t:class=\"$style.retryAction\"\n\t\t\t\t\t\t\t\t\t\t\t:command=\"{ command: 'currentlySaved', execution }\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{{ $locale.baseText('executionsList.retryWithCurrentlySavedWorkflow') }}\n\t\t\t\t\t\t\t\t\t\t</el-dropdown-item>\n\t\t\t\t\t\t\t\t\t\t<el-dropdown-item\n\t\t\t\t\t\t\t\t\t\t\tv-if=\"isExecutionRetriable(execution)\"\n\t\t\t\t\t\t\t\t\t\t\t:class=\"$style.retryAction\"\n\t\t\t\t\t\t\t\t\t\t\t:command=\"{ command: 'original', execution }\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{{ $locale.baseText('executionsList.retryWithOriginalWorkflow') }}\n\t\t\t\t\t\t\t\t\t\t</el-dropdown-item>\n\t\t\t\t\t\t\t\t\t\t<el-dropdown-item\n\t\t\t\t\t\t\t\t\t\t\t:class=\"$style.deleteAction\"\n\t\t\t\t\t\t\t\t\t\t\t:command=\"{ command: 'delete', execution }\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{{ $locale.baseText('generic.delete') }}\n\t\t\t\t\t\t\t\t\t\t</el-dropdown-item>\n\t\t\t\t\t\t\t\t\t</el-dropdown-menu>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</el-dropdown>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\n\t\t\t<div\n\t\t\t\tv-if=\"!combinedExecutions.length && !isMounting && !isDataLoading\"\n\t\t\t\t:class=\"$style.loadedAll\"\n\t\t\t\tdata-test-id=\"execution-list-empty\"\n\t\t\t>\n\t\t\t\t{{ $locale.baseText('executionsList.empty') }}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\t:class=\"$style.loadMore\"\n\t\t\t\tv-else-if=\"\n\t\t\t\t\tfinishedExecutionsCount > finishedExecutions.length || finishedExecutionsCountEstimated\n\t\t\t\t\"\n\t\t\t>\n\t\t\t\t<n8n-button\n\t\t\t\t\ticon=\"sync\"\n\t\t\t\t\t:title=\"$locale.baseText('executionsList.loadMore')\"\n\t\t\t\t\t:label=\"$locale.baseText('executionsList.loadMore')\"\n\t\t\t\t\t@click=\"loadMore()\"\n\t\t\t\t\t:loading=\"isDataLoading\"\n\t\t\t\t\tdata-test-id=\"load-more-button\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tv-else-if=\"!isMounting && !isDataLoading\"\n\t\t\t\t:class=\"$style.loadedAll\"\n\t\t\t\tdata-test-id=\"execution-all-loaded\"\n\t\t\t>\n\t\t\t\t{{ $locale.baseText('executionsList.loadedAll') }}\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tv-if=\"numSelected > 0\"\n\t\t\t:class=\"$style.selectionOptions\"\n\t\t\tdata-test-id=\"selected-executions-info\"\n\t\t>\n\t\t\t<span>\n\t\t\t\t{{\n\t\t\t\t\t$locale.baseText('executionsList.selected', {\n\t\t\t\t\t\tadjustToNumber: numSelected,\n\t\t\t\t\t\tinterpolate: { numSelected },\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t</span>\n\t\t\t<n8n-button\n\t\t\t\t:label=\"$locale.baseText('generic.delete')\"\n\t\t\t\ttype=\"tertiary\"\n\t\t\t\t@click=\"handleDeleteSelected\"\n\t\t\t\tdata-test-id=\"delete-selected-button\"\n\t\t\t/>\n\t\t\t<n8n-button\n\t\t\t\t:label=\"$locale.baseText('executionsList.clearSelection')\"\n\t\t\t\ttype=\"tertiary\"\n\t\t\t\t@click=\"handleClearSelection\"\n\t\t\t\tdata-test-id=\"clear-selection-button\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport ExecutionTime from '@/components/ExecutionTime.vue';\nimport WorkflowActivator from '@/components/WorkflowActivator.vue';\nimport ExecutionFilter from '@/components/ExecutionFilter.vue';\nimport { externalHooks } from '@/mixins/externalHooks';\nimport { VIEWS, WAIT_TIME_UNLIMITED } from '@/constants';\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport { executionHelpers } from '@/mixins/executionsHelpers';\nimport { showMessage } from '@/mixins/showMessage';\nimport type {\n\tIExecutionsCurrentSummaryExtended,\n\tIExecutionDeleteFilter,\n\tIExecutionsListResponse,\n\tIWorkflowShortResponse,\n\tExecutionFilterType,\n\tExecutionsQueryFilter,\n} from '@/Interface';\nimport type { IExecutionsSummary, ExecutionStatus } from 'n8n-workflow';\nimport { range as _range } from 'lodash-es';\nimport mixins from 'vue-typed-mixins';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { isEmpty, setPageTitle } from '@/utils';\nimport { executionFilterToQueryFilter } from '@/utils/executionUtils';\n\nexport default mixins(externalHooks, genericHelpers, executionHelpers, showMessage).extend({\n\tname: 'ExecutionsList',\n\tcomponents: {\n\t\tExecutionTime,\n\t\tWorkflowActivator,\n\t\tExecutionFilter,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisMounting: true,\n\t\t\tfinishedExecutions: [] as IExecutionsSummary[],\n\t\t\tfinishedExecutionsCount: 0,\n\t\t\tfinishedExecutionsCountEstimated: false,\n\n\t\t\tallVisibleSelected: false,\n\t\t\tallExistingSelected: false,\n\t\t\tautoRefresh: true,\n\t\t\tautoRefreshInterval: undefined as undefined | NodeJS.Timer,\n\n\t\t\tfilter: {} as ExecutionFilterType,\n\n\t\t\tisDataLoading: false,\n\n\t\t\trequestItemsPerRequest: 10,\n\n\t\t\tselectedItems: {} as { [key: string]: boolean },\n\n\t\t\tstoppingExecutions: [] as string[],\n\t\t\tworkflows: [] as IWorkflowShortResponse[],\n\t\t};\n\t},\n\tmounted() {\n\t\tsetPageTitle(`n8n - ${this.pageTitle}`);\n\t},\n\tasync created() {\n\t\tawait this.loadWorkflows();\n\t\tthis.handleAutoRefreshToggle();\n\n\t\tthis.$externalHooks().run('executionsList.openDialog');\n\t\tthis.$telemetry.track('User opened Executions log', {\n\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t});\n\t},\n\tbeforeDestroy() {\n\t\tif (this.autoRefreshInterval) {\n\t\t\tclearInterval(this.autoRefreshInterval);\n\t\t\tthis.autoRefreshInterval = undefined;\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore, useWorkflowsStore),\n\t\tactiveExecutions(): IExecutionsCurrentSummaryExtended[] {\n\t\t\treturn this.workflowsStore.activeExecutions;\n\t\t},\n\t\tcombinedExecutions(): IExecutionsSummary[] {\n\t\t\tconst returnData: IExecutionsSummary[] = [];\n\n\t\t\tif (['all', 'running'].includes(this.filter.status)) {\n\t\t\t\treturnData.push(...this.activeExecutions);\n\t\t\t}\n\t\t\tif (['all', 'error', 'success', 'waiting'].includes(this.filter.status)) {\n\t\t\t\treturnData.push(...this.finishedExecutions);\n\t\t\t}\n\n\t\t\treturn returnData.filter(\n\t\t\t\t(execution) =>\n\t\t\t\t\tthis.filter.workflowId === 'all' || execution.workflowId === this.filter.workflowId,\n\t\t\t);\n\t\t},\n\t\tnumSelected(): number {\n\t\t\tif (this.allExistingSelected) {\n\t\t\t\treturn this.finishedExecutionsCount;\n\t\t\t}\n\n\t\t\treturn Object.keys(this.selectedItems).length;\n\t\t},\n\t\tworkflowFilterCurrent(): ExecutionsQueryFilter {\n\t\t\tconst filter: ExecutionsQueryFilter = {};\n\t\t\tif (this.filter.workflowId !== 'all') {\n\t\t\t\tfilter.workflowId = this.filter.workflowId;\n\t\t\t}\n\t\t\treturn filter;\n\t\t},\n\t\tworkflowFilterPast(): ExecutionsQueryFilter {\n\t\t\treturn executionFilterToQueryFilter(this.filter);\n\t\t},\n\t\tpageTitle() {\n\t\t\treturn this.$locale.baseText('executionsList.workflowExecutions');\n\t\t},\n\t},\n\tmethods: {\n\t\tcloseDialog() {\n\t\t\tthis.$emit('closeModal');\n\t\t},\n\t\tdisplayExecution(execution: IExecutionsSummary) {\n\t\t\tconst route = this.$router.resolve({\n\t\t\t\tname: VIEWS.EXECUTION_PREVIEW,\n\t\t\t\tparams: { name: execution.workflowId, executionId: execution.id },\n\t\t\t});\n\t\t\twindow.open(route.href, '_blank');\n\t\t},\n\t\thandleAutoRefreshToggle() {\n\t\t\tif (this.autoRefreshInterval) {\n\t\t\t\t// Clear any previously existing intervals (if any - there shouldn't)\n\t\t\t\tclearInterval(this.autoRefreshInterval);\n\t\t\t\tthis.autoRefreshInterval = undefined;\n\t\t\t}\n\n\t\t\tif (this.autoRefresh) {\n\t\t\t\tthis.autoRefreshInterval = setInterval(() => this.loadAutoRefresh(), 4 * 1000); // refresh data every 4 secs\n\t\t\t}\n\t\t},\n\t\thandleCheckAllExistingChange() {\n\t\t\tthis.allExistingSelected = !this.allExistingSelected;\n\t\t\tthis.allVisibleSelected = !this.allExistingSelected;\n\t\t\tthis.handleCheckAllVisibleChange();\n\t\t},\n\t\thandleCheckAllVisibleChange() {\n\t\t\tthis.allVisibleSelected = !this.allVisibleSelected;\n\t\t\tif (!this.allVisibleSelected) {\n\t\t\t\tthis.allExistingSelected = false;\n\t\t\t\tVue.set(this, 'selectedItems', {});\n\t\t\t} else {\n\t\t\t\tthis.selectAllVisibleExecutions();\n\t\t\t}\n\t\t},\n\t\thandleCheckboxChanged(executionId: string) {\n\t\t\tif (this.selectedItems[executionId]) {\n\t\t\t\tVue.delete(this.selectedItems, executionId);\n\t\t\t} else {\n\t\t\t\tVue.set(this.selectedItems, executionId, true);\n\t\t\t}\n\t\t\tthis.allVisibleSelected =\n\t\t\t\tObject.keys(this.selectedItems).length === this.combinedExecutions.length;\n\t\t\tthis.allExistingSelected =\n\t\t\t\tObject.keys(this.selectedItems).length === this.finishedExecutionsCount;\n\t\t},\n\t\tasync handleDeleteSelected() {\n\t\t\tconst deleteExecutions = await this.confirmMessage(\n\t\t\t\tthis.$locale.baseText('executionsList.confirmMessage.message', {\n\t\t\t\t\tinterpolate: { numSelected: this.numSelected.toString() },\n\t\t\t\t}),\n\t\t\t\tthis.$locale.baseText('executionsList.confirmMessage.headline'),\n\t\t\t\t'warning',\n\t\t\t\tthis.$locale.baseText('executionsList.confirmMessage.confirmButtonText'),\n\t\t\t\tthis.$locale.baseText('executionsList.confirmMessage.cancelButtonText'),\n\t\t\t);\n\n\t\t\tif (!deleteExecutions) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.isDataLoading = true;\n\n\t\t\tconst sendData: IExecutionDeleteFilter = {};\n\t\t\tif (this.allExistingSelected) {\n\t\t\t\tsendData.deleteBefore = this.finishedExecutions[0].startedAt as Date;\n\t\t\t} else {\n\t\t\t\tsendData.ids = Object.keys(this.selectedItems);\n\t\t\t}\n\n\t\t\tsendData.filters = this.workflowFilterPast;\n\n\t\t\ttry {\n\t\t\t\tawait this.workflowsStore.deleteExecutions(sendData);\n\t\t\t} catch (error) {\n\t\t\t\tthis.isDataLoading = false;\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('executionsList.showError.handleDeleteSelected.title'),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.isDataLoading = false;\n\n\t\t\tthis.$showMessage({\n\t\t\t\ttitle: this.$locale.baseText('executionsList.showMessage.handleDeleteSelected.title'),\n\t\t\t\ttype: 'success',\n\t\t\t});\n\n\t\t\tthis.handleClearSelection();\n\t\t\tthis.refreshData();\n\t\t},\n\t\thandleClearSelection(): void {\n\t\t\tthis.allVisibleSelected = false;\n\t\t\tthis.allExistingSelected = false;\n\t\t\tVue.set(this, 'selectedItems', {});\n\t\t},\n\t\tasync onFilterChanged(filter: ExecutionFilterType) {\n\t\t\tthis.filter = filter;\n\t\t\tawait this.refreshData();\n\t\t\tthis.handleClearSelection();\n\t\t\tthis.isMounting = false;\n\t\t},\n\t\thandleActionItemClick(commandData: { command: string; execution: IExecutionsSummary }) {\n\t\t\tif (['currentlySaved', 'original'].includes(commandData.command)) {\n\t\t\t\tlet loadWorkflow = false;\n\t\t\t\tif (commandData.command === 'currentlySaved') {\n\t\t\t\t\tloadWorkflow = true;\n\t\t\t\t}\n\n\t\t\t\tthis.retryExecution(commandData.execution, loadWorkflow);\n\n\t\t\t\tthis.$telemetry.track('User clicked retry execution button', {\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\texecution_id: commandData.execution.id,\n\t\t\t\t\tretry_type: loadWorkflow ? 'current' : 'original',\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (commandData.command === 'delete') {\n\t\t\t\tthis.deleteExecution(commandData.execution);\n\t\t\t}\n\t\t},\n\t\tgetWorkflowName(workflowId: string): string | undefined {\n\t\t\treturn this.workflows.find((data) => data.id === workflowId)?.name;\n\t\t},\n\t\tasync loadActiveExecutions(): Promise<void> {\n\t\t\tconst activeExecutions = isEmpty(this.workflowFilterCurrent.metadata)\n\t\t\t\t? await this.workflowsStore.getCurrentExecutions(this.workflowFilterCurrent)\n\t\t\t\t: [];\n\t\t\tfor (const activeExecution of activeExecutions) {\n\t\t\t\tif (activeExecution.workflowId && !activeExecution.workflowName) {\n\t\t\t\t\tactiveExecution.workflowName = this.getWorkflowName(activeExecution.workflowId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.workflowsStore.activeExecutions = activeExecutions;\n\t\t\tthis.workflowsStore.addToCurrentExecutions(activeExecutions);\n\t\t},\n\t\tasync loadAutoRefresh(): Promise<void> {\n\t\t\tconst filter: ExecutionsQueryFilter = this.workflowFilterPast;\n\t\t\t// We cannot use firstId here as some executions finish out of order. Let's say\n\t\t\t// You have execution ids 500 to 505 running.\n\t\t\t// Suppose 504 finishes before 500, 501, 502 and 503.\n\t\t\t// iF you use firstId, filtering id >= 504 you won't\n\t\t\t// ever get ids 500, 501, 502 and 503 when they finish\n\t\t\tconst promises = [this.workflowsStore.getPastExecutions(filter, this.requestItemsPerRequest)];\n\t\t\tif (isEmpty(filter.metadata)) {\n\t\t\t\tpromises.push(this.workflowsStore.getCurrentExecutions({}));\n\t\t\t}\n\n\t\t\tconst results = await Promise.all(promises);\n\n\t\t\tfor (const activeExecution of results[1]) {\n\t\t\t\tif (\n\t\t\t\t\tactiveExecution.workflowId !== undefined &&\n\t\t\t\t\tactiveExecution.workflowName === undefined\n\t\t\t\t) {\n\t\t\t\t\tactiveExecution.workflowName = this.getWorkflowName(activeExecution.workflowId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.workflowsStore.activeExecutions = results[1];\n\n\t\t\t// execution IDs are typed as string, int conversion is necessary so we can order.\n\t\t\tconst alreadyPresentExecutions = [...this.finishedExecutions];\n\t\t\tconst alreadyPresentExecutionIds = alreadyPresentExecutions.map((exec) =>\n\t\t\t\tparseInt(exec.id, 10),\n\t\t\t);\n\t\t\tlet lastId = 0;\n\t\t\tconst gaps = [] as number[];\n\t\t\tfor (let i = results[0].results.length - 1; i >= 0; i--) {\n\t\t\t\tconst currentItem = results[0].results[i];\n\t\t\t\tconst currentId = parseInt(currentItem.id, 10);\n\t\t\t\tif (lastId !== 0 && !isNaN(currentId)) {\n\t\t\t\t\t// We are doing this iteration to detect possible gaps.\n\t\t\t\t\t// The gaps are used to remove executions that finished\n\t\t\t\t\t// and were deleted from database but were displaying\n\t\t\t\t\t// in this list while running.\n\t\t\t\t\tif (currentId - lastId > 1) {\n\t\t\t\t\t\t// We have some gaps.\n\t\t\t\t\t\tconst range = _range(lastId + 1, currentId);\n\t\t\t\t\t\tgaps.push(...range);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlastId = parseInt(currentItem.id, 10) || 0;\n\n\t\t\t\t// Check new results from end to start\n\t\t\t\t// Add new items accordingly.\n\t\t\t\tconst executionIndex = alreadyPresentExecutionIds.indexOf(currentId);\n\t\t\t\tif (executionIndex !== -1) {\n\t\t\t\t\t// Execution that we received is already present.\n\n\t\t\t\t\tif (\n\t\t\t\t\t\talreadyPresentExecutions[executionIndex].finished === false &&\n\t\t\t\t\t\tcurrentItem.finished === true\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Concurrency stuff. This might happen if the execution finishes\n\t\t\t\t\t\t// prior to saving all information to database. Somewhat rare but\n\t\t\t\t\t\t// With auto refresh and several executions, it happens sometimes.\n\t\t\t\t\t\t// So we replace the execution data so it displays correctly.\n\t\t\t\t\t\talreadyPresentExecutions[executionIndex] = currentItem;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Find the correct position to place this newcomer\n\t\t\t\tlet j;\n\t\t\t\tfor (j = alreadyPresentExecutions.length - 1; j >= 0; j--) {\n\t\t\t\t\tif (currentId < parseInt(alreadyPresentExecutions[j].id, 10)) {\n\t\t\t\t\t\talreadyPresentExecutions.splice(j + 1, 0, currentItem);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (j === -1) {\n\t\t\t\t\talreadyPresentExecutions.unshift(currentItem);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst alreadyPresentExecutionsFiltered = alreadyPresentExecutions.filter(\n\t\t\t\t(execution) =>\n\t\t\t\t\t!gaps.includes(parseInt(execution.id, 10)) && lastId >= parseInt(execution.id, 10),\n\t\t\t);\n\t\t\tthis.finishedExecutionsCount = results[0].count;\n\t\t\tthis.finishedExecutionsCountEstimated = results[0].estimated;\n\n\t\t\tVue.set(this, 'finishedExecutions', alreadyPresentExecutionsFiltered);\n\t\t\tthis.workflowsStore.addToCurrentExecutions(alreadyPresentExecutionsFiltered);\n\n\t\t\tthis.adjustSelectionAfterMoreItemsLoaded();\n\t\t},\n\t\tasync loadFinishedExecutions(): Promise<void> {\n\t\t\tif (this.filter.status === 'running') {\n\t\t\t\tthis.finishedExecutions = [];\n\t\t\t\tthis.finishedExecutionsCount = 0;\n\t\t\t\tthis.finishedExecutionsCountEstimated = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst data = await this.workflowsStore.getPastExecutions(\n\t\t\t\tthis.workflowFilterPast,\n\t\t\t\tthis.requestItemsPerRequest,\n\t\t\t);\n\t\t\tthis.finishedExecutions = data.results;\n\t\t\tthis.finishedExecutionsCount = data.count;\n\t\t\tthis.finishedExecutionsCountEstimated = data.estimated;\n\n\t\t\tthis.workflowsStore.addToCurrentExecutions(data.results);\n\n\t\t\tif (this.finishedExecutions.length === 0) {\n\t\t\t\tthis.handleClearSelection();\n\t\t\t}\n\t\t},\n\t\tasync loadMore() {\n\t\t\tif (this.filter.status === 'running') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.isDataLoading = true;\n\n\t\t\tconst filter = this.workflowFilterPast;\n\t\t\tlet lastId: string | undefined;\n\n\t\t\tif (this.finishedExecutions.length !== 0) {\n\t\t\t\tconst lastItem = this.finishedExecutions.slice(-1)[0];\n\t\t\t\tlastId = lastItem.id;\n\t\t\t}\n\n\t\t\tlet data: IExecutionsListResponse;\n\t\t\ttry {\n\t\t\t\tdata = await this.workflowsStore.getPastExecutions(\n\t\t\t\t\tfilter,\n\t\t\t\t\tthis.requestItemsPerRequest,\n\t\t\t\t\tlastId,\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tthis.isDataLoading = false;\n\t\t\t\tthis.$showError(error, this.$locale.baseText('executionsList.showError.loadMore.title'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata.results = data.results.map((execution) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn { ...execution, mode: execution.mode };\n\t\t\t});\n\n\t\t\tthis.finishedExecutions.push(...data.results);\n\t\t\tthis.finishedExecutionsCount = data.count;\n\t\t\tthis.finishedExecutionsCountEstimated = data.estimated;\n\n\t\t\tthis.isDataLoading = false;\n\n\t\t\tthis.workflowsStore.addToCurrentExecutions(data.results);\n\n\t\t\tthis.adjustSelectionAfterMoreItemsLoaded();\n\t\t},\n\t\tasync loadWorkflows() {\n\t\t\ttry {\n\t\t\t\tconst workflows = await this.workflowsStore.fetchAllWorkflows();\n\t\t\t\tworkflows.sort((a, b) => {\n\t\t\t\t\tif (a.name.toLowerCase() < b.name.toLowerCase()) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (a.name.toLowerCase() > b.name.toLowerCase()) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\t// @ts-ignore\n\t\t\t\tworkflows.unshift({\n\t\t\t\t\tid: 'all',\n\t\t\t\t\tname: this.$locale.baseText('executionsList.allWorkflows'),\n\t\t\t\t});\n\n\t\t\t\tVue.set(this, 'workflows', workflows);\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('executionsList.showError.loadWorkflows.title'),\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tasync retryExecution(execution: IExecutionsSummary, loadWorkflow?: boolean) {\n\t\t\tthis.isDataLoading = true;\n\n\t\t\ttry {\n\t\t\t\tconst retrySuccessful = await this.workflowsStore.retryExecution(\n\t\t\t\t\texecution.id,\n\t\t\t\t\tloadWorkflow,\n\t\t\t\t);\n\n\t\t\t\tif (retrySuccessful) {\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: this.$locale.baseText('executionsList.showMessage.retrySuccessfulTrue.title'),\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: this.$locale.baseText('executionsList.showMessage.retrySuccessfulFalse.title'),\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.isDataLoading = false;\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('executionsList.showError.retryExecution.title'),\n\t\t\t\t);\n\n\t\t\t\tthis.isDataLoading = false;\n\t\t\t}\n\t\t},\n\t\tasync refreshData() {\n\t\t\tthis.isDataLoading = true;\n\n\t\t\ttry {\n\t\t\t\tawait Promise.all([this.loadActiveExecutions(), this.loadFinishedExecutions()]);\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('executionsList.showError.refreshData.title'));\n\t\t\t}\n\n\t\t\tthis.isDataLoading = false;\n\t\t},\n\t\tgetStatus(execution: IExecutionsSummary): ExecutionStatus {\n\t\t\tif (execution.status) {\n\t\t\t\treturn execution.status;\n\t\t\t} else {\n\t\t\t\t// this should not happen but just in case\n\t\t\t\tlet status: ExecutionStatus = 'unknown';\n\t\t\t\tif (execution.waitTill) {\n\t\t\t\t\tstatus = 'waiting';\n\t\t\t\t} else if (execution.stoppedAt === undefined) {\n\t\t\t\t\tstatus = 'running';\n\t\t\t\t} else if (execution.finished) {\n\t\t\t\t\tstatus = 'success';\n\t\t\t\t} else if (execution.stoppedAt !== null) {\n\t\t\t\t\tstatus = 'failed';\n\t\t\t\t} else {\n\t\t\t\t\tstatus = 'unknown';\n\t\t\t\t}\n\t\t\t\treturn status;\n\t\t\t}\n\t\t},\n\t\tgetRowClass(execution: IExecutionsSummary): string {\n\t\t\treturn [this.$style.execRow, this.$style[this.getStatus(execution)]].join(' ');\n\t\t},\n\t\tgetStatusText(entry: IExecutionsSummary): string {\n\t\t\tconst status = this.getStatus(entry);\n\t\t\tlet text = '';\n\n\t\t\tif (status === 'waiting') {\n\t\t\t\ttext = this.$locale.baseText('executionsList.waiting');\n\t\t\t} else if (status === 'canceled') {\n\t\t\t\ttext = this.$locale.baseText('executionsList.canceled');\n\t\t\t} else if (status === 'crashed') {\n\t\t\t\ttext = this.$locale.baseText('executionsList.error');\n\t\t\t} else if (status === 'new') {\n\t\t\t\ttext = this.$locale.baseText('executionsList.running');\n\t\t\t} else if (status === 'running') {\n\t\t\t\ttext = this.$locale.baseText('executionsList.running');\n\t\t\t} else if (status === 'success') {\n\t\t\t\ttext = this.$locale.baseText('executionsList.succeeded');\n\t\t\t} else if (status === 'failed') {\n\t\t\t\ttext = this.$locale.baseText('executionsList.error');\n\t\t\t} else {\n\t\t\t\ttext = this.$locale.baseText('executionsList.unknown');\n\t\t\t}\n\n\t\t\treturn text;\n\t\t},\n\t\tgetStatusTextTranslationPath(entry: IExecutionsSummary): string {\n\t\t\tconst status = this.getStatus(entry);\n\t\t\tlet path = '';\n\n\t\t\tif (status === 'waiting') {\n\t\t\t\tpath = 'executionsList.statusWaiting';\n\t\t\t} else if (status === 'canceled') {\n\t\t\t\tpath = 'executionsList.statusCanceled';\n\t\t\t} else if (['crashed', 'failed', 'success'].includes(status)) {\n\t\t\t\tif (!entry.stoppedAt) {\n\t\t\t\t\tpath = 'executionsList.statusTextWithoutTime';\n\t\t\t\t} else {\n\t\t\t\t\tpath = 'executionsList.statusText';\n\t\t\t\t}\n\t\t\t} else if (status === 'new') {\n\t\t\t\tpath = 'executionsList.statusRunning';\n\t\t\t} else if (status === 'running') {\n\t\t\t\tpath = 'executionsList.statusRunning';\n\t\t\t} else {\n\t\t\t\tpath = 'executionsList.statusUnknown';\n\t\t\t}\n\n\t\t\treturn path;\n\t\t},\n\t\tgetStatusTooltipText(entry: IExecutionsSummary): string {\n\t\t\tconst status = this.getStatus(entry);\n\t\t\tlet text = '';\n\n\t\t\tif (status === 'waiting' && this.isWaitTillIndefinite(entry)) {\n\t\t\t\ttext = this.$locale.baseText(\n\t\t\t\t\t'executionsList.statusTooltipText.theWorkflowIsWaitingIndefinitely',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn text;\n\t\t},\n\t\tasync stopExecution(activeExecutionId: string) {\n\t\t\ttry {\n\t\t\t\t// Add it to the list of currently stopping executions that we\n\t\t\t\t// can show the user in the UI that it is in progress\n\t\t\t\tthis.stoppingExecutions.push(activeExecutionId);\n\n\t\t\t\tawait this.workflowsStore.stopCurrentExecution(activeExecutionId);\n\n\t\t\t\t// Remove it from the list of currently stopping executions\n\t\t\t\tconst index = this.stoppingExecutions.indexOf(activeExecutionId);\n\t\t\t\tthis.stoppingExecutions.splice(index, 1);\n\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('executionsList.showMessage.stopExecution.title'),\n\t\t\t\t\tmessage: this.$locale.baseText('executionsList.showMessage.stopExecution.message', {\n\t\t\t\t\t\tinterpolate: { activeExecutionId },\n\t\t\t\t\t}),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\n\t\t\t\tthis.refreshData();\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('executionsList.showError.stopExecution.title'),\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tisExecutionRetriable(execution: IExecutionsSummary): boolean {\n\t\t\treturn (\n\t\t\t\texecution.stoppedAt !== undefined &&\n\t\t\t\t!execution.finished &&\n\t\t\t\texecution.retryOf === undefined &&\n\t\t\t\texecution.retrySuccessId === undefined &&\n\t\t\t\t!execution.waitTill\n\t\t\t);\n\t\t},\n\t\tasync deleteExecution(execution: IExecutionsSummary) {\n\t\t\tthis.isDataLoading = true;\n\t\t\ttry {\n\t\t\t\tawait this.workflowsStore.deleteExecutions({ ids: [execution.id] });\n\t\t\t\tawait this.refreshData();\n\n\t\t\t\tif (this.allVisibleSelected) {\n\t\t\t\t\tVue.set(this, 'selectedItems', {});\n\t\t\t\t\tthis.selectAllVisibleExecutions();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('executionsList.showError.handleDeleteSelected.title'),\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.isDataLoading = true;\n\t\t},\n\t\tisWaitTillIndefinite(execution: IExecutionsSummary): boolean {\n\t\t\tif (!execution.waitTill) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn new Date(execution.waitTill).toISOString() === WAIT_TIME_UNLIMITED;\n\t\t},\n\t\tisRunning(execution: IExecutionsSummary): boolean {\n\t\t\treturn this.getStatus(execution) === 'running';\n\t\t},\n\t\tselectAllVisibleExecutions() {\n\t\t\tthis.combinedExecutions.forEach((execution: IExecutionsSummary) => {\n\t\t\t\tVue.set(this.selectedItems, execution.id, true);\n\t\t\t});\n\t\t},\n\t\tadjustSelectionAfterMoreItemsLoaded() {\n\t\t\tif (this.allExistingSelected) {\n\t\t\t\tthis.allVisibleSelected = true;\n\t\t\t\tthis.selectAllVisibleExecutions();\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.execListWrapper {\n\tdisplay: grid;\n\tgrid-template-rows: 1fr 0;\n\tposition: relative;\n\theight: 100%;\n\twidth: 100%;\n\tmax-width: 1280px;\n}\n\n.execList {\n\tposition: relative;\n\theight: 100%;\n\toverflow: auto;\n\tpadding: var(--spacing-l) var(--spacing-l) 0;\n\t@media (min-width: 1200px) {\n\t\tpadding: var(--spacing-2xl) var(--spacing-2xl) 0;\n\t}\n}\n\n.execListHeader {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tmargin-bottom: var(--spacing-s);\n}\n\n.execListHeaderControls {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-end;\n}\n\n.selectionOptions {\n\tdisplay: flex;\n\talign-items: center;\n\tposition: absolute;\n\tpadding: var(--spacing-2xs);\n\tz-index: 2;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tbottom: var(--spacing-3xl);\n\tbackground: var(--color-background-dark);\n\tborder-radius: var(--border-radius-base);\n\tcolor: var(--color-text-xlight);\n\tfont-size: var(--font-size-2xs);\n\n\tbutton {\n\t\tmargin-left: var(--spacing-2xs);\n\t}\n}\n\n.statusColumn {\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.spinner {\n\tmargin-right: var(--spacing-2xs);\n}\n\n.status {\n\tline-height: 22.6px;\n\ttext-align: center;\n\tfont-size: var(--font-size-s);\n\tfont-weight: var(--font-weight-bold);\n\n\t.crashed &,\n\t.failed & {\n\t\tcolor: var(--color-danger);\n\t}\n\n\t.waiting & {\n\t\tcolor: var(--color-secondary);\n\t}\n\n\t.success & {\n\t\tfont-weight: var(--font-weight-normal);\n\t}\n\n\t.new &,\n\t.running & {\n\t\tcolor: var(--color-warning);\n\t}\n\n\t.unknown & {\n\t\tcolor: var(--color-background-dark);\n\t}\n}\n\n.buttonCell {\n\toverflow: hidden;\n\n\tbutton {\n\t\ttransform: translateX(1000%);\n\t\ttransition: transform 0s;\n\n\t\t&:focus-visible,\n\t\t.execRow:hover & {\n\t\t\ttransform: translateX(0);\n\t\t}\n\t}\n}\n\n.execTable {\n\t/*\n\t  Table height needs to be set to 0 in order to use height 100% for elements in table cells\n\t*/\n\theight: 0;\n\twidth: 100%;\n\ttext-align: left;\n\tfont-size: var(--font-size-s);\n\n\tthead th {\n\t\tposition: sticky;\n\t\ttop: calc(var(--spacing-3xl) * -1);\n\t\tz-index: 2;\n\t\tpadding: var(--spacing-s) var(--spacing-s) var(--spacing-s) 0;\n\t\tbackground: var(--color-background-base);\n\n\t\t&:first-child {\n\t\t\tpadding-left: var(--spacing-s);\n\t\t}\n\t}\n\n\tth,\n\ttd {\n\t\theight: 100%;\n\t\tpadding: var(--spacing-s) var(--spacing-s) var(--spacing-s) 0;\n\t\tbackground: var(--color-background-xlight);\n\n\t\t&:not(:first-child, :nth-last-child(-n + 3)) {\n\t\t\twidth: 100%;\n\t\t}\n\n\t\t&:nth-last-child(-n + 2) {\n\t\t\tpadding-left: 0;\n\t\t}\n\n\t\t@media (min-width: $breakpoint-sm) {\n\t\t\t&:not(:nth-child(2)) {\n\t\t\t\t&,\n\t\t\t\tdiv,\n\t\t\t\tspan {\n\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.execRow {\n\t\tcolor: var(--color-text-base);\n\n\t\ttd:first-child {\n\t\t\twidth: 30px;\n\t\t\tpadding: 0 var(--spacing-s) 0 0;\n\n\t\t\t/*\n\t\t\t  This is needed instead of table cell border because they are overlapping the sticky header\n\t\t\t*/\n\t\t\t&::before {\n\t\t\t\tcontent: '';\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: var(--spacing-4xs);\n\t\t\t\theight: 100%;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tmargin-right: var(--spacing-xs);\n\t\t\t}\n\t\t}\n\n\t\t&:nth-child(even) td {\n\t\t\tbackground: var(--color-background-light);\n\t\t}\n\n\t\t&:hover td {\n\t\t\tbackground: var(--color-primary-tint-3);\n\t\t}\n\n\t\t&.crashed td:first-child::before,\n\t\t&.failed td:first-child::before {\n\t\t\tbackground: hsl(var(--color-danger-h), 94%, 80%);\n\t\t}\n\n\t\t&.success td:first-child::before {\n\t\t\tbackground: hsl(var(--color-success-h), 60%, 70%);\n\t\t}\n\n\t\t&.new td:first-child::before,\n\t\t&.running td:first-child::before {\n\t\t\tbackground: hsl(var(--color-warning-h), 94%, 80%);\n\t\t}\n\n\t\t&.waiting td:first-child::before {\n\t\t\tbackground: hsl(var(--color-secondary-h), 94%, 80%);\n\t\t}\n\n\t\t&.unknown td:first-child::before {\n\t\t\tbackground: var(--color-text-light);\n\t\t}\n\t}\n}\n\n.loadMore {\n\tmargin: var(--spacing-m) 0;\n\twidth: 100%;\n\ttext-align: center;\n}\n\n.loadedAll {\n\ttext-align: center;\n\tfont-size: var(--font-size-s);\n\tmargin: var(--spacing-l) 0;\n}\n\n.actions.deleteOnly {\n\tpadding: 0;\n}\n\n.retryAction + .deleteAction {\n\tborder-top: 1px solid var(--color-foreground-light);\n}\n\n.selectAll {\n\tdisplay: inline-block;\n\tmargin: 0 0 var(--spacing-s) var(--spacing-s);\n\tcolor: var(--color-danger);\n}\n\n.filterLoader {\n\twidth: 220px;\n\theight: 32px;\n}\n\n.tableLoader {\n\twidth: 100%;\n\theight: 48px;\n\tmargin-bottom: var(--spacing-2xs);\n}\n</style>\n","<template>\n\t<Modal :name=\"EXECUTIONS_MODAL_KEY\" width=\"80%\" :eventBus=\"modalBus\">\n\t\t<template #content>\n\t\t\t<ExecutionsList @closeModal=\"onCloseModal\" />\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport ExecutionsList from '@/components/ExecutionsList.vue';\nimport Modal from '@/components/Modal.vue';\nimport { EXECUTIONS_MODAL_KEY } from '@/constants';\nimport { createEventBus } from '@/event-bus';\n\nexport default defineComponent({\n\tname: 'ExecutionsModal',\n\tcomponents: {\n\t\tModal,\n\t\tExecutionsList,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tmodalBus: createEventBus(),\n\t\t\tEXECUTIONS_MODAL_KEY,\n\t\t};\n\t},\n\tmethods: {\n\t\tonCloseModal() {\n\t\t\tthis.modalBus.emit('close');\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<Modal\n\t\t:name=\"WORKFLOW_ACTIVE_MODAL_KEY\"\n\t\t:title=\"$locale.baseText('activationModal.workflowActivated')\"\n\t\twidth=\"460px\"\n\t>\n\t\t<template #content>\n\t\t\t<div>\n\t\t\t\t<n8n-text>{{ triggerContent }}</n8n-text>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.spaced\">\n\t\t\t\t<n8n-text>\n\t\t\t\t\t<n8n-text :bold=\"true\">\n\t\t\t\t\t\t{{ $locale.baseText('activationModal.theseExecutionsWillNotShowUp') }}\n\t\t\t\t\t</n8n-text>\n\t\t\t\t\t{{ $locale.baseText('activationModal.butYouCanSeeThem') }}\n\t\t\t\t\t<a @click=\"showExecutionsList\">\n\t\t\t\t\t\t{{ $locale.baseText('activationModal.executionList') }}\n\t\t\t\t\t</a>\n\t\t\t\t\t{{ $locale.baseText('activationModal.ifYouChooseTo') }}\n\t\t\t\t\t<a @click=\"showSettings\">{{ $locale.baseText('activationModal.saveExecutions') }}</a>\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t</template>\n\n\t\t<template #footer=\"{ close }\">\n\t\t\t<div :class=\"$style.footer\">\n\t\t\t\t<el-checkbox :value=\"checked\" @change=\"handleCheckboxChange\">{{\n\t\t\t\t\t$locale.baseText('activationModal.dontShowAgain')\n\t\t\t\t}}</el-checkbox>\n\t\t\t\t<n8n-button @click=\"close\" :label=\"$locale.baseText('activationModal.gotIt')\" />\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nimport Modal from '@/components/Modal.vue';\nimport {\n\tWORKFLOW_ACTIVE_MODAL_KEY,\n\tWORKFLOW_SETTINGS_MODAL_KEY,\n\tLOCAL_STORAGE_ACTIVATION_FLAG,\n\tVIEWS,\n} from '../constants';\nimport { getActivatableTriggerNodes, getTriggerNodeServiceName } from '@/utils';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport { createEventBus } from '@/event-bus';\n\nexport default defineComponent({\n\tname: 'ActivationModal',\n\tcomponents: {\n\t\tModal,\n\t},\n\tprops: ['modalName'],\n\tdata() {\n\t\treturn {\n\t\t\tWORKFLOW_ACTIVE_MODAL_KEY,\n\t\t\tchecked: false,\n\t\t\tmodalBus: createEventBus(),\n\t\t};\n\t},\n\tmethods: {\n\t\tasync showExecutionsList() {\n\t\t\tconst activeExecution = this.workflowsStore.activeWorkflowExecution;\n\t\t\tconst currentWorkflow = this.workflowsStore.workflowId;\n\n\t\t\tif (activeExecution) {\n\t\t\t\tthis.$router\n\t\t\t\t\t.push({\n\t\t\t\t\t\tname: VIEWS.EXECUTION_PREVIEW,\n\t\t\t\t\t\tparams: { name: currentWorkflow, executionId: activeExecution.id },\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {});\n\t\t\t} else {\n\t\t\t\tthis.$router\n\t\t\t\t\t.push({ name: VIEWS.EXECUTION_HOME, params: { name: currentWorkflow } })\n\t\t\t\t\t.catch(() => {});\n\t\t\t}\n\t\t\tthis.uiStore.closeModal(WORKFLOW_ACTIVE_MODAL_KEY);\n\t\t},\n\t\tasync showSettings() {\n\t\t\tthis.uiStore.openModal(WORKFLOW_SETTINGS_MODAL_KEY);\n\t\t},\n\t\thandleCheckboxChange(checkboxValue: boolean) {\n\t\t\tthis.checked = checkboxValue;\n\t\t\twindow.localStorage.setItem(LOCAL_STORAGE_ACTIVATION_FLAG, checkboxValue.toString());\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useNodeTypesStore, useUIStore, useWorkflowsStore),\n\t\ttriggerContent(): string {\n\t\t\tconst foundTriggers = getActivatableTriggerNodes(this.workflowsStore.workflowTriggerNodes);\n\t\t\tif (!foundTriggers.length) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (foundTriggers.length > 1) {\n\t\t\t\treturn this.$locale.baseText('activationModal.yourTriggersWillNowFire');\n\t\t\t}\n\n\t\t\tconst trigger = foundTriggers[0];\n\n\t\t\tconst triggerNodeType = this.nodeTypesStore.getNodeType(trigger.type, trigger.typeVersion);\n\t\t\tif (triggerNodeType) {\n\t\t\t\tif (triggerNodeType.activationMessage) {\n\t\t\t\t\treturn triggerNodeType.activationMessage;\n\t\t\t\t}\n\n\t\t\t\tconst serviceName = getTriggerNodeServiceName(triggerNodeType);\n\t\t\t\tif (trigger.webhookId) {\n\t\t\t\t\treturn this.$locale.baseText('activationModal.yourWorkflowWillNowListenForEvents', {\n\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\tserviceName,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t} else if (triggerNodeType.polling) {\n\t\t\t\t\treturn this.$locale.baseText('activationModal.yourWorkflowWillNowRegularlyCheck', {\n\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\tserviceName,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.$locale.baseText('activationModal.yourTriggerWillNowFire');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.spaced {\n\tmargin-top: var(--spacing-2xs);\n}\n\n.footer {\n\ttext-align: right;\n\n\t> * {\n\t\tmargin-left: var(--spacing-s);\n\t}\n}\n</style>\n","<template>\n\t<Modal\n\t\twidth=\"700px\"\n\t\t:title=\"$locale.baseText('importCurlModal.title')\"\n\t\t:eventBus=\"modalBus\"\n\t\t:name=\"IMPORT_CURL_MODAL_KEY\"\n\t\t:center=\"true\"\n\t>\n\t\t<template #content>\n\t\t\t<div :class=\"$style.container\">\n\t\t\t\t<n8n-input-label :label=\"$locale.baseText('importCurlModal.input.label')\" color=\"text-dark\">\n\t\t\t\t\t<n8n-input\n\t\t\t\t\t\t:value=\"curlCommand\"\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t:rows=\"5\"\n\t\t\t\t\t\t:placeholder=\"$locale.baseText('importCurlModal.input.placeholder')\"\n\t\t\t\t\t\t@input=\"onInput\"\n\t\t\t\t\t\t@focus=\"$event.target.select()\"\n\t\t\t\t\t\tref=\"input\"\n\t\t\t\t\t/>\n\t\t\t\t</n8n-input-label>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<div :class=\"$style.modalFooter\">\n\t\t\t\t<n8n-notice\n\t\t\t\t\t:class=\"$style.notice\"\n\t\t\t\t\t:content=\"$locale.baseText('ImportCurlModal.notice.content')\"\n\t\t\t\t/>\n\t\t\t\t<div>\n\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t@click=\"importCurlCommand\"\n\t\t\t\t\t\tfloat=\"right\"\n\t\t\t\t\t\t:label=\"$locale.baseText('importCurlModal.button.label')\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport Modal from './Modal.vue';\nimport {\n\tIMPORT_CURL_MODAL_KEY,\n\tCURL_IMPORT_NOT_SUPPORTED_PROTOCOLS,\n\tCURL_IMPORT_NODES_PROTOCOLS,\n} from '../constants';\nimport { showMessage } from '@/mixins/showMessage';\nimport mixins from 'vue-typed-mixins';\nimport type { INodeUi } from '@/Interface';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins(showMessage).extend({\n\tname: 'ImportCurlModal',\n\tcomponents: {\n\t\tModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tIMPORT_CURL_MODAL_KEY,\n\t\t\tcurlCommand: '',\n\t\t\tmodalBus: createEventBus(),\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useNDVStore, useUIStore),\n\t\tnode(): INodeUi | null {\n\t\t\treturn this.ndvStore.activeNode;\n\t\t},\n\t},\n\tmethods: {\n\t\tcloseDialog(): void {\n\t\t\tthis.modalBus.emit('close');\n\t\t},\n\t\tonInput(value: string): void {\n\t\t\tthis.curlCommand = value;\n\t\t},\n\t\tasync importCurlCommand(): Promise<void> {\n\t\t\tconst curlCommand = this.curlCommand;\n\t\t\tif (curlCommand === '') return;\n\n\t\t\ttry {\n\t\t\t\tconst parameters = await this.uiStore.getCurlToJson(curlCommand);\n\t\t\t\tconst url = parameters['parameters.url'];\n\n\t\t\t\tconst invalidProtocol = CURL_IMPORT_NOT_SUPPORTED_PROTOCOLS.find((p) =>\n\t\t\t\t\turl.includes(`${p}://`),\n\t\t\t\t);\n\n\t\t\t\tif (!invalidProtocol) {\n\t\t\t\t\tthis.uiStore.setHttpNodeParameters({\n\t\t\t\t\t\tname: IMPORT_CURL_MODAL_KEY,\n\t\t\t\t\t\tparameters: JSON.stringify(parameters),\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.closeDialog();\n\n\t\t\t\t\tthis.sendTelemetry();\n\n\t\t\t\t\treturn;\n\t\t\t\t\t// if we have a node that supports the invalid protocol\n\t\t\t\t\t// suggest that one\n\t\t\t\t} else if (CURL_IMPORT_NODES_PROTOCOLS[invalidProtocol]) {\n\t\t\t\t\tconst useNode = CURL_IMPORT_NODES_PROTOCOLS[invalidProtocol];\n\n\t\t\t\t\tthis.showProtocolErrorWithSupportedNode(invalidProtocol, useNode);\n\t\t\t\t\t// we do not have a node that supports the use protocol\n\t\t\t\t} else {\n\t\t\t\t\tthis.showProtocolError(invalidProtocol);\n\t\t\t\t}\n\t\t\t\tthis.sendTelemetry({ success: false, invalidProtocol: true, protocol: invalidProtocol });\n\t\t\t} catch (e) {\n\t\t\t\tthis.showInvalidcURLCommandError();\n\n\t\t\t\tthis.sendTelemetry({ success: false, invalidProtocol: false });\n\t\t\t} finally {\n\t\t\t\tthis.uiStore.setCurlCommand({ name: IMPORT_CURL_MODAL_KEY, command: this.curlCommand });\n\t\t\t}\n\t\t},\n\t\tshowProtocolErrorWithSupportedNode(protocol: string, node: string): void {\n\t\t\tthis.$showToast({\n\t\t\t\ttitle: this.$locale.baseText('importParameter.showError.invalidProtocol1.title', {\n\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\tnode,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\tmessage: this.$locale.baseText('importParameter.showError.invalidProtocol.message', {\n\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\tprotocol: protocol.toUpperCase(),\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\ttype: 'error',\n\t\t\t\tduration: 0,\n\t\t\t});\n\t\t},\n\t\tshowProtocolError(protocol: string): void {\n\t\t\tthis.$showToast({\n\t\t\t\ttitle: this.$locale.baseText('importParameter.showError.invalidProtocol2.title'),\n\t\t\t\tmessage: this.$locale.baseText('importParameter.showError.invalidProtocol.message', {\n\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\tprotocol,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\ttype: 'error',\n\t\t\t\tduration: 0,\n\t\t\t});\n\t\t},\n\t\tshowInvalidcURLCommandError(): void {\n\t\t\tthis.$showToast({\n\t\t\t\ttitle: this.$locale.baseText('importParameter.showError.invalidCurlCommand.title'),\n\t\t\t\tmessage: this.$locale.baseText('importParameter.showError.invalidCurlCommand.message'),\n\t\t\t\ttype: 'error',\n\t\t\t\tduration: 0,\n\t\t\t});\n\t\t},\n\t\tsendTelemetry(\n\t\t\tdata: { success: boolean; invalidProtocol: boolean; protocol?: string } = {\n\t\t\t\tsuccess: true,\n\t\t\t\tinvalidProtocol: false,\n\t\t\t\tprotocol: '',\n\t\t\t},\n\t\t): void {\n\t\t\tthis.$telemetry.track('User imported curl command', {\n\t\t\t\tsuccess: data.success,\n\t\t\t\tinvalidProtocol: data.invalidProtocol,\n\t\t\t\tprotocol: data.protocol,\n\t\t\t});\n\t\t},\n\t},\n\tmounted() {\n\t\tthis.curlCommand = this.uiStore.getCurlCommand || '';\n\t\tsetTimeout(() => {\n\t\t\t(this.$refs.input as HTMLTextAreaElement).focus();\n\t\t});\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.modalFooter {\n\tjustify-content: space-between;\n\tdisplay: flex;\n\tflex-direction: row;\n}\n\n.notice {\n\tmargin: 0;\n}\n\n.container > * {\n\tmargin-bottom: var(--spacing-s);\n\t&:last-child {\n\t\tmargin-bottom: 0;\n\t}\n}\n</style>\n","<template>\n\t<Modal\n\t\twidth=\"460px\"\n\t\t:title=\"modalTitle\"\n\t\t:eventBus=\"modalBus\"\n\t\t:name=\"WORKFLOW_SHARE_MODAL_KEY\"\n\t\t:center=\"true\"\n\t\t:beforeClose=\"onCloseModal\"\n\t>\n\t\t<template #content>\n\t\t\t<div v-if=\"!isSharingEnabled\" :class=\"$style.container\">\n\t\t\t\t<n8n-text>\n\t\t\t\t\t{{\n\t\t\t\t\t\t$locale.baseText(\n\t\t\t\t\t\t\tuiStore.contextBasedTranslationKeys.workflows.sharing.unavailable.description.modal,\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t\t<div v-else-if=\"isDefaultUser\" :class=\"$style.container\">\n\t\t\t\t<n8n-text>\n\t\t\t\t\t{{ $locale.baseText('workflows.shareModal.isDefaultUser.description') }}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t\t<div v-else :class=\"$style.container\">\n\t\t\t\t<n8n-info-tip v-if=\"!workflowPermissions.isOwner\" :bold=\"false\" class=\"mb-s\">\n\t\t\t\t\t{{\n\t\t\t\t\t\t$locale.baseText('workflows.shareModal.info.sharee', {\n\t\t\t\t\t\t\tinterpolate: { workflowOwnerName },\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t</n8n-info-tip>\n\t\t\t\t<enterprise-edition :features=\"[EnterpriseEditionFeature.Sharing]\">\n\t\t\t\t\t<n8n-user-select\n\t\t\t\t\t\tv-if=\"workflowPermissions.updateSharing\"\n\t\t\t\t\t\tclass=\"mb-s\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t:users=\"usersList\"\n\t\t\t\t\t\t:currentUserId=\"currentUser.id\"\n\t\t\t\t\t\t:placeholder=\"$locale.baseText('workflows.shareModal.select.placeholder')\"\n\t\t\t\t\t\tdata-test-id=\"workflow-sharing-modal-users-select\"\n\t\t\t\t\t\t@input=\"onAddSharee\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #prefix>\n\t\t\t\t\t\t\t<n8n-icon icon=\"search\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</n8n-user-select>\n\t\t\t\t\t<n8n-users-list\n\t\t\t\t\t\t:actions=\"[]\"\n\t\t\t\t\t\t:users=\"sharedWithList\"\n\t\t\t\t\t\t:currentUserId=\"currentUser.id\"\n\t\t\t\t\t\t:delete-label=\"$locale.baseText('workflows.shareModal.list.delete')\"\n\t\t\t\t\t\t:readonly=\"!workflowPermissions.updateSharing\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #actions=\"{ user }\">\n\t\t\t\t\t\t\t<n8n-select\n\t\t\t\t\t\t\t\t:class=\"$style.roleSelect\"\n\t\t\t\t\t\t\t\tvalue=\"editor\"\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t@change=\"onRoleAction(user, $event)\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<n8n-option :label=\"$locale.baseText('workflows.roles.editor')\" value=\"editor\" />\n\t\t\t\t\t\t\t\t<n8n-option :class=\"$style.roleSelectRemoveOption\" value=\"remove\">\n\t\t\t\t\t\t\t\t\t<n8n-text color=\"danger\">{{\n\t\t\t\t\t\t\t\t\t\t$locale.baseText('workflows.shareModal.list.delete')\n\t\t\t\t\t\t\t\t\t}}</n8n-text>\n\t\t\t\t\t\t\t\t</n8n-option>\n\t\t\t\t\t\t\t</n8n-select>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</n8n-users-list>\n\t\t\t\t\t<template #fallback>\n\t\t\t\t\t\t<n8n-text>\n\t\t\t\t\t\t\t<i18n\n\t\t\t\t\t\t\t\t:path=\"\n\t\t\t\t\t\t\t\t\tuiStore.contextBasedTranslationKeys.workflows.sharing.unavailable.description\n\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\ttag=\"span\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<template #action />\n\t\t\t\t\t\t\t</i18n>\n\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t</template>\n\t\t\t\t</enterprise-edition>\n\t\t\t</div>\n\t\t</template>\n\n\t\t<template #footer>\n\t\t\t<div v-if=\"!isSharingEnabled\" :class=\"$style.actionButtons\">\n\t\t\t\t<n8n-button @click=\"goToUpgrade\">\n\t\t\t\t\t{{\n\t\t\t\t\t\t$locale.baseText(\n\t\t\t\t\t\t\tuiStore.contextBasedTranslationKeys.workflows.sharing.unavailable.button,\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</n8n-button>\n\t\t\t</div>\n\t\t\t<div v-else-if=\"isDefaultUser\" :class=\"$style.actionButtons\">\n\t\t\t\t<n8n-button @click=\"goToUsersSettings\">\n\t\t\t\t\t{{ $locale.baseText('workflows.shareModal.isDefaultUser.button') }}\n\t\t\t\t</n8n-button>\n\t\t\t</div>\n\t\t\t<enterprise-edition\n\t\t\t\tv-else\n\t\t\t\t:features=\"[EnterpriseEditionFeature.Sharing]\"\n\t\t\t\t:class=\"$style.actionButtons\"\n\t\t\t>\n\t\t\t\t<n8n-text v-show=\"isDirty\" color=\"text-light\" size=\"small\" class=\"mr-xs\">\n\t\t\t\t\t{{ $locale.baseText('workflows.shareModal.changesHint') }}\n\t\t\t\t</n8n-text>\n\t\t\t\t<n8n-button\n\t\t\t\t\tv-show=\"workflowPermissions.updateSharing\"\n\t\t\t\t\t:loading=\"loading\"\n\t\t\t\t\t:disabled=\"!isDirty\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tdata-test-id=\"workflow-sharing-modal-save-button\"\n\t\t\t\t\t@click=\"onSave\"\n\t\t\t\t>\n\t\t\t\t\t{{ $locale.baseText('workflows.shareModal.save') }}\n\t\t\t\t</n8n-button>\n\t\t\t</enterprise-edition>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport Modal from './Modal.vue';\nimport {\n\tEnterpriseEditionFeature,\n\tPLACEHOLDER_EMPTY_WORKFLOW_ID,\n\tVIEWS,\n\tWORKFLOW_SHARE_MODAL_KEY,\n} from '../constants';\nimport type { IUser, IWorkflowDb } from '@/Interface';\nimport type { IPermissions } from '@/permissions';\nimport { getWorkflowPermissions } from '@/permissions';\nimport mixins from 'vue-typed-mixins';\nimport { showMessage } from '@/mixins/showMessage';\nimport { createEventBus, nodeViewEventBus } from '@/event-bus';\nimport { mapStores } from 'pinia';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useWorkflowsEEStore } from '@/stores/workflows.ee.store';\nimport type { ITelemetryTrackProperties } from 'n8n-workflow';\nimport { useUsageStore } from '@/stores/usage.store';\nimport type { BaseTextKey } from '@/plugins/i18n';\nimport { isNavigationFailure } from 'vue-router';\n\nexport default mixins(showMessage).extend({\n\tname: 'workflow-share-modal',\n\tcomponents: {\n\t\tModal,\n\t},\n\tprops: {\n\t\tdata: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => ({}),\n\t\t},\n\t},\n\tdata() {\n\t\tconst workflowsStore = useWorkflowsStore();\n\t\tconst workflow =\n\t\t\tthis.data.id === PLACEHOLDER_EMPTY_WORKFLOW_ID\n\t\t\t\t? workflowsStore.workflow\n\t\t\t\t: workflowsStore.workflowsById[this.data.id];\n\n\t\treturn {\n\t\t\tWORKFLOW_SHARE_MODAL_KEY,\n\t\t\tloading: true,\n\t\t\tmodalBus: createEventBus(),\n\t\t\tsharedWith: [...(workflow.sharedWith || [])] as Array<Partial<IUser>>,\n\t\t\tEnterpriseEditionFeature,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(\n\t\t\tuseSettingsStore,\n\t\t\tuseUIStore,\n\t\t\tuseUsersStore,\n\t\t\tuseUsageStore,\n\t\t\tuseWorkflowsStore,\n\t\t\tuseWorkflowsEEStore,\n\t\t),\n\t\tisDefaultUser(): boolean {\n\t\t\treturn this.usersStore.isDefaultUser;\n\t\t},\n\t\tisSharingEnabled(): boolean {\n\t\t\treturn this.settingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.Sharing);\n\t\t},\n\t\tfallbackLinkUrl(): string {\n\t\t\treturn `${this.$locale.baseText(\n\t\t\t\tthis.uiStore.contextBasedTranslationKeys.upgradeLinkUrl as BaseTextKey,\n\t\t\t)}${true ? '&utm_campaign=upgrade-workflow-sharing' : ''}`;\n\t\t},\n\t\tmodalTitle(): string {\n\t\t\treturn this.$locale.baseText(\n\t\t\t\tthis.isSharingEnabled\n\t\t\t\t\t? (this.uiStore.contextBasedTranslationKeys.workflows.sharing.title as BaseTextKey)\n\t\t\t\t\t: (this.uiStore.contextBasedTranslationKeys.workflows.sharing.unavailable\n\t\t\t\t\t\t\t.title as BaseTextKey),\n\t\t\t\t{\n\t\t\t\t\tinterpolate: { name: this.workflow.name },\n\t\t\t\t},\n\t\t\t);\n\t\t},\n\t\tusersList(): IUser[] {\n\t\t\treturn this.usersStore.allUsers.filter((user: IUser) => {\n\t\t\t\tconst isCurrentUser = user.id === this.usersStore.currentUser?.id;\n\t\t\t\tconst isAlreadySharedWithUser = (this.sharedWith || []).find(\n\t\t\t\t\t(sharee) => sharee.id === user.id,\n\t\t\t\t);\n\n\t\t\t\treturn !isCurrentUser && !isAlreadySharedWithUser;\n\t\t\t});\n\t\t},\n\t\tsharedWithList(): Array<Partial<IUser>> {\n\t\t\treturn (\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t...(this.workflow && this.workflow.ownedBy\n\t\t\t\t\t\t\t? this.workflow.ownedBy\n\t\t\t\t\t\t\t: this.usersStore.currentUser),\n\t\t\t\t\t\tisOwner: true,\n\t\t\t\t\t},\n\t\t\t\t] as Array<Partial<IUser>>\n\t\t\t).concat(this.sharedWith || []);\n\t\t},\n\t\tworkflow(): IWorkflowDb {\n\t\t\treturn this.data.id === PLACEHOLDER_EMPTY_WORKFLOW_ID\n\t\t\t\t? this.workflowsStore.workflow\n\t\t\t\t: this.workflowsStore.workflowsById[this.data.id];\n\t\t},\n\t\tcurrentUser(): IUser | null {\n\t\t\treturn this.usersStore.currentUser;\n\t\t},\n\t\tworkflowPermissions(): IPermissions {\n\t\t\treturn getWorkflowPermissions(this.usersStore.currentUser, this.workflow);\n\t\t},\n\t\tworkflowOwnerName(): string {\n\t\t\treturn this.workflowsEEStore.getWorkflowOwnerName(`${this.workflow.id}`);\n\t\t},\n\t\tisDirty(): boolean {\n\t\t\tconst previousSharedWith = this.workflow.sharedWith || [];\n\n\t\t\treturn (\n\t\t\t\tthis.sharedWith.length !== previousSharedWith.length ||\n\t\t\t\tthis.sharedWith.some(\n\t\t\t\t\t(sharee) => !previousSharedWith.find((previousSharee) => sharee.id === previousSharee.id),\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t},\n\tmethods: {\n\t\tasync onSave() {\n\t\t\tif (this.loading) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.loading = true;\n\n\t\t\tconst saveWorkflowPromise = async () => {\n\t\t\t\treturn new Promise<string>((resolve) => {\n\t\t\t\t\tif (this.workflow.id === PLACEHOLDER_EMPTY_WORKFLOW_ID) {\n\t\t\t\t\t\tnodeViewEventBus.emit('saveWorkflow', () => {\n\t\t\t\t\t\t\tresolve(this.workflow.id);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(this.workflow.id);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tconst shareesAdded = this.sharedWith.filter(\n\t\t\t\t\t(sharee) =>\n\t\t\t\t\t\t!this.workflow.sharedWith?.find((previousSharee) => sharee.id === previousSharee.id),\n\t\t\t\t);\n\t\t\t\tconst shareesRemoved =\n\t\t\t\t\tthis.workflow.sharedWith?.filter(\n\t\t\t\t\t\t(previousSharee) => !this.sharedWith.find((sharee) => sharee.id === previousSharee.id),\n\t\t\t\t\t) || [];\n\n\t\t\t\tconst workflowId = await saveWorkflowPromise();\n\t\t\t\tawait this.workflowsEEStore.saveWorkflowSharedWith({\n\t\t\t\t\tworkflowId,\n\t\t\t\t\tsharedWith: this.sharedWith,\n\t\t\t\t});\n\n\t\t\t\tthis.trackTelemetry({\n\t\t\t\t\tuser_ids_sharees_added: shareesAdded.map((sharee) => sharee.id),\n\t\t\t\t\tsharees_removed: shareesRemoved.length,\n\t\t\t\t});\n\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('workflows.shareModal.onSave.success.title'),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('workflows.shareModal.onSave.error.title'));\n\t\t\t} finally {\n\t\t\t\tthis.modalBus.emit('close');\n\t\t\t\tthis.loading = false;\n\t\t\t}\n\t\t},\n\t\tasync onAddSharee(userId: string) {\n\t\t\tconst { id, firstName, lastName, email } = this.usersStore.getUserById(userId)!;\n\t\t\tconst sharee = { id, firstName, lastName, email };\n\n\t\t\tthis.sharedWith = this.sharedWith.concat(sharee);\n\n\t\t\tthis.trackTelemetry({\n\t\t\t\tuser_id_sharee: userId,\n\t\t\t});\n\t\t},\n\t\tasync onRemoveSharee(userId: string) {\n\t\t\tconst user = this.usersStore.getUserById(userId)!;\n\t\t\tconst isNewSharee = !(this.workflow.sharedWith || []).find((sharee) => sharee.id === userId);\n\n\t\t\tconst isLastUserWithAccessToCredentialsById = (this.workflow.usedCredentials || []).reduce<\n\t\t\t\tRecord<string, boolean>\n\t\t\t>((acc, credential) => {\n\t\t\t\tif (\n\t\t\t\t\t!credential.id ||\n\t\t\t\t\t!credential.ownedBy ||\n\t\t\t\t\t!credential.sharedWith ||\n\t\t\t\t\t!this.workflow.sharedWith\n\t\t\t\t) {\n\t\t\t\t\treturn acc;\n\t\t\t\t}\n\n\t\t\t\t// if is credential owner, and no credential sharees have access to workflow  => NOT OK\n\t\t\t\t// if is credential owner, and credential sharees have access to workflow => OK\n\n\t\t\t\t// if is credential sharee, and no credential sharees have access to workflow or owner does not have access to workflow => NOT OK\n\t\t\t\t// if is credential sharee, and credential owner has access to workflow => OK\n\t\t\t\t// if is credential sharee, and other credential sharees have access to workflow => OK\n\n\t\t\t\tlet isLastUserWithAccess = false;\n\n\t\t\t\tconst isCredentialOwner = credential.ownedBy.id === user.id;\n\t\t\t\tconst isCredentialSharee = !!credential.sharedWith.find((sharee) => sharee.id === user.id);\n\n\t\t\t\tif (isCredentialOwner) {\n\t\t\t\t\tisLastUserWithAccess = !credential.sharedWith.some((sharee) => {\n\t\t\t\t\t\treturn this.workflow.sharedWith!.find(\n\t\t\t\t\t\t\t(workflowSharee) => workflowSharee.id === sharee.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t} else if (isCredentialSharee) {\n\t\t\t\t\tisLastUserWithAccess =\n\t\t\t\t\t\t!credential.sharedWith.some((sharee) => {\n\t\t\t\t\t\t\treturn this.workflow.sharedWith!.find(\n\t\t\t\t\t\t\t\t(workflowSharee) => workflowSharee.id === sharee.id,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}) &&\n\t\t\t\t\t\t!this.workflow.sharedWith!.find(\n\t\t\t\t\t\t\t(workflowSharee) => workflowSharee.id === credential.ownedBy!.id,\n\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tacc[credential.id] = isLastUserWithAccess;\n\n\t\t\t\treturn acc;\n\t\t\t}, {});\n\n\t\t\tconst isLastUserWithAccessToCredentials = Object.values(\n\t\t\t\tisLastUserWithAccessToCredentialsById,\n\t\t\t).some((value) => value);\n\n\t\t\tlet confirm = true;\n\t\t\tif (!isNewSharee && isLastUserWithAccessToCredentials) {\n\t\t\t\tconfirm = await this.confirmMessage(\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'workflows.shareModal.list.delete.confirm.lastUserWithAccessToCredentials.message',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinterpolate: { name: user.fullName as string, workflow: this.workflow.name },\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t\tthis.$locale.baseText('workflows.shareModal.list.delete.confirm.title', {\n\t\t\t\t\t\tinterpolate: { name: user.fullName as string },\n\t\t\t\t\t}),\n\t\t\t\t\tnull,\n\t\t\t\t\tthis.$locale.baseText('workflows.shareModal.list.delete.confirm.confirmButtonText'),\n\t\t\t\t\tthis.$locale.baseText('workflows.shareModal.list.delete.confirm.cancelButtonText'),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (confirm) {\n\t\t\t\tthis.sharedWith = this.sharedWith.filter((sharee: Partial<IUser>) => {\n\t\t\t\t\treturn sharee.id !== user.id;\n\t\t\t\t});\n\n\t\t\t\tthis.trackTelemetry({\n\t\t\t\t\tuser_id_sharee: userId,\n\t\t\t\t\twarning_orphan_credentials: isLastUserWithAccessToCredentials,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tonRoleAction(user: IUser, action: string) {\n\t\t\tif (action === 'remove') {\n\t\t\t\tvoid this.onRemoveSharee(user.id);\n\t\t\t}\n\t\t},\n\t\tasync onCloseModal() {\n\t\t\tif (this.isDirty) {\n\t\t\t\tconst shouldSave = await this.confirmMessage(\n\t\t\t\t\tthis.$locale.baseText('workflows.shareModal.saveBeforeClose.message'),\n\t\t\t\t\tthis.$locale.baseText('workflows.shareModal.saveBeforeClose.title'),\n\t\t\t\t\t'warning',\n\t\t\t\t\tthis.$locale.baseText('workflows.shareModal.saveBeforeClose.confirmButtonText'),\n\t\t\t\t\tthis.$locale.baseText('workflows.shareModal.saveBeforeClose.cancelButtonText'),\n\t\t\t\t);\n\n\t\t\t\tif (shouldSave) {\n\t\t\t\t\treturn this.onSave();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\tasync loadUsers() {\n\t\t\tawait this.usersStore.fetchUsers();\n\t\t},\n\t\tgoToUsersSettings() {\n\t\t\tthis.$router.push({ name: VIEWS.USERS_SETTINGS }).catch((failure) => {\n\t\t\t\tif (!isNavigationFailure(failure)) {\n\t\t\t\t\tconsole.error(failure);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.modalBus.emit('close');\n\t\t},\n\t\ttrackTelemetry(data: ITelemetryTrackProperties) {\n\t\t\tthis.$telemetry.track('User selected sharee to remove', {\n\t\t\t\tworkflow_id: this.workflow.id,\n\t\t\t\tuser_id_sharer: this.currentUser?.id,\n\t\t\t\tsub_view: this.$route.name === VIEWS.WORKFLOWS ? 'Workflows listing' : 'Workflow editor',\n\t\t\t\t...data,\n\t\t\t});\n\t\t},\n\t\tgoToUpgrade() {\n\t\t\tthis.uiStore.goToUpgrade('workflow_sharing', 'upgrade-workflow-sharing');\n\t\t},\n\t\tasync initialize() {\n\t\t\tif (this.isSharingEnabled) {\n\t\t\t\tawait this.loadUsers();\n\n\t\t\t\tif (\n\t\t\t\t\tthis.workflow.id !== PLACEHOLDER_EMPTY_WORKFLOW_ID &&\n\t\t\t\t\t!this.workflow.sharedWith?.length // Sharing info already loaded\n\t\t\t\t) {\n\t\t\t\t\tawait this.workflowsStore.fetchWorkflow(this.workflow.id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.loading = false;\n\t\t},\n\t},\n\tmounted() {\n\t\tvoid this.initialize();\n\t},\n\twatch: {\n\t\tworkflow(workflow) {\n\t\t\tthis.sharedWith = workflow.sharedWith;\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.container > * {\n\toverflow-wrap: break-word;\n}\n\n.actionButtons {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\talign-items: center;\n}\n\n.roleSelect {\n\tmax-width: 100px;\n}\n\n.roleSelectRemoveOption {\n\tborder-top: 1px solid var(--color-foreground-base);\n}\n</style>\n","<template>\n\t<Modal\n\t\twidth=\"500px\"\n\t\t:title=\"locale.baseText('userActivationSurveyModal.title')\"\n\t\t:eventBus=\"modalBus\"\n\t\t:name=\"USER_ACTIVATION_SURVEY_MODAL\"\n\t\t:center=\"true\"\n\t\t:beforeClose=\"beforeClosingModal\"\n\t>\n\t\t<template #content>\n\t\t\t<div :class=\"$style.container\">\n\t\t\t\t<div :class=\"$style.description\">\n\t\t\t\t\t<i18n path=\"userActivationSurveyModal.description.workflowRan\">\n\t\t\t\t\t\t<template #workflow>\n\t\t\t\t\t\t\t<n8n-text :bold=\"true\"> {{ workflowName }} </n8n-text>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template #ranSuccessfully>\n\t\t\t\t\t\t\t<n8n-text>\n\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\tlocale.baseText('userActivationSurveyModal.description.workflowRanSuccessfully')\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template #savedTime>\n\t\t\t\t\t\t\t<n8n-text>\n\t\t\t\t\t\t\t\t{{ locale.baseText('userActivationSurveyModal.description.savedTime') }}\n\t\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</i18n>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"$style.form\">\n\t\t\t\t\t<n8n-input-label\n\t\t\t\t\t\t:label=\"$locale.baseText('userActivationSurveyModal.form.label')\"\n\t\t\t\t\t\tcolor=\"text-dark\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<n8n-input\n\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\t:maxlength=\"FEEDBACK_MAX_LENGTH\"\n\t\t\t\t\t\t\t:rows=\"3\"\n\t\t\t\t\t\t\tv-model=\"feedback\"\n\t\t\t\t\t\t\t@input=\"onInput\"\n\t\t\t\t\t\t\tdata-test-id=\"activation-feedback-input\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</n8n-input-label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<div :class=\"$style.modalFooter\">\n\t\t\t\t<n8n-button\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\tdata-test-id=\"skip-button\"\n\t\t\t\t\t:label=\"locale.baseText('userActivationSurveyModal.form.button.skip')\"\n\t\t\t\t\t@click=\"onSkip\"\n\t\t\t\t/>\n\t\t\t\t<n8n-button\n\t\t\t\t\t:disabled=\"!hasAnyChanges\"\n\t\t\t\t\t@click=\"onShareFeedback\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tfloat=\"right\"\n\t\t\t\t\t:label=\"locale.baseText('userActivationSurveyModal.form.button.shareFeedback')\"\n\t\t\t\t\tdata-test-id=\"send-activation-feedback-button\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted, ref } from 'vue';\nimport Modal from '@/components/Modal.vue';\nimport { USER_ACTIVATION_SURVEY_MODAL } from '@/constants';\nimport { useUsersStore } from '@/stores/users.store';\n\nimport confetti from 'canvas-confetti';\nimport { telemetry } from '@/plugins/telemetry';\nimport { i18n as locale } from '@/plugins/i18n';\nimport { Notification } from 'element-ui';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { createEventBus } from '@/event-bus';\n\nconst FEEDBACK_MAX_LENGTH = 300;\n\nconst userStore = useUsersStore();\nconst workflowStore = useWorkflowsStore();\n\nconst hasAnyChanges = ref(false);\nconst feedback = ref('');\nconst modalBus = createEventBus();\nconst workflowName = ref('');\n\nonMounted(async () => {\n\tconst currentSettings = getCurrentSettings();\n\ttry {\n\t\tconst { name } = await workflowStore.fetchWorkflow(\n\t\t\tcurrentSettings?.firstSuccessfulWorkflowId ?? '',\n\t\t);\n\t\tworkflowName.value = name;\n\t\tsetTimeout(showConfetti, 500);\n\t} catch (e) {}\n});\n\nconst onShareFeedback = () => {\n\ttelemetry.track('User responded to activation modal', { response: getFeedback() });\n\tshowSharedFeedbackSuccess();\n\tmodalBus.emit('close');\n};\n\nconst onSkip = () => {\n\tmodalBus.emit('close');\n};\n\nconst getCurrentSettings = () => {\n\treturn userStore.currentUser?.settings;\n};\n\nconst getFeedback = () => {\n\treturn feedback.value.slice(0, FEEDBACK_MAX_LENGTH);\n};\n\nconst beforeClosingModal = async () => {\n\tconst currentUser = userStore.currentUser;\n\tif (currentUser) {\n\t\ttry {\n\t\t\tawait userStore.updateUserSettings({ showUserActivationSurvey: false });\n\t\t} catch {\n\t\t\tshowSharedFeedbackError();\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\nconst onInput = () => {\n\thasAnyChanges.value = true;\n};\n\nconst showSharedFeedbackSuccess = () => {\n\tNotification.success({\n\t\ttitle: locale.baseText('userActivationSurveyModal.sharedFeedback.success'),\n\t\tmessage: '',\n\t\tposition: 'bottom-right',\n\t});\n};\n\nconst showSharedFeedbackError = () => {\n\tNotification.error({\n\t\ttitle: locale.baseText('userActivationSurveyModal.sharedFeedback.error'),\n\t\tmessage: '',\n\t\tposition: 'bottom-right',\n\t});\n};\n\nconst showConfetti = () => {\n\tvoid confetti({\n\t\tparticleCount: 200,\n\t\tspread: 100,\n\t\torigin: { y: 0.6 },\n\t\tzIndex: 2050,\n\t\tcolors: ['5C4EC2', 'D7E6F1', 'FF9284', '8D7FED', 'B8AFF9', 'FF6D5A'],\n\t});\n};\n</script>\n\n<style module lang=\"scss\">\n.form {\n\tmargin-top: var(--spacing-l);\n}\n\n.description > * {\n\tfont-size: var(--font-size-s);\n}\n\n.container > * {\n\tmargin-bottom: var(--spacing-s);\n\t&:last-child {\n\t\tmargin-bottom: 0;\n\t}\n}\n</style>\n","import type {\n\tINodeCredentials,\n\tINodeParameters,\n\tMessageEventBusDestinationOptions,\n} from 'n8n-workflow';\nimport type { INodeUi } from '@/Interface';\n\nexport function destinationToFakeINodeUi(\n\tdestination: MessageEventBusDestinationOptions,\n\tfakeType = 'n8n-nodes-base.stickyNote',\n): INodeUi {\n\treturn {\n\t\tid: destination.id,\n\t\tname: destination.id,\n\t\ttypeVersion: 1,\n\t\ttype: fakeType,\n\t\tposition: [0, 0],\n\t\tcredentials: {\n\t\t\t...(destination.credentials as INodeCredentials),\n\t\t},\n\t\tparameters: {\n\t\t\t...(destination as unknown as INodeParameters),\n\t\t},\n\t} as INodeUi;\n}\n","import type { INodeProperties } from 'n8n-workflow';\n\nexport const webhookModalDescription = [\n\t{\n\t\tdisplayName: 'Method',\n\t\tname: 'method',\n\t\tnoDataExpression: true,\n\t\ttype: 'options',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'GET',\n\t\t\t\tvalue: 'GET',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'POST',\n\t\t\t\tvalue: 'POST',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'PUT',\n\t\t\t\tvalue: 'PUT',\n\t\t\t},\n\t\t],\n\t\tdefault: 'POST',\n\t\tdescription: 'The request method to use',\n\t},\n\t{\n\t\tdisplayName: 'URL',\n\t\tname: 'url',\n\t\ttype: 'string',\n\t\tnoDataExpression: true,\n\t\tdefault: '',\n\t\tplaceholder: 'http://example.com/index.html',\n\t\tdescription: 'The URL to make the request to',\n\t},\n\t// TODO: commented out until required and implemented on backend\n\t// {\n\t// \tdisplayName: 'Authentication',\n\t// \tname: 'authentication',\n\t// \tnoDataExpression: true,\n\t// \ttype: 'options',\n\t// \toptions: [\n\t// \t\t{\n\t// \t\t\tname: 'None',\n\t// \t\t\tvalue: 'none',\n\t// \t\t},\n\t// \t\t// {\n\t// \t\t// \tname: 'Predefined Credential Type',\n\t// \t\t// \tvalue: 'predefinedCredentialType',\n\t// \t\t// \tdescription:\n\t// \t\t// \t\t\"We've already implemented auth for many services so that you don't have to set it up manually\",\n\t// \t\t// },\n\t// \t\t{\n\t// \t\t\tname: 'Generic Credential Type',\n\t// \t\t\tvalue: 'genericCredentialType',\n\t// \t\t\tdescription: 'Fully customizable. Choose between basic, header, OAuth2, etc.',\n\t// \t\t},\n\t// \t],\n\t// \tdefault: 'none',\n\t// },\n\t// {\n\t// \tdisplayName: 'Credential Type',\n\t// \tname: 'nodeCredentialType',\n\t// \ttype: 'credentialsSelect',\n\t// \tnoDataExpression: true,\n\t// \tdefault: '',\n\t// \tcredentialTypes: ['extends:oAuth2Api', 'extends:oAuth1Api', 'has:authenticate'],\n\t// \tdisplayOptions: {\n\t// \t\tshow: {\n\t// \t\t\tauthentication: ['predefinedCredentialType'],\n\t// \t\t},\n\t// \t},\n\t// },\n\t{\n\t\tdisplayName: 'Generic Auth Type (OAuth not supported yet)',\n\t\tname: 'genericAuthType',\n\t\ttype: 'credentialsSelect',\n\t\tdefault: '',\n\t\tcredentialTypes: ['has:genericAuth'],\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tauthentication: ['genericCredentialType'],\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tdisplayName: 'Add Query Parameters',\n\t\tname: 'sendQuery',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnoDataExpression: true,\n\t\tdescription: 'Whether the request has query params or not',\n\t},\n\t{\n\t\tdisplayName: 'Specify Query Parameters',\n\t\tname: 'specifyQuery',\n\t\ttype: 'options',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tsendQuery: [true],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Using Fields Below',\n\t\t\t\tvalue: 'keypair',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Using JSON',\n\t\t\t\tvalue: 'json',\n\t\t\t},\n\t\t],\n\t\tdefault: 'keypair',\n\t},\n\t{\n\t\tdisplayName: 'Add Query Parameters',\n\t\tname: 'queryParameters',\n\t\ttype: 'fixedCollection',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tsendQuery: [true],\n\t\t\t\tspecifyQuery: ['keypair'],\n\t\t\t},\n\t\t},\n\t\ttypeOptions: {\n\t\t\tmultipleValues: true,\n\t\t},\n\t\tplaceholder: 'Add Parameter',\n\t\tdefault: {\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: '',\n\t\t\t\t\tvalue: '',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'parameters',\n\t\t\t\tdisplayName: 'Parameter',\n\t\t\t\tvalues: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'JSON',\n\t\tname: 'jsonQuery',\n\t\ttype: 'json',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tsendQuery: [true],\n\t\t\t\tspecifyQuery: ['json'],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Add Headers',\n\t\tname: 'sendHeaders',\n\t\ttype: 'boolean',\n\t\tdefault: false,\n\t\tnoDataExpression: true,\n\t\tdescription: 'Whether the request has headers or not',\n\t},\n\t{\n\t\tdisplayName: 'Specify Headers',\n\t\tname: 'specifyHeaders',\n\t\ttype: 'options',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tsendHeaders: [true],\n\t\t\t},\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'Using Fields Below',\n\t\t\t\tvalue: 'keypair',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Using JSON',\n\t\t\t\tvalue: 'json',\n\t\t\t},\n\t\t],\n\t\tdefault: 'keypair',\n\t},\n\t{\n\t\tdisplayName: 'Header Parameters',\n\t\tname: 'headerParameters',\n\t\ttype: 'fixedCollection',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tsendHeaders: [true],\n\t\t\t\tspecifyHeaders: ['keypair'],\n\t\t\t},\n\t\t},\n\t\ttypeOptions: {\n\t\t\tmultipleValues: true,\n\t\t},\n\t\tplaceholder: 'Add Parameter',\n\t\tdefault: {\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: '',\n\t\t\t\t\tvalue: '',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'parameters',\n\t\t\t\tdisplayName: 'Parameter',\n\t\t\t\tvalues: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Name',\n\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Value',\n\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdefault: '',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tdisplayName: 'JSON',\n\t\tname: 'jsonHeaders',\n\t\ttype: 'json',\n\t\tdisplayOptions: {\n\t\t\tshow: {\n\t\t\t\tsendHeaders: [true],\n\t\t\t\tspecifyHeaders: ['json'],\n\t\t\t},\n\t\t},\n\t\tdefault: '',\n\t},\n\t{\n\t\tdisplayName: 'Options',\n\t\tname: 'options',\n\t\ttype: 'collection',\n\t\tplaceholder: 'Add Option',\n\t\tdefault: {},\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Ignore SSL Issues',\n\t\t\t\tname: 'allowUnauthorizedCerts',\n\t\t\t\ttype: 'boolean',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\tdefault: false,\n\t\t\t\tdescription: 'Whether to ignore SSL certificate validation',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Array Format in Query Parameters',\n\t\t\t\tname: 'queryParameterArrays',\n\t\t\t\ttype: 'options',\n\t\t\t\tdisplayOptions: {\n\t\t\t\t\tshow: {\n\t\t\t\t\t\t'/sendQuery': [true],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'No Brackets',\n\t\t\t\t\t\tvalue: 'repeat',\n\t\t\t\t\t\tdescription: 'e.g. foo=bar&foo=qux',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Brackets Only',\n\t\t\t\t\t\tvalue: 'brackets',\n\t\t\t\t\t\tdescription: 'e.g. foo[]=bar&foo[]=qux',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Brackets with Indices',\n\t\t\t\t\t\tvalue: 'indices',\n\t\t\t\t\t\tdescription: 'e.g. foo[0]=bar&foo[1]=qux',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'brackets',\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Redirects',\n\t\t\t\tname: 'redirect',\n\t\t\t\tplaceholder: 'Add Redirect',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: false,\n\t\t\t\t},\n\t\t\t\tdefault: {\n\t\t\t\t\tredirect: {},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Redirect',\n\t\t\t\t\t\tname: 'redirect',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Follow Redirects',\n\t\t\t\t\t\t\t\tname: 'followRedirects',\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\t\t\tnoDataExpression: true,\n\t\t\t\t\t\t\t\tdescription: 'Whether to follow all redirects',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Max Redirects',\n\t\t\t\t\t\t\t\tname: 'maxRedirects',\n\t\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\t\t\t\tfollowRedirects: [true],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdefault: 21,\n\t\t\t\t\t\t\t\tdescription: 'Max number of redirects to follow',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Proxy',\n\t\t\t\tname: 'proxy',\n\t\t\t\tdescription: 'Add Proxy',\n\t\t\t\ttype: 'fixedCollection',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tmultipleValues: false,\n\t\t\t\t},\n\t\t\t\tdefault: {\n\t\t\t\t\tproxy: {},\n\t\t\t\t},\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplayName: 'Proxy',\n\t\t\t\t\t\tname: 'proxy',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Protocol',\n\t\t\t\t\t\t\t\tname: 'protocol',\n\t\t\t\t\t\t\t\ttype: 'options',\n\t\t\t\t\t\t\t\tdefault: 'https',\n\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'HTTPS',\n\t\t\t\t\t\t\t\t\t\tvalue: 'https',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: 'HTTP',\n\t\t\t\t\t\t\t\t\t\tvalue: 'http',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Host',\n\t\t\t\t\t\t\t\tname: 'host',\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdefault: '127.0.0.1',\n\t\t\t\t\t\t\t\tdescription: 'Proxy Host (without protocol or port)',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdisplayName: 'Port',\n\t\t\t\t\t\t\t\tname: 'port',\n\t\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\t\tdefault: 9000,\n\t\t\t\t\t\t\t\tdescription: 'Proxy Port',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tdisplayName: 'Timeout',\n\t\t\t\tname: 'timeout',\n\t\t\t\ttype: 'number',\n\t\t\t\ttypeOptions: {\n\t\t\t\t\tminValue: 1,\n\t\t\t\t},\n\t\t\t\tdefault: 10000,\n\t\t\t\tdescription:\n\t\t\t\t\t'Time in ms to wait for the server to send response headers (and start the response body) before aborting the request',\n\t\t\t},\n\t\t],\n\t},\n] as INodeProperties[];\n\nexport const syslogModalDescription = [\n\t{\n\t\tdisplayName: 'Host',\n\t\tname: 'host',\n\t\ttype: 'string',\n\t\tdefault: '127.0.0.1',\n\t\tplaceholder: '127.0.0.1',\n\t\tdescription: 'The IP or host name to make the request to',\n\t\tnoDataExpression: true,\n\t},\n\t{\n\t\tdisplayName: 'Port',\n\t\tname: 'port',\n\t\ttype: 'number',\n\t\tdefault: '514',\n\t\tplaceholder: '514',\n\t\tdescription: 'The port number to make the request to',\n\t\tnoDataExpression: true,\n\t},\n\t{\n\t\tdisplayName: 'Protocol',\n\t\tname: 'protocol',\n\t\ttype: 'options',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tname: 'TCP',\n\t\t\t\tvalue: 'tcp',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'UDP',\n\t\t\t\tvalue: 'udp',\n\t\t\t},\n\t\t],\n\t\tdefault: 'udp',\n\t\tdescription: 'The protocol to use for the connection',\n\t},\n\t{\n\t\tdisplayName: 'Facility',\n\t\tname: 'facility',\n\t\ttype: 'options',\n\t\toptions: [\n\t\t\t{ name: 'Kernel', value: 0 },\n\t\t\t{ name: 'User', value: 1 },\n\t\t\t{ name: 'System', value: 3 },\n\t\t\t{ name: 'Audit', value: 13 },\n\t\t\t{ name: 'Alert', value: 14 },\n\t\t\t{ name: 'Local0', value: 16 },\n\t\t\t{ name: 'Local1', value: 17 },\n\t\t\t{ name: 'Local2', value: 18 },\n\t\t\t{ name: 'Local3', value: 19 },\n\t\t\t{ name: 'Local4', value: 20 },\n\t\t\t{ name: 'Local5', value: 21 },\n\t\t\t{ name: 'Local6', value: 22 },\n\t\t\t{ name: 'Local7', value: 23 },\n\t\t],\n\t\tdefault: '16',\n\t\tdescription: 'Syslog facility parameter',\n\t},\n\t{\n\t\tdisplayName: 'App Name',\n\t\tname: 'app_name',\n\t\ttype: 'string',\n\t\tdefault: 'n8n',\n\t\tplaceholder: 'n8n',\n\t\tnoDataExpression: true,\n\t\tdescription: 'Syslog app name parameter',\n\t},\n] as INodeProperties[];\n\nexport const sentryModalDescription = [\n\t{\n\t\tdisplayName: 'DSN',\n\t\tname: 'dsn',\n\t\ttype: 'string',\n\t\tdefault: 'https://',\n\t\tnoDataExpression: true,\n\t\tdescription: 'Your Sentry DSN Client Key',\n\t},\n] as INodeProperties[];\n","<template>\n\t<div>\n\t\t<div\n\t\t\tv-for=\"group in logStreamingStore.items[destinationId]?.eventGroups\"\n\t\t\t:key=\"group.name\"\n\t\t\tshadow=\"never\"\n\t\t>\n\t\t\t<!-- <template #header> -->\n\t\t\t<checkbox\n\t\t\t\t:value=\"group.selected\"\n\t\t\t\t:indeterminate=\"!group.selected && group.indeterminate\"\n\t\t\t\t@input=\"onInput\"\n\t\t\t\t@change=\"onCheckboxChecked(group.name, $event)\"\n\t\t\t\t:disabled=\"readonly\"\n\t\t\t>\n\t\t\t\t<strong>{{ groupLabelName(group.name) }}</strong>\n\t\t\t\t<n8n-tooltip\n\t\t\t\t\tv-if=\"groupLabelInfo(group.name)\"\n\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\t:popper-class=\"$style.tooltipPopper\"\n\t\t\t\t\tclass=\"ml-xs\"\n\t\t\t\t>\n\t\t\t\t\t<n8n-icon icon=\"question-circle\" size=\"small\" />\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t{{ groupLabelInfo(group.name) }}\n\t\t\t\t\t</template>\n\t\t\t\t</n8n-tooltip>\n\t\t\t</checkbox>\n\t\t\t<checkbox\n\t\t\t\tv-if=\"group.name === 'n8n.audit'\"\n\t\t\t\t:value=\"logStreamingStore.items[destinationId]?.destination.anonymizeAuditMessages\"\n\t\t\t\t@input=\"onInput\"\n\t\t\t\t@change=\"anonymizeAuditMessagesChanged\"\n\t\t\t\t:disabled=\"readonly\"\n\t\t\t>\n\t\t\t\t{{ $locale.baseText('settings.log-streaming.tab.events.anonymize') }}\n\t\t\t\t<n8n-tooltip placement=\"top\" :popper-class=\"$style.tooltipPopper\">\n\t\t\t\t\t<n8n-icon icon=\"question-circle\" size=\"small\" />\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t{{ $locale.baseText('settings.log-streaming.tab.events.anonymize.info') }}\n\t\t\t\t\t</template>\n\t\t\t\t</n8n-tooltip>\n\t\t\t</checkbox>\n\t\t\t<!-- </template> -->\n\t\t\t<ul :class=\"$style.eventList\">\n\t\t\t\t<li\n\t\t\t\t\tv-for=\"event in group.children\"\n\t\t\t\t\t:key=\"event.name\"\n\t\t\t\t\t:class=\"`${$style.eventListItem} ${group.selected ? $style.eventListItemDisabled : ''}`\"\n\t\t\t\t>\n\t\t\t\t\t<checkbox\n\t\t\t\t\t\t:value=\"event.selected || group.selected\"\n\t\t\t\t\t\t:indeterminate=\"event.indeterminate\"\n\t\t\t\t\t\t:disabled=\"group.selected || readonly\"\n\t\t\t\t\t\t@input=\"onInput\"\n\t\t\t\t\t\t@change=\"onCheckboxChecked(event.name, $event)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ event.label }}\n\t\t\t\t\t\t<n8n-tooltip placement=\"top\" :popper-class=\"$style.tooltipPopper\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t{{ event.name }}\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</checkbox>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { Checkbox } from 'element-ui';\nimport { mapStores } from 'pinia';\nimport type { BaseTextKey } from '@/plugins/i18n';\nimport { useLogStreamingStore } from '@/stores/logStreaming.store';\n\nexport default {\n\tname: 'event-selection',\n\tprops: {\n\t\tdestinationId: {\n\t\t\ttype: String,\n\t\t\tdefault: 'defaultDestinationId',\n\t\t},\n\t\treadonly: Boolean,\n\t},\n\tcomponents: {\n\t\tCheckbox,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tunchanged: true,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useLogStreamingStore),\n\t\tanonymizeAuditMessages() {\n\t\t\treturn this.logStreamingStore.items[this.destinationId]?.destination.anonymizeAuditMessages;\n\t\t},\n\t},\n\tmethods: {\n\t\tonInput() {\n\t\t\tthis.$emit('input');\n\t\t},\n\t\tonCheckboxChecked(eventName: string, checked: boolean) {\n\t\t\tthis.logStreamingStore.setSelectedInGroup(this.destinationId, eventName, checked);\n\t\t\tthis.$forceUpdate();\n\t\t},\n\t\tanonymizeAuditMessagesChanged(value: boolean) {\n\t\t\tthis.logStreamingStore.items[this.destinationId].destination.anonymizeAuditMessages = value;\n\t\t\tthis.$emit('change', { name: 'anonymizeAuditMessages', node: this.destinationId, value });\n\t\t\tthis.$forceUpdate();\n\t\t},\n\t\tgroupLabelName(t: string): string {\n\t\t\treturn this.$locale.baseText(`settings.log-streaming.eventGroup.${t}` as BaseTextKey) ?? t;\n\t\t},\n\t\tgroupLabelInfo(t: string): string | undefined {\n\t\t\tconst labelInfo = `settings.log-streaming.eventGroup.${t}.info`;\n\t\t\tconst infoText = this.$locale.baseText(labelInfo as BaseTextKey);\n\t\t\tif (infoText === labelInfo || infoText === '') return;\n\t\t\treturn infoText;\n\t\t},\n\t},\n};\n</script>\n\n<style lang=\"scss\" module>\n.eventListCard {\n\tmargin-left: 1em;\n}\n\n.eventList {\n\theight: auto;\n\toverflow-y: auto;\n\tpadding: 0;\n\tmargin: 0;\n\tlist-style: none;\n}\n.eventList .eventListItem {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: left;\n\tmargin: 10px;\n\tcolor: var(--el-color-primary);\n}\n\n.eventListItemDisabled > {\n\tlabel > {\n\t\tspan > {\n\t\t\tspan {\n\t\t\t\tbackground-color: transparent !important;\n\t\t\t\t&:after {\n\t\t\t\t\tborder-color: rgb(54, 54, 54) !important;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n.eventList .eventListItem + .listItem {\n\tmargin-top: 10px;\n}\n</style>\n","<template>\n\t<Modal\n\t\t:name=\"modalName\"\n\t\t:eventBus=\"modalBus\"\n\t\t:beforeClose=\"onModalClose\"\n\t\t:scrollable=\"true\"\n\t\t:center=\"true\"\n\t\t:loading=\"loading\"\n\t\t:minWidth=\"isTypeAbstract ? '460px' : '70%'\"\n\t\t:maxWidth=\"isTypeAbstract ? '460px' : '70%'\"\n\t\t:minHeight=\"isTypeAbstract ? '160px' : '650px'\"\n\t\t:maxHeight=\"isTypeAbstract ? '300px' : '650px'\"\n\t\tdata-test-id=\"destination-modal\"\n\t>\n\t\t<template #header>\n\t\t\t<template v-if=\"isTypeAbstract\">\n\t\t\t\t<div :class=\"$style.headerCreate\">\n\t\t\t\t\t<span>Add new destination</span>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template v-else>\n\t\t\t\t<div :class=\"$style.header\">\n\t\t\t\t\t<div :class=\"$style.destinationInfo\">\n\t\t\t\t\t\t<InlineNameEdit\n\t\t\t\t\t\t\t:name=\"headerLabel\"\n\t\t\t\t\t\t\t:subtitle=\"!isTypeAbstract ? $locale.baseText(typeLabelName) : 'Select type'\"\n\t\t\t\t\t\t\t:readonly=\"isTypeAbstract\"\n\t\t\t\t\t\t\ttype=\"Credential\"\n\t\t\t\t\t\t\tdata-test-id=\"subtitle-showing-type\"\n\t\t\t\t\t\t\t@input=\"onLabelChange\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div :class=\"$style.destinationActions\">\n\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\tv-if=\"nodeParameters && hasOnceBeenSaved && unchanged\"\n\t\t\t\t\t\t\t:icon=\"testMessageSent ? (testMessageResult ? 'check' : 'exclamation-triangle') : ''\"\n\t\t\t\t\t\t\t:title=\"\n\t\t\t\t\t\t\t\ttestMessageSent && testMessageResult\n\t\t\t\t\t\t\t\t\t? 'Event sent and returned OK'\n\t\t\t\t\t\t\t\t\t: 'Event returned with error'\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t\tlabel=\"Send Test-Event\"\n\t\t\t\t\t\t\t:disabled=\"!hasOnceBeenSaved || !unchanged\"\n\t\t\t\t\t\t\t@click=\"sendTestEvent\"\n\t\t\t\t\t\t\tdata-test-id=\"destination-test-button\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<template v-if=\"isInstanceOwner\">\n\t\t\t\t\t\t\t<n8n-icon-button\n\t\t\t\t\t\t\t\tv-if=\"nodeParameters && hasOnceBeenSaved\"\n\t\t\t\t\t\t\t\t:title=\"$locale.baseText('settings.log-streaming.delete')\"\n\t\t\t\t\t\t\t\ticon=\"trash\"\n\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t\t\t:disabled=\"isSaving\"\n\t\t\t\t\t\t\t\t:loading=\"isDeleting\"\n\t\t\t\t\t\t\t\t@click=\"removeThis\"\n\t\t\t\t\t\t\t\tdata-test-id=\"destination-delete-button\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<SaveButton\n\t\t\t\t\t\t\t\t:saved=\"unchanged && hasOnceBeenSaved\"\n\t\t\t\t\t\t\t\t:disabled=\"isTypeAbstract || unchanged\"\n\t\t\t\t\t\t\t\t:savingLabel=\"$locale.baseText('settings.log-streaming.saving')\"\n\t\t\t\t\t\t\t\t@click=\"saveDestination\"\n\t\t\t\t\t\t\t\tdata-test-id=\"destination-save-button\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t</template>\n\t\t</template>\n\t\t<template #content>\n\t\t\t<div :class=\"$style.container\">\n\t\t\t\t<template v-if=\"isTypeAbstract\">\n\t\t\t\t\t<n8n-input-label\n\t\t\t\t\t\t:class=\"$style.typeSelector\"\n\t\t\t\t\t\t:label=\"$locale.baseText('settings.log-streaming.selecttype')\"\n\t\t\t\t\t\t:tooltipText=\"$locale.baseText('settings.log-streaming.selecttypehint')\"\n\t\t\t\t\t\t:bold=\"false\"\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t:underline=\"false\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<n8n-select\n\t\t\t\t\t\t\t:value=\"typeSelectValue\"\n\t\t\t\t\t\t\t:placeholder=\"typeSelectPlaceholder\"\n\t\t\t\t\t\t\t@change=\"onTypeSelectInput\"\n\t\t\t\t\t\t\tdata-test-id=\"select-destination-type\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tref=\"typeSelectRef\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<n8n-option\n\t\t\t\t\t\t\t\tv-for=\"option in typeSelectOptions || []\"\n\t\t\t\t\t\t\t\t:key=\"option.value\"\n\t\t\t\t\t\t\t\t:value=\"option.value\"\n\t\t\t\t\t\t\t\t:label=\"$locale.baseText(option.label)\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</n8n-select>\n\t\t\t\t\t\t<div class=\"mt-m text-right\">\n\t\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t@click=\"onContinueAddClicked\"\n\t\t\t\t\t\t\t\tdata-test-id=\"select-destination-button\"\n\t\t\t\t\t\t\t\t:disabled=\"!typeSelectValue\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{{ $locale.baseText(`settings.log-streaming.continue`) }}\n\t\t\t\t\t\t\t</n8n-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</n8n-input-label>\n\t\t\t\t</template>\n\t\t\t\t<template v-else>\n\t\t\t\t\t<div :class=\"$style.sidebar\">\n\t\t\t\t\t\t<n8n-menu mode=\"tabs\" :items=\"sidebarItems\" @select=\"onTabSelect\"></n8n-menu>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-if=\"activeTab === 'settings'\" :class=\"$style.mainContent\" ref=\"content\">\n\t\t\t\t\t\t<template v-if=\"isTypeWebhook\">\n\t\t\t\t\t\t\t<parameter-input-list\n\t\t\t\t\t\t\t\t:parameters=\"webhookDescription\"\n\t\t\t\t\t\t\t\t:hideDelete=\"true\"\n\t\t\t\t\t\t\t\t:nodeValues=\"nodeParameters\"\n\t\t\t\t\t\t\t\t:isReadOnly=\"!isInstanceOwner\"\n\t\t\t\t\t\t\t\tpath=\"\"\n\t\t\t\t\t\t\t\t@valueChanged=\"valueChanged\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template v-else-if=\"isTypeSyslog\">\n\t\t\t\t\t\t\t<parameter-input-list\n\t\t\t\t\t\t\t\t:parameters=\"syslogDescription\"\n\t\t\t\t\t\t\t\t:hideDelete=\"true\"\n\t\t\t\t\t\t\t\t:nodeValues=\"nodeParameters\"\n\t\t\t\t\t\t\t\t:isReadOnly=\"!isInstanceOwner\"\n\t\t\t\t\t\t\t\tpath=\"\"\n\t\t\t\t\t\t\t\t@valueChanged=\"valueChanged\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template v-else-if=\"isTypeSentry\">\n\t\t\t\t\t\t\t<parameter-input-list\n\t\t\t\t\t\t\t\t:parameters=\"sentryDescription\"\n\t\t\t\t\t\t\t\t:hideDelete=\"true\"\n\t\t\t\t\t\t\t\t:nodeValues=\"nodeParameters\"\n\t\t\t\t\t\t\t\t:isReadOnly=\"!isInstanceOwner\"\n\t\t\t\t\t\t\t\tpath=\"\"\n\t\t\t\t\t\t\t\t@valueChanged=\"valueChanged\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-if=\"activeTab === 'events'\" :class=\"$style.mainContent\">\n\t\t\t\t\t\t<template>\n\t\t\t\t\t\t\t<div class=\"\">\n\t\t\t\t\t\t\t\t<n8n-input-label\n\t\t\t\t\t\t\t\t\tclass=\"mb-m mt-m\"\n\t\t\t\t\t\t\t\t\t:label=\"$locale.baseText('settings.log-streaming.tab.events.title')\"\n\t\t\t\t\t\t\t\t\t:bold=\"true\"\n\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t:underline=\"false\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<event-selection\n\t\t\t\t\t\t\t\t\tclass=\"\"\n\t\t\t\t\t\t\t\t\t:destinationId=\"destination.id\"\n\t\t\t\t\t\t\t\t\t@input=\"onInput\"\n\t\t\t\t\t\t\t\t\t@change=\"valueChanged\"\n\t\t\t\t\t\t\t\t\t:readonly=\"!isInstanceOwner\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script lang=\"ts\">\nimport { get, set, unset } from 'lodash-es';\nimport { mapStores } from 'pinia';\nimport mixins from 'vue-typed-mixins';\nimport { useLogStreamingStore } from '@/stores/logStreaming.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport ParameterInputList from '@/components/ParameterInputList.vue';\nimport NodeCredentials from '@/components/NodeCredentials.vue';\nimport type { IMenuItem, INodeUi, ITab, IUpdateInformation } from '@/Interface';\nimport type {\n\tIDataObject,\n\tINodeCredentials,\n\tNodeParameterValue,\n\tMessageEventBusDestinationOptions,\n} from 'n8n-workflow';\nimport {\n\tdeepCopy,\n\tdefaultMessageEventBusDestinationOptions,\n\tdefaultMessageEventBusDestinationWebhookOptions,\n\tMessageEventBusDestinationTypeNames,\n\tdefaultMessageEventBusDestinationSyslogOptions,\n\tdefaultMessageEventBusDestinationSentryOptions,\n} from 'n8n-workflow';\nimport type { PropType } from 'vue';\nimport Vue from 'vue';\nimport { LOG_STREAM_MODAL_KEY } from '@/constants';\nimport Modal from '@/components/Modal.vue';\nimport { showMessage } from '@/mixins/showMessage';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { destinationToFakeINodeUi } from './Helpers.ee';\nimport {\n\twebhookModalDescription,\n\tsentryModalDescription,\n\tsyslogModalDescription,\n} from './descriptions.ee';\nimport type { BaseTextKey } from '@/plugins/i18n';\nimport InlineNameEdit from '../InlineNameEdit.vue';\nimport SaveButton from '../SaveButton.vue';\nimport EventSelection from '@/components/SettingsLogStreaming/EventSelection.ee.vue';\nimport { Checkbox } from 'element-ui';\nimport type { EventBus } from '@/event-bus';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins(showMessage).extend({\n\tname: 'event-destination-settings-modal',\n\tprops: {\n\t\tmodalName: String,\n\t\tdestination: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => deepCopy(defaultMessageEventBusDestinationOptions),\n\t\t},\n\t\tisNew: Boolean,\n\t\teventBus: {\n\t\t\ttype: Object as PropType<EventBus>,\n\t\t},\n\t},\n\tcomponents: {\n\t\tModal,\n\t\tParameterInputList,\n\t\tNodeCredentials,\n\t\tInlineNameEdit,\n\t\tSaveButton,\n\t\tEventSelection,\n\t\tCheckbox,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tunchanged: !this.isNew,\n\t\t\tactiveTab: 'settings',\n\t\t\thasOnceBeenSaved: !this.isNew,\n\t\t\tisSaving: false,\n\t\t\tisDeleting: false,\n\t\t\tloading: false,\n\t\t\tshowRemoveConfirm: false,\n\t\t\ttypeSelectValue: '',\n\t\t\ttypeSelectPlaceholder: 'Destination Type',\n\t\t\tnodeParameters: deepCopy(defaultMessageEventBusDestinationOptions),\n\t\t\twebhookDescription: webhookModalDescription,\n\t\t\tsentryDescription: sentryModalDescription,\n\t\t\tsyslogDescription: syslogModalDescription,\n\t\t\tmodalBus: createEventBus(),\n\t\t\theaderLabel: this.destination.label,\n\t\t\ttestMessageSent: false,\n\t\t\ttestMessageResult: false,\n\t\t\tisInstanceOwner: false,\n\t\t\tLOG_STREAM_MODAL_KEY,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore, useUsersStore, useLogStreamingStore, useNDVStore, useWorkflowsStore),\n\t\ttypeSelectOptions(): Array<{ value: string; label: BaseTextKey }> {\n\t\t\tconst options: Array<{ value: string; label: BaseTextKey }> = [];\n\t\t\tfor (const t of Object.values(MessageEventBusDestinationTypeNames)) {\n\t\t\t\tif (t === MessageEventBusDestinationTypeNames.abstract) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\toptions.push({\n\t\t\t\t\tvalue: t,\n\t\t\t\t\tlabel: `settings.log-streaming.${t}` as BaseTextKey,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn options;\n\t\t},\n\t\tisTypeAbstract(): boolean {\n\t\t\treturn this.nodeParameters.__type === MessageEventBusDestinationTypeNames.abstract;\n\t\t},\n\t\tisTypeWebhook(): boolean {\n\t\t\treturn this.nodeParameters.__type === MessageEventBusDestinationTypeNames.webhook;\n\t\t},\n\t\tisTypeSyslog(): boolean {\n\t\t\treturn this.nodeParameters.__type === MessageEventBusDestinationTypeNames.syslog;\n\t\t},\n\t\tisTypeSentry(): boolean {\n\t\t\treturn this.nodeParameters.__type === MessageEventBusDestinationTypeNames.sentry;\n\t\t},\n\t\tnode(): INodeUi {\n\t\t\treturn destinationToFakeINodeUi(this.nodeParameters);\n\t\t},\n\t\ttypeLabelName(): BaseTextKey {\n\t\t\treturn `settings.log-streaming.${this.nodeParameters.__type}` as BaseTextKey;\n\t\t},\n\t\tsidebarItems(): IMenuItem[] {\n\t\t\tconst items: IMenuItem[] = [\n\t\t\t\t{\n\t\t\t\t\tid: 'settings',\n\t\t\t\t\tlabel: this.$locale.baseText('settings.log-streaming.tab.settings'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t},\n\t\t\t];\n\t\t\tif (!this.isTypeAbstract) {\n\t\t\t\titems.push({\n\t\t\t\t\tid: 'events',\n\t\t\t\t\tlabel: this.$locale.baseText('settings.log-streaming.tab.events'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\t\ttabItems(): ITab[] {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('settings.log-streaming.tab.settings'),\n\t\t\t\t\tvalue: 'settings',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('settings.log-streaming.tab.events'),\n\t\t\t\t\tvalue: 'events',\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t},\n\tmounted() {\n\t\tthis.isInstanceOwner = this.usersStore.currentUser?.globalRole?.name === 'owner';\n\t\tthis.setupNode(\n\t\t\tObject.assign(deepCopy(defaultMessageEventBusDestinationOptions), this.destination),\n\t\t);\n\t\tthis.workflowsStore.$onAction(\n\t\t\t({\n\t\t\t\tname, // name of the action\n\t\t\t\targs, // array of parameters passed to the action\n\t\t\t}) => {\n\t\t\t\tif (name === 'updateNodeProperties') {\n\t\t\t\t\tfor (const arg of args) {\n\t\t\t\t\t\tif (arg.name === this.destination.id) {\n\t\t\t\t\t\t\tif ('credentials' in arg.properties) {\n\t\t\t\t\t\t\t\tthis.unchanged = false;\n\t\t\t\t\t\t\t\tthis.nodeParameters.credentials = arg.properties.credentials as INodeCredentials;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t},\n\tmethods: {\n\t\tonInput() {\n\t\t\tthis.unchanged = false;\n\t\t\tthis.testMessageSent = false;\n\t\t},\n\t\tonTabSelect(tab: string) {\n\t\t\tthis.activeTab = tab;\n\t\t},\n\t\tonLabelChange(value: string) {\n\t\t\tthis.onInput();\n\t\t\tthis.headerLabel = value;\n\t\t\tthis.nodeParameters.label = value;\n\t\t},\n\t\tsetupNode(options: MessageEventBusDestinationOptions) {\n\t\t\tthis.workflowsStore.removeNode(this.node);\n\t\t\tthis.ndvStore.activeNodeName = options.id ?? 'thisshouldnothappen';\n\t\t\tthis.workflowsStore.addNode(destinationToFakeINodeUi(options));\n\t\t\tthis.nodeParameters = options;\n\t\t\tthis.logStreamingStore.items[this.destination.id].destination = options;\n\t\t},\n\t\tonTypeSelectInput(destinationType: MessageEventBusDestinationTypeNames) {\n\t\t\tthis.typeSelectValue = destinationType;\n\t\t},\n\t\tonContinueAddClicked() {\n\t\t\tlet newDestination;\n\t\t\tswitch (this.typeSelectValue) {\n\t\t\t\tcase MessageEventBusDestinationTypeNames.syslog:\n\t\t\t\t\tnewDestination = Object.assign(deepCopy(defaultMessageEventBusDestinationSyslogOptions), {\n\t\t\t\t\t\tid: this.destination.id,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase MessageEventBusDestinationTypeNames.sentry:\n\t\t\t\t\tnewDestination = Object.assign(deepCopy(defaultMessageEventBusDestinationSentryOptions), {\n\t\t\t\t\t\tid: this.destination.id,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase MessageEventBusDestinationTypeNames.webhook:\n\t\t\t\t\tnewDestination = Object.assign(\n\t\t\t\t\t\tdeepCopy(defaultMessageEventBusDestinationWebhookOptions),\n\t\t\t\t\t\t{ id: this.destination.id },\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (newDestination) {\n\t\t\t\tthis.headerLabel = newDestination?.label ?? this.headerLabel;\n\t\t\t\tthis.setupNode(newDestination);\n\t\t\t}\n\t\t},\n\t\tvalueChanged(parameterData: IUpdateInformation) {\n\t\t\tthis.unchanged = false;\n\t\t\tthis.testMessageSent = false;\n\t\t\tconst newValue: NodeParameterValue = parameterData.value as string | number;\n\t\t\tconst parameterPath = parameterData.name.startsWith('parameters.')\n\t\t\t\t? parameterData.name.split('.').slice(1).join('.')\n\t\t\t\t: parameterData.name;\n\n\t\t\tconst nodeParameters = deepCopy(this.nodeParameters);\n\n\t\t\t// Check if the path is supposed to change an array and if so get\n\t\t\t// the needed data like path and index\n\t\t\tconst parameterPathArray = parameterPath.match(/(.*)\\[(\\d+)\\]$/);\n\n\t\t\t// Apply the new value\n\t\t\tif (parameterData.value === undefined && parameterPathArray !== null) {\n\t\t\t\t// Delete array item\n\t\t\t\tconst path = parameterPathArray[1];\n\t\t\t\tconst index = parameterPathArray[2];\n\t\t\t\tconst data = get(nodeParameters, path);\n\n\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\tdata.splice(parseInt(index, 10), 1);\n\t\t\t\t\tVue.set(nodeParameters, path, data);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (newValue === undefined) {\n\t\t\t\t\tunset(nodeParameters, parameterPath);\n\t\t\t\t} else {\n\t\t\t\t\tset(nodeParameters, parameterPath, newValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.nodeParameters = deepCopy(nodeParameters);\n\t\t\tthis.workflowsStore.updateNodeProperties({\n\t\t\t\tname: this.node.name,\n\t\t\t\tproperties: { parameters: this.nodeParameters as unknown as IDataObject, position: [0, 0] },\n\t\t\t});\n\t\t\tif (this.hasOnceBeenSaved) {\n\t\t\t\tthis.logStreamingStore.updateDestination(this.nodeParameters);\n\t\t\t}\n\t\t},\n\t\tasync sendTestEvent() {\n\t\t\tthis.testMessageResult = await this.logStreamingStore.sendTestMessage(this.nodeParameters);\n\t\t\tthis.testMessageSent = true;\n\t\t},\n\t\tasync removeThis() {\n\t\t\tconst deleteConfirmed = await this.confirmMessage(\n\t\t\t\tthis.$locale.baseText('settings.log-streaming.destinationDelete.message', {\n\t\t\t\t\tinterpolate: { destinationName: this.destination.label },\n\t\t\t\t}),\n\t\t\t\tthis.$locale.baseText('settings.log-streaming.destinationDelete.headline'),\n\t\t\t\t'warning',\n\t\t\t\tthis.$locale.baseText('settings.log-streaming.destinationDelete.confirmButtonText'),\n\t\t\t\tthis.$locale.baseText('settings.log-streaming.destinationDelete.cancelButtonText'),\n\t\t\t);\n\n\t\t\tif (deleteConfirmed === false) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.eventBus.emit('remove', this.destination.id);\n\t\t\t\tthis.uiStore.closeModal(LOG_STREAM_MODAL_KEY);\n\t\t\t\tthis.uiStore.stateIsDirty = false;\n\t\t\t}\n\t\t},\n\t\tonModalClose() {\n\t\t\tif (!this.hasOnceBeenSaved) {\n\t\t\t\tthis.workflowsStore.removeNode(this.node);\n\t\t\t\tthis.logStreamingStore.removeDestination(this.nodeParameters.id!);\n\t\t\t}\n\t\t\tthis.ndvStore.activeNodeName = null;\n\t\t\tthis.eventBus.emit('closing', this.destination.id);\n\t\t\tthis.uiStore.stateIsDirty = false;\n\t\t},\n\t\tasync saveDestination() {\n\t\t\tif (this.unchanged || !this.destination.id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst saveResult = await this.logStreamingStore.saveDestination(this.nodeParameters);\n\t\t\tif (saveResult === true) {\n\t\t\t\tthis.hasOnceBeenSaved = true;\n\t\t\t\tthis.testMessageSent = false;\n\t\t\t\tthis.unchanged = true;\n\t\t\t\tthis.eventBus.emit('destinationWasSaved', this.destination.id);\n\t\t\t\tthis.uiStore.stateIsDirty = false;\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.labelMargins {\n\tmargin-bottom: 1em;\n\tmargin-top: 1em;\n}\n.typeSelector {\n\twidth: 100%;\n\tmargin-bottom: 1em;\n\tmargin-top: 1em;\n}\n\n.sidebarSwitches {\n\tmargin-left: 1.5em;\n\tmargin-bottom: 0.5em;\n\tspan {\n\t\tcolor: var(--color-text-dark) !important;\n\t}\n}\n\n.tabbar {\n\tmargin-bottom: 1em;\n}\n\n.mainContent {\n\tflex: 1;\n\toverflow: auto;\n\tpadding-left: 1em;\n\tpadding-right: 1em;\n\tpadding-bottom: 2em;\n}\n\n.sidebar {\n\tpadding-top: 1em;\n\tmax-width: 170px;\n\tmin-width: 170px;\n\tmargin-right: var(--spacing-l);\n\tflex-grow: 1;\n\n\tul {\n\t\tpadding: 0 !important;\n\t}\n}\n\n.cardTitle {\n\tfont-size: 14px;\n\tfont-weight: bold;\n}\n\n.header {\n\tdisplay: flex;\n\tmin-height: 61px;\n}\n\n.headerCreate {\n\tdisplay: flex;\n\tfont-size: 20px;\n}\n\n.container {\n\tdisplay: flex;\n\theight: 100%;\n}\n\n.destinationInfo {\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: row;\n\tflex-grow: 1;\n\tmargin-bottom: var(--spacing-l);\n}\n\n.destinationActions {\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tmargin-right: var(--spacing-xl);\n\tmargin-bottom: var(--spacing-l);\n\n\t> * {\n\t\tmargin-left: var(--spacing-2xs);\n\t}\n}\n</style>\n","<template>\n\t<div>\n\t\t<ModalRoot :name=\"CONTACT_PROMPT_MODAL_KEY\">\n\t\t\t<template #default=\"{ modalName }\">\n\t\t\t\t<ContactPromptModal :modalName=\"modalName\" />\n\t\t\t</template>\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"CREDENTIAL_EDIT_MODAL_KEY\">\n\t\t\t<template #default=\"{ modalName, activeId, mode }\">\n\t\t\t\t<CredentialEdit :modalName=\"modalName\" :mode=\"mode\" :activeId=\"activeId\" />\n\t\t\t</template>\n\t\t</ModalRoot>\n\t\t<ModalRoot :name=\"ABOUT_MODAL_KEY\">\n\t\t\t<AboutModal />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"ASK_AI_MODAL_KEY\">\n\t\t\t<AskAiModal />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"CREDENTIAL_SELECT_MODAL_KEY\">\n\t\t\t<CredentialsSelectModal />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"DUPLICATE_MODAL_KEY\">\n\t\t\t<template #default=\"{ modalName, active, data }\">\n\t\t\t\t<DuplicateWorkflowDialog :data=\"data\" :isActive=\"active\" :modalName=\"modalName\" />\n\t\t\t</template>\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"PERSONALIZATION_MODAL_KEY\">\n\t\t\t<PersonalizationModal />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"TAGS_MANAGER_MODAL_KEY\">\n\t\t\t<TagsManager />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"VERSIONS_MODAL_KEY\" :keepAlive=\"true\">\n\t\t\t<UpdatesPanel />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"VALUE_SURVEY_MODAL_KEY\" :keepAlive=\"true\">\n\t\t\t<template #default=\"{ active }\">\n\t\t\t\t<ValueSurvey :isActive=\"active\" />\n\t\t\t</template>\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"WORKFLOW_SETTINGS_MODAL_KEY\">\n\t\t\t<WorkflowSettings />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"CHANGE_PASSWORD_MODAL_KEY\">\n\t\t\t<ChangePasswordModal />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"INVITE_USER_MODAL_KEY\">\n\t\t\t<InviteUsersModal />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"DELETE_USER_MODAL_KEY\">\n\t\t\t<template #default=\"{ modalName, activeId }\">\n\t\t\t\t<DeleteUserModal :modalName=\"modalName\" :activeId=\"activeId\" />\n\t\t\t</template>\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"EXECUTIONS_MODAL_KEY\">\n\t\t\t<ExecutionsModal />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"WORKFLOW_ACTIVE_MODAL_KEY\">\n\t\t\t<ActivationModal />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"WORKFLOW_SHARE_MODAL_KEY\">\n\t\t\t<template #default=\"{ modalName, active, data }\">\n\t\t\t\t<WorkflowShareModal :data=\"data\" :isActive=\"active\" :modalName=\"modalName\" />\n\t\t\t</template>\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"ONBOARDING_CALL_SIGNUP_MODAL_KEY\">\n\t\t\t<OnboardingCallSignupModal />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"COMMUNITY_PACKAGE_INSTALL_MODAL_KEY\">\n\t\t\t<CommunityPackageInstallModal />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"IMPORT_CURL_MODAL_KEY\">\n\t\t\t<ImportCurlModal />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"USER_ACTIVATION_SURVEY_MODAL\">\n\t\t\t<WorkflowSuccessModal />\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"COMMUNITY_PACKAGE_CONFIRM_MODAL_KEY\">\n\t\t\t<template #default=\"{ modalName, activeId, mode }\">\n\t\t\t\t<CommunityPackageManageConfirmModal\n\t\t\t\t\t:modalName=\"modalName\"\n\t\t\t\t\t:activePackageName=\"activeId\"\n\t\t\t\t\t:mode=\"mode\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</ModalRoot>\n\n\t\t<ModalRoot :name=\"LOG_STREAM_MODAL_KEY\">\n\t\t\t<template #default=\"{ modalName, data }\">\n\t\t\t\t<EventDestinationSettingsModal\n\t\t\t\t\t:modalName=\"modalName\"\n\t\t\t\t\t:destination=\"data.destination\"\n\t\t\t\t\t:isNew=\"data.isNew\"\n\t\t\t\t\t:eventBus=\"data.eventBus\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</ModalRoot>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport {\n\tABOUT_MODAL_KEY,\n\tCHANGE_PASSWORD_MODAL_KEY,\n\tCOMMUNITY_PACKAGE_CONFIRM_MODAL_KEY,\n\tCOMMUNITY_PACKAGE_INSTALL_MODAL_KEY,\n\tCONTACT_PROMPT_MODAL_KEY,\n\tCREDENTIAL_EDIT_MODAL_KEY,\n\tCREDENTIAL_SELECT_MODAL_KEY,\n\tDELETE_USER_MODAL_KEY,\n\tDUPLICATE_MODAL_KEY,\n\tEXECUTIONS_MODAL_KEY,\n\tINVITE_USER_MODAL_KEY,\n\tONBOARDING_CALL_SIGNUP_MODAL_KEY,\n\tPERSONALIZATION_MODAL_KEY,\n\tTAGS_MANAGER_MODAL_KEY,\n\tVALUE_SURVEY_MODAL_KEY,\n\tVERSIONS_MODAL_KEY,\n\tWORKFLOW_ACTIVE_MODAL_KEY,\n\tWORKFLOW_SETTINGS_MODAL_KEY,\n\tWORKFLOW_SHARE_MODAL_KEY,\n\tIMPORT_CURL_MODAL_KEY,\n\tLOG_STREAM_MODAL_KEY,\n\tASK_AI_MODAL_KEY,\n\tUSER_ACTIVATION_SURVEY_MODAL,\n} from '@/constants';\n\nimport AboutModal from './AboutModal.vue';\nimport AskAiModal from './AskAiModal.vue';\nimport CommunityPackageManageConfirmModal from './CommunityPackageManageConfirmModal.vue';\nimport CommunityPackageInstallModal from './CommunityPackageInstallModal.vue';\nimport ChangePasswordModal from './ChangePasswordModal.vue';\nimport ContactPromptModal from './ContactPromptModal.vue';\nimport CredentialEdit from './CredentialEdit/CredentialEdit.vue';\nimport InviteUsersModal from './InviteUsersModal.vue';\nimport CredentialsSelectModal from './CredentialsSelectModal.vue';\nimport DuplicateWorkflowDialog from './DuplicateWorkflowDialog.vue';\nimport ModalRoot from './ModalRoot.vue';\nimport OnboardingCallSignupModal from './OnboardingCallSignupModal.vue';\nimport PersonalizationModal from './PersonalizationModal.vue';\nimport TagsManager from './TagsManager/TagsManager.vue';\nimport UpdatesPanel from './UpdatesPanel.vue';\nimport ValueSurvey from './ValueSurvey.vue';\nimport WorkflowSettings from './WorkflowSettings.vue';\nimport DeleteUserModal from './DeleteUserModal.vue';\nimport ExecutionsModal from './ExecutionsModal.vue';\nimport ActivationModal from './ActivationModal.vue';\nimport ImportCurlModal from './ImportCurlModal.vue';\nimport WorkflowShareModal from './WorkflowShareModal.ee.vue';\nimport WorkflowSuccessModal from './UserActivationSurveyModal.vue';\nimport EventDestinationSettingsModal from '@/components/SettingsLogStreaming/EventDestinationSettingsModal.ee.vue';\n\nexport default defineComponent({\n\tname: 'Modals',\n\tcomponents: {\n\t\tAboutModal,\n\t\tAskAiModal,\n\t\tActivationModal,\n\t\tCommunityPackageInstallModal,\n\t\tCommunityPackageManageConfirmModal,\n\t\tContactPromptModal,\n\t\tChangePasswordModal,\n\t\tCredentialEdit,\n\t\tCredentialsSelectModal,\n\t\tDeleteUserModal,\n\t\tDuplicateWorkflowDialog,\n\t\tInviteUsersModal,\n\t\tExecutionsModal,\n\t\tModalRoot,\n\t\tOnboardingCallSignupModal,\n\t\tPersonalizationModal,\n\t\tTagsManager,\n\t\tUpdatesPanel,\n\t\tValueSurvey,\n\t\tWorkflowSettings,\n\t\tWorkflowShareModal,\n\t\tImportCurlModal,\n\t\tEventDestinationSettingsModal,\n\t\tWorkflowSuccessModal,\n\t},\n\tdata: () => ({\n\t\tCOMMUNITY_PACKAGE_CONFIRM_MODAL_KEY,\n\t\tCOMMUNITY_PACKAGE_INSTALL_MODAL_KEY,\n\t\tCONTACT_PROMPT_MODAL_KEY,\n\t\tCREDENTIAL_EDIT_MODAL_KEY,\n\t\tCREDENTIAL_SELECT_MODAL_KEY,\n\t\tABOUT_MODAL_KEY,\n\t\tASK_AI_MODAL_KEY,\n\t\tCHANGE_PASSWORD_MODAL_KEY,\n\t\tDELETE_USER_MODAL_KEY,\n\t\tDUPLICATE_MODAL_KEY,\n\t\tONBOARDING_CALL_SIGNUP_MODAL_KEY,\n\t\tPERSONALIZATION_MODAL_KEY,\n\t\tINVITE_USER_MODAL_KEY,\n\t\tTAGS_MANAGER_MODAL_KEY,\n\t\tVERSIONS_MODAL_KEY,\n\t\tWORKFLOW_SETTINGS_MODAL_KEY,\n\t\tWORKFLOW_SHARE_MODAL_KEY,\n\t\tVALUE_SURVEY_MODAL_KEY,\n\t\tEXECUTIONS_MODAL_KEY,\n\t\tWORKFLOW_ACTIVE_MODAL_KEY,\n\t\tIMPORT_CURL_MODAL_KEY,\n\t\tLOG_STREAM_MODAL_KEY,\n\t\tUSER_ACTIVATION_SURVEY_MODAL,\n\t}),\n});\n</script>\n","<template>\n\t<fragment></fragment>\n</template>\n\n<script lang=\"ts\">\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport type { ITelemetrySettings } from 'n8n-workflow';\nimport { mapStores } from 'pinia';\nimport mixins from 'vue-typed-mixins';\nimport { externalHooks } from '@/mixins/externalHooks';\n\nexport default mixins(externalHooks).extend({\n\tname: 'Telemetry',\n\tdata() {\n\t\treturn {\n\t\t\tisTelemetryInitialized: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useRootStore, useSettingsStore, useUsersStore),\n\t\tcurrentUserId(): string {\n\t\t\treturn this.usersStore.currentUserId || '';\n\t\t},\n\t\tisTelemetryEnabledOnRoute(): boolean {\n\t\t\treturn this.$route.meta && this.$route.meta.telemetry\n\t\t\t\t? !this.$route.meta.telemetry.disabled\n\t\t\t\t: true;\n\t\t},\n\t\ttelemetry(): ITelemetrySettings {\n\t\t\treturn this.settingsStore.telemetry;\n\t\t},\n\t\tisTelemetryEnabled(): boolean {\n\t\t\treturn !!this.telemetry?.enabled;\n\t\t},\n\t},\n\tmounted() {\n\t\tthis.init();\n\t},\n\tmethods: {\n\t\tinit() {\n\t\t\tif (\n\t\t\t\tthis.isTelemetryInitialized ||\n\t\t\t\t!this.isTelemetryEnabledOnRoute ||\n\t\t\t\t!this.isTelemetryEnabled\n\t\t\t)\n\t\t\t\treturn;\n\n\t\t\tthis.$telemetry.init(this.telemetry, {\n\t\t\t\tinstanceId: this.rootStore.instanceId,\n\t\t\t\tuserId: this.currentUserId,\n\t\t\t\tversionCli: this.rootStore.versionCli,\n\t\t\t});\n\n\t\t\tthis.isTelemetryInitialized = true;\n\t\t},\n\t},\n\twatch: {\n\t\ttelemetry() {\n\t\t\tthis.init();\n\t\t},\n\t\tcurrentUserId(userId) {\n\t\t\tif (this.isTelemetryEnabled) {\n\t\t\t\tthis.$telemetry.identify(this.rootStore.instanceId, userId);\n\t\t\t}\n\t\t},\n\t\tisTelemetryEnabledOnRoute(enabled) {\n\t\t\tif (enabled) {\n\t\t\t\tthis.init();\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n","import type { IPermissions } from '@/Interface';\nimport { isAuthorized } from '@/utils';\nimport { useUsersStore } from '@/stores/users.store';\nimport { defineComponent } from 'vue';\nimport type { Route } from 'vue-router';\n\nexport const userHelpers = defineComponent({\n\tmethods: {\n\t\tcanUserAccessRouteByName(name: string): boolean {\n\t\t\tconst { route } = this.$router.resolve({ name });\n\n\t\t\treturn this.canUserAccessRoute(route);\n\t\t},\n\n\t\tcanUserAccessCurrentRoute(): boolean {\n\t\t\treturn this.canUserAccessRoute(this.$route);\n\t\t},\n\n\t\tcanUserAccessRoute(route: Route): boolean {\n\t\t\tconst permissions: IPermissions = route.meta && route.meta.permissions;\n\t\t\tconst usersStore = useUsersStore();\n\t\t\tconst currentUser = usersStore.currentUser;\n\n\t\t\treturn permissions && isAuthorized(permissions, currentUser);\n\t\t},\n\t},\n});\n","import { ref } from 'vue';\nimport { debounce } from 'lodash-es';\n\ntype DebouncedFunction = (...args: unknown[]) => Promise<void> | void;\n\nexport function useDebounceHelper() {\n\t// Create a ref for the WeakMap to store debounced functions.\n\tconst debouncedFunctions = ref(new WeakMap<DebouncedFunction, DebouncedFunction>());\n\n\tconst callDebounced = async (\n\t\tfunc: DebouncedFunction,\n\t\toptions: { debounceTime: number; trailing?: boolean },\n\t\t...inputParameters: unknown[]\n\t): Promise<void> => {\n\t\tconst { trailing, debounceTime } = options;\n\n\t\t// Check if a debounced version of the function is already stored in the WeakMap.\n\t\tlet debouncedFunc = debouncedFunctions.value.get(func);\n\n\t\t// If a debounced version is not found, create one and store it in the WeakMap.\n\t\tif (debouncedFunc === undefined) {\n\t\t\tdebouncedFunc = debounce(\n\t\t\t\tasync (...args: unknown[]) => {\n\t\t\t\t\tawait func(...args);\n\t\t\t\t},\n\t\t\t\tdebounceTime,\n\t\t\t\ttrailing ? { trailing } : { leading: true },\n\t\t\t);\n\t\t\tdebouncedFunctions.value.set(func, debouncedFunc);\n\t\t}\n\n\t\tawait debouncedFunc(...inputParameters);\n\t};\n\n\treturn {\n\t\tcallDebounced,\n\t};\n}\n","import { ref } from 'vue';\n\ninterface DeviceSupportHelpers {\n\tisTouchDevice: boolean;\n\tisMacOs: boolean;\n\tcontrolKeyCode: string;\n\tisCtrlKeyPressed: (e: MouseEvent | KeyboardEvent) => boolean;\n}\n\nexport default function useDeviceSupportHelpers(): DeviceSupportHelpers {\n\tconst isTouchDevice = ref('ontouchstart' in window || navigator.maxTouchPoints > 0);\n\tconst userAgent = ref(navigator.userAgent.toLowerCase());\n\tconst isMacOs = ref(\n\t\tuserAgent.value.includes('macintosh') ||\n\t\t\tuserAgent.value.includes('ipad') ||\n\t\t\tuserAgent.value.includes('iphone') ||\n\t\t\tuserAgent.value.includes('ipod'),\n\t);\n\tconst controlKeyCode = ref(isMacOs.value ? 'Meta' : 'Control');\n\n\tfunction isCtrlKeyPressed(e: MouseEvent | KeyboardEvent): boolean {\n\t\tif (isTouchDevice.value === true && e instanceof MouseEvent) {\n\t\t\treturn true;\n\t\t}\n\t\tif (isMacOs.value) {\n\t\t\treturn (e as KeyboardEvent).metaKey;\n\t\t}\n\t\treturn (e as KeyboardEvent).ctrlKey;\n\t}\n\n\treturn {\n\t\tisTouchDevice: isTouchDevice.value,\n\t\tisMacOs: isMacOs.value,\n\t\tcontrolKeyCode: controlKeyCode.value,\n\t\tisCtrlKeyPressed,\n\t};\n}\n","import { MAIN_HEADER_TABS } from '@/constants';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport type { Undoable } from '@/models/history';\nimport { BulkCommand } from '@/models/history';\nimport { useHistoryStore } from '@/stores/history.store';\nimport { useUIStore } from '@/stores/ui.store';\n\nimport { ref, onMounted, onUnmounted, nextTick, getCurrentInstance } from 'vue';\nimport { Command } from '@/models/history';\nimport { useDebounceHelper } from './useDebounce';\nimport useDeviceSupportHelpers from './useDeviceSupport';\nimport { getNodeViewTab } from '@/utils';\nimport type { Route } from 'vue-router';\n\nconst UNDO_REDO_DEBOUNCE_INTERVAL = 100;\n\nexport function useHistoryHelper(activeRoute: Route) {\n\tconst instance = getCurrentInstance();\n\tconst telemetry = instance?.proxy.$telemetry;\n\n\tconst ndvStore = useNDVStore();\n\tconst historyStore = useHistoryStore();\n\tconst uiStore = useUIStore();\n\n\tconst { callDebounced } = useDebounceHelper();\n\tconst { isCtrlKeyPressed } = useDeviceSupportHelpers();\n\n\tconst isNDVOpen = ref<boolean>(ndvStore.activeNodeName !== null);\n\n\tconst undo = async () =>\n\t\tcallDebounced(\n\t\t\tasync () => {\n\t\t\t\tconst command = historyStore.popUndoableToUndo();\n\t\t\t\tif (!command) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (command instanceof BulkCommand) {\n\t\t\t\t\thistoryStore.bulkInProgress = true;\n\t\t\t\t\tconst commands = command.commands;\n\t\t\t\t\tconst reverseCommands: Command[] = [];\n\t\t\t\t\tfor (let i = commands.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tawait commands[i].revert();\n\t\t\t\t\t\treverseCommands.push(commands[i].getReverseCommand());\n\t\t\t\t\t}\n\t\t\t\t\thistoryStore.pushUndoableToRedo(new BulkCommand(reverseCommands));\n\t\t\t\t\tawait nextTick();\n\t\t\t\t\thistoryStore.bulkInProgress = false;\n\t\t\t\t}\n\t\t\t\tif (command instanceof Command) {\n\t\t\t\t\tawait command.revert();\n\t\t\t\t\thistoryStore.pushUndoableToRedo(command.getReverseCommand());\n\t\t\t\t\tuiStore.stateIsDirty = true;\n\t\t\t\t}\n\t\t\t\ttrackCommand(command, 'undo');\n\t\t\t},\n\t\t\t{ debounceTime: UNDO_REDO_DEBOUNCE_INTERVAL },\n\t\t);\n\n\tconst redo = async () =>\n\t\tcallDebounced(\n\t\t\tasync () => {\n\t\t\t\tconst command = historyStore.popUndoableToRedo();\n\t\t\t\tif (!command) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (command instanceof BulkCommand) {\n\t\t\t\t\thistoryStore.bulkInProgress = true;\n\t\t\t\t\tconst commands = command.commands;\n\t\t\t\t\tconst reverseCommands = [];\n\t\t\t\t\tfor (let i = commands.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tawait commands[i].revert();\n\t\t\t\t\t\treverseCommands.push(commands[i].getReverseCommand());\n\t\t\t\t\t}\n\t\t\t\t\thistoryStore.pushBulkCommandToUndo(new BulkCommand(reverseCommands), false);\n\t\t\t\t\tawait nextTick();\n\t\t\t\t\thistoryStore.bulkInProgress = false;\n\t\t\t\t}\n\t\t\t\tif (command instanceof Command) {\n\t\t\t\t\tawait command.revert();\n\t\t\t\t\thistoryStore.pushCommandToUndo(command.getReverseCommand(), false);\n\t\t\t\t\tuiStore.stateIsDirty = true;\n\t\t\t\t}\n\t\t\t\ttrackCommand(command, 'redo');\n\t\t\t},\n\t\t\t{ debounceTime: UNDO_REDO_DEBOUNCE_INTERVAL },\n\t\t);\n\n\tfunction trackCommand(command: Undoable, type: 'undo' | 'redo'): void {\n\t\tif (command instanceof Command) {\n\t\t\ttelemetry?.track(`User hit ${type}`, { commands_length: 1, commands: [command.name] });\n\t\t} else if (command instanceof BulkCommand) {\n\t\t\ttelemetry?.track(`User hit ${type}`, {\n\t\t\t\tcommands_length: command.commands.length,\n\t\t\t\tcommands: command.commands.map((c) => c.name),\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction trackUndoAttempt(event: KeyboardEvent) {\n\t\tif (isNDVOpen.value && !event.shiftKey) {\n\t\t\tconst activeNode = ndvStore.activeNode;\n\t\t\tif (activeNode) {\n\t\t\t\ttelemetry?.track('User hit undo in NDV', { node_type: activeNode.type });\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleKeyDown(event: KeyboardEvent) {\n\t\tconst currentNodeViewTab = getNodeViewTab(activeRoute);\n\n\t\tif (event.repeat || currentNodeViewTab !== MAIN_HEADER_TABS.WORKFLOW) return;\n\t\tif (isCtrlKeyPressed(event) && event.key.toLowerCase() === 'z') {\n\t\t\tevent.preventDefault();\n\t\t\tif (!isNDVOpen.value) {\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tvoid redo();\n\t\t\t\t} else {\n\t\t\t\t\tvoid undo();\n\t\t\t\t}\n\t\t\t} else if (!event.shiftKey) {\n\t\t\t\ttrackUndoAttempt(event);\n\t\t\t}\n\t\t}\n\t}\n\n\tonMounted(() => {\n\t\tdocument.addEventListener('keydown', handleKeyDown);\n\t});\n\n\tonUnmounted(() => {\n\t\tdocument.removeEventListener('keydown', handleKeyDown);\n\t});\n\n\treturn {\n\t\tundo,\n\t\tredo,\n\t};\n}\n","import mixins from 'vue-typed-mixins';\nimport { showMessage } from './showMessage';\nimport { VERSIONS_MODAL_KEY } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useVersionsStore } from '@/stores/versions.store';\n\nexport const newVersions = mixins(showMessage).extend({\n\tcomputed: {\n\t\t...mapStores(useUIStore, useVersionsStore),\n\t},\n\tmethods: {\n\t\tasync checkForNewVersions() {\n\t\t\tconst enabled = this.versionsStore.areNotificationsEnabled;\n\t\t\tif (!enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.versionsStore.fetchVersions();\n\n\t\t\tconst currentVersion = this.versionsStore.currentVersion;\n\t\t\tconst nextVersions = this.versionsStore.nextVersions;\n\t\t\tif (currentVersion && currentVersion.hasSecurityIssue && nextVersions.length) {\n\t\t\t\tconst fixVersion = currentVersion.securityIssueFixVersion;\n\t\t\t\tlet message = 'Please update to latest version.';\n\t\t\t\tif (fixVersion) {\n\t\t\t\t\tmessage = `Please update to version ${fixVersion} or higher.`;\n\t\t\t\t}\n\n\t\t\t\tmessage = `${message} <a class=\"primary-color\">More info</a>`;\n\t\t\t\tthis.$showToast({\n\t\t\t\t\ttitle: 'Critical update available',\n\t\t\t\t\tmessage,\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tthis.uiStore.openModal(VERSIONS_MODAL_KEY);\n\t\t\t\t\t},\n\t\t\t\t\tcloseOnClick: true,\n\t\t\t\t\tcustomClass: 'clickable',\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t\tduration: 0,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t},\n});\n","/*!\n  * vue-router v3.6.5\n  * (c) 2022 Evan You\n  * @license MIT\n  */\nimport { getCurrentInstance, effectScope, shallowReactive, onUnmounted, computed, unref } from 'vue';\n\n// dev only warn if no current instance\n\nfunction throwNoCurrentInstance (method) {\n  if (!getCurrentInstance()) {\n    throw new Error(\n      (\"[vue-router]: Missing current instance. \" + method + \"() must be called inside <script setup> or setup().\")\n    )\n  }\n}\n\nfunction useRouter () {\n  if (process.env.NODE_ENV !== 'production') {\n    throwNoCurrentInstance('useRouter');\n  }\n\n  return getCurrentInstance().proxy.$root.$router\n}\n\nfunction useRoute () {\n  if (process.env.NODE_ENV !== 'production') {\n    throwNoCurrentInstance('useRoute');\n  }\n\n  var root = getCurrentInstance().proxy.$root;\n  if (!root._$route) {\n    var route = effectScope(true).run(function () { return shallowReactive(Object.assign({}, root.$router.currentRoute)); }\n    );\n    root._$route = route;\n\n    root.$router.afterEach(function (to) {\n      Object.assign(route, to);\n    });\n  }\n\n  return root._$route\n}\n\nfunction onBeforeRouteUpdate (guard) {\n  if (process.env.NODE_ENV !== 'production') {\n    throwNoCurrentInstance('onBeforeRouteUpdate');\n  }\n\n  return useFilteredGuard(guard, isUpdateNavigation)\n}\nfunction isUpdateNavigation (to, from, depth) {\n  var toMatched = to.matched;\n  var fromMatched = from.matched;\n  return (\n    toMatched.length >= depth &&\n    toMatched\n      .slice(0, depth + 1)\n      .every(function (record, i) { return record === fromMatched[i]; })\n  )\n}\n\nfunction isLeaveNavigation (to, from, depth) {\n  var toMatched = to.matched;\n  var fromMatched = from.matched;\n  return toMatched.length < depth || toMatched[depth] !== fromMatched[depth]\n}\n\nfunction onBeforeRouteLeave (guard) {\n  if (process.env.NODE_ENV !== 'production') {\n    throwNoCurrentInstance('onBeforeRouteLeave');\n  }\n\n  return useFilteredGuard(guard, isLeaveNavigation)\n}\n\nvar noop = function () {};\nfunction useFilteredGuard (guard, fn) {\n  var instance = getCurrentInstance();\n  var router = useRouter();\n\n  var target = instance.proxy;\n  // find the nearest RouterView to know the depth\n  while (\n    target &&\n    target.$vnode &&\n    target.$vnode.data &&\n    target.$vnode.data.routerViewDepth == null\n  ) {\n    target = target.$parent;\n  }\n\n  var depth =\n    target && target.$vnode && target.$vnode.data\n      ? target.$vnode.data.routerViewDepth\n      : null;\n\n  if (depth != null) {\n    var removeGuard = router.beforeEach(function (to, from, next) {\n      return fn(to, from, depth) ? guard(to, from, next) : next()\n    });\n\n    onUnmounted(removeGuard);\n    return removeGuard\n  }\n\n  return noop\n}\n\n/*  */\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction includesParams (outer, inner) {\n  var loop = function ( key ) {\n    var innerValue = inner[key];\n    var outerValue = outer[key];\n    if (typeof innerValue === 'string') {\n      if (innerValue !== outerValue) { return { v: false } }\n    } else {\n      if (\n        !Array.isArray(outerValue) ||\n        outerValue.length !== innerValue.length ||\n        innerValue.some(function (value, i) { return value !== outerValue[i]; })\n      ) {\n        return { v: false }\n      }\n    }\n  };\n\n  for (var key in inner) {\n    var returned = loop( key );\n\n    if ( returned ) return returned.v;\n  }\n\n  return true\n}\n\n// helpers from vue router 4\n\nfunction isSameRouteLocationParamsValue (a, b) {\n  return Array.isArray(a)\n    ? isEquivalentArray(a, b)\n    : Array.isArray(b)\n      ? isEquivalentArray(b, a)\n      : a === b\n}\n\nfunction isEquivalentArray (a, b) {\n  return Array.isArray(b)\n    ? a.length === b.length && a.every(function (value, i) { return value === b[i]; })\n    : a.length === 1 && a[0] === b\n}\n\nfunction isSameRouteLocationParams (a, b) {\n  if (Object.keys(a).length !== Object.keys(b).length) { return false }\n\n  for (var key in a) {\n    if (!isSameRouteLocationParamsValue(a[key], b[key])) { return false }\n  }\n\n  return true\n}\n\nfunction useLink (props) {\n  if (process.env.NODE_ENV !== 'production') {\n    throwNoCurrentInstance('useLink');\n  }\n\n  var router = useRouter();\n  var currentRoute = useRoute();\n\n  var resolvedRoute = computed(function () { return router.resolve(unref(props.to), currentRoute); });\n\n  var activeRecordIndex = computed(function () {\n    var route = resolvedRoute.value.route;\n    var matched = route.matched;\n    var length = matched.length;\n    var routeMatched = matched[length - 1];\n    var currentMatched = currentRoute.matched;\n    if (!routeMatched || !currentMatched.length) { return -1 }\n    var index = currentMatched.indexOf(routeMatched);\n    if (index > -1) { return index }\n    // possible parent record\n    var parentRecord = currentMatched[currentMatched.length - 2];\n\n    return (\n      // we are dealing with nested routes\n      length > 1 &&\n        // if the parent and matched route have the same path, this link is\n        // referring to the empty child. Or we currently are on a different\n        // child of the same parent\n        parentRecord && parentRecord === routeMatched.parent\n    )\n  });\n\n  var isActive = computed(\n    function () { return activeRecordIndex.value > -1 &&\n      includesParams(currentRoute.params, resolvedRoute.value.route.params); }\n  );\n  var isExactActive = computed(\n    function () { return activeRecordIndex.value > -1 &&\n      activeRecordIndex.value === currentRoute.matched.length - 1 &&\n      isSameRouteLocationParams(currentRoute.params, resolvedRoute.value.route.params); }\n  );\n\n  var navigate = function (e) {\n    var href = resolvedRoute.value.route;\n    if (guardEvent(e)) {\n      return props.replace\n        ? router.replace(href)\n        : router.push(href)\n    }\n    return Promise.resolve()\n  };\n\n  return {\n    href: computed(function () { return resolvedRoute.value.href; }),\n    route: computed(function () { return resolvedRoute.value.route; }),\n    isExactActive: isExactActive,\n    isActive: isActive,\n    navigate: navigate\n  }\n}\n\nexport { isSameRouteLocationParams, onBeforeRouteLeave, onBeforeRouteUpdate, useLink, useRoute, useRouter };\n","import type { IRestApiContext, VersionControlPreferences } from '@/Interface';\nimport { makeRestApiRequest } from '@/utils';\nimport type { IDataObject } from 'n8n-workflow';\n\nconst versionControlApiRoot = '/version-control';\n\nexport const initSsh = async (context: IRestApiContext, data: IDataObject): Promise<string> => {\n\treturn makeRestApiRequest(context, 'POST', `${versionControlApiRoot}/init-ssh`, data);\n};\n\nexport const initRepository = async (\n\tcontext: IRestApiContext,\n): Promise<{ branches: string[]; currentBranch: string }> => {\n\treturn makeRestApiRequest(context, 'POST', `${versionControlApiRoot}/init-repository`);\n};\n\nexport const sync = async (context: IRestApiContext, data: IDataObject): Promise<void> => {\n\treturn makeRestApiRequest(context, 'POST', `${versionControlApiRoot}/push`, data);\n};\n\nexport const getConfig = async (\n\tcontext: IRestApiContext,\n): Promise<{ remoteRepository: string; name: string; email: string; currentBranch: string }> => {\n\treturn makeRestApiRequest(context, 'GET', `${versionControlApiRoot}/config`);\n};\n\nexport const setPreferences = async (\n\tcontext: IRestApiContext,\n\tpreferences: Partial<VersionControlPreferences>,\n): Promise<VersionControlPreferences> => {\n\treturn makeRestApiRequest(context, 'POST', `${versionControlApiRoot}/preferences`, preferences);\n};\n\nexport const getPreferences = async (\n\tcontext: IRestApiContext,\n): Promise<VersionControlPreferences> => {\n\treturn makeRestApiRequest(context, 'GET', `${versionControlApiRoot}/preferences`);\n};\n","import { computed, reactive } from 'vue';\nimport { defineStore } from 'pinia';\nimport type { IDataObject } from 'n8n-workflow';\nimport { EnterpriseEditionFeature } from '@/constants';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport * as vcApi from '@/api/versionControl';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport type { VersionControlPreferences } from '@/Interface';\n\nexport const useVersionControlStore = defineStore('versionControl', () => {\n\tconst rootStore = useRootStore();\n\tconst settingsStore = useSettingsStore();\n\n\tconst isEnterpriseVersionControlEnabled = computed(() =>\n\t\tsettingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.VersionControl),\n\t);\n\n\tconst preferences = reactive<VersionControlPreferences>({\n\t\tbranchName: '',\n\t\tauthorName: '',\n\t\tauthorEmail: '',\n\t\trepositoryUrl: '',\n\t\tbranchReadOnly: false,\n\t\tbranchColor: '#000000',\n\t\tconnected: false,\n\t\tpublicKey: '',\n\t});\n\n\tconst state = reactive({\n\t\tbranches: [] as string[],\n\t\tcurrentBranch: '',\n\t\tauthorName: '',\n\t\tauthorEmail: '',\n\t\trepositoryUrl: '',\n\t\tsshKey: '',\n\t\tcommitMessage: 'commit message',\n\t});\n\n\tconst initSsh = async (data: IDataObject) => {\n\t\tstate.sshKey = await vcApi.initSsh(rootStore.getRestApiContext, data);\n\t};\n\n\tconst initRepository = async () => {\n\t\tconst { branches, currentBranch } = await vcApi.initRepository(rootStore.getRestApiContext);\n\t\tstate.branches = branches;\n\t\tstate.currentBranch = currentBranch;\n\t};\n\n\tconst sync = async (data: { commitMessage: string }) => {\n\t\tstate.commitMessage = data.commitMessage;\n\t\treturn vcApi.sync(rootStore.getRestApiContext, { message: data.commitMessage });\n\t};\n\tconst getConfig = async () => {\n\t\tconst { remoteRepository, name, email, currentBranch } = await vcApi.getConfig(\n\t\t\trootStore.getRestApiContext,\n\t\t);\n\t\tstate.repositoryUrl = remoteRepository;\n\t\tstate.authorName = name;\n\t\tstate.authorEmail = email;\n\t\tstate.currentBranch = currentBranch;\n\t};\n\n\tconst setPreferences = (data: Partial<VersionControlPreferences>) => {\n\t\tObject.assign(preferences, data);\n\t};\n\n\tconst getPreferences = async () => {\n\t\tconst data = await vcApi.getPreferences(rootStore.getRestApiContext);\n\t\tsetPreferences(data);\n\t};\n\n\tconst savePreferences = async (preferences: Partial<VersionControlPreferences>) => {\n\t\tconst data = await vcApi.setPreferences(rootStore.getRestApiContext, preferences);\n\t\tsetPreferences(data);\n\t};\n\n\treturn {\n\t\tisEnterpriseVersionControlEnabled,\n\t\tstate,\n\t\tinitSsh,\n\t\tinitRepository,\n\t\tsync,\n\t\tgetConfig,\n\t\tgetPreferences,\n\t\tsetPreferences,\n\t\tsavePreferences,\n\t};\n});\n","<template>\n\t<div :class=\"[$style.app, 'root-container']\">\n\t\t<LoadingView v-if=\"loading\" />\n\t\t<div\n\t\t\tv-else\n\t\t\tid=\"app\"\n\t\t\t:class=\"{\n\t\t\t\t[$style.container]: true,\n\t\t\t\t[$style.sidebarCollapsed]: uiStore.sidebarMenuCollapsed,\n\t\t\t}\"\n\t\t>\n\t\t\t<div id=\"header\" :class=\"$style.header\">\n\t\t\t\t<router-view name=\"header\"></router-view>\n\t\t\t</div>\n\t\t\t<div id=\"sidebar\" :class=\"$style.sidebar\">\n\t\t\t\t<router-view name=\"sidebar\"></router-view>\n\t\t\t</div>\n\t\t\t<div id=\"content\" :class=\"$style.content\">\n\t\t\t\t<keep-alive include=\"NodeView\" :max=\"1\">\n\t\t\t\t\t<router-view />\n\t\t\t\t</keep-alive>\n\t\t\t</div>\n\t\t\t<Modals />\n\t\t\t<Telemetry />\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport Modals from './components/Modals.vue';\nimport LoadingView from './views/LoadingView.vue';\nimport Telemetry from './components/Telemetry.vue';\nimport { HIRING_BANNER, LOCAL_STORAGE_THEME, VIEWS } from './constants';\n\nimport mixins from 'vue-typed-mixins';\nimport { showMessage } from '@/mixins/showMessage';\nimport { userHelpers } from '@/mixins/userHelpers';\nimport { loadLanguage } from './plugins/i18n';\nimport useGlobalLinkActions from '@/composables/useGlobalLinkActions';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from './stores/ui.store';\nimport { useSettingsStore } from './stores/settings.store';\nimport { useUsersStore } from './stores/users.store';\nimport { useRootStore } from './stores/n8nRoot.store';\nimport { useTemplatesStore } from './stores/templates.store';\nimport { useNodeTypesStore } from './stores/nodeTypes.store';\nimport { useHistoryHelper } from '@/composables/useHistoryHelper';\nimport { newVersions } from '@/mixins/newVersions';\nimport { useRoute } from 'vue-router/composables';\nimport { useVersionControlStore } from '@/stores/versionControl.store';\n\nexport default mixins(newVersions, showMessage, userHelpers).extend({\n\tname: 'App',\n\tcomponents: {\n\t\tLoadingView,\n\t\tTelemetry,\n\t\tModals,\n\t},\n\tsetup() {\n\t\treturn {\n\t\t\t...useGlobalLinkActions(),\n\t\t\t...useHistoryHelper(useRoute()),\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(\n\t\t\tuseNodeTypesStore,\n\t\t\tuseRootStore,\n\t\t\tuseSettingsStore,\n\t\t\tuseTemplatesStore,\n\t\t\tuseUIStore,\n\t\t\tuseUsersStore,\n\t\t\tuseVersionControlStore,\n\t\t),\n\t\tdefaultLocale(): string {\n\t\t\treturn this.rootStore.defaultLocale;\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloading: true,\n\t\t};\n\t},\n\tmethods: {\n\t\tasync initSettings(): Promise<void> {\n\t\t\ttry {\n\t\t\t\tawait this.settingsStore.getSettings();\n\t\t\t} catch (e) {\n\t\t\t\tthis.$showToast({\n\t\t\t\t\ttitle: this.$locale.baseText('startupError'),\n\t\t\t\t\tmessage: this.$locale.baseText('startupError.message'),\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tduration: 0,\n\t\t\t\t});\n\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\tasync loginWithCookie(): Promise<void> {\n\t\t\ttry {\n\t\t\t\tawait this.usersStore.loginWithCookie();\n\t\t\t} catch (e) {}\n\t\t},\n\t\tasync initTemplates(): Promise<void> {\n\t\t\tif (!this.settingsStore.isTemplatesEnabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait this.settingsStore.testTemplatesEndpoint();\n\t\t\t} catch (e) {}\n\t\t},\n\t\tlogHiringBanner() {\n\t\t\tif (this.settingsStore.isHiringBannerEnabled && this.$route.name !== VIEWS.DEMO) {\n\t\t\t\tconsole.log(HIRING_BANNER); // eslint-disable-line no-console\n\t\t\t}\n\t\t},\n\t\tasync initialize(): Promise<void> {\n\t\t\tawait this.initSettings();\n\t\t\tawait Promise.all([this.loginWithCookie(), this.initTemplates()]);\n\t\t},\n\t\ttrackPage(): void {\n\t\t\tthis.uiStore.currentView = this.$route.name || '';\n\t\t\tif (this.$route && this.$route.meta && this.$route.meta.templatesEnabled) {\n\t\t\t\tthis.templatesStore.setSessionId();\n\t\t\t} else {\n\t\t\t\tthis.templatesStore.resetSessionId(); // reset telemetry session id when user leaves template pages\n\t\t\t}\n\n\t\t\tthis.$telemetry.page(this.$route);\n\t\t},\n\t\tauthenticate() {\n\t\t\t// redirect to setup page. user should be redirected to this only once\n\t\t\tif (this.settingsStore.isUserManagementEnabled && this.settingsStore.showSetupPage) {\n\t\t\t\tif (this.$route.name === VIEWS.SETUP) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvoid this.$router.replace({ name: VIEWS.SETUP });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.canUserAccessCurrentRoute()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if cannot access page and not logged in, ask to sign in\n\t\t\tconst user = this.usersStore.currentUser;\n\t\t\tif (!user) {\n\t\t\t\tconst redirect =\n\t\t\t\t\tthis.$route.query.redirect ||\n\t\t\t\t\tencodeURIComponent(`${window.location.pathname}${window.location.search}`);\n\t\t\t\tvoid this.$router.replace({ name: VIEWS.SIGNIN, query: { redirect } });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if cannot access page and is logged in, respect signin redirect\n\t\t\tif (this.$route.name === VIEWS.SIGNIN && typeof this.$route.query.redirect === 'string') {\n\t\t\t\tconst redirect = decodeURIComponent(this.$route.query.redirect);\n\t\t\t\tif (redirect.startsWith('/')) {\n\t\t\t\t\t// protect against phishing\n\t\t\t\t\tvoid this.$router.replace(redirect);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if cannot access page and is logged in\n\t\t\tvoid this.$router.replace({ name: VIEWS.HOMEPAGE });\n\t\t},\n\t\tredirectIfNecessary() {\n\t\t\tconst redirect =\n\t\t\t\tthis.$route.meta &&\n\t\t\t\ttypeof this.$route.meta.getRedirect === 'function' &&\n\t\t\t\tthis.$route.meta.getRedirect();\n\t\t\tif (redirect) {\n\t\t\t\tvoid this.$router.replace(redirect);\n\t\t\t}\n\t\t},\n\t\tsetTheme() {\n\t\t\tconst theme = window.localStorage.getItem(LOCAL_STORAGE_THEME);\n\t\t\tif (theme) {\n\t\t\t\twindow.document.body.classList.add(`theme-${theme}`);\n\t\t\t}\n\t\t},\n\t},\n\tasync mounted() {\n\t\tthis.setTheme();\n\t\tawait this.initialize();\n\t\tthis.logHiringBanner();\n\t\tthis.authenticate();\n\t\tthis.redirectIfNecessary();\n\t\tthis.checkForNewVersions();\n\n\t\tthis.loading = false;\n\n\t\tthis.trackPage();\n\t\tthis.$externalHooks().run('app.mount');\n\n\t\tif (this.defaultLocale !== 'en') {\n\t\t\tawait this.nodeTypesStore.getNodeTranslationHeaders();\n\t\t}\n\n\t\tif (\n\t\t\tthis.versionControlStore.isEnterpriseVersionControlEnabled &&\n\t\t\tthis.usersStore.isInstanceOwner\n\t\t) {\n\t\t\tvoid this.versionControlStore.getPreferences();\n\t\t}\n\t},\n\twatch: {\n\t\t$route(route) {\n\t\t\tthis.authenticate();\n\t\t\tthis.redirectIfNecessary();\n\n\t\t\tthis.trackPage();\n\t\t},\n\t\tdefaultLocale(newLocale) {\n\t\t\tvoid loadLanguage(newLocale);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.app {\n\theight: 100vh;\n\toverflow: hidden;\n}\n\n.container {\n\tdisplay: grid;\n\tgrid-template-areas:\n\t\t'sidebar header'\n\t\t'sidebar content';\n\tgrid-auto-columns: fit-content($sidebar-expanded-width) 1fr;\n\tgrid-template-rows: fit-content($sidebar-width) 1fr;\n}\n\n.content {\n\tdisplay: flex;\n\tgrid-area: content;\n\toverflow: auto;\n\theight: 100vh;\n\twidth: 100%;\n\tjustify-content: center;\n}\n\n.header {\n\tgrid-area: header;\n\tz-index: 999;\n}\n\n.sidebar {\n\tgrid-area: sidebar;\n\theight: 100vh;\n\tz-index: 999;\n}\n</style>\n","<template>\n\t<img :src=\"basePath + 'n8n-logo-expanded.svg'\" :class=\"$style.img\" alt=\"n8n.io\" />\n</template>\n\n<script lang=\"ts\">\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { mapStores } from 'pinia';\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tcomputed: {\n\t\t...mapStores(useRootStore),\n\t\tbasePath(): string {\n\t\t\treturn this.rootStore.baseUrl;\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.img {\n\theight: 32px;\n}\n</style>\n","import { makeRestApiRequest } from '@/utils';\nimport type {\n\tIRestApiContext,\n\tSamlPreferencesLoginEnabled,\n\tSamlPreferences,\n\tSamlPreferencesExtractedData,\n} from '@/Interface';\n\nexport const initSSO = async (context: IRestApiContext): Promise<string> => {\n\treturn makeRestApiRequest(context, 'GET', '/sso/saml/initsso');\n};\n\nexport const getSamlMetadata = async (context: IRestApiContext): Promise<SamlPreferences> => {\n\treturn makeRestApiRequest(context, 'GET', '/sso/saml/metadata');\n};\n\nexport const getSamlConfig = async (\n\tcontext: IRestApiContext,\n): Promise<SamlPreferences & SamlPreferencesExtractedData> => {\n\treturn makeRestApiRequest(context, 'GET', '/sso/saml/config');\n};\n\nexport const saveSamlConfig = async (\n\tcontext: IRestApiContext,\n\tdata: SamlPreferences,\n): Promise<SamlPreferences | undefined> => {\n\treturn makeRestApiRequest(context, 'POST', '/sso/saml/config', data);\n};\n\nexport const toggleSamlConfig = async (\n\tcontext: IRestApiContext,\n\tdata: SamlPreferencesLoginEnabled,\n): Promise<void> => {\n\treturn makeRestApiRequest(context, 'POST', '/sso/saml/config/toggle', data);\n};\n\nexport const testSamlConfig = async (context: IRestApiContext): Promise<string> => {\n\treturn makeRestApiRequest(context, 'GET', '/sso/saml/config/test');\n};\n","import { computed, reactive } from 'vue';\nimport { defineStore } from 'pinia';\nimport { EnterpriseEditionFeature } from '@/constants';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport * as ssoApi from '@/api/sso';\nimport type { SamlPreferences } from '@/Interface';\nimport { updateCurrentUser } from '@/api/users';\nimport { useUsersStore } from '@/stores/users.store';\n\nexport const useSSOStore = defineStore('sso', () => {\n\tconst rootStore = useRootStore();\n\tconst settingsStore = useSettingsStore();\n\tconst usersStore = useUsersStore();\n\n\tconst state = reactive({\n\t\tloading: false,\n\t});\n\n\tconst isLoading = computed(() => state.loading);\n\n\tconst setLoading = (loading: boolean) => {\n\t\tstate.loading = loading;\n\t};\n\n\tconst isSamlLoginEnabled = computed({\n\t\tget: () => settingsStore.isSamlLoginEnabled,\n\t\tset: (value: boolean) => {\n\t\t\tsettingsStore.setSettings({\n\t\t\t\t...settingsStore.settings,\n\t\t\t\tsso: {\n\t\t\t\t\t...settingsStore.settings.sso,\n\t\t\t\t\tsaml: {\n\t\t\t\t\t\t...settingsStore.settings.sso.saml,\n\t\t\t\t\t\tloginEnabled: value,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\tvoid toggleLoginEnabled(value);\n\t\t},\n\t});\n\tconst isEnterpriseSamlEnabled = computed(() =>\n\t\tsettingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.Saml),\n\t);\n\tconst isDefaultAuthenticationSaml = computed(() => settingsStore.isDefaultAuthenticationSaml);\n\tconst showSsoLoginButton = computed(\n\t\t() =>\n\t\t\tisSamlLoginEnabled.value &&\n\t\t\tisEnterpriseSamlEnabled.value &&\n\t\t\tisDefaultAuthenticationSaml.value,\n\t);\n\n\tconst getSSORedirectUrl = async () => ssoApi.initSSO(rootStore.getRestApiContext);\n\n\tconst toggleLoginEnabled = async (enabled: boolean) =>\n\t\tssoApi.toggleSamlConfig(rootStore.getRestApiContext, { loginEnabled: enabled });\n\n\tconst getSamlMetadata = async () => ssoApi.getSamlMetadata(rootStore.getRestApiContext);\n\tconst getSamlConfig = async () => ssoApi.getSamlConfig(rootStore.getRestApiContext);\n\tconst saveSamlConfig = async (config: SamlPreferences) =>\n\t\tssoApi.saveSamlConfig(rootStore.getRestApiContext, config);\n\tconst testSamlConfig = async () => ssoApi.testSamlConfig(rootStore.getRestApiContext);\n\n\tconst updateUser = async (params: { firstName: string; lastName: string }) =>\n\t\tupdateCurrentUser(rootStore.getRestApiContext, {\n\t\t\tid: usersStore.currentUser!.id,\n\t\t\temail: usersStore.currentUser!.email!,\n\t\t\t...params,\n\t\t});\n\n\tconst userData = computed(() => usersStore.currentUser);\n\n\treturn {\n\t\tisLoading,\n\t\tsetLoading,\n\t\tisSamlLoginEnabled,\n\t\tisEnterpriseSamlEnabled,\n\t\tisDefaultAuthenticationSaml,\n\t\tshowSsoLoginButton,\n\t\tgetSSORedirectUrl,\n\t\tgetSamlMetadata,\n\t\tgetSamlConfig,\n\t\tsaveSamlConfig,\n\t\ttestSamlConfig,\n\t\tupdateUser,\n\t\tuserData,\n\t};\n});\n","<script lang=\"ts\" setup>\nimport { Notification } from 'element-ui';\nimport { useSSOStore } from '@/stores/sso.store';\n\nconst ssoStore = useSSOStore();\n\nconst onSSOLogin = async () => {\n\ttry {\n\t\twindow.location.href = await ssoStore.getSSORedirectUrl();\n\t} catch (error) {\n\t\tNotification.error({\n\t\t\ttitle: 'Error',\n\t\t\tmessage: error.message,\n\t\t\tposition: 'bottom-right',\n\t\t});\n\t}\n};\n</script>\n\n<template>\n\t<div v-if=\"ssoStore.showSsoLoginButton\" :class=\"$style.ssoLogin\">\n\t\t<div :class=\"$style.divider\">\n\t\t\t<span>{{ $locale.baseText('sso.login.divider') }}</span>\n\t\t</div>\n\t\t<n8n-button\n\t\t\t@click=\"onSSOLogin\"\n\t\t\tsize=\"large\"\n\t\t\ttype=\"primary\"\n\t\t\toutline\n\t\t\t:label=\"$locale.baseText('sso.login.button')\"\n\t\t/>\n\t</div>\n</template>\n\n<style lang=\"scss\" module>\n.ssoLogin {\n\ttext-align: center;\n}\n\n.divider {\n\tposition: relative;\n\ttext-transform: uppercase;\n\n\t&::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 1px;\n\t\tbackground-color: var(--color-foreground-base);\n\t}\n\n\tspan {\n\t\tposition: relative;\n\t\tdisplay: inline-block;\n\t\tpadding: var(--spacing-xl) var(--spacing-l);\n\t\tbackground: var(--color-foreground-xlight);\n\t}\n}\n</style>\n","<template>\n\t<div :class=\"$style.container\">\n\t\t<div :class=\"$style.logoContainer\">\n\t\t\t<Logo />\n\t\t</div>\n\t\t<div v-if=\"subtitle\" :class=\"$style.textContainer\">\n\t\t\t<n8n-text size=\"large\">{{ subtitle }}</n8n-text>\n\t\t</div>\n\t\t<div :class=\"$style.formContainer\">\n\t\t\t<n8n-form-box\n\t\t\t\tv-bind=\"form\"\n\t\t\t\tdata-test-id=\"auth-form\"\n\t\t\t\t:buttonLoading=\"formLoading\"\n\t\t\t\t@secondaryClick=\"onSecondaryClick\"\n\t\t\t\t@submit=\"onSubmit\"\n\t\t\t\t@input=\"onInput\"\n\t\t\t>\n\t\t\t\t<SSOLogin v-if=\"withSso\" />\n\t\t\t</n8n-form-box>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nimport Logo from '@/components/Logo.vue';\nimport SSOLogin from '@/components/SSOLogin.vue';\n\nexport default defineComponent({\n\tname: 'AuthView',\n\tcomponents: {\n\t\tLogo,\n\t\tSSOLogin,\n\t},\n\tprops: {\n\t\tform: {},\n\t\tformLoading: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tsubtitle: {\n\t\t\ttype: String,\n\t\t},\n\t\twithSso: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tmethods: {\n\t\tonInput(e: { name: string; value: string }) {\n\t\t\tthis.$emit('input', e);\n\t\t},\n\t\tonSubmit(values: { [key: string]: string }) {\n\t\t\tthis.$emit('submit', values);\n\t\t},\n\t\tonSecondaryClick() {\n\t\t\tthis.$emit('secondaryClick');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\nbody {\n\tbackground-color: var(--color-background-light);\n}\n\n.container {\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: column;\n\tpadding-top: var(--spacing-2xl);\n\n\t> * {\n\t\tmargin-bottom: var(--spacing-l);\n\t\twidth: 352px;\n\t}\n}\n\n.logoContainer {\n\tdisplay: flex;\n\tjustify-content: center;\n}\n\n.textContainer {\n\ttext-align: center;\n}\n\n.formContainer {\n\tpadding-bottom: var(--spacing-xl);\n}\n</style>\n\n<style lang=\"scss\">\n.el-checkbox__label span {\n\tfont-size: var(--font-size-2xs) !important;\n}\n</style>\n","<template>\n\t<AuthView\n\t\tv-if=\"config\"\n\t\t:form=\"config\"\n\t\t:formLoading=\"loading\"\n\t\t@submit=\"onSubmit\"\n\t\t@input=\"onInput\"\n\t/>\n</template>\n\n<script lang=\"ts\">\nimport AuthView from './AuthView.vue';\nimport { showMessage } from '@/mixins/showMessage';\n\nimport mixins from 'vue-typed-mixins';\nimport type { IFormBoxConfig } from '@/Interface';\nimport { VIEWS } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useUsersStore } from '@/stores/users.store';\n\nexport default mixins(showMessage).extend({\n\tname: 'ChangePasswordView',\n\tcomponents: {\n\t\tAuthView,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tpassword: '',\n\t\t\tloading: false,\n\t\t\tconfig: null as null | IFormBoxConfig,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUsersStore),\n\t},\n\tasync mounted() {\n\t\tthis.config = {\n\t\t\ttitle: this.$locale.baseText('auth.changePassword'),\n\t\t\tbuttonText: this.$locale.baseText('auth.changePassword'),\n\t\t\tredirectText: this.$locale.baseText('auth.signin'),\n\t\t\tredirectLink: '/signin',\n\t\t\tinputs: [\n\t\t\t\t{\n\t\t\t\t\tname: 'password',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.newPassword'),\n\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalidationRules: [{ name: 'DEFAULT_PASSWORD_RULES' }],\n\t\t\t\t\t\tinfoText: this.$locale.baseText('auth.defaultPasswordRequirements'),\n\t\t\t\t\t\tautocomplete: 'new-password',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'password2',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.changePassword.reenterNewPassword'),\n\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tTWO_PASSWORDS_MATCH: {\n\t\t\t\t\t\t\t\tvalidate: this.passwordsMatch,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalidationRules: [{ name: 'TWO_PASSWORDS_MATCH' }],\n\t\t\t\t\t\tautocomplete: 'new-password',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t\tconst token =\n\t\t\t!this.$route.query.token || typeof this.$route.query.token !== 'string'\n\t\t\t\t? null\n\t\t\t\t: this.$route.query.token;\n\t\tconst userId =\n\t\t\t!this.$route.query.userId || typeof this.$route.query.userId !== 'string'\n\t\t\t\t? null\n\t\t\t\t: this.$route.query.userId;\n\t\ttry {\n\t\t\tif (!token) {\n\t\t\t\tthrow new Error(this.$locale.baseText('auth.changePassword.missingTokenError'));\n\t\t\t}\n\t\t\tif (!userId) {\n\t\t\t\tthrow new Error(this.$locale.baseText('auth.changePassword.missingUserIdError'));\n\t\t\t}\n\n\t\t\tawait this.usersStore.validatePasswordToken({ token, userId });\n\t\t} catch (e) {\n\t\t\tthis.$showMessage({\n\t\t\t\ttitle: this.$locale.baseText('auth.changePassword.tokenValidationError'),\n\t\t\t\ttype: 'error',\n\t\t\t});\n\t\t}\n\t},\n\tmethods: {\n\t\tpasswordsMatch(value: string | number | boolean | null | undefined) {\n\t\t\tif (typeof value !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (value !== this.password) {\n\t\t\t\treturn {\n\t\t\t\t\tmessageKey: 'auth.changePassword.passwordsMustMatchError',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t\tonInput(e: { name: string; value: string }) {\n\t\t\tif (e.name === 'password') {\n\t\t\t\tthis.password = e.value;\n\t\t\t}\n\t\t},\n\t\tasync onSubmit() {\n\t\t\ttry {\n\t\t\t\tthis.loading = true;\n\t\t\t\tconst token =\n\t\t\t\t\t!this.$route.query.token || typeof this.$route.query.token !== 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: this.$route.query.token;\n\t\t\t\tconst userId =\n\t\t\t\t\t!this.$route.query.userId || typeof this.$route.query.userId !== 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: this.$route.query.userId;\n\n\t\t\t\tif (token && userId) {\n\t\t\t\t\tawait this.usersStore.changePassword({ token, userId, password: this.password });\n\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttitle: this.$locale.baseText('auth.changePassword.passwordUpdated'),\n\t\t\t\t\t\tmessage: this.$locale.baseText('auth.changePassword.passwordUpdatedMessage'),\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.$router.push({ name: VIEWS.SIGNIN });\n\t\t\t\t} else {\n\t\t\t\t\tthis.$showError(\n\t\t\t\t\t\tnew Error(this.$locale.baseText('auth.validation.missingParameters')),\n\t\t\t\t\t\tthis.$locale.baseText('auth.changePassword.error'),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('auth.changePassword.error'));\n\t\t\t}\n\t\t\tthis.loading = false;\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<div :class=\"$style.container\">\n\t\t<font-awesome-icon icon=\"exclamation-triangle\" :class=\"$style.icon\" />\n\t\t<div :class=\"$style.message\">\n\t\t\t<div>\n\t\t\t\t<n8n-heading size=\"2xlarge\">\n\t\t\t\t\t{{ $locale.baseText(messageKey) }}\n\t\t\t\t</n8n-heading>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<n8n-text size=\"large\" v-if=\"errorCode\">\n\t\t\t\t\t{{ errorCode }} {{ $locale.baseText('error') }}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t</div>\n\t\t<n8n-button :label=\"$locale.baseText(redirectTextKey)\" @click=\"onButtonClick\" />\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tname: 'ErrorView',\n\tprops: {\n\t\tmessageKey: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\terrorCode: {\n\t\t\ttype: Number,\n\t\t},\n\t\tredirectTextKey: {\n\t\t\ttype: String,\n\t\t},\n\t\tredirectPage: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tmethods: {\n\t\tonButtonClick() {\n\t\t\tvoid this.$router.push({ name: this.redirectPage });\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\theight: 100%;\n\twidth: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-direction: column;\n}\n\n.icon {\n\tmin-height: 96px;\n\tmin-width: 108px;\n\tmargin-bottom: var(--spacing-2xl);\n\tcolor: var(--color-foreground-base);\n}\n\n.message {\n\tmargin-bottom: var(--spacing-l);\n\n\t* {\n\t\tmargin-bottom: var(--spacing-2xs);\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n}\n</style>\n","<template>\n\t<AuthView :form=\"formConfig\" :formLoading=\"loading\" @submit=\"onSubmit\" />\n</template>\n\n<script lang=\"ts\">\nimport AuthView from './AuthView.vue';\nimport { showMessage } from '@/mixins/showMessage';\n\nimport mixins from 'vue-typed-mixins';\nimport type { IFormBoxConfig } from '@/Interface';\nimport { mapStores } from 'pinia';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUsersStore } from '@/stores/users.store';\n\nexport default mixins(showMessage).extend({\n\tname: 'ForgotMyPasswordView',\n\tcomponents: {\n\t\tAuthView,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloading: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useSettingsStore, useUsersStore),\n\t\tformConfig(): IFormBoxConfig {\n\t\t\tconst EMAIL_INPUTS: IFormBoxConfig['inputs'] = [\n\t\t\t\t{\n\t\t\t\t\tname: 'email',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.email'),\n\t\t\t\t\t\ttype: 'email',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalidationRules: [{ name: 'VALID_EMAIL' }],\n\t\t\t\t\t\tautocomplete: 'email',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tconst NO_SMTP_INPUTS: IFormBoxConfig['inputs'] = [\n\t\t\t\t{\n\t\t\t\t\tname: 'no-smtp-warning',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('forgotPassword.noSMTPToSendEmailWarning'),\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tconst DEFAULT_FORM_CONFIG = {\n\t\t\t\ttitle: this.$locale.baseText('forgotPassword.recoverPassword'),\n\t\t\t\tredirectText: this.$locale.baseText('forgotPassword.returnToSignIn'),\n\t\t\t\tredirectLink: '/signin',\n\t\t\t};\n\n\t\t\tif (this.settingsStore.isSmtpSetup) {\n\t\t\t\treturn {\n\t\t\t\t\t...DEFAULT_FORM_CONFIG,\n\t\t\t\t\tbuttonText: this.$locale.baseText('forgotPassword.getRecoveryLink'),\n\t\t\t\t\tinputs: EMAIL_INPUTS,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...DEFAULT_FORM_CONFIG,\n\t\t\t\tinputs: NO_SMTP_INPUTS,\n\t\t\t};\n\t\t},\n\t},\n\tmethods: {\n\t\tasync onSubmit(values: { email: string }) {\n\t\t\ttry {\n\t\t\t\tthis.loading = true;\n\t\t\t\tawait this.usersStore.sendForgotPasswordEmail(values);\n\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\ttitle: this.$locale.baseText('forgotPassword.recoveryEmailSent'),\n\t\t\t\t\tmessage: this.$locale.baseText('forgotPassword.emailSentIfExists', {\n\t\t\t\t\t\tinterpolate: { email: values.email },\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tlet message = this.$locale.baseText('forgotPassword.smtpErrorContactAdministrator');\n\t\t\t\tif (error.httpStatusCode === 422) {\n\t\t\t\t\tmessage = this.$locale.baseText(error.message);\n\t\t\t\t}\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\ttitle: this.$locale.baseText('forgotPassword.sendingEmailError'),\n\t\t\t\t\tmessage,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.loading = false;\n\t\t},\n\t},\n});\n</script>\n","import type { WorkflowTitleStatus } from '@/Interface';\n\nexport function useTitleChange() {\n\treturn {\n\t\ttitleSet(workflow: string, status: WorkflowTitleStatus) {\n\t\t\tlet icon = '⚠️';\n\t\t\tif (status === 'EXECUTING') {\n\t\t\t\ticon = '🔄';\n\t\t\t} else if (status === 'IDLE') {\n\t\t\t\ticon = '▶️';\n\t\t\t}\n\n\t\t\twindow.document.title = `n8n - ${icon} ${workflow}`;\n\t\t},\n\t\ttitleReset() {\n\t\t\tdocument.title = 'n8n - Workflow Automation';\n\t\t},\n\t};\n}\n","import type {\n\tIExecutionResponse,\n\tIExecutionsCurrentSummaryExtended,\n\tIPushData,\n\tIPushDataExecutionFinished,\n} from '@/Interface';\n\nimport { externalHooks } from '@/mixins/externalHooks';\nimport { nodeHelpers } from '@/mixins/nodeHelpers';\nimport { showMessage } from '@/mixins/showMessage';\nimport { useTitleChange } from '@/composables/useTitleChange';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\n\nimport type {\n\tExpressionError,\n\tIDataObject,\n\tINodeTypeNameVersion,\n\tIRun,\n\tIRunExecutionData,\n\tIWorkflowBase,\n\tSubworkflowOperationError,\n} from 'n8n-workflow';\nimport { TelemetryHelpers } from 'n8n-workflow';\n\nimport mixins from 'vue-typed-mixins';\nimport { WORKFLOW_SETTINGS_MODAL_KEY } from '@/constants';\nimport { getTriggerNodeServiceName } from '@/utils';\nimport { codeNodeEditorEventBus } from '@/event-bus';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport { useCredentialsStore } from '@/stores/credentials.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { parse } from 'flatted';\nimport { useSegment } from '@/stores/segment.store';\n\nexport const pushConnection = mixins(\n\texternalHooks,\n\tnodeHelpers,\n\tshowMessage,\n\tworkflowHelpers,\n).extend({\n\tsetup() {\n\t\treturn {\n\t\t\t...useTitleChange(),\n\t\t};\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tpushSource: null as WebSocket | EventSource | null,\n\t\t\treconnectTimeout: null as NodeJS.Timeout | null,\n\t\t\tretryTimeout: null as NodeJS.Timeout | null,\n\t\t\tpushMessageQueue: [] as Array<{ event: Event; retriesLeft: number }>,\n\t\t\tconnectRetries: 0,\n\t\t\tlostConnection: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(\n\t\t\tuseCredentialsStore,\n\t\t\tuseNodeTypesStore,\n\t\t\tuseUIStore,\n\t\t\tuseWorkflowsStore,\n\t\t\tuseSettingsStore,\n\t\t\tuseSegment,\n\t\t),\n\t\tsessionId(): string {\n\t\t\treturn this.rootStore.sessionId;\n\t\t},\n\t},\n\tmethods: {\n\t\tattemptReconnect() {\n\t\t\tthis.pushConnect();\n\t\t},\n\n\t\t/**\n\t\t * Connect to server to receive data via a WebSocket or EventSource\n\t\t */\n\t\tpushConnect(): void {\n\t\t\t// always close the previous connection so that we do not end up with multiple connections\n\t\t\tthis.pushDisconnect();\n\n\t\t\tif (this.reconnectTimeout) {\n\t\t\t\tclearTimeout(this.reconnectTimeout);\n\t\t\t\tthis.reconnectTimeout = null;\n\t\t\t}\n\n\t\t\tconst useWebSockets = this.settingsStore.pushBackend === 'websocket';\n\n\t\t\tconst { getRestUrl: restUrl } = this.rootStore;\n\t\t\tconst url = `/push?sessionId=${this.sessionId}`;\n\n\t\t\tif (useWebSockets) {\n\t\t\t\tconst { protocol, host } = window.location;\n\t\t\t\tconst baseUrl = restUrl.startsWith('http')\n\t\t\t\t\t? restUrl.replace(/^http/, 'ws')\n\t\t\t\t\t: `${protocol === 'https:' ? 'wss' : 'ws'}://${host + restUrl}`;\n\t\t\t\tthis.pushSource = new WebSocket(`${baseUrl}${url}`);\n\t\t\t} else {\n\t\t\t\tthis.pushSource = new EventSource(`${restUrl}${url}`, { withCredentials: true });\n\t\t\t}\n\n\t\t\tthis.pushSource.addEventListener('open', this.onConnectionSuccess, false);\n\t\t\tthis.pushSource.addEventListener('message', this.pushMessageReceived, false);\n\t\t\tthis.pushSource.addEventListener(\n\t\t\t\tuseWebSockets ? 'close' : 'error',\n\t\t\t\tthis.onConnectionError,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t},\n\n\t\tonConnectionSuccess() {\n\t\t\tthis.connectRetries = 0;\n\t\t\tthis.lostConnection = false;\n\t\t\tthis.rootStore.pushConnectionActive = true;\n\t\t\tthis.clearAllStickyNotifications();\n\t\t\tthis.pushSource?.removeEventListener('open', this.onConnectionSuccess);\n\t\t},\n\n\t\tonConnectionError() {\n\t\t\tthis.pushDisconnect();\n\t\t\tthis.connectRetries++;\n\t\t\tthis.reconnectTimeout = setTimeout(\n\t\t\t\tthis.attemptReconnect,\n\t\t\t\tMath.min(this.connectRetries * 2000, 8000), // maximum 8 seconds backoff\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Close connection to server\n\t\t */\n\t\tpushDisconnect(): void {\n\t\t\tif (this.pushSource !== null) {\n\t\t\t\tthis.pushSource.removeEventListener('error', this.onConnectionError);\n\t\t\t\tthis.pushSource.removeEventListener('close', this.onConnectionError);\n\t\t\t\tthis.pushSource.removeEventListener('message', this.pushMessageReceived);\n\t\t\t\tif (this.pushSource.readyState < 2) this.pushSource.close();\n\t\t\t\tthis.pushSource = null;\n\t\t\t}\n\n\t\t\tthis.rootStore.pushConnectionActive = false;\n\t\t},\n\n\t\t/**\n\t\t * Sometimes the push message is faster as the result from\n\t\t * the REST API so we do not know yet what execution ID\n\t\t * is currently active. So internally resend the message\n\t\t * a few more times\n\t\t */\n\t\tqueuePushMessage(event: Event, retryAttempts: number) {\n\t\t\tthis.pushMessageQueue.push({ event, retriesLeft: retryAttempts });\n\n\t\t\tif (this.retryTimeout === null) {\n\t\t\t\tthis.retryTimeout = setTimeout(this.processWaitingPushMessages, 20);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Process the push messages which are waiting in the queue\n\t\t */\n\t\tprocessWaitingPushMessages() {\n\t\t\tif (this.retryTimeout !== null) {\n\t\t\t\tclearTimeout(this.retryTimeout);\n\t\t\t\tthis.retryTimeout = null;\n\t\t\t}\n\n\t\t\tconst queueLength = this.pushMessageQueue.length;\n\t\t\tfor (let i = 0; i < queueLength; i++) {\n\t\t\t\tconst messageData = this.pushMessageQueue.shift();\n\n\t\t\t\tif (this.pushMessageReceived(messageData!.event, true) === false) {\n\t\t\t\t\t// Was not successful\n\t\t\t\t\tmessageData!.retriesLeft -= 1;\n\n\t\t\t\t\tif (messageData!.retriesLeft > 0) {\n\t\t\t\t\t\t// If still retries are left add it back and stop execution\n\t\t\t\t\t\tthis.pushMessageQueue.unshift(messageData!);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.pushMessageQueue.length !== 0 && this.retryTimeout === null) {\n\t\t\t\tthis.retryTimeout = setTimeout(this.processWaitingPushMessages, 25);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Process a newly received message\n\t\t */\n\t\tasync pushMessageReceived(event: Event, isRetry?: boolean): Promise<boolean> {\n\t\t\tconst retryAttempts = 5;\n\t\t\tlet receivedData: IPushData;\n\t\t\ttry {\n\t\t\t\t// @ts-ignore\n\t\t\t\treceivedData = JSON.parse(event.data);\n\t\t\t} catch (error) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (receivedData.type === 'sendConsoleMessage') {\n\t\t\t\tconst pushData = receivedData.data;\n\t\t\t\tconsole.log(pushData.source, ...pushData.messages); // eslint-disable-line no-console\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!['testWebhookReceived'].includes(receivedData.type) &&\n\t\t\t\tisRetry !== true &&\n\t\t\t\tthis.pushMessageQueue.length\n\t\t\t) {\n\t\t\t\t// If there are already messages in the queue add the new one that all of them\n\t\t\t\t// get executed in order\n\t\t\t\tthis.queuePushMessage(event, retryAttempts);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (receivedData.type === 'nodeExecuteAfter' || receivedData.type === 'nodeExecuteBefore') {\n\t\t\t\tif (!this.uiStore.isActionActive('workflowRunning')) {\n\t\t\t\t\t// No workflow is running so ignore the messages\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tconst pushData = receivedData.data;\n\t\t\t\tif (this.workflowsStore.activeExecutionId !== pushData.executionId) {\n\t\t\t\t\t// The data is not for the currently active execution or\n\t\t\t\t\t// we do not have the execution id yet.\n\t\t\t\t\tif (isRetry !== true) {\n\t\t\t\t\t\tthis.queuePushMessage(event, retryAttempts);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// recovered execution data is handled like executionFinished data, however for security reasons\n\t\t\t// we need to fetch the data from the server again rather than push it to all clients\n\t\t\tlet recoveredPushData: IPushDataExecutionFinished | undefined = undefined;\n\t\t\tif (receivedData.type === 'executionRecovered') {\n\t\t\t\tconst recoveredExecutionId = receivedData.data?.executionId;\n\t\t\t\tconst isWorkflowRunning = this.uiStore.isActionActive('workflowRunning');\n\t\t\t\tif (isWorkflowRunning && this.workflowsStore.activeExecutionId === recoveredExecutionId) {\n\t\t\t\t\t// pull execution data for the recovered execution from the server\n\t\t\t\t\tconst executionData = await this.workflowsStore.fetchExecutionDataById(\n\t\t\t\t\t\tthis.workflowsStore.activeExecutionId,\n\t\t\t\t\t);\n\t\t\t\t\tif (executionData?.data) {\n\t\t\t\t\t\t// data comes in as 'flatten' object, so we need to parse it\n\t\t\t\t\t\texecutionData.data = parse(\n\t\t\t\t\t\t\texecutionData.data as unknown as string,\n\t\t\t\t\t\t) as IRunExecutionData;\n\t\t\t\t\t\tconst iRunExecutionData: IRunExecutionData = {\n\t\t\t\t\t\t\tstartData: executionData.data?.startData,\n\t\t\t\t\t\t\tresultData: executionData.data?.resultData ?? { runData: {} },\n\t\t\t\t\t\t\texecutionData: executionData.data?.executionData,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.workflowsStore.workflowExecutionData?.workflowId === executionData.workflowId\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst activeRunData =\n\t\t\t\t\t\t\t\tthis.workflowsStore.workflowExecutionData?.data?.resultData?.runData;\n\t\t\t\t\t\t\tif (activeRunData) {\n\t\t\t\t\t\t\t\tfor (const key of Object.keys(activeRunData)) {\n\t\t\t\t\t\t\t\t\tiRunExecutionData.resultData.runData[key] = activeRunData[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst iRun: IRun = {\n\t\t\t\t\t\t\tdata: iRunExecutionData,\n\t\t\t\t\t\t\tfinished: executionData.finished,\n\t\t\t\t\t\t\tmode: executionData.mode,\n\t\t\t\t\t\t\twaitTill: executionData.data?.waitTill,\n\t\t\t\t\t\t\tstartedAt: executionData.startedAt,\n\t\t\t\t\t\t\tstoppedAt: executionData.stoppedAt,\n\t\t\t\t\t\t\tstatus: 'crashed',\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (executionData.data) {\n\t\t\t\t\t\t\trecoveredPushData = {\n\t\t\t\t\t\t\t\texecutionId: executionData.id,\n\t\t\t\t\t\t\t\tdata: iRun,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (receivedData.type === 'executionFinished' || receivedData.type === 'executionRecovered') {\n\t\t\t\t// The workflow finished executing\n\t\t\t\tlet pushData: IPushDataExecutionFinished;\n\t\t\t\tif (receivedData.type === 'executionRecovered' && recoveredPushData !== undefined) {\n\t\t\t\t\tpushData = recoveredPushData as IPushDataExecutionFinished;\n\t\t\t\t} else {\n\t\t\t\t\tpushData = receivedData.data as IPushDataExecutionFinished;\n\t\t\t\t}\n\n\t\t\t\tif (this.workflowsStore.activeExecutionId === pushData.executionId) {\n\t\t\t\t\tconst activeRunData =\n\t\t\t\t\t\tthis.workflowsStore.workflowExecutionData?.data?.resultData?.runData;\n\t\t\t\t\tif (activeRunData) {\n\t\t\t\t\t\tfor (const key of Object.keys(activeRunData)) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tpushData.data.data.resultData.runData[key]?.[0]?.data?.main?.[0]?.[0]?.json\n\t\t\t\t\t\t\t\t\t?.isArtificialRecoveredEventItem === true &&\n\t\t\t\t\t\t\t\tactiveRunData[key].length > 0\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tpushData.data.data.resultData.runData[key] = activeRunData[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.workflowsStore.finishActiveExecution(pushData);\n\t\t\t\t}\n\n\t\t\t\tif (!this.uiStore.isActionActive('workflowRunning')) {\n\t\t\t\t\t// No workflow is running so ignore the messages\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (this.workflowsStore.activeExecutionId !== pushData.executionId) {\n\t\t\t\t\t// The workflow which did finish execution did either not get started\n\t\t\t\t\t// by this session or we do not have the execution id yet.\n\t\t\t\t\tif (isRetry !== true) {\n\t\t\t\t\t\tthis.queuePushMessage(event, retryAttempts);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst runDataExecuted = pushData.data;\n\n\t\t\t\tlet runDataExecutedErrorMessage = this.$getExecutionError(runDataExecuted.data);\n\n\t\t\t\tif (pushData.data.status === 'crashed') {\n\t\t\t\t\trunDataExecutedErrorMessage = this.$locale.baseText(\n\t\t\t\t\t\t'pushConnection.executionFailed.message',\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst lineNumber =\n\t\t\t\t\trunDataExecuted &&\n\t\t\t\t\trunDataExecuted.data &&\n\t\t\t\t\trunDataExecuted.data.resultData &&\n\t\t\t\t\trunDataExecuted.data.resultData.error &&\n\t\t\t\t\trunDataExecuted.data.resultData.error.lineNumber;\n\n\t\t\t\tcodeNodeEditorEventBus.emit('error-line-number', lineNumber || 'final');\n\n\t\t\t\tconst workflow = this.getCurrentWorkflow();\n\t\t\t\tif (runDataExecuted.waitTill !== undefined) {\n\t\t\t\t\tconst activeExecutionId = this.workflowsStore.activeExecutionId;\n\t\t\t\t\tconst workflowSettings = this.workflowsStore.workflowSettings;\n\t\t\t\t\tconst saveManualExecutions = this.rootStore.saveManualExecutions;\n\n\t\t\t\t\tconst isSavingExecutions =\n\t\t\t\t\t\tworkflowSettings.saveManualExecutions === undefined\n\t\t\t\t\t\t\t? saveManualExecutions\n\t\t\t\t\t\t\t: workflowSettings.saveManualExecutions;\n\n\t\t\t\t\tlet action;\n\t\t\t\t\tif (!isSavingExecutions) {\n\t\t\t\t\t\tthis.$root.$emit('registerGlobalLinkAction', 'open-settings', async () => {\n\t\t\t\t\t\t\tif (this.workflowsStore.isNewWorkflow) await this.saveAsNewWorkflow();\n\t\t\t\t\t\t\tthis.uiStore.openModal(WORKFLOW_SETTINGS_MODAL_KEY);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\taction =\n\t\t\t\t\t\t\t'<a data-action=\"open-settings\">Turn on saving manual executions</a> and run again to see what happened after this node.';\n\t\t\t\t\t} else {\n\t\t\t\t\t\taction = `<a href=\"/workflow/${workflow.id}/executions/${activeExecutionId}\">View the execution</a> to see what happened after this node.`;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workflow did start but had been put to wait\n\t\t\t\t\tthis.titleSet(workflow.name as string, 'IDLE');\n\t\t\t\t\tthis.$showToast({\n\t\t\t\t\t\ttitle: 'Workflow started waiting',\n\t\t\t\t\t\tmessage: `${action} <a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.wait/\" target=\"_blank\">More info</a>`,\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tduration: 0,\n\t\t\t\t\t});\n\t\t\t\t} else if (runDataExecuted.finished !== true) {\n\t\t\t\t\tthis.titleSet(workflow.name as string, 'ERROR');\n\n\t\t\t\t\tif (\n\t\t\t\t\t\trunDataExecuted.data.resultData.error?.name === 'ExpressionError' &&\n\t\t\t\t\t\t(runDataExecuted.data.resultData.error as ExpressionError).context.functionality ===\n\t\t\t\t\t\t\t'pairedItem'\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst error = runDataExecuted.data.resultData.error as ExpressionError;\n\n\t\t\t\t\t\tthis.getWorkflowDataToSave().then((workflowData) => {\n\t\t\t\t\t\t\tconst eventData: IDataObject = {\n\t\t\t\t\t\t\t\tcaused_by_credential: false,\n\t\t\t\t\t\t\t\terror_message: error.description,\n\t\t\t\t\t\t\t\terror_title: error.message,\n\t\t\t\t\t\t\t\terror_type: error.context.type,\n\t\t\t\t\t\t\t\tnode_graph_string: JSON.stringify(\n\t\t\t\t\t\t\t\t\tTelemetryHelpers.generateNodesGraph(\n\t\t\t\t\t\t\t\t\t\tworkflowData as IWorkflowBase,\n\t\t\t\t\t\t\t\t\t\tthis.getNodeTypes(),\n\t\t\t\t\t\t\t\t\t).nodeGraph,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\terror.context.nodeCause &&\n\t\t\t\t\t\t\t\t['no pairing info', 'invalid pairing info'].includes(error.context.type as string)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst node = workflow.getNode(error.context.nodeCause as string);\n\n\t\t\t\t\t\t\t\tif (node) {\n\t\t\t\t\t\t\t\t\teventData.is_pinned = !!workflow.getPinDataOfNode(node.name);\n\t\t\t\t\t\t\t\t\teventData.mode = node.parameters.mode;\n\t\t\t\t\t\t\t\t\teventData.node_type = node.type;\n\t\t\t\t\t\t\t\t\teventData.operation = node.parameters.operation;\n\t\t\t\t\t\t\t\t\teventData.resource = node.parameters.resource;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.$telemetry.track('Instance FE emitted paired item error', eventData);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (runDataExecuted.data.resultData.error?.name === 'SubworkflowOperationError') {\n\t\t\t\t\t\tconst error = runDataExecuted.data.resultData.error as SubworkflowOperationError;\n\n\t\t\t\t\t\tthis.workflowsStore.subWorkflowExecutionError = error;\n\n\t\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\t\ttitle: error.message,\n\t\t\t\t\t\t\tmessage: error.description,\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tduration: 0,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet title: string;\n\t\t\t\t\t\tif (runDataExecuted.data.resultData.lastNodeExecuted) {\n\t\t\t\t\t\t\ttitle = `Problem in node ‘${runDataExecuted.data.resultData.lastNodeExecuted}‘`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttitle = 'Problem executing workflow';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\tmessage: runDataExecutedErrorMessage,\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tduration: 0,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Workflow did execute without a problem\n\t\t\t\t\tthis.titleSet(workflow.name as string, 'IDLE');\n\n\t\t\t\t\tconst execution = this.workflowsStore.getWorkflowExecution;\n\t\t\t\t\tif (execution && execution.executedNode) {\n\t\t\t\t\t\tconst node = this.workflowsStore.getNodeByName(execution.executedNode);\n\t\t\t\t\t\tconst nodeType = node && this.nodeTypesStore.getNodeType(node.type, node.typeVersion);\n\t\t\t\t\t\tconst nodeOutput =\n\t\t\t\t\t\t\texecution &&\n\t\t\t\t\t\t\texecution.executedNode &&\n\t\t\t\t\t\t\texecution.data &&\n\t\t\t\t\t\t\texecution.data.resultData &&\n\t\t\t\t\t\t\texecution.data.resultData.runData &&\n\t\t\t\t\t\t\texecution.data.resultData.runData[execution.executedNode];\n\t\t\t\t\t\tif (nodeType && nodeType.polling && !nodeOutput) {\n\t\t\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\t\t\ttitle: this.$locale.baseText('pushConnection.pollingNode.dataNotFound', {\n\t\t\t\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\t\t\t\tservice: getTriggerNodeServiceName(nodeType),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tmessage: this.$locale.baseText('pushConnection.pollingNode.dataNotFound.message', {\n\t\t\t\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\t\t\t\tservice: getTriggerNodeServiceName(nodeType),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\t\t\ttitle: this.$locale.baseText('pushConnection.nodeExecutedSuccessfully'),\n\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\t\ttitle: this.$locale.baseText('pushConnection.workflowExecutedSuccessfully'),\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// It does not push the runData as it got already pushed with each\n\t\t\t\t// node that did finish. For that reason copy in here the data\n\t\t\t\t// which we already have.\n\t\t\t\tif (this.workflowsStore.getWorkflowRunData) {\n\t\t\t\t\trunDataExecuted.data.resultData.runData = this.workflowsStore.getWorkflowRunData;\n\t\t\t\t}\n\n\t\t\t\tthis.workflowsStore.executingNode = null;\n\t\t\t\tthis.workflowsStore.setWorkflowExecutionData(runDataExecuted as IExecutionResponse);\n\t\t\t\tthis.uiStore.removeActiveAction('workflowRunning');\n\n\t\t\t\t// Set the node execution issues on all the nodes which produced an error so that\n\t\t\t\t// it can be displayed in the node-view\n\t\t\t\tthis.updateNodesExecutionIssues();\n\n\t\t\t\tconst lastNodeExecuted: string | undefined =\n\t\t\t\t\trunDataExecuted.data.resultData.lastNodeExecuted;\n\t\t\t\tlet itemsCount = 0;\n\t\t\t\tif (\n\t\t\t\t\tlastNodeExecuted &&\n\t\t\t\t\trunDataExecuted.data.resultData.runData[lastNodeExecuted as string] &&\n\t\t\t\t\t!runDataExecutedErrorMessage\n\t\t\t\t) {\n\t\t\t\t\titemsCount =\n\t\t\t\t\t\trunDataExecuted.data.resultData.runData[lastNodeExecuted as string][0].data!.main[0]!\n\t\t\t\t\t\t\t.length;\n\t\t\t\t}\n\n\t\t\t\tthis.$externalHooks().run('pushConnection.executionFinished', {\n\t\t\t\t\titemsCount,\n\t\t\t\t\tnodeName: runDataExecuted.data.resultData.lastNodeExecuted,\n\t\t\t\t\terrorMessage: runDataExecutedErrorMessage,\n\t\t\t\t\trunDataExecutedStartData: runDataExecuted.data.startData,\n\t\t\t\t\tresultDataError: runDataExecuted.data.resultData.error,\n\t\t\t\t});\n\t\t\t\tif (!runDataExecuted.data.resultData.error) {\n\t\t\t\t\tthis.segmentStore.trackSuccessfulWorkflowExecution(runDataExecuted);\n\t\t\t\t}\n\t\t\t} else if (receivedData.type === 'executionStarted') {\n\t\t\t\tconst pushData = receivedData.data;\n\n\t\t\t\tconst executionData: IExecutionsCurrentSummaryExtended = {\n\t\t\t\t\tid: pushData.executionId,\n\t\t\t\t\tfinished: false,\n\t\t\t\t\tmode: pushData.mode,\n\t\t\t\t\tstartedAt: pushData.startedAt,\n\t\t\t\t\tretryOf: pushData.retryOf,\n\t\t\t\t\tworkflowId: pushData.workflowId,\n\t\t\t\t\tworkflowName: pushData.workflowName,\n\t\t\t\t};\n\n\t\t\t\tthis.workflowsStore.addActiveExecution(executionData);\n\t\t\t} else if (receivedData.type === 'nodeExecuteAfter') {\n\t\t\t\t// A node finished to execute. Add its data\n\t\t\t\tconst pushData = receivedData.data;\n\t\t\t\tthis.workflowsStore.addNodeExecutionData(pushData);\n\t\t\t} else if (receivedData.type === 'nodeExecuteBefore') {\n\t\t\t\t// A node started to be executed. Set it as executing.\n\t\t\t\tconst pushData = receivedData.data;\n\t\t\t\tthis.workflowsStore.executingNode = pushData.nodeName;\n\t\t\t} else if (receivedData.type === 'testWebhookDeleted') {\n\t\t\t\t// A test-webhook was deleted\n\t\t\t\tconst pushData = receivedData.data;\n\n\t\t\t\tif (pushData.workflowId === this.workflowsStore.workflowId) {\n\t\t\t\t\tthis.workflowsStore.executionWaitingForWebhook = false;\n\t\t\t\t\tthis.uiStore.removeActiveAction('workflowRunning');\n\t\t\t\t}\n\t\t\t} else if (receivedData.type === 'testWebhookReceived') {\n\t\t\t\t// A test-webhook did get called\n\t\t\t\tconst pushData = receivedData.data;\n\n\t\t\t\tif (pushData.workflowId === this.workflowsStore.workflowId) {\n\t\t\t\t\tthis.workflowsStore.executionWaitingForWebhook = false;\n\t\t\t\t\tthis.workflowsStore.activeExecutionId = pushData.executionId;\n\t\t\t\t}\n\n\t\t\t\tthis.processWaitingPushMessages();\n\t\t\t} else if (receivedData.type === 'reloadNodeType') {\n\t\t\t\tawait this.nodeTypesStore.getNodeTypes();\n\t\t\t\tawait this.nodeTypesStore.getFullNodesProperties([receivedData.data]);\n\t\t\t} else if (receivedData.type === 'removeNodeType') {\n\t\t\t\tconst pushData = receivedData.data;\n\n\t\t\t\tconst nodesToBeRemoved: INodeTypeNameVersion[] = [pushData];\n\n\t\t\t\t// Force reload of all credential types\n\t\t\t\tawait this.credentialsStore.fetchCredentialTypes(false).then(() => {\n\t\t\t\t\tthis.nodeTypesStore.removeNodeTypes(nodesToBeRemoved);\n\t\t\t\t});\n\t\t\t} else if (receivedData.type === 'nodeDescriptionUpdated') {\n\t\t\t\tawait this.nodeTypesStore.getNodeTypes();\n\t\t\t\tawait this.credentialsStore.fetchCredentialTypes(true);\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t},\n});\n","<template>\n\t<span :title=\"name\" :data-test-id=\"testId\">\n\t\t<slot :shortenedName=\"shortenedName\"></slot>\n\t</span>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { shorten } from '@/utils';\n\nconst DEFAULT_WORKFLOW_NAME_LIMIT = 25;\nconst WORKFLOW_NAME_END_COUNT_TO_KEEP = 4;\n\nexport default defineComponent({\n\tname: 'ShortenName',\n\tprops: ['name', 'limit', 'testId'],\n\tcomputed: {\n\t\tshortenedName(): string {\n\t\t\treturn shorten(\n\t\t\t\tthis.name,\n\t\t\t\tthis.limit || DEFAULT_WORKFLOW_NAME_LIMIT,\n\t\t\t\tWORKFLOW_NAME_END_COUNT_TO_KEEP,\n\t\t\t);\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<div ref=\"root\">\n\t\t<slot></slot>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tname: 'IntersectionObserver',\n\tprops: ['threshold', 'enabled'],\n\tdata() {\n\t\treturn {\n\t\t\tobserver: null,\n\t\t};\n\t},\n\tmounted() {\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst options = {\n\t\t\troot: this.$refs.root as Element,\n\t\t\trootMargin: '0px',\n\t\t\tthreshold: this.threshold,\n\t\t};\n\n\t\tconst observer = new IntersectionObserver((entries) => {\n\t\t\tentries.forEach(({ target, isIntersecting }) => {\n\t\t\t\tthis.$emit('observed', {\n\t\t\t\t\tel: target,\n\t\t\t\t\tisIntersecting,\n\t\t\t\t});\n\t\t\t});\n\t\t}, options);\n\n\t\tthis.$data.observer = observer;\n\n\t\tthis.$on('observe', (observed: Element) => {\n\t\t\tobserver.observe(observed);\n\t\t});\n\n\t\tthis.$on('unobserve', (observed: Element) => {\n\t\t\tobserver.unobserve(observed);\n\t\t});\n\t},\n\tbeforeDestroy() {\n\t\tif (this.enabled) {\n\t\t\tthis.$data.observer.disconnect();\n\t\t}\n\t},\n});\n</script>\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { defineComponent } from 'vue';\n\nfunction broadcast(\n\tthis: InstanceType<typeof EmitterMixin>,\n\tcomponentName: string,\n\teventName: string,\n\tparams: any,\n) {\n\tthis.$children.forEach((child) => {\n\t\tconst name = child.$options.name;\n\n\t\tif (name === componentName) {\n\t\t\t// eslint-disable-next-line prefer-spread\n\t\t\tchild.$emit.apply(child, [eventName].concat(params) as Parameters<typeof child.$emit>);\n\t\t} else {\n\t\t\tbroadcast.apply(\n\t\t\t\tchild as InstanceType<typeof EmitterMixin>,\n\t\t\t\t[componentName, eventName].concat([params]) as Parameters<typeof broadcast>,\n\t\t\t);\n\t\t}\n\t});\n}\n\nconst EmitterMixin = defineComponent({\n\tmethods: {\n\t\t$dispatch(componentName: string, eventName: string, params: any) {\n\t\t\tlet parent = this.$parent || this.$root;\n\t\t\tlet name = parent.$options.name;\n\n\t\t\twhile (parent && (!name || name !== componentName)) {\n\t\t\t\tparent = parent.$parent as InstanceType<typeof EmitterMixin>;\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tname = parent.$options.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (parent) {\n\t\t\t\t// eslint-disable-next-line prefer-spread\n\t\t\t\tparent.$emit.apply(parent, [eventName].concat(params) as Parameters<typeof parent.$emit>);\n\t\t\t}\n\t\t},\n\n\t\t$broadcast(componentName: string, eventName: string, params: any) {\n\t\t\tbroadcast.call(this, componentName, eventName, params);\n\t\t},\n\t},\n});\n\nexport default EmitterMixin;\n","<template>\n\t<span ref=\"observed\">\n\t\t<slot></slot>\n\t</span>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\nimport emitter from '@/mixins/emitter';\n\nexport default mixins(emitter).extend({\n\tname: 'IntersectionObserved',\n\tprops: ['enabled'],\n\tmounted() {\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.$nextTick(() => {\n\t\t\tthis.$dispatch('IntersectionObserver', 'observe', this.$refs.observed);\n\t\t});\n\t},\n\tbeforeDestroy() {\n\t\tif (this.enabled) {\n\t\t\tthis.$dispatch('IntersectionObserver', 'unobserve', this.$refs.observed);\n\t\t}\n\t},\n});\n</script>\n","<template>\n\t<IntersectionObserver\n\t\t:threshold=\"1.0\"\n\t\t@observed=\"onObserved\"\n\t\tclass=\"tags-container\"\n\t\t:enabled=\"responsive\"\n\t>\n\t\t<template>\n\t\t\t<span class=\"tags\">\n\t\t\t\t<span\n\t\t\t\t\tv-for=\"tag in tags\"\n\t\t\t\t\t:key=\"tag.id\"\n\t\t\t\t\t:class=\"{ clickable: !tag.hidden }\"\n\t\t\t\t\t@click=\"(e) => onClick(e, tag)\"\n\t\t\t\t>\n\t\t\t\t\t<el-tag\n\t\t\t\t\t\t:title=\"tag.title\"\n\t\t\t\t\t\ttype=\"info\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tv-if=\"tag.isCount\"\n\t\t\t\t\t\tclass=\"count-container\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ tag.name }}\n\t\t\t\t\t</el-tag>\n\t\t\t\t\t<IntersectionObserved\n\t\t\t\t\t\t:class=\"{ hidden: tag.hidden }\"\n\t\t\t\t\t\t:data-id=\"tag.id\"\n\t\t\t\t\t\t:enabled=\"responsive\"\n\t\t\t\t\t\tv-else\n\t\t\t\t\t>\n\t\t\t\t\t\t<el-tag :title=\"tag.name\" type=\"info\" size=\"small\" :class=\"{ hoverable }\">\n\t\t\t\t\t\t\t{{ tag.name }}\n\t\t\t\t\t\t</el-tag>\n\t\t\t\t\t</IntersectionObserved>\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t</template>\n\t</IntersectionObserver>\n</template>\n\n<script lang=\"ts\">\nimport Vue, { defineComponent } from 'vue';\n\nimport type { ITag } from '@/Interface';\nimport IntersectionObserver from './IntersectionObserver.vue';\nimport IntersectionObserved from './IntersectionObserved.vue';\nimport { mapStores } from 'pinia';\nimport { useTagsStore } from '@/stores/tags.store';\n\n// random upper limit if none is set to minimize performance impact of observers\nconst DEFAULT_MAX_TAGS_LIMIT = 20;\n\ninterface TagEl extends ITag {\n\thidden?: boolean;\n\ttitle?: string;\n\tisCount?: boolean;\n}\n\nexport default defineComponent({\n\tcomponents: { IntersectionObserver, IntersectionObserved },\n\tname: 'TagsContainer',\n\tprops: ['tagIds', 'limit', 'clickable', 'responsive', 'hoverable'],\n\tdata() {\n\t\treturn {\n\t\t\tvisibility: {} as { [id: string]: boolean },\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useTagsStore),\n\t\ttags() {\n\t\t\tconst tags = this.tagIds\n\t\t\t\t.map((tagId: string) => this.tagsStore.getTagById(tagId))\n\t\t\t\t.filter(Boolean); // if tag has been deleted from store\n\n\t\t\tconst limit = this.limit || DEFAULT_MAX_TAGS_LIMIT;\n\n\t\t\tlet toDisplay: TagEl[] = limit ? tags.slice(0, limit) : tags;\n\t\t\ttoDisplay = toDisplay.map((tag: ITag) => ({\n\t\t\t\t...tag,\n\t\t\t\thidden: this.responsive && !this.$data.visibility[tag.id],\n\t\t\t}));\n\n\t\t\tlet visibleCount = toDisplay.length;\n\t\t\tif (this.responsive) {\n\t\t\t\tvisibleCount = Object.values(this.visibility).reduce(\n\t\t\t\t\t(accu, val) => (val ? accu + 1 : accu),\n\t\t\t\t\t0,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (visibleCount < tags.length) {\n\t\t\t\tconst hidden = tags.slice(visibleCount);\n\t\t\t\tconst hiddenTitle = hidden.reduce((accu: string, tag: ITag) => {\n\t\t\t\t\treturn accu ? `${accu}, ${tag.name}` : tag.name;\n\t\t\t\t}, '');\n\n\t\t\t\tconst countTag: TagEl = {\n\t\t\t\t\tid: 'count',\n\t\t\t\t\tname: `+${hidden.length}`,\n\t\t\t\t\ttitle: hiddenTitle,\n\t\t\t\t\tisCount: true,\n\t\t\t\t};\n\t\t\t\ttoDisplay.splice(visibleCount, 0, countTag);\n\t\t\t}\n\n\t\t\treturn toDisplay;\n\t\t},\n\t},\n\tmethods: {\n\t\tonObserved({ el, isIntersecting }: { el: HTMLElement; isIntersecting: boolean }) {\n\t\t\tif (el.dataset.id) {\n\t\t\t\tVue.set(this.$data.visibility, el.dataset.id, isIntersecting);\n\t\t\t}\n\t\t},\n\t\tonClick(e: MouseEvent, tag: TagEl) {\n\t\t\tif (this.clickable) {\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\n\t\t\t// if tag is hidden or not displayed\n\t\t\tif (!tag.hidden) {\n\t\t\t\tthis.$emit('click', tag.id);\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.tags-container {\n\tdisplay: inline-flex;\n\toverflow: hidden;\n}\n\n.tags {\n\tdisplay: flex;\n\n\t> span {\n\t\tpadding-right: 4px; // why not margin? for space between tags to be clickable\n\t}\n}\n\n.hidden {\n\tvisibility: hidden;\n}\n\n.el-tag.hoverable:hover {\n\tborder-color: $color-primary;\n}\n\n.count-container {\n\tposition: absolute;\n\tmax-width: 40px;\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n}\n</style>\n","<template>\n\t<span>\n\t\t<div class=\"push-connection-lost primary-color\" v-if=\"!rootStore.pushConnectionActive\">\n\t\t\t<n8n-tooltip placement=\"bottom-end\">\n\t\t\t\t<template #content>\n\t\t\t\t\t<div v-html=\"$locale.baseText('pushConnectionTracker.cannotConnectToServer')\"></div>\n\t\t\t\t</template>\n\t\t\t\t<span>\n\t\t\t\t\t<font-awesome-icon icon=\"exclamation-triangle\" />&nbsp;\n\t\t\t\t\t{{ $locale.baseText('pushConnectionTracker.connectionLost') }}\n\t\t\t\t</span>\n\t\t\t</n8n-tooltip>\n\t\t</div>\n\t\t<slot v-else />\n\t</span>\n</template>\n\n<script lang=\"ts\">\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { mapStores } from 'pinia';\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tname: 'PushConnectionTracker',\n\tcomputed: {\n\t\t...mapStores(useRootStore),\n\t},\n});\n</script>\n","<template>\n\t<!-- mock el-input element to apply styles -->\n\t<div :class=\"{ 'el-input': true, 'static-size': staticSize }\" :data-value=\"hiddenValue\">\n\t\t<slot></slot>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tname: 'ExpandableInputBase',\n\tprops: ['value', 'placeholder', 'staticSize'],\n\tcomputed: {\n\t\thiddenValue() {\n\t\t\tlet value = (this.value as string).replace(/\\s/g, '.'); // force input to expand on space chars\n\t\t\tif (!value) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tvalue = this.placeholder;\n\t\t\t}\n\n\t\t\treturn `${value}`; // adjust for padding\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" scoped>\n$--horiz-padding: 15px;\n\ninput {\n\tborder: 1px solid transparent;\n\tpadding: 0 $--horiz-padding - 2px; // -2px for borders\n}\n\ndiv.el-input {\n\tdisplay: inline-grid;\n\tfont: inherit;\n\tpadding: 10px 0;\n\n\t&::after,\n\tinput {\n\t\tgrid-area: 1 / 2;\n\t\tfont: inherit;\n\t}\n\n\t&::after {\n\t\tcontent: attr(data-value) ' ';\n\t\tvisibility: hidden;\n\t\twhite-space: nowrap;\n\t\tpadding: 0 $--horiz-padding;\n\t}\n\n\t&:not(.static-size)::after {\n\t\toverflow: hidden;\n\t}\n\n\t&:hover {\n\t\tinput:not(:focus) {\n\t\t\tborder: 1px solid var(--color-text-lighter);\n\t\t}\n\t}\n}\n</style>\n","<template>\n\t<ExpandableInputBase :value=\"value\" :placeholder=\"placeholder\">\n\t\t<input\n\t\t\tclass=\"el-input__inner\"\n\t\t\t:value=\"value\"\n\t\t\t:placeholder=\"placeholder\"\n\t\t\t:maxlength=\"maxlength\"\n\t\t\t@input=\"onInput\"\n\t\t\t@keydown.enter=\"onEnter\"\n\t\t\t@keydown.esc=\"onEscape\"\n\t\t\tref=\"input\"\n\t\t\tsize=\"4\"\n\t\t\tv-click-outside=\"onClickOutside\"\n\t\t/>\n\t</ExpandableInputBase>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport ExpandableInputBase from './ExpandableInputBase.vue';\nimport type { PropType } from 'vue';\nimport type { EventBus } from '@/event-bus';\n\nexport default defineComponent({\n\tcomponents: { ExpandableInputBase },\n\tname: 'ExpandableInputEdit',\n\tprops: {\n\t\tvalue: {},\n\t\tplaceholder: {},\n\t\tmaxlength: {},\n\t\tautofocus: {},\n\t\teventBus: {\n\t\t\ttype: Object as PropType<EventBus>,\n\t\t},\n\t},\n\tmounted() {\n\t\t// autofocus on input element is not reliable\n\t\tif (this.autofocus && this.$refs.input) {\n\t\t\tthis.focus();\n\t\t}\n\t\tthis.eventBus?.on('focus', this.focus);\n\t},\n\tdestroyed() {\n\t\tthis.eventBus?.off('focus', this.focus);\n\t},\n\tmethods: {\n\t\tfocus() {\n\t\t\tif (this.$refs.input) {\n\t\t\t\t(this.$refs.input as HTMLInputElement).focus();\n\t\t\t}\n\t\t},\n\t\tonInput() {\n\t\t\tthis.$emit('input', (this.$refs.input as HTMLInputElement).value);\n\t\t},\n\t\tonEnter() {\n\t\t\tthis.$emit('enter', (this.$refs.input as HTMLInputElement).value);\n\t\t},\n\t\tonClickOutside(e: Event) {\n\t\t\tif (e.type === 'click') {\n\t\t\t\tthis.$emit('blur', (this.$refs.input as HTMLInputElement).value);\n\t\t\t}\n\t\t},\n\t\tonEscape() {\n\t\t\tthis.$emit('esc');\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<ExpandableInputBase :value=\"value\" :staticSize=\"true\">\n\t\t<template>\n\t\t\t<input\n\t\t\t\t:class=\"{ 'el-input__inner': true, clickable: true }\"\n\t\t\t\t:value=\"value\"\n\t\t\t\t:disabled=\"true\"\n\t\t\t\tsize=\"4\"\n\t\t\t/>\n\t\t</template>\n\t</ExpandableInputBase>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport ExpandableInputBase from './ExpandableInputBase.vue';\n\nexport default defineComponent({\n\tcomponents: { ExpandableInputBase },\n\tname: 'ExpandableInputPreview',\n\tprops: ['value'],\n});\n</script>\n\n<style lang=\"scss\" scoped>\ninput,\ninput:hover {\n\tbackground-color: unset;\n\ttransition: unset;\n\tpointer-events: none; // fix firefox bug\n}\n\ninput[disabled] {\n\tcolor: $custom-font-black;\n\n\t// override safari colors\n\t-webkit-text-fill-color: $custom-font-black;\n\t-webkit-opacity: 1;\n}\n</style>\n","<template>\n\t<span @keydown.stop class=\"inline-edit\">\n\t\t<span v-if=\"isEditEnabled\">\n\t\t\t<ExpandableInputEdit\n\t\t\t\t:placeholder=\"placeholder\"\n\t\t\t\t:value=\"newValue\"\n\t\t\t\t:maxlength=\"maxLength\"\n\t\t\t\t:autofocus=\"true\"\n\t\t\t\t:eventBus=\"inputBus\"\n\t\t\t\t@input=\"onInput\"\n\t\t\t\t@esc=\"onEscape\"\n\t\t\t\t@blur=\"onBlur\"\n\t\t\t\t@enter=\"submit\"\n\t\t\t/>\n\t\t</span>\n\n\t\t<span @click=\"onClick\" class=\"preview\" v-else>\n\t\t\t<ExpandableInputPreview :value=\"previewValue || value\" />\n\t\t</span>\n\t</span>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport ExpandableInputEdit from '@/components/ExpandableInput/ExpandableInputEdit.vue';\nimport ExpandableInputPreview from '@/components/ExpandableInput/ExpandableInputPreview.vue';\nimport { createEventBus } from '@/event-bus';\n\nexport default defineComponent({\n\tname: 'InlineTextEdit',\n\tcomponents: { ExpandableInputEdit, ExpandableInputPreview },\n\tprops: ['isEditEnabled', 'value', 'placeholder', 'maxLength', 'previewValue'],\n\tdata() {\n\t\treturn {\n\t\t\tnewValue: '',\n\t\t\tescPressed: false,\n\t\t\tdisabled: false,\n\t\t\tinputBus: createEventBus(),\n\t\t};\n\t},\n\tmethods: {\n\t\tonInput(newValue: string) {\n\t\t\tif (this.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.newValue = newValue;\n\t\t},\n\t\tonClick() {\n\t\t\tif (this.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$data.newValue = this.value;\n\t\t\tthis.$emit('toggle');\n\t\t},\n\t\tonBlur() {\n\t\t\tif (this.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.$data.escPressed) {\n\t\t\t\tthis.submit();\n\t\t\t}\n\t\t\tthis.$data.escPressed = false;\n\t\t},\n\t\tsubmit() {\n\t\t\tif (this.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst onSubmit = (updated: boolean) => {\n\t\t\t\tthis.$data.disabled = false;\n\n\t\t\t\tif (!updated) {\n\t\t\t\t\tthis.$data.inputBus.emit('focus');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.$data.disabled = true;\n\t\t\tthis.$emit('submit', this.newValue, onSubmit);\n\t\t},\n\t\tonEscape() {\n\t\t\tif (this.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$data.escPressed = true;\n\t\t\tthis.$emit('toggle');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.preview {\n\tcursor: pointer;\n}\n</style>\n","<template>\n\t<span>\n\t\t<slot v-bind:bp=\"bp\" v-bind:value=\"value\" />\n\t</span>\n</template>\n\n<script lang=\"ts\">\nimport { BREAKPOINT_SM, BREAKPOINT_MD, BREAKPOINT_LG, BREAKPOINT_XL } from '@/constants';\n\n/**\n * matching element.io https://element.eleme.io/#/en-US/component/layout#col-attributes\n * xs < 768\n * sm >= 768\n * md >= 992\n * lg >= 1200\n * xl >= 1920\n */\n\nimport mixins from 'vue-typed-mixins';\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport { debounceHelper } from '@/mixins/debounce';\n\nexport default mixins(genericHelpers, debounceHelper).extend({\n\tname: 'BreakpointsObserver',\n\tprops: ['valueXS', 'valueXL', 'valueLG', 'valueMD', 'valueSM', 'valueDefault'],\n\tdata() {\n\t\treturn {\n\t\t\twidth: window.innerWidth,\n\t\t};\n\t},\n\tcreated() {\n\t\twindow.addEventListener('resize', this.onResize);\n\t},\n\tbeforeDestroy() {\n\t\twindow.removeEventListener('resize', this.onResize);\n\t},\n\tmethods: {\n\t\tonResize() {\n\t\t\tthis.callDebounced('onResizeEnd', { debounceTime: 50 });\n\t\t},\n\t\tonResizeEnd() {\n\t\t\tthis.$data.width = window.innerWidth;\n\t\t},\n\t},\n\tcomputed: {\n\t\tbp(): string {\n\t\t\tif (this.$data.width < BREAKPOINT_SM) {\n\t\t\t\treturn 'XS';\n\t\t\t}\n\n\t\t\tif (this.$data.width >= BREAKPOINT_XL) {\n\t\t\t\treturn 'XL';\n\t\t\t}\n\n\t\t\tif (this.$data.width >= BREAKPOINT_LG) {\n\t\t\t\treturn 'LG';\n\t\t\t}\n\n\t\t\tif (this.$data.width >= BREAKPOINT_MD) {\n\t\t\t\treturn 'MD';\n\t\t\t}\n\n\t\t\treturn 'SM';\n\t\t},\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tvalue(): any | undefined {\n\t\t\tif (this.valueXS !== undefined && this.$data.width < BREAKPOINT_SM) {\n\t\t\t\treturn this.valueXS;\n\t\t\t}\n\n\t\t\tif (this.valueXL !== undefined && this.$data.width >= BREAKPOINT_XL) {\n\t\t\t\treturn this.valueXL;\n\t\t\t}\n\n\t\t\tif (this.valueLG !== undefined && this.$data.width >= BREAKPOINT_LG) {\n\t\t\t\treturn this.valueLG;\n\t\t\t}\n\n\t\t\tif (this.valueMD !== undefined && this.$data.width >= BREAKPOINT_MD) {\n\t\t\t\treturn this.valueMD;\n\t\t\t}\n\n\t\t\tif (this.valueSM !== undefined) {\n\t\t\t\treturn this.valueSM;\n\t\t\t}\n\n\t\t\treturn this.valueDefault;\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<div class=\"container\" v-if=\"workflowName\">\n\t\t<BreakpointsObserver :valueXS=\"15\" :valueSM=\"25\" :valueMD=\"50\" class=\"name-container\">\n\t\t\t<template #default=\"{ value }\">\n\t\t\t\t<ShortenName\n\t\t\t\t\t:name=\"workflowName\"\n\t\t\t\t\t:limit=\"value\"\n\t\t\t\t\t:custom=\"true\"\n\t\t\t\t\ttestId=\"workflow-name-input\"\n\t\t\t\t>\n\t\t\t\t\t<template #default=\"{ shortenedName }\">\n\t\t\t\t\t\t<InlineTextEdit\n\t\t\t\t\t\t\t:value=\"workflowName\"\n\t\t\t\t\t\t\t:previewValue=\"shortenedName\"\n\t\t\t\t\t\t\t:isEditEnabled=\"isNameEditEnabled\"\n\t\t\t\t\t\t\t:maxLength=\"MAX_WORKFLOW_NAME_LENGTH\"\n\t\t\t\t\t\t\t@toggle=\"onNameToggle\"\n\t\t\t\t\t\t\t@submit=\"onNameSubmit\"\n\t\t\t\t\t\t\tplaceholder=\"Enter workflow name\"\n\t\t\t\t\t\t\tclass=\"name\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</template>\n\t\t\t\t</ShortenName>\n\t\t\t</template>\n\t\t</BreakpointsObserver>\n\n\t\t<span v-if=\"settingsStore.areTagsEnabled\" class=\"tags\" data-test-id=\"workflow-tags-container\">\n\t\t\t<div v-if=\"isTagsEditEnabled\">\n\t\t\t\t<TagsDropdown\n\t\t\t\t\t:createEnabled=\"true\"\n\t\t\t\t\t:currentTagIds=\"appliedTagIds\"\n\t\t\t\t\t:eventBus=\"tagsEditBus\"\n\t\t\t\t\t@blur=\"onTagsBlur\"\n\t\t\t\t\t@update=\"onTagsUpdate\"\n\t\t\t\t\t@esc=\"onTagsEditEsc\"\n\t\t\t\t\t:placeholder=\"$locale.baseText('workflowDetails.chooseOrCreateATag')\"\n\t\t\t\t\tref=\"dropdown\"\n\t\t\t\t\tclass=\"tags-edit\"\n\t\t\t\t\tdata-test-id=\"workflow-tags-dropdown\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div v-else-if=\"currentWorkflowTagIds.length === 0\">\n\t\t\t\t<span class=\"add-tag clickable\" data-test-id=\"new-tag-link\" @click=\"onTagsEditEnable\">\n\t\t\t\t\t+ {{ $locale.baseText('workflowDetails.addTag') }}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<TagsContainer\n\t\t\t\tv-else\n\t\t\t\t:tagIds=\"currentWorkflowTagIds\"\n\t\t\t\t:clickable=\"true\"\n\t\t\t\t:responsive=\"true\"\n\t\t\t\t:key=\"currentWorkflowId\"\n\t\t\t\t@click=\"onTagsEditEnable\"\n\t\t\t\tdata-test-id=\"workflow-tags\"\n\t\t\t/>\n\t\t</span>\n\t\t<span v-else class=\"tags\"></span>\n\n\t\t<PushConnectionTracker class=\"actions\">\n\t\t\t<template>\n\t\t\t\t<span class=\"activator\">\n\t\t\t\t\t<WorkflowActivator :workflow-active=\"isWorkflowActive\" :workflow-id=\"currentWorkflowId\" />\n\t\t\t\t</span>\n\t\t\t\t<enterprise-edition :features=\"[EnterpriseEditionFeature.Sharing]\">\n\t\t\t\t\t<n8n-button\n\t\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t\tclass=\"mr-2xs\"\n\t\t\t\t\t\t@click=\"onShareButtonClick\"\n\t\t\t\t\t\tdata-test-id=\"workflow-share-button\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $locale.baseText('workflowDetails.share') }}\n\t\t\t\t\t</n8n-button>\n\t\t\t\t\t<template #fallback>\n\t\t\t\t\t\t<n8n-tooltip>\n\t\t\t\t\t\t\t<n8n-button type=\"secondary\" :class=\"['mr-2xs', $style.disabledShareButton]\">\n\t\t\t\t\t\t\t\t{{ $locale.baseText('workflowDetails.share') }}\n\t\t\t\t\t\t\t</n8n-button>\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<i18n\n\t\t\t\t\t\t\t\t\t:path=\"\n\t\t\t\t\t\t\t\t\t\tcontextBasedTranslationKeys.workflows.sharing.unavailable.description.tooltip\n\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t\ttag=\"span\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<template #action>\n\t\t\t\t\t\t\t\t\t\t<a @click=\"goToUpgrade\">\n\t\t\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\t\t\t$locale.baseText(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontextBasedTranslationKeys.workflows.sharing.unavailable.button,\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</i18n>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</template>\n\t\t\t\t</enterprise-edition>\n\t\t\t\t<SaveButton\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t:saved=\"!this.isDirty && !this.isNewWorkflow\"\n\t\t\t\t\t:disabled=\"isWorkflowSaving\"\n\t\t\t\t\tdata-test-id=\"workflow-save-button\"\n\t\t\t\t\t@click=\"onSaveButtonClick\"\n\t\t\t\t/>\n\t\t\t\t<div :class=\"$style.workflowMenuContainer\">\n\t\t\t\t\t<input\n\t\t\t\t\t\t:class=\"$style.hiddenInput\"\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tref=\"importFile\"\n\t\t\t\t\t\tdata-test-id=\"workflow-import-input\"\n\t\t\t\t\t\t@change=\"handleFileImport()\"\n\t\t\t\t\t/>\n\t\t\t\t\t<n8n-action-dropdown\n\t\t\t\t\t\t:items=\"workflowMenuItems\"\n\t\t\t\t\t\tdata-test-id=\"workflow-menu\"\n\t\t\t\t\t\t@select=\"onWorkflowMenuSelect\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</PushConnectionTracker>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\nimport {\n\tDUPLICATE_MODAL_KEY,\n\tEnterpriseEditionFeature,\n\tMAX_WORKFLOW_NAME_LENGTH,\n\tPLACEHOLDER_EMPTY_WORKFLOW_ID,\n\tVIEWS,\n\tWORKFLOW_MENU_ACTIONS,\n\tWORKFLOW_SETTINGS_MODAL_KEY,\n\tWORKFLOW_SHARE_MODAL_KEY,\n} from '@/constants';\n\nimport ShortenName from '@/components/ShortenName.vue';\nimport TagsContainer from '@/components/TagsContainer.vue';\nimport PushConnectionTracker from '@/components/PushConnectionTracker.vue';\nimport WorkflowActivator from '@/components/WorkflowActivator.vue';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport SaveButton from '@/components/SaveButton.vue';\nimport TagsDropdown from '@/components/TagsDropdown.vue';\nimport InlineTextEdit from '@/components/InlineTextEdit.vue';\nimport BreakpointsObserver from '@/components/BreakpointsObserver.vue';\nimport type { IUser, IWorkflowDataUpdate, IWorkflowDb, IWorkflowToShare } from '@/Interface';\n\nimport { saveAs } from 'file-saver';\nimport { useTitleChange } from '@/composables/useTitleChange';\nimport type { MessageBoxInputData } from 'element-ui/types/message-box';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { useTagsStore } from '@/stores/tags.store';\nimport type { IPermissions } from '@/permissions';\nimport { getWorkflowPermissions } from '@/permissions';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useUsageStore } from '@/stores/usage.store';\nimport { createEventBus } from '@/event-bus';\n\nconst hasChanged = (prev: string[], curr: string[]) => {\n\tif (prev.length !== curr.length) {\n\t\treturn true;\n\t}\n\n\tconst set = new Set(prev);\n\treturn curr.reduce((accu, val) => accu || !set.has(val), false);\n};\n\nexport default mixins(workflowHelpers).extend({\n\tname: 'WorkflowDetails',\n\tcomponents: {\n\t\tTagsContainer,\n\t\tPushConnectionTracker,\n\t\tShortenName,\n\t\tWorkflowActivator,\n\t\tSaveButton,\n\t\tTagsDropdown,\n\t\tInlineTextEdit,\n\t\tBreakpointsObserver,\n\t},\n\tsetup() {\n\t\treturn {\n\t\t\t...useTitleChange(),\n\t\t};\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisTagsEditEnabled: false,\n\t\t\tisNameEditEnabled: false,\n\t\t\tappliedTagIds: [],\n\t\t\ttagsEditBus: createEventBus(),\n\t\t\tMAX_WORKFLOW_NAME_LENGTH,\n\t\t\ttagsSaving: false,\n\t\t\tEnterpriseEditionFeature,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(\n\t\t\tuseTagsStore,\n\t\t\tuseRootStore,\n\t\t\tuseSettingsStore,\n\t\t\tuseUIStore,\n\t\t\tuseUsageStore,\n\t\t\tuseWorkflowsStore,\n\t\t\tuseUsersStore,\n\t\t),\n\t\tcurrentUser(): IUser | null {\n\t\t\treturn this.usersStore.currentUser;\n\t\t},\n\t\tcontextBasedTranslationKeys(): NestedRecord<string> {\n\t\t\treturn this.uiStore.contextBasedTranslationKeys;\n\t\t},\n\t\tisWorkflowActive(): boolean {\n\t\t\treturn this.workflowsStore.isWorkflowActive;\n\t\t},\n\t\tworkflowName(): string {\n\t\t\treturn this.workflowsStore.workflowName;\n\t\t},\n\t\tisDirty(): boolean {\n\t\t\treturn this.uiStore.stateIsDirty;\n\t\t},\n\t\tcurrentWorkflowTagIds(): string[] {\n\t\t\treturn this.workflowsStore.workflowTags;\n\t\t},\n\t\tisNewWorkflow(): boolean {\n\t\t\treturn (\n\t\t\t\t!this.currentWorkflowId ||\n\t\t\t\tthis.currentWorkflowId === PLACEHOLDER_EMPTY_WORKFLOW_ID ||\n\t\t\t\tthis.currentWorkflowId === 'new'\n\t\t\t);\n\t\t},\n\t\tisWorkflowSaving(): boolean {\n\t\t\treturn this.uiStore.isActionActive('workflowSaving');\n\t\t},\n\t\tworkflow(): IWorkflowDb {\n\t\t\treturn this.workflowsStore.workflow;\n\t\t},\n\t\tcurrentWorkflowId(): string {\n\t\t\treturn this.workflowsStore.workflowId;\n\t\t},\n\t\tonWorkflowPage(): boolean {\n\t\t\treturn (\n\t\t\t\tthis.$route.meta &&\n\t\t\t\t(this.$route.meta.nodeView || this.$route.meta.keepWorkflowAlive === true)\n\t\t\t);\n\t\t},\n\t\tonExecutionsTab(): boolean {\n\t\t\treturn [\n\t\t\t\tVIEWS.EXECUTION_HOME.toString(),\n\t\t\t\tVIEWS.WORKFLOW_EXECUTIONS.toString(),\n\t\t\t\tVIEWS.EXECUTION_PREVIEW,\n\t\t\t].includes(this.$route.name || '');\n\t\t},\n\t\tworkflowPermissions(): IPermissions {\n\t\t\treturn getWorkflowPermissions(this.usersStore.currentUser, this.workflow);\n\t\t},\n\t\tworkflowMenuItems(): Array<{}> {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: WORKFLOW_MENU_ACTIONS.DUPLICATE,\n\t\t\t\t\tlabel: this.$locale.baseText('menuActions.duplicate'),\n\t\t\t\t\tdisabled: !this.onWorkflowPage || !this.currentWorkflowId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: WORKFLOW_MENU_ACTIONS.DOWNLOAD,\n\t\t\t\t\tlabel: this.$locale.baseText('menuActions.download'),\n\t\t\t\t\tdisabled: !this.onWorkflowPage,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: WORKFLOW_MENU_ACTIONS.IMPORT_FROM_URL,\n\t\t\t\t\tlabel: this.$locale.baseText('menuActions.importFromUrl'),\n\t\t\t\t\tdisabled: !this.onWorkflowPage || this.onExecutionsTab,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: WORKFLOW_MENU_ACTIONS.IMPORT_FROM_FILE,\n\t\t\t\t\tlabel: this.$locale.baseText('menuActions.importFromFile'),\n\t\t\t\t\tdisabled: !this.onWorkflowPage || this.onExecutionsTab,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: WORKFLOW_MENU_ACTIONS.SETTINGS,\n\t\t\t\t\tlabel: this.$locale.baseText('generic.settings'),\n\t\t\t\t\tdisabled: !this.onWorkflowPage || this.isNewWorkflow,\n\t\t\t\t},\n\t\t\t\t...(this.workflowPermissions.delete\n\t\t\t\t\t? [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: WORKFLOW_MENU_ACTIONS.DELETE,\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('menuActions.delete'),\n\t\t\t\t\t\t\t\tdisabled: !this.onWorkflowPage || this.isNewWorkflow,\n\t\t\t\t\t\t\t\tcustomClass: this.$style.deleteItem,\n\t\t\t\t\t\t\t\tdivided: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ]\n\t\t\t\t\t: []),\n\t\t\t];\n\t\t},\n\t},\n\tmethods: {\n\t\tasync onSaveButtonClick() {\n\t\t\tlet currentId = undefined;\n\t\t\tif (this.currentWorkflowId !== PLACEHOLDER_EMPTY_WORKFLOW_ID) {\n\t\t\t\tcurrentId = this.currentWorkflowId;\n\t\t\t} else if (this.$route.params.name && this.$route.params.name !== 'new') {\n\t\t\t\tcurrentId = this.$route.params.name;\n\t\t\t}\n\t\t\tconst saved = await this.saveCurrentWorkflow({\n\t\t\t\tid: currentId,\n\t\t\t\tname: this.workflowName,\n\t\t\t\ttags: this.currentWorkflowTagIds,\n\t\t\t});\n\t\t\tif (saved) await this.settingsStore.fetchPromptsData();\n\t\t},\n\t\tonShareButtonClick() {\n\t\t\tthis.uiStore.openModalWithData({\n\t\t\t\tname: WORKFLOW_SHARE_MODAL_KEY,\n\t\t\t\tdata: { id: this.currentWorkflowId },\n\t\t\t});\n\n\t\t\tthis.$telemetry.track('User opened sharing modal', {\n\t\t\t\tworkflow_id: this.currentWorkflowId,\n\t\t\t\tuser_id_sharer: this.currentUser?.id,\n\t\t\t\tsub_view: this.$route.name === VIEWS.WORKFLOWS ? 'Workflows listing' : 'Workflow editor',\n\t\t\t});\n\t\t},\n\t\tonTagsEditEnable() {\n\t\t\tthis.$data.appliedTagIds = this.currentWorkflowTagIds;\n\t\t\tthis.$data.isTagsEditEnabled = true;\n\n\t\t\tsetTimeout(() => {\n\t\t\t\t// allow name update to occur before disabling name edit\n\t\t\t\tthis.$data.isNameEditEnabled = false;\n\t\t\t\tthis.$data.tagsEditBus.emit('focus');\n\t\t\t}, 0);\n\t\t},\n\t\tasync onTagsUpdate(tags: string[]) {\n\t\t\tthis.$data.appliedTagIds = tags;\n\t\t},\n\n\t\tasync onTagsBlur() {\n\t\t\tconst current = this.currentWorkflowTagIds;\n\t\t\tconst tags = this.$data.appliedTagIds;\n\t\t\tif (!hasChanged(current, tags)) {\n\t\t\t\tthis.$data.isTagsEditEnabled = false;\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.$data.tagsSaving) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.$data.tagsSaving = true;\n\n\t\t\tconst saved = await this.saveCurrentWorkflow({ tags });\n\t\t\tthis.$telemetry.track('User edited workflow tags', {\n\t\t\t\tworkflow_id: this.currentWorkflowId as string,\n\t\t\t\tnew_tag_count: tags.length,\n\t\t\t});\n\n\t\t\tthis.$data.tagsSaving = false;\n\t\t\tif (saved) {\n\t\t\t\tthis.$data.isTagsEditEnabled = false;\n\t\t\t}\n\t\t},\n\t\tonTagsEditEsc() {\n\t\t\tthis.$data.isTagsEditEnabled = false;\n\t\t},\n\t\tonNameToggle() {\n\t\t\tthis.$data.isNameEditEnabled = !this.$data.isNameEditEnabled;\n\t\t\tif (this.$data.isNameEditEnabled) {\n\t\t\t\tif (this.$data.isTagsEditEnabled) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tvoid this.onTagsBlur();\n\t\t\t\t}\n\n\t\t\t\tthis.$data.isTagsEditEnabled = false;\n\t\t\t}\n\t\t},\n\t\tasync onNameSubmit(name: string, cb: (saved: boolean) => void) {\n\t\t\tconst newName = name.trim();\n\t\t\tif (!newName) {\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('workflowDetails.showMessage.title'),\n\t\t\t\t\tmessage: this.$locale.baseText('workflowDetails.showMessage.message'),\n\t\t\t\t\ttype: 'error',\n\t\t\t\t});\n\n\t\t\t\tcb(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (newName === this.workflowName) {\n\t\t\t\tthis.$data.isNameEditEnabled = false;\n\n\t\t\t\tcb(true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst saved = await this.saveCurrentWorkflow({ name });\n\t\t\tif (saved) {\n\t\t\t\tthis.$data.isNameEditEnabled = false;\n\t\t\t}\n\t\t\tcb(saved);\n\t\t},\n\t\tasync handleFileImport(): Promise<void> {\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onload = (event: ProgressEvent) => {\n\t\t\t\tconst data = (event.target as FileReader).result;\n\n\t\t\t\tlet workflowData: IWorkflowDataUpdate;\n\t\t\t\ttry {\n\t\t\t\t\tworkflowData = JSON.parse(data as string);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: this.$locale.baseText('mainSidebar.showMessage.handleFileImport.title'),\n\t\t\t\t\t\tmessage: this.$locale.baseText('mainSidebar.showMessage.handleFileImport.message'),\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.$root.$emit('importWorkflowData', { data: workflowData });\n\t\t\t};\n\n\t\t\tconst inputRef = this.$refs.importFile as HTMLInputElement | undefined;\n\t\t\tif (inputRef?.files && inputRef.files.length !== 0) {\n\t\t\t\treader.readAsText(inputRef.files[0]);\n\t\t\t}\n\t\t},\n\t\tasync onWorkflowMenuSelect(action: string): Promise<void> {\n\t\t\tswitch (action) {\n\t\t\t\tcase WORKFLOW_MENU_ACTIONS.DUPLICATE: {\n\t\t\t\t\tthis.uiStore.openModalWithData({\n\t\t\t\t\t\tname: DUPLICATE_MODAL_KEY,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tid: this.workflowsStore.workflowId,\n\t\t\t\t\t\t\tname: this.workflowsStore.workflowName,\n\t\t\t\t\t\t\ttags: this.workflowsStore.workflowTags,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase WORKFLOW_MENU_ACTIONS.DOWNLOAD: {\n\t\t\t\t\tconst workflowData = await this.getWorkflowDataToSave();\n\t\t\t\t\tconst { tags, ...data } = workflowData;\n\t\t\t\t\tconst exportData: IWorkflowToShare = {\n\t\t\t\t\t\t...data,\n\t\t\t\t\t\tmeta: {\n\t\t\t\t\t\t\tinstanceId: this.rootStore.instanceId,\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttags: (tags || []).map((tagId) => {\n\t\t\t\t\t\t\tconst { usageCount, ...tag } = this.tagsStore.getTagById(tagId);\n\n\t\t\t\t\t\t\treturn tag;\n\t\t\t\t\t\t}),\n\t\t\t\t\t};\n\n\t\t\t\t\tconst blob = new Blob([JSON.stringify(exportData, null, 2)], {\n\t\t\t\t\t\ttype: 'application/json;charset=utf-8',\n\t\t\t\t\t});\n\n\t\t\t\t\tlet workflowName = this.workflowName || 'unsaved_workflow';\n\t\t\t\t\tworkflowName = workflowName.replace(/[^a-z0-9]/gi, '_');\n\n\t\t\t\t\tthis.$telemetry.track('User exported workflow', { workflow_id: workflowData.id });\n\t\t\t\t\tsaveAs(blob, workflowName + '.json');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase WORKFLOW_MENU_ACTIONS.IMPORT_FROM_URL: {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst promptResponse = (await this.$prompt(\n\t\t\t\t\t\t\tthis.$locale.baseText('mainSidebar.prompt.workflowUrl') + ':',\n\t\t\t\t\t\t\tthis.$locale.baseText('mainSidebar.prompt.importWorkflowFromUrl') + ':',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconfirmButtonText: this.$locale.baseText('mainSidebar.prompt.import'),\n\t\t\t\t\t\t\t\tcancelButtonText: this.$locale.baseText('mainSidebar.prompt.cancel'),\n\t\t\t\t\t\t\t\tinputErrorMessage: this.$locale.baseText('mainSidebar.prompt.invalidUrl'),\n\t\t\t\t\t\t\t\tinputPattern: /^http[s]?:\\/\\/.*\\.json$/i,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t)) as MessageBoxInputData;\n\n\t\t\t\t\t\tthis.$root.$emit('importWorkflowUrl', { url: promptResponse.value });\n\t\t\t\t\t} catch (e) {}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase WORKFLOW_MENU_ACTIONS.IMPORT_FROM_FILE: {\n\t\t\t\t\t(this.$refs.importFile as HTMLInputElement).click();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase WORKFLOW_MENU_ACTIONS.SETTINGS: {\n\t\t\t\t\tthis.uiStore.openModal(WORKFLOW_SETTINGS_MODAL_KEY);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase WORKFLOW_MENU_ACTIONS.DELETE: {\n\t\t\t\t\tconst deleteConfirmed = await this.confirmMessage(\n\t\t\t\t\t\tthis.$locale.baseText('mainSidebar.confirmMessage.workflowDelete.message', {\n\t\t\t\t\t\t\tinterpolate: { workflowName: this.workflowName },\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tthis.$locale.baseText('mainSidebar.confirmMessage.workflowDelete.headline'),\n\t\t\t\t\t\t'warning',\n\t\t\t\t\t\tthis.$locale.baseText('mainSidebar.confirmMessage.workflowDelete.confirmButtonText'),\n\t\t\t\t\t\tthis.$locale.baseText('mainSidebar.confirmMessage.workflowDelete.cancelButtonText'),\n\t\t\t\t\t);\n\n\t\t\t\t\tif (deleteConfirmed === false) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.workflowsStore.deleteWorkflow(this.currentWorkflowId);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.$showError(error, this.$locale.baseText('generic.deleteWorkflowError'));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.uiStore.stateIsDirty = false;\n\t\t\t\t\t// Reset tab title since workflow is deleted.\n\t\t\t\t\tthis.titleReset();\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: this.$locale.baseText('mainSidebar.showMessage.handleSelect1.title'),\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.$router.push({ name: VIEWS.NEW_WORKFLOW });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\tgoToUpgrade() {\n\t\t\tthis.uiStore.goToUpgrade('workflow_sharing', 'upgrade-workflow-sharing');\n\t\t},\n\t},\n\twatch: {\n\t\tcurrentWorkflowId() {\n\t\t\tthis.$data.isTagsEditEnabled = false;\n\t\t\tthis.$data.isNameEditEnabled = false;\n\t\t},\n\t},\n});\n</script>\n\n<style scoped lang=\"scss\">\n$--text-line-height: 24px;\n$--header-spacing: 20px;\n\n.container {\n\tposition: relative;\n\ttop: -1px;\n\twidth: 100%;\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.name-container {\n\tmargin-right: $--header-spacing;\n}\n\n.name {\n\tcolor: $custom-font-dark;\n\tfont-size: 15px;\n}\n\n.activator {\n\tcolor: $custom-font-dark;\n\tfont-weight: 400;\n\tfont-size: 13px;\n\tline-height: $--text-line-height;\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-right: 30px;\n\n\t> span {\n\t\tmargin-right: 5px;\n\t}\n}\n\n.add-tag {\n\tfont-size: 12px;\n\tpadding: 20px 0; // to be more clickable\n\tcolor: $custom-font-very-light;\n\tfont-weight: 600;\n\twhite-space: nowrap;\n\n\t&:hover {\n\t\tcolor: $color-primary;\n\t}\n}\n\n.tags {\n\tflex: 1;\n\tmargin-right: $--header-spacing;\n}\n\n.tags-edit {\n\tmin-width: 100px;\n\tmax-width: 460px;\n}\n\n.actions {\n\tdisplay: flex;\n\talign-items: center;\n}\n</style>\n\n<style module lang=\"scss\">\n.workflowMenuContainer {\n\tmargin-left: var(--spacing-2xs);\n}\n\n.hiddenInput {\n\tdisplay: none;\n}\n\n.deleteItem {\n\tcolor: var(--color-danger);\n}\n\n.disabledShareButton {\n\tcursor: not-allowed;\n}\n</style>\n","<template>\n\t<div\n\t\tv-if=\"items\"\n\t\t:class=\"{\n\t\t\t[$style.container]: true,\n\t\t\t['tab-bar-container']: true,\n\t\t\t[$style.menuCollapsed]: mainSidebarCollapsed,\n\t\t}\"\n\t>\n\t\t<n8n-radio-buttons :value=\"activeTab\" :options=\"items\" @input=\"onSelect\" />\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport type { PropType } from 'vue';\nimport type { ITabBarItem } from '@/Interface';\nimport { MAIN_HEADER_TABS } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\n\nexport default defineComponent({\n\tname: 'tab-bar',\n\tdata() {\n\t\treturn {\n\t\t\tMAIN_HEADER_TABS,\n\t\t};\n\t},\n\tprops: {\n\t\titems: {\n\t\t\ttype: Array as PropType<ITabBarItem[]>,\n\t\t\trequired: true,\n\t\t},\n\t\tactiveTab: {\n\t\t\ttype: String,\n\t\t\tdefault: MAIN_HEADER_TABS.WORKFLOW,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore),\n\t\tmainSidebarCollapsed(): boolean {\n\t\t\treturn this.uiStore.sidebarMenuCollapsed;\n\t\t},\n\t},\n\tmethods: {\n\t\tonSelect(tab: string, event: MouseEvent): void {\n\t\t\tthis.$emit('select', tab, event);\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.container {\n\tposition: absolute;\n\ttop: 47px;\n\tleft: calc(50% + 100px);\n\ttransform: translateX(-50%);\n\tmin-height: 30px;\n\tdisplay: flex;\n\tpadding: var(--spacing-5xs);\n\tbackground-color: var(--color-foreground-base);\n\tborder-radius: var(--border-radius-base);\n\ttransition: all 150ms ease-in-out;\n\n\t&.menuCollapsed {\n\t\tleft: 52%;\n\t}\n}\n\n@media screen and (max-width: 430px) {\n\t.container {\n\t\tflex-direction: column;\n\t}\n}\n</style>\n","<template>\n\t<div>\n\t\t<div :class=\"{ 'main-header': true, expanded: !this.uiStore.sidebarMenuCollapsed }\">\n\t\t\t<div v-show=\"!hideMenuBar\" class=\"top-menu\">\n\t\t\t\t<WorkflowDetails />\n\t\t\t\t<tab-bar\n\t\t\t\t\tv-if=\"onWorkflowPage\"\n\t\t\t\t\t:items=\"tabBarItems\"\n\t\t\t\t\t:activeTab=\"activeHeaderTab\"\n\t\t\t\t\t@select=\"onTabSelected\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\nimport { pushConnection } from '@/mixins/pushConnection';\nimport WorkflowDetails from '@/components/MainHeader/WorkflowDetails.vue';\nimport TabBar from '@/components/MainHeader/TabBar.vue';\nimport {\n\tMAIN_HEADER_TABS,\n\tPLACEHOLDER_EMPTY_WORKFLOW_ID,\n\tSTICKY_NODE_TYPE,\n\tVIEWS,\n} from '@/constants';\nimport type { IExecutionsSummary, INodeUi, ITabBarItem } from '@/Interface';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport type { Route } from 'vue-router';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useNDVStore } from '@/stores/ndv.store';\n\nexport default mixins(pushConnection, workflowHelpers).extend({\n\tname: 'MainHeader',\n\tcomponents: {\n\t\tWorkflowDetails,\n\t\tTabBar,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tactiveHeaderTab: MAIN_HEADER_TABS.WORKFLOW,\n\t\t\tworkflowToReturnTo: '',\n\t\t\tdirtyState: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useNDVStore, useUIStore),\n\t\ttabBarItems(): ITabBarItem[] {\n\t\t\treturn [\n\t\t\t\t{ value: MAIN_HEADER_TABS.WORKFLOW, label: this.$locale.baseText('generic.editor') },\n\t\t\t\t{ value: MAIN_HEADER_TABS.EXECUTIONS, label: this.$locale.baseText('generic.executions') },\n\t\t\t];\n\t\t},\n\t\tactiveNode(): INodeUi | null {\n\t\t\treturn this.ndvStore.activeNode;\n\t\t},\n\t\thideMenuBar(): boolean {\n\t\t\treturn Boolean(this.activeNode && this.activeNode.type !== STICKY_NODE_TYPE);\n\t\t},\n\t\tworkflowName(): string {\n\t\t\treturn this.workflowsStore.workflowName;\n\t\t},\n\t\tcurrentWorkflow(): string {\n\t\t\treturn this.$route.params.name || this.workflowsStore.workflowId;\n\t\t},\n\t\tonWorkflowPage(): boolean {\n\t\t\treturn (\n\t\t\t\tthis.$route.meta &&\n\t\t\t\t(this.$route.meta.nodeView || this.$route.meta.keepWorkflowAlive === true)\n\t\t\t);\n\t\t},\n\t\tactiveExecution(): IExecutionsSummary {\n\t\t\treturn this.workflowsStore.activeWorkflowExecution as IExecutionsSummary;\n\t\t},\n\t},\n\tmounted() {\n\t\tthis.dirtyState = this.uiStore.stateIsDirty;\n\t\tthis.syncTabsWithRoute(this.$route);\n\t\t// Initialize the push connection\n\t\tthis.pushConnect();\n\t},\n\tbeforeDestroy() {\n\t\tthis.pushDisconnect();\n\t},\n\twatch: {\n\t\t$route(to, from) {\n\t\t\tthis.syncTabsWithRoute(to);\n\t\t},\n\t},\n\tmethods: {\n\t\tsyncTabsWithRoute(route: Route): void {\n\t\t\tif (\n\t\t\t\troute.name === VIEWS.EXECUTION_HOME ||\n\t\t\t\troute.name === VIEWS.WORKFLOW_EXECUTIONS ||\n\t\t\t\troute.name === VIEWS.EXECUTION_PREVIEW\n\t\t\t) {\n\t\t\t\tthis.activeHeaderTab = MAIN_HEADER_TABS.EXECUTIONS;\n\t\t\t} else if (route.name === VIEWS.WORKFLOW || route.name === VIEWS.NEW_WORKFLOW) {\n\t\t\t\tthis.activeHeaderTab = MAIN_HEADER_TABS.WORKFLOW;\n\t\t\t}\n\t\t\tconst workflowName = route.params.name;\n\t\t\tif (workflowName !== 'new') {\n\t\t\t\tthis.workflowToReturnTo = workflowName;\n\t\t\t}\n\t\t},\n\t\tonTabSelected(tab: string, event: MouseEvent) {\n\t\t\tswitch (tab) {\n\t\t\t\tcase MAIN_HEADER_TABS.WORKFLOW:\n\t\t\t\t\tif (!['', 'new', PLACEHOLDER_EMPTY_WORKFLOW_ID].includes(this.workflowToReturnTo)) {\n\t\t\t\t\t\tif (this.$route.name !== VIEWS.WORKFLOW) {\n\t\t\t\t\t\t\tvoid this.$router.push({\n\t\t\t\t\t\t\t\tname: VIEWS.WORKFLOW,\n\t\t\t\t\t\t\t\tparams: { name: this.workflowToReturnTo },\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.$route.name !== VIEWS.NEW_WORKFLOW) {\n\t\t\t\t\t\t\tvoid this.$router.push({ name: VIEWS.NEW_WORKFLOW });\n\t\t\t\t\t\t\tthis.uiStore.stateIsDirty = this.dirtyState;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.activeHeaderTab = MAIN_HEADER_TABS.WORKFLOW;\n\t\t\t\t\tbreak;\n\t\t\t\tcase MAIN_HEADER_TABS.EXECUTIONS:\n\t\t\t\t\tthis.dirtyState = this.uiStore.stateIsDirty;\n\t\t\t\t\tthis.workflowToReturnTo = this.currentWorkflow;\n\t\t\t\t\tconst routeWorkflowId =\n\t\t\t\t\t\tthis.currentWorkflow === PLACEHOLDER_EMPTY_WORKFLOW_ID ? 'new' : this.currentWorkflow;\n\t\t\t\t\tif (this.activeExecution) {\n\t\t\t\t\t\tthis.$router\n\t\t\t\t\t\t\t.push({\n\t\t\t\t\t\t\t\tname: VIEWS.EXECUTION_PREVIEW,\n\t\t\t\t\t\t\t\tparams: { name: routeWorkflowId, executionId: this.activeExecution.id },\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(() => {});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvoid this.$router.push({\n\t\t\t\t\t\t\tname: VIEWS.EXECUTION_HOME,\n\t\t\t\t\t\t\tparams: { name: routeWorkflowId },\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// this.modalBus.emit('closeAll');\n\t\t\t\t\tthis.activeHeaderTab = MAIN_HEADER_TABS.EXECUTIONS;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\">\n.main-header {\n\tbackground-color: var(--color-background-xlight);\n\theight: $header-height;\n\twidth: 100%;\n\tbox-sizing: border-box;\n\tborder-bottom: var(--border-width-base) var(--border-style-base) var(--color-foreground-base);\n}\n\n.top-menu {\n\tdisplay: flex;\n\talign-items: center;\n\tfont-size: 0.9em;\n\theight: $header-height;\n\tfont-weight: 400;\n\tpadding: 0 var(--spacing-m) 0 var(--spacing-xs);\n}\n</style>\n","import type { IExecutionPushResponse, IExecutionResponse, IStartRunData } from '@/Interface';\n\nimport type { IRunData, IRunExecutionData, IWorkflowBase } from 'n8n-workflow';\nimport { NodeHelpers, TelemetryHelpers } from 'n8n-workflow';\n\nimport { externalHooks } from '@/mixins/externalHooks';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport { showMessage } from '@/mixins/showMessage';\n\nimport mixins from 'vue-typed-mixins';\nimport { useTitleChange } from '@/composables/useTitleChange';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\n\nexport const workflowRun = mixins(externalHooks, workflowHelpers, showMessage).extend({\n\tsetup() {\n\t\treturn {\n\t\t\t...useTitleChange(),\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useRootStore, useUIStore, useWorkflowsStore),\n\t},\n\tmethods: {\n\t\t// Starts to executes a workflow on server.\n\t\tasync runWorkflowApi(runData: IStartRunData): Promise<IExecutionPushResponse> {\n\t\t\tif (this.rootStore.pushConnectionActive === false) {\n\t\t\t\t// Do not start if the connection to server is not active\n\t\t\t\t// because then it can not receive the data as it executes.\n\t\t\t\tthrow new Error(this.$locale.baseText('workflowRun.noActiveConnectionToTheServer'));\n\t\t\t}\n\n\t\t\tthis.workflowsStore.subWorkflowExecutionError = null;\n\n\t\t\tthis.uiStore.addActiveAction('workflowRunning');\n\n\t\t\tlet response: IExecutionPushResponse;\n\n\t\t\ttry {\n\t\t\t\tresponse = await this.workflowsStore.runWorkflow(runData);\n\t\t\t} catch (error) {\n\t\t\t\tthis.uiStore.removeActiveAction('workflowRunning');\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (response.executionId !== undefined) {\n\t\t\t\tthis.workflowsStore.activeExecutionId = response.executionId;\n\t\t\t}\n\n\t\t\tif (response.waitingForWebhook === true) {\n\t\t\t\tthis.workflowsStore.executionWaitingForWebhook = true;\n\t\t\t}\n\n\t\t\treturn response;\n\t\t},\n\t\tasync runWorkflow(\n\t\t\tnodeName?: string,\n\t\t\tsource?: string,\n\t\t): Promise<IExecutionPushResponse | undefined> {\n\t\t\tconst workflow = this.getCurrentWorkflow();\n\n\t\t\tif (this.uiStore.isActionActive('workflowRunning')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.titleSet(workflow.name as string, 'EXECUTING');\n\n\t\t\tthis.clearAllStickyNotifications();\n\n\t\t\ttry {\n\t\t\t\t// Check first if the workflow has any issues before execute it\n\t\t\t\tconst issuesExist = this.workflowsStore.nodesIssuesExist;\n\t\t\t\tif (issuesExist === true) {\n\t\t\t\t\t// If issues exist get all of the issues of all nodes\n\t\t\t\t\tconst workflowIssues = this.checkReadyForExecution(workflow, nodeName);\n\t\t\t\t\tif (workflowIssues !== null) {\n\t\t\t\t\t\tconst errorMessages = [];\n\t\t\t\t\t\tlet nodeIssues: string[];\n\t\t\t\t\t\tconst trackNodeIssues: Array<{\n\t\t\t\t\t\t\tnode_type: string;\n\t\t\t\t\t\t\terror: string;\n\t\t\t\t\t\t}> = [];\n\t\t\t\t\t\tconst trackErrorNodeTypes: string[] = [];\n\t\t\t\t\t\tfor (const nodeName of Object.keys(workflowIssues)) {\n\t\t\t\t\t\t\tnodeIssues = NodeHelpers.nodeIssuesToString(workflowIssues[nodeName]);\n\t\t\t\t\t\t\tlet issueNodeType = 'UNKNOWN';\n\t\t\t\t\t\t\tconst issueNode = this.workflowsStore.getNodeByName(nodeName);\n\n\t\t\t\t\t\t\tif (issueNode) {\n\t\t\t\t\t\t\t\tissueNodeType = issueNode.type;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttrackErrorNodeTypes.push(issueNodeType);\n\t\t\t\t\t\t\tconst trackNodeIssue = {\n\t\t\t\t\t\t\t\tnode_type: issueNodeType,\n\t\t\t\t\t\t\t\terror: '',\n\t\t\t\t\t\t\t\tcaused_by_credential: !!workflowIssues[nodeName].credentials,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tfor (const nodeIssue of nodeIssues) {\n\t\t\t\t\t\t\t\terrorMessages.push(`<strong>${nodeName}</strong>: ${nodeIssue}`);\n\t\t\t\t\t\t\t\ttrackNodeIssue.error = trackNodeIssue.error.concat(', ', nodeIssue);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttrackNodeIssues.push(trackNodeIssue);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\t\ttitle: this.$locale.baseText('workflowRun.showMessage.title'),\n\t\t\t\t\t\t\tmessage: errorMessages.join('<br />'),\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tduration: 0,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.titleSet(workflow.name as string, 'ERROR');\n\t\t\t\t\t\tthis.$externalHooks().run('workflowRun.runError', { errorMessages, nodeName });\n\n\t\t\t\t\t\tawait this.getWorkflowDataToSave().then((workflowData) => {\n\t\t\t\t\t\t\tthis.$telemetry.track('Workflow execution preflight failed', {\n\t\t\t\t\t\t\t\tworkflow_id: workflow.id,\n\t\t\t\t\t\t\t\tworkflow_name: workflow.name,\n\t\t\t\t\t\t\t\texecution_type: nodeName ? 'node' : 'workflow',\n\t\t\t\t\t\t\t\tnode_graph_string: JSON.stringify(\n\t\t\t\t\t\t\t\t\tTelemetryHelpers.generateNodesGraph(\n\t\t\t\t\t\t\t\t\t\tworkflowData as IWorkflowBase,\n\t\t\t\t\t\t\t\t\t\tthis.getNodeTypes(),\n\t\t\t\t\t\t\t\t\t).nodeGraph,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\terror_node_types: JSON.stringify(trackErrorNodeTypes),\n\t\t\t\t\t\t\t\terrors: JSON.stringify(trackNodeIssues),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Get the direct parents of the node\n\t\t\t\tlet directParentNodes: string[] = [];\n\t\t\t\tif (nodeName !== undefined) {\n\t\t\t\t\tdirectParentNodes = workflow.getParentNodes(nodeName, 'main', 1);\n\t\t\t\t}\n\n\t\t\t\tconst runData = this.workflowsStore.getWorkflowRunData;\n\n\t\t\t\tlet newRunData: IRunData | undefined;\n\n\t\t\t\tconst startNodes: string[] = [];\n\n\t\t\t\tif (runData !== null && Object.keys(runData).length !== 0) {\n\t\t\t\t\tnewRunData = {};\n\n\t\t\t\t\t// Go over the direct parents of the node\n\t\t\t\t\tfor (const directParentNode of directParentNodes) {\n\t\t\t\t\t\t// Go over the parents of that node so that we can get a start\n\t\t\t\t\t\t// node for each of the branches\n\t\t\t\t\t\tconst parentNodes = workflow.getParentNodes(directParentNode, 'main');\n\n\t\t\t\t\t\t// Add also the enabled direct parent to be checked\n\t\t\t\t\t\tif (workflow.nodes[directParentNode].disabled) continue;\n\n\t\t\t\t\t\tparentNodes.push(directParentNode);\n\n\t\t\t\t\t\tfor (const parentNode of parentNodes) {\n\t\t\t\t\t\t\tif (runData[parentNode] === undefined || runData[parentNode].length === 0) {\n\t\t\t\t\t\t\t\t// When we hit a node which has no data we stop and set it\n\t\t\t\t\t\t\t\t// as a start node the execution from and then go on with other\n\t\t\t\t\t\t\t\t// direct input nodes\n\t\t\t\t\t\t\t\tstartNodes.push(parentNode);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnewRunData[parentNode] = runData[parentNode].slice(0, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Object.keys(newRunData).length === 0) {\n\t\t\t\t\t\t// If there is no data for any of the parent nodes make sure\n\t\t\t\t\t\t// that run data is empty that it runs regularly\n\t\t\t\t\t\tnewRunData = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (startNodes.length === 0 && nodeName !== undefined) {\n\t\t\t\t\tstartNodes.push(nodeName);\n\t\t\t\t}\n\n\t\t\t\tconst isNewWorkflow = this.workflowsStore.isNewWorkflow;\n\t\t\t\tconst hasWebhookNode = this.workflowsStore.currentWorkflowHasWebhookNode;\n\t\t\t\tif (isNewWorkflow && hasWebhookNode) {\n\t\t\t\t\tawait this.saveCurrentWorkflow();\n\t\t\t\t}\n\n\t\t\t\tconst workflowData = await this.getWorkflowDataToSave();\n\n\t\t\t\tconst startRunData: IStartRunData = {\n\t\t\t\t\tworkflowData,\n\t\t\t\t\trunData: newRunData,\n\t\t\t\t\tpinData: workflowData.pinData,\n\t\t\t\t\tstartNodes,\n\t\t\t\t};\n\t\t\t\tif (nodeName) {\n\t\t\t\t\tstartRunData.destinationNode = nodeName;\n\t\t\t\t}\n\n\t\t\t\t// Init the execution data to represent the start of the execution\n\t\t\t\t// that data which gets reused is already set and data of newly executed\n\t\t\t\t// nodes can be added as it gets pushed in\n\t\t\t\tconst executionData: IExecutionResponse = {\n\t\t\t\t\tid: '__IN_PROGRESS__',\n\t\t\t\t\tfinished: false,\n\t\t\t\t\tmode: 'manual',\n\t\t\t\t\tstartedAt: new Date(),\n\t\t\t\t\tstoppedAt: undefined,\n\t\t\t\t\tworkflowId: workflow.id,\n\t\t\t\t\texecutedNode: nodeName,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tresultData: {\n\t\t\t\t\t\t\trunData: newRunData || {},\n\t\t\t\t\t\t\tpinData: workflowData.pinData,\n\t\t\t\t\t\t\tstartNodes,\n\t\t\t\t\t\t\tworkflowData,\n\t\t\t\t\t\t},\n\t\t\t\t\t} as IRunExecutionData,\n\t\t\t\t\tworkflowData: {\n\t\t\t\t\t\tid: this.workflowsStore.workflowId,\n\t\t\t\t\t\tname: workflowData.name!,\n\t\t\t\t\t\tactive: workflowData.active!,\n\t\t\t\t\t\tcreatedAt: 0,\n\t\t\t\t\t\tupdatedAt: 0,\n\t\t\t\t\t\t...workflowData,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tthis.workflowsStore.setWorkflowExecutionData(executionData);\n\t\t\t\tthis.updateNodesExecutionIssues();\n\n\t\t\t\tconst runWorkflowApiResponse = await this.runWorkflowApi(startRunData);\n\n\t\t\t\tawait this.$externalHooks().run('workflowRun.runWorkflow', { nodeName, source });\n\n\t\t\t\treturn runWorkflowApiResponse;\n\t\t\t} catch (error) {\n\t\t\t\tthis.titleSet(workflow.name as string, 'ERROR');\n\t\t\t\tthis.$showError(error, this.$locale.baseText('workflowRun.showError.title'));\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t},\n\t},\n});\n","<template>\n\t<div\n\t\tid=\"side-menu\"\n\t\t:class=\"{\n\t\t\t['side-menu']: true,\n\t\t\t[$style.sideMenu]: true,\n\t\t\t[$style.sideMenuCollapsed]: isCollapsed,\n\t\t}\"\n\t>\n\t\t<div\n\t\t\tid=\"collapse-change-button\"\n\t\t\t:class=\"['clickable', $style.sideMenuCollapseButton]\"\n\t\t\t@click=\"toggleCollapse\"\n\t\t>\n\t\t\t<n8n-icon v-if=\"isCollapsed\" icon=\"chevron-right\" size=\"xsmall\" class=\"ml-5xs\" />\n\t\t\t<n8n-icon v-else icon=\"chevron-left\" size=\"xsmall\" class=\"mr-5xs\" />\n\t\t</div>\n\t\t<n8n-menu :items=\"mainMenuItems\" :collapsed=\"isCollapsed\" @select=\"handleSelect\">\n\t\t\t<template #header>\n\t\t\t\t<div :class=\"$style.logo\">\n\t\t\t\t\t<img\n\t\t\t\t\t\t:src=\"basePath + (isCollapsed ? 'n8n-logo-collapsed.svg' : 'n8n-logo-expanded.svg')\"\n\t\t\t\t\t\t:class=\"$style.icon\"\n\t\t\t\t\t\talt=\"n8n\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template #menuSuffix>\n\t\t\t\t<div v-if=\"hasVersionUpdates || versionControlStore.state.currentBranch\">\n\t\t\t\t\t<div v-if=\"hasVersionUpdates\" :class=\"$style.updates\" @click=\"openUpdatesPanel\">\n\t\t\t\t\t\t<div :class=\"$style.giftContainer\">\n\t\t\t\t\t\t\t<GiftNotificationIcon />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<n8n-text\n\t\t\t\t\t\t\t:class=\"{ ['ml-xs']: true, [$style.expanded]: fullyExpanded }\"\n\t\t\t\t\t\t\tcolor=\"text-base\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ nextVersions.length > 99 ? '99+' : nextVersions.length }} update{{\n\t\t\t\t\t\t\t\tnextVersions.length > 1 ? 's' : ''\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div :class=\"$style.sync\" v-if=\"versionControlStore.state.currentBranch\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<n8n-icon icon=\"code-branch\" class=\"mr-xs\" />\n\t\t\t\t\t\t\t{{ currentBranch }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t:title=\"\n\t\t\t\t\t\t\t\t$locale.baseText('settings.versionControl.sync.prompt.title', {\n\t\t\t\t\t\t\t\t\tinterpolate: { branch: currentBranch },\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\ticon=\"sync\"\n\t\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t\t:size=\"isCollapsed ? 'mini' : 'small'\"\n\t\t\t\t\t\t\tsquare\n\t\t\t\t\t\t\t@click=\"sync\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template #footer v-if=\"showUserArea\">\n\t\t\t\t<div :class=\"$style.userArea\">\n\t\t\t\t\t<div class=\"ml-3xs\" data-test-id=\"main-sidebar-user-menu\">\n\t\t\t\t\t\t<!-- This dropdown is only enabled when sidebar is collapsed -->\n\t\t\t\t\t\t<el-dropdown\n\t\t\t\t\t\t\t:disabled=\"!isCollapsed\"\n\t\t\t\t\t\t\tplacement=\"right-end\"\n\t\t\t\t\t\t\ttrigger=\"click\"\n\t\t\t\t\t\t\t@command=\"onUserActionToggle\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div :class=\"{ [$style.avatar]: true, ['clickable']: isCollapsed }\">\n\t\t\t\t\t\t\t\t<n8n-avatar\n\t\t\t\t\t\t\t\t\t:firstName=\"usersStore.currentUser.firstName\"\n\t\t\t\t\t\t\t\t\t:lastName=\"usersStore.currentUser.lastName\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<template #dropdown>\n\t\t\t\t\t\t\t\t<el-dropdown-menu>\n\t\t\t\t\t\t\t\t\t<el-dropdown-item command=\"settings\">\n\t\t\t\t\t\t\t\t\t\t{{ $locale.baseText('settings') }}\n\t\t\t\t\t\t\t\t\t</el-dropdown-item>\n\t\t\t\t\t\t\t\t\t<el-dropdown-item command=\"logout\">\n\t\t\t\t\t\t\t\t\t\t{{ $locale.baseText('auth.signout') }}\n\t\t\t\t\t\t\t\t\t</el-dropdown-item>\n\t\t\t\t\t\t\t\t</el-dropdown-menu>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</el-dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\t:class=\"{ ['ml-2xs']: true, [$style.userName]: true, [$style.expanded]: fullyExpanded }\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<n8n-text size=\"small\" :bold=\"true\" color=\"text-dark\">{{\n\t\t\t\t\t\t\tusersStore.currentUser.fullName\n\t\t\t\t\t\t}}</n8n-text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div :class=\"{ [$style.userActions]: true, [$style.expanded]: fullyExpanded }\">\n\t\t\t\t\t\t<n8n-action-dropdown\n\t\t\t\t\t\t\t:items=\"userMenuItems\"\n\t\t\t\t\t\t\tplacement=\"top-start\"\n\t\t\t\t\t\t\t@select=\"onUserActionToggle\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</n8n-menu>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport type { IExecutionResponse, IMenuItem, IVersion } from '../Interface';\n\nimport GiftNotificationIcon from './GiftNotificationIcon.vue';\nimport WorkflowSettings from '@/components/WorkflowSettings.vue';\n\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport { showMessage } from '@/mixins/showMessage';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport { workflowRun } from '@/mixins/workflowRun';\n\nimport mixins from 'vue-typed-mixins';\nimport { ABOUT_MODAL_KEY, VERSIONS_MODAL_KEY, VIEWS } from '@/constants';\nimport { userHelpers } from '@/mixins/userHelpers';\nimport { debounceHelper } from '@/mixins/debounce';\nimport Vue from 'vue';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { useVersionsStore } from '@/stores/versions.store';\nimport { isNavigationFailure } from 'vue-router';\nimport { useVersionControlStore } from '@/stores/versionControl.store';\n\nexport default mixins(\n\tgenericHelpers,\n\tshowMessage,\n\tworkflowHelpers,\n\tworkflowRun,\n\tuserHelpers,\n\tdebounceHelper,\n).extend({\n\tname: 'MainSidebar',\n\tcomponents: {\n\t\tGiftNotificationIcon,\n\t\tWorkflowSettings,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\t// @ts-ignore\n\t\t\tbasePath: '',\n\t\t\tfullyExpanded: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(\n\t\t\tuseRootStore,\n\t\t\tuseSettingsStore,\n\t\t\tuseUIStore,\n\t\t\tuseUsersStore,\n\t\t\tuseVersionsStore,\n\t\t\tuseWorkflowsStore,\n\t\t\tuseVersionControlStore,\n\t\t),\n\t\tcurrentBranch(): string {\n\t\t\treturn this.versionControlStore.state.currentBranch;\n\t\t},\n\t\thasVersionUpdates(): boolean {\n\t\t\treturn this.versionsStore.hasVersionUpdates;\n\t\t},\n\t\tnextVersions(): IVersion[] {\n\t\t\treturn this.versionsStore.nextVersions;\n\t\t},\n\t\tisCollapsed(): boolean {\n\t\t\treturn this.uiStore.sidebarMenuCollapsed;\n\t\t},\n\t\tcanUserAccessSettings(): boolean {\n\t\t\tconst accessibleRoute = this.findFirstAccessibleSettingsRoute();\n\t\t\treturn accessibleRoute !== null;\n\t\t},\n\t\tshowUserArea(): boolean {\n\t\t\treturn (\n\t\t\t\tthis.settingsStore.isUserManagementEnabled &&\n\t\t\t\tthis.usersStore.canUserAccessSidebarUserInfo &&\n\t\t\t\tthis.usersStore.currentUser !== null\n\t\t\t);\n\t\t},\n\t\tworkflowExecution(): IExecutionResponse | null {\n\t\t\treturn this.workflowsStore.getWorkflowExecution;\n\t\t},\n\t\tuserMenuItems(): object[] {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: 'settings',\n\t\t\t\t\tlabel: this.$locale.baseText('settings'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'logout',\n\t\t\t\t\tlabel: this.$locale.baseText('auth.signout'),\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t\tmainMenuItems(): IMenuItem[] {\n\t\t\tconst items: IMenuItem[] = [];\n\t\t\tconst injectedItems = this.uiStore.sidebarMenuItems;\n\n\t\t\tif (injectedItems && injectedItems.length > 0) {\n\t\t\t\tfor (const item of injectedItems) {\n\t\t\t\t\titems.push({\n\t\t\t\t\t\tid: item.id,\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\ticon: item.properties ? item.properties.icon : '',\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tlabel: item.properties ? item.properties.title : '',\n\t\t\t\t\t\tposition: item.position,\n\t\t\t\t\t\ttype: item.properties?.href ? 'link' : 'regular',\n\t\t\t\t\t\tproperties: item.properties,\n\t\t\t\t\t} as IMenuItem);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst regularItems: IMenuItem[] = [\n\t\t\t\t{\n\t\t\t\t\tid: 'workflows',\n\t\t\t\t\ticon: 'network-wired',\n\t\t\t\t\tlabel: this.$locale.baseText('mainSidebar.workflows'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\tactivateOnRouteNames: [VIEWS.WORKFLOWS],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'templates',\n\t\t\t\t\ticon: 'box-open',\n\t\t\t\t\tlabel: this.$locale.baseText('mainSidebar.templates'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\tavailable: this.settingsStore.isTemplatesEnabled,\n\t\t\t\t\tactivateOnRouteNames: [VIEWS.TEMPLATES],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'credentials',\n\t\t\t\t\ticon: 'key',\n\t\t\t\t\tlabel: this.$locale.baseText('mainSidebar.credentials'),\n\t\t\t\t\tcustomIconSize: 'medium',\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\tactivateOnRouteNames: [VIEWS.CREDENTIALS],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'variables',\n\t\t\t\t\ticon: 'variable',\n\t\t\t\t\tlabel: this.$locale.baseText('mainSidebar.variables'),\n\t\t\t\t\tcustomIconSize: 'medium',\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\tactivateOnRouteNames: [VIEWS.VARIABLES],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'executions',\n\t\t\t\t\ticon: 'tasks',\n\t\t\t\t\tlabel: this.$locale.baseText('mainSidebar.executions'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\tactivateOnRouteNames: [VIEWS.EXECUTIONS],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'settings',\n\t\t\t\t\ticon: 'cog',\n\t\t\t\t\tlabel: this.$locale.baseText('settings'),\n\t\t\t\t\tposition: 'bottom',\n\t\t\t\t\tavailable: this.canUserAccessSettings && this.usersStore.currentUser !== null,\n\t\t\t\t\tactivateOnRouteNames: [VIEWS.USERS_SETTINGS, VIEWS.API_SETTINGS, VIEWS.PERSONAL_SETTINGS],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'help',\n\t\t\t\t\ticon: 'question',\n\t\t\t\t\tlabel: 'Help',\n\t\t\t\t\tposition: 'bottom',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'quickstart',\n\t\t\t\t\t\t\ticon: 'video',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('mainSidebar.helpMenuItems.quickstart'),\n\t\t\t\t\t\t\ttype: 'link',\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\thref: 'https://www.youtube.com/watch?v=1MwSoB0gnM4',\n\t\t\t\t\t\t\t\tnewWindow: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'docs',\n\t\t\t\t\t\t\ticon: 'book',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('mainSidebar.helpMenuItems.documentation'),\n\t\t\t\t\t\t\ttype: 'link',\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\thref: 'https://docs.n8n.io',\n\t\t\t\t\t\t\t\tnewWindow: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'forum',\n\t\t\t\t\t\t\ticon: 'users',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('mainSidebar.helpMenuItems.forum'),\n\t\t\t\t\t\t\ttype: 'link',\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\thref: 'https://community.n8n.io',\n\t\t\t\t\t\t\t\tnewWindow: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'examples',\n\t\t\t\t\t\t\ticon: 'graduation-cap',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('mainSidebar.helpMenuItems.course'),\n\t\t\t\t\t\t\ttype: 'link',\n\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\thref: 'https://www.youtube.com/watch?v=1MwSoB0gnM4',\n\t\t\t\t\t\t\t\tnewWindow: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'about',\n\t\t\t\t\t\t\ticon: 'info',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('mainSidebar.aboutN8n'),\n\t\t\t\t\t\t\tposition: 'bottom',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t];\n\t\t\treturn [...items, ...regularItems];\n\t\t},\n\t},\n\tasync mounted() {\n\t\tthis.basePath = this.rootStore.baseUrl;\n\t\tif (this.$refs.user) {\n\t\t\tthis.$externalHooks().run('mainSidebar.mounted', { userRef: this.$refs.user });\n\t\t}\n\t\tif (window.innerWidth < 900 || this.uiStore.isNodeView) {\n\t\t\tthis.uiStore.sidebarMenuCollapsed = true;\n\t\t} else {\n\t\t\tthis.uiStore.sidebarMenuCollapsed = false;\n\t\t}\n\t\tawait Vue.nextTick();\n\t\tthis.fullyExpanded = !this.isCollapsed;\n\t},\n\tcreated() {\n\t\twindow.addEventListener('resize', this.onResize);\n\t},\n\tdestroyed() {\n\t\twindow.removeEventListener('resize', this.onResize);\n\t},\n\tmethods: {\n\t\ttrackHelpItemClick(itemType: string) {\n\t\t\tthis.$telemetry.track('User clicked help resource', {\n\t\t\t\ttype: itemType,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t});\n\t\t},\n\t\tasync onUserActionToggle(action: string) {\n\t\t\tswitch (action) {\n\t\t\t\tcase 'logout':\n\t\t\t\t\tthis.onLogout();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'settings':\n\t\t\t\t\tvoid this.$router.push({ name: VIEWS.PERSONAL_SETTINGS });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\tonLogout() {\n\t\t\tvoid this.$router.push({ name: VIEWS.SIGNOUT });\n\t\t},\n\t\ttoggleCollapse() {\n\t\t\tthis.uiStore.toggleSidebarMenuCollapse();\n\t\t\t// When expanding, delay showing some element to ensure smooth animation\n\t\t\tif (!this.isCollapsed) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.fullyExpanded = !this.isCollapsed;\n\t\t\t\t}, 300);\n\t\t\t} else {\n\t\t\t\tthis.fullyExpanded = !this.isCollapsed;\n\t\t\t}\n\t\t},\n\t\topenUpdatesPanel() {\n\t\t\tthis.uiStore.openModal(VERSIONS_MODAL_KEY);\n\t\t},\n\t\tasync handleSelect(key: string) {\n\t\t\tswitch (key) {\n\t\t\t\tcase 'workflows': {\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.WORKFLOWS) {\n\t\t\t\t\t\tthis.goToRoute({ name: VIEWS.WORKFLOWS });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'templates': {\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.TEMPLATES) {\n\t\t\t\t\t\tthis.goToRoute({ name: VIEWS.TEMPLATES });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'credentials': {\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.CREDENTIALS) {\n\t\t\t\t\t\tthis.goToRoute({ name: VIEWS.CREDENTIALS });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'variables': {\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.VARIABLES) {\n\t\t\t\t\t\tthis.goToRoute({ name: VIEWS.VARIABLES });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'executions': {\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.EXECUTIONS) {\n\t\t\t\t\t\tthis.goToRoute({ name: VIEWS.EXECUTIONS });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'settings': {\n\t\t\t\t\tconst defaultRoute = this.findFirstAccessibleSettingsRoute();\n\t\t\t\t\tif (defaultRoute) {\n\t\t\t\t\t\tconst routeProps = this.$router.resolve({ name: defaultRoute });\n\t\t\t\t\t\tif (this.$router.currentRoute.name !== defaultRoute) {\n\t\t\t\t\t\t\tthis.goToRoute(routeProps.route.path);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'about': {\n\t\t\t\t\tthis.trackHelpItemClick('about');\n\t\t\t\t\tthis.uiStore.openModal(ABOUT_MODAL_KEY);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'quickstart':\n\t\t\t\tcase 'docs':\n\t\t\t\tcase 'forum':\n\t\t\t\tcase 'examples': {\n\t\t\t\t\tthis.trackHelpItemClick(key);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\tgoToRoute(route: string | { name: string }) {\n\t\t\tthis.$router.push(route).catch((failure) => {\n\t\t\t\t// Catch navigation failures caused by route guards\n\t\t\t\tif (!isNavigationFailure(failure)) {\n\t\t\t\t\tconsole.error(failure);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tfindFirstAccessibleSettingsRoute() {\n\t\t\t// Get all settings rotes by filtering them by pageCategory property\n\t\t\tconst settingsRoutes = this.$router\n\t\t\t\t.getRoutes()\n\t\t\t\t.filter(\n\t\t\t\t\t(category) =>\n\t\t\t\t\t\tcategory.meta.telemetry && category.meta.telemetry.pageCategory === 'settings',\n\t\t\t\t)\n\t\t\t\t.map((route) => route.name || '');\n\t\t\tlet defaultSettingsRoute = null;\n\n\t\t\tfor (const route of settingsRoutes) {\n\t\t\t\tif (this.canUserAccessRouteByName(route)) {\n\t\t\t\t\tdefaultSettingsRoute = route;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn defaultSettingsRoute;\n\t\t},\n\t\tonResize(event: UIEvent) {\n\t\t\tthis.callDebounced('onResizeEnd', { debounceTime: 100 }, event);\n\t\t},\n\t\tonResizeEnd(event: UIEvent) {\n\t\t\tconst browserWidth = (event.target as Window).outerWidth;\n\t\t\tthis.checkWidthAndAdjustSidebar(browserWidth);\n\t\t},\n\t\tcheckWidthAndAdjustSidebar(width: number) {\n\t\t\tif (width < 900) {\n\t\t\t\tthis.uiStore.sidebarMenuCollapsed = true;\n\t\t\t\tVue.nextTick(() => {\n\t\t\t\t\tthis.fullyExpanded = !this.isCollapsed;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tasync sync() {\n\t\t\tconst prompt = await this.$prompt(\n\t\t\t\tthis.$locale.baseText('settings.versionControl.sync.prompt.description', {\n\t\t\t\t\tinterpolate: { branch: this.versionControlStore.state.currentBranch },\n\t\t\t\t}),\n\t\t\t\tthis.$locale.baseText('settings.versionControl.sync.prompt.title', {\n\t\t\t\t\tinterpolate: { branch: this.versionControlStore.state.currentBranch },\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\tconfirmButtonText: 'Sync',\n\t\t\t\t\tcancelButtonText: 'Cancel',\n\t\t\t\t\tinputPlaceholder: this.$locale.baseText(\n\t\t\t\t\t\t'settings.versionControl.sync.prompt.placeholder',\n\t\t\t\t\t),\n\t\t\t\t\tinputPattern: /^.+$/,\n\t\t\t\t\tinputErrorMessage: this.$locale.baseText('settings.versionControl.sync.prompt.error'),\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (prompt.value) {\n\t\t\t\tawait this.versionControlStore.sync({ commitMessage: prompt.value });\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.sideMenu {\n\tposition: relative;\n\theight: 100%;\n\tborder-right: var(--border-width-base) var(--border-style-base) var(--color-foreground-base);\n\ttransition: width 150ms ease-in-out;\n\twidth: $sidebar-expanded-width;\n\t.logo {\n\t\theight: $header-height;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: var(--spacing-xs);\n\n\t\timg {\n\t\t\tposition: relative;\n\t\t\tleft: 1px;\n\t\t\theight: 20px;\n\t\t}\n\t}\n\n\t&.sideMenuCollapsed {\n\t\twidth: $sidebar-width;\n\n\t\t.logo img {\n\t\t\tleft: 0;\n\t\t}\n\t}\n}\n\n.sideMenuCollapseButton {\n\tposition: absolute;\n\tright: -10px;\n\ttop: 50%;\n\tz-index: 999;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tcolor: var(--color-text-base);\n\tbackground-color: var(--color-foreground-xlight);\n\twidth: 20px;\n\theight: 20px;\n\tborder: var(--border-width-base) var(--border-style-base) var(--color-foreground-base);\n\tborder-radius: 50%;\n\n\t&:hover {\n\t\tcolor: var(--color-primary-shade-1);\n\t}\n}\n\n.updates {\n\tdisplay: flex;\n\talign-items: center;\n\theight: 26px;\n\tcursor: pointer;\n\n\tsvg {\n\t\tcolor: var(--color-text-base) !important;\n\t}\n\tspan {\n\t\tdisplay: none;\n\t\t&.expanded {\n\t\t\tdisplay: initial;\n\t\t}\n\t}\n\n\t&:hover {\n\t\t&,\n\t\t& svg {\n\t\t\tcolor: var(--color-text-dark) !important;\n\t\t}\n\t}\n}\n\n.userArea {\n\tdisplay: flex;\n\tpadding: var(--spacing-xs);\n\talign-items: center;\n\theight: 60px;\n\tborder-top: var(--border-width-base) var(--border-style-base) var(--color-foreground-base);\n\n\t.userName {\n\t\tdisplay: none;\n\t\toverflow: hidden;\n\t\twidth: 100px;\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\n\t\t&.expanded {\n\t\t\tdisplay: initial;\n\t\t}\n\n\t\tspan {\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t}\n\t}\n\n\t.userActions {\n\t\tdisplay: none;\n\n\t\t&.expanded {\n\t\t\tdisplay: initial;\n\t\t}\n\t}\n}\n\n@media screen and (max-height: 470px) {\n\t:global(#help) {\n\t\tdisplay: none;\n\t}\n}\n\n.sync {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tpadding: var(--spacing-s) var(--spacing-s) var(--spacing-s) var(--spacing-l);\n\tmargin: 0 calc(var(--spacing-l) * -1) calc(var(--spacing-m) * -1);\n\tbackground: var(--color-background-light);\n\tborder-top: 1px solid var(--color-foreground-light);\n\tfont-size: var(--font-size-2xs);\n\n\tspan {\n\t\tcolor: var(--color-text-light);\n\t}\n\n\t.sideMenuCollapsed & {\n\t\tjustify-content: center;\n\t\tmargin-left: calc(var(--spacing-xl) * -1);\n\t\t> span {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n</style>\n","import { defineComponent } from 'vue';\n\nexport const deviceSupportHelpers = defineComponent({\n\tdata() {\n\t\treturn {\n\t\t\t// @ts-ignore msMaxTouchPoints is deprecated but must fix tablet bugs before fixing this.. otherwise breaks touchscreen computers\n\t\t\tisTouchDevice: 'ontouchstart' in window || navigator.msMaxTouchPoints,\n\t\t\tisMacOs: /(ipad|iphone|ipod|mac)/i.test(navigator.platform), // TODO: `platform` deprecated\n\t\t};\n\t},\n\tcomputed: {\n\t\t// TODO: Check if used anywhere\n\t\tcontrolKeyCode(): string {\n\t\t\tif (this.isMacOs) {\n\t\t\t\treturn 'Meta';\n\t\t\t}\n\t\t\treturn 'Control';\n\t\t},\n\t},\n\tmethods: {\n\t\tisCtrlKeyPressed(e: MouseEvent | KeyboardEvent): boolean {\n\t\t\tif (this.isTouchDevice === true && e instanceof MouseEvent) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.isMacOs) {\n\t\t\t\treturn e.metaKey;\n\t\t\t}\n\t\t\treturn e.ctrlKey;\n\t\t},\n\t},\n});\n","import mixins from 'vue-typed-mixins';\nimport { deviceSupportHelpers } from '@/mixins/deviceSupportHelpers';\nimport { getMousePosition } from '@/utils/nodeViewUtils';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\n\nexport const moveNodeWorkflow = mixins(deviceSupportHelpers).extend({\n\tdata() {\n\t\treturn {\n\t\t\tmoveLastPosition: [0, 0],\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore),\n\t},\n\tmethods: {\n\t\tmoveWorkflow(e: MouseEvent) {\n\t\t\tconst offsetPosition = this.uiStore.nodeViewOffsetPosition;\n\n\t\t\tconst [x, y] = getMousePosition(e);\n\n\t\t\tconst nodeViewOffsetPositionX = offsetPosition[0] + (x - this.moveLastPosition[0]);\n\t\t\tconst nodeViewOffsetPositionY = offsetPosition[1] + (y - this.moveLastPosition[1]);\n\t\t\tthis.uiStore.nodeViewOffsetPosition = [nodeViewOffsetPositionX, nodeViewOffsetPositionY];\n\n\t\t\t// Update the last position\n\t\t\tthis.moveLastPosition[0] = x;\n\t\t\tthis.moveLastPosition[1] = y;\n\t\t},\n\t\tmouseDownMoveWorkflow(e: MouseEvent, moveButtonPressed: boolean) {\n\t\t\tif (this.isCtrlKeyPressed(e) === false && !moveButtonPressed) {\n\t\t\t\t// We only care about it when the ctrl key is pressed at the same time.\n\t\t\t\t// So we exit when it is not pressed.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.uiStore.isActionActive('dragActive')) {\n\t\t\t\t// If a node does currently get dragged we do not activate the selection\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prevent moving canvas on anything but middle button\n\t\t\tif (e.button !== 1) {\n\t\t\t\tthis.uiStore.nodeViewMoveInProgress = true;\n\t\t\t}\n\n\t\t\tconst [x, y] = getMousePosition(e);\n\n\t\t\tthis.moveLastPosition[0] = x;\n\t\t\tthis.moveLastPosition[1] = y;\n\n\t\t\t// @ts-ignore\n\t\t\tthis.$el.addEventListener('mousemove', this.mouseMoveNodeWorkflow);\n\t\t},\n\t\tmouseUpMoveWorkflow(e: MouseEvent) {\n\t\t\tif (this.uiStore.nodeViewMoveInProgress === false) {\n\t\t\t\t// If it is not active return directly.\n\t\t\t\t// Else normal node dragging will not work.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// @ts-ignore\n\t\t\tthis.$el.removeEventListener('mousemove', this.mouseMoveNodeWorkflow);\n\n\t\t\tthis.uiStore.nodeViewMoveInProgress = false;\n\n\t\t\t// Nothing else to do. Simply leave the node view at the current offset\n\t\t},\n\t\tmouseMoveNodeWorkflow(e: MouseEvent) {\n\t\t\t// @ts-ignore\n\t\t\tif (e.target && !e.target.id.includes('node-view')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.uiStore.isActionActive('dragActive')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Signal that moving canvas is active if middle button is pressed and mouse is moved\n\t\t\tif (e.buttons === 4) {\n\t\t\t\tthis.uiStore.nodeViewMoveInProgress = true;\n\t\t\t}\n\n\t\t\tif (e.buttons === 0) {\n\t\t\t\t// Mouse button is not pressed anymore so stop selection mode\n\t\t\t\t// Happens normally when mouse leave the view pressed and then\n\t\t\t\t// comes back unpressed.\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis.mouseUp(e);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.moveWorkflow(e);\n\t\t},\n\t},\n});\n","import type { INodeUi, XYPosition } from '@/Interface';\n\nimport useDeviceSupport from './useDeviceSupport';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport {\n\tgetMousePosition,\n\tgetRelativePosition,\n\tHEADER_HEIGHT,\n\tSIDEBAR_WIDTH,\n\tSIDEBAR_WIDTH_EXPANDED,\n} from '@/utils/nodeViewUtils';\nimport { ref, onMounted, computed } from 'vue';\nimport { useCanvasStore } from '@/stores/canvas.store';\n\ninterface ExtendedHTMLSpanElement extends HTMLSpanElement {\n\tx: number;\n\ty: number;\n}\n\nexport default function useCanvasMouseSelect() {\n\tconst selectActive = ref(false);\n\tconst selectBox = ref(document.createElement('span') as ExtendedHTMLSpanElement);\n\n\tconst { isTouchDevice, isCtrlKeyPressed } = useDeviceSupport();\n\tconst uiStore = useUIStore();\n\tconst canvasStore = useCanvasStore();\n\tconst workflowsStore = useWorkflowsStore();\n\n\tfunction _setSelectBoxStyle(styles: Record<string, string>) {\n\t\tObject.assign(selectBox.value.style, styles);\n\t}\n\n\tfunction _showSelectBox(event: MouseEvent) {\n\t\tconst [x, y] = getMousePositionWithinNodeView(event);\n\t\tselectBox.value = Object.assign(selectBox.value, { x, y });\n\n\t\t_setSelectBoxStyle({\n\t\t\tleft: selectBox.value.x + 'px',\n\t\t\ttop: selectBox.value.y + 'px',\n\t\t\tvisibility: 'visible',\n\t\t});\n\t\tselectActive.value = true;\n\t}\n\n\tfunction _updateSelectBox(event: MouseEvent) {\n\t\tconst selectionBox = _getSelectionBox(event);\n\n\t\t_setSelectBoxStyle({\n\t\t\tleft: selectionBox.x + 'px',\n\t\t\ttop: selectionBox.y + 'px',\n\t\t\twidth: selectionBox.width + 'px',\n\t\t\theight: selectionBox.height + 'px',\n\t\t});\n\t}\n\n\tfunction _hideSelectBox() {\n\t\tselectBox.value.x = 0;\n\t\tselectBox.value.y = 0;\n\n\t\t_setSelectBoxStyle({\n\t\t\tvisibility: 'hidden',\n\t\t\tleft: '0px',\n\t\t\ttop: '0px',\n\t\t\twidth: '0px',\n\t\t\theight: '0px',\n\t\t});\n\t\tselectActive.value = false;\n\t}\n\n\tfunction _getSelectionBox(event: MouseEvent) {\n\t\tconst [x, y] = getMousePositionWithinNodeView(event);\n\t\treturn {\n\t\t\tx: Math.min(x, selectBox.value.x),\n\t\t\ty: Math.min(y, selectBox.value.y),\n\t\t\twidth: Math.abs(x - selectBox.value.x),\n\t\t\theight: Math.abs(y - selectBox.value.y),\n\t\t};\n\t}\n\n\tfunction _getNodesInSelection(event: MouseEvent): INodeUi[] {\n\t\tconst returnNodes: INodeUi[] = [];\n\t\tconst selectionBox = _getSelectionBox(event);\n\n\t\t// Go through all nodes and check if they are selected\n\t\tworkflowsStore.allNodes.forEach((node: INodeUi) => {\n\t\t\t// TODO: Currently always uses the top left corner for checking. Should probably use the center instead\n\t\t\tif (\n\t\t\t\tnode.position[0] < selectionBox.x ||\n\t\t\t\tnode.position[0] > selectionBox.x + selectionBox.width\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tnode.position[1] < selectionBox.y ||\n\t\t\t\tnode.position[1] > selectionBox.y + selectionBox.height\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturnNodes.push(node);\n\t\t});\n\n\t\treturn returnNodes;\n\t}\n\n\tfunction _createSelectBox() {\n\t\tselectBox.value.id = 'select-box';\n\t\t_setSelectBoxStyle({\n\t\t\tmargin: '0px auto',\n\t\t\tborder: '2px dotted #FF0000',\n\t\t\t// Positioned absolutely within #node-view. This is consistent with how nodes are positioned.\n\t\t\tposition: 'absolute',\n\t\t\tzIndex: '100',\n\t\t\tvisibility: 'hidden',\n\t\t});\n\n\t\tselectBox.value.addEventListener('mouseup', mouseUpMouseSelect);\n\n\t\tconst nodeViewEl = document.querySelector('#node-view') as HTMLDivElement;\n\t\tnodeViewEl.appendChild(selectBox.value);\n\t}\n\n\tfunction _mouseMoveSelect(e: MouseEvent) {\n\t\tif (e.buttons === 0) {\n\t\t\t// Mouse button is not pressed anymore so stop selection mode\n\t\t\t// Happens normally when mouse leave the view pressed and then\n\t\t\t// comes back unpressed.\n\t\t\tmouseUpMouseSelect(e);\n\t\t\treturn;\n\t\t}\n\n\t\t_updateSelectBox(e);\n\t}\n\n\tfunction mouseUpMouseSelect(e: MouseEvent) {\n\t\tif (selectActive.value === false) {\n\t\t\tif (isTouchDevice === true && e.target instanceof HTMLElement) {\n\t\t\t\tif (e.target && e.target.id.includes('node-view')) {\n\t\t\t\t\t// Deselect all nodes\n\t\t\t\t\tdeselectAllNodes();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If it is not active return directly.\n\t\t\t// Else normal node dragging will not work.\n\t\t\treturn;\n\t\t}\n\t\tdocument.removeEventListener('mousemove', _mouseMoveSelect);\n\n\t\t// Deselect all nodes\n\t\tdeselectAllNodes();\n\n\t\t// Select the nodes which are in the selection box\n\t\tconst selectedNodes = _getNodesInSelection(e);\n\t\tselectedNodes.forEach((node) => {\n\t\t\tnodeSelected(node);\n\t\t});\n\n\t\tif (selectedNodes.length === 1) {\n\t\t\tuiStore.lastSelectedNode = selectedNodes[0].name;\n\t\t}\n\n\t\t_hideSelectBox();\n\t}\n\tfunction mouseDownMouseSelect(e: MouseEvent, moveButtonPressed: boolean) {\n\t\tif (isCtrlKeyPressed(e) === true || moveButtonPressed) {\n\t\t\t// We only care about it when the ctrl key is not pressed at the same time.\n\t\t\t// So we exit when it is pressed.\n\t\t\treturn;\n\t\t}\n\n\t\tif (uiStore.isActionActive('dragActive')) {\n\t\t\t// If a node does currently get dragged we do not activate the selection\n\t\t\treturn;\n\t\t}\n\t\t_showSelectBox(e);\n\n\t\t// Leave like this.\n\t\t// Do not add an anonymous function because then remove would not work anymore\n\t\tdocument.addEventListener('mousemove', _mouseMoveSelect);\n\t}\n\n\tfunction getMousePositionWithinNodeView(event: MouseEvent | TouchEvent): XYPosition {\n\t\tconst [mouseX, mouseY] = getMousePosition(event);\n\n\t\tconst sidebarWidth = canvasStore.isDemo\n\t\t\t? 0\n\t\t\t: uiStore.sidebarMenuCollapsed\n\t\t\t? SIDEBAR_WIDTH\n\t\t\t: SIDEBAR_WIDTH_EXPANDED;\n\t\tconst headerHeight = canvasStore.isDemo ? 0 : HEADER_HEIGHT;\n\n\t\tconst relativeX = mouseX - sidebarWidth;\n\t\tconst relativeY = mouseY - headerHeight;\n\t\tconst nodeViewScale = canvasStore.nodeViewScale;\n\t\tconst nodeViewOffsetPosition = uiStore.nodeViewOffsetPosition;\n\n\t\treturn getRelativePosition(relativeX, relativeY, nodeViewScale, nodeViewOffsetPosition);\n\t}\n\n\tfunction nodeDeselected(node: INodeUi) {\n\t\tuiStore.removeNodeFromSelection(node);\n\t\tinstance.value.removeFromDragSelection(instance.value.getManagedElement(node?.id));\n\t}\n\n\tfunction nodeSelected(node: INodeUi) {\n\t\tuiStore.addSelectedNode(node);\n\t\tinstance.value.addToDragSelection(instance.value.getManagedElement(node?.id));\n\t}\n\n\tfunction deselectAllNodes() {\n\t\tinstance.value.clearDragSelection();\n\t\tuiStore.resetSelectedNodes();\n\t\tuiStore.lastSelectedNode = null;\n\t\tuiStore.lastSelectedNodeOutputIndex = null;\n\n\t\tcanvasStore.lastSelectedConnection = null;\n\t\tcanvasStore.newNodeInsertPosition = null;\n\t}\n\n\tconst instance = computed(() => canvasStore.jsPlumbInstance);\n\n\tonMounted(() => {\n\t\t_createSelectBox();\n\t});\n\n\treturn {\n\t\tgetMousePositionWithinNodeView,\n\t\tmouseUpMouseSelect,\n\t\tmouseDownMouseSelect,\n\t\tnodeDeselected,\n\t\tnodeSelected,\n\t\tdeselectAllNodes,\n\t};\n}\n","import { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\n\nexport function useUniqueNodeName() {\n\t/**\n\t * All in-store node name defaults ending with a number, e.g.\n\t * `AWS S3`, `Magento 2`, `MSG91`, `S3`, `SIGNL4`, `sms77`\n\t */\n\tfunction numberSuffixedNames() {\n\t\treturn useNodeTypesStore().allNodeTypes.reduce<string[]>((acc, nodeType) => {\n\t\t\tif (typeof nodeType.defaults.name !== 'string') {\n\t\t\t\tthrow new Error('Expected node name default to be a string');\n\t\t\t}\n\n\t\t\tif (/\\d$/.test(nodeType.defaults.name)) acc.push(nodeType.defaults.name);\n\n\t\t\treturn acc;\n\t\t}, []);\n\t}\n\n\t/**\n\t * Create a unique node name from an original name, based on the names of\n\t * all nodes on canvas and any extra names that cannot be used.\n\t */\n\tfunction uniqueNodeName(originalName: string, extraNames: string[] = []) {\n\t\tconst { canvasNames } = useWorkflowsStore();\n\n\t\tconst isUnique = !canvasNames.has(originalName) && !extraNames.includes(originalName);\n\n\t\tif (isUnique) return originalName;\n\n\t\tconst nsn = numberSuffixedNames().find((nsn) => originalName.startsWith(nsn));\n\n\t\t// edge case, number suffix as part of name: S3 -> S31 -> S32\n\n\t\tif (nsn) {\n\t\t\tlet unique = '';\n\t\t\tlet index = 1;\n\n\t\t\tconst remainder = originalName.split(nsn).pop();\n\n\t\t\tconst lastChar = remainder?.[remainder.length - 1];\n\n\t\t\tif (lastChar && Number.isInteger(Number(lastChar))) {\n\t\t\t\tindex = parseInt(lastChar, 10);\n\t\t\t\toriginalName = originalName.slice(0, -1);\n\t\t\t}\n\n\t\t\tunique = originalName;\n\n\t\t\twhile (canvasNames.has(unique) || extraNames.includes(unique)) {\n\t\t\t\tunique = originalName + index++;\n\t\t\t}\n\n\t\t\treturn unique;\n\t\t}\n\n\t\t// edge case, all-number name: 123 -> 123-1 -> 123-2\n\n\t\tif (/^\\d+-?\\d*$/.test(originalName)) {\n\t\t\tlet unique = '';\n\t\t\tlet index = 1;\n\n\t\t\tconst match = originalName.match(/(?<base>\\d+)-?(?<suffix>\\d*)/);\n\n\t\t\tif (!match?.groups) {\n\t\t\t\tthrow new Error('Failed to find match for unique name');\n\t\t\t}\n\n\t\t\tif (match?.groups?.suffix !== '') {\n\t\t\t\tindex = parseInt(match.groups.suffix, 10);\n\t\t\t}\n\n\t\t\tunique = match.groups.base;\n\n\t\t\twhile (canvasNames.has(unique) || extraNames.includes(unique)) {\n\t\t\t\tunique = match.groups.base + '-' + index++;\n\t\t\t}\n\n\t\t\treturn unique;\n\t\t}\n\n\t\t// normal case: A -> A1 -> A2\n\n\t\tlet unique = '';\n\t\tlet index = 1;\n\n\t\tconst match = originalName.match(/(?<base>.*\\D+)(?<suffix>\\d*)/);\n\n\t\tif (!match?.groups) {\n\t\t\tthrow new Error('Failed to find match for unique name');\n\t\t}\n\n\t\tif (match?.groups?.suffix !== '') {\n\t\t\tindex = parseInt(match.groups.suffix, 10);\n\t\t}\n\n\t\tunique = match.groups.base;\n\n\t\twhile (canvasNames.has(unique) || extraNames.includes(unique)) {\n\t\t\tunique = match.groups.base + index++;\n\t\t}\n\n\t\treturn unique;\n\t}\n\n\treturn { uniqueNodeName };\n}\n","<template>\n\t<span :class=\"$style.container\" data-test-id=\"node-title-container\" @click=\"onEdit\">\n\t\t<span :class=\"$style.iconWrapper\"><NodeIcon :nodeType=\"nodeType\" :size=\"18\" /></span>\n\t\t<n8n-popover placement=\"right\" width=\"200\" :value=\"editName\" :disabled=\"!editable\">\n\t\t\t<div\n\t\t\t\t:class=\"$style.editContainer\"\n\t\t\t\t@keydown.enter=\"onRename\"\n\t\t\t\t@keydown.stop\n\t\t\t\t@keydown.esc=\"editName = false\"\n\t\t\t>\n\t\t\t\t<n8n-text :bold=\"true\" color=\"text-base\" tag=\"div\">{{\n\t\t\t\t\t$locale.baseText('ndv.title.renameNode')\n\t\t\t\t}}</n8n-text>\n\t\t\t\t<n8n-input ref=\"input\" size=\"small\" v-model=\"newName\" data-test-id=\"node-rename-input\" />\n\t\t\t\t<div :class=\"$style.editButtons\">\n\t\t\t\t\t<n8n-button\n\t\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t@click=\"editName = false\"\n\t\t\t\t\t\t:label=\"$locale.baseText('ndv.title.cancel')\"\n\t\t\t\t\t/>\n\t\t\t\t\t<n8n-button\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t@click=\"onRename\"\n\t\t\t\t\t\t:label=\"$locale.baseText('ndv.title.rename')\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<template #reference>\n\t\t\t\t<div class=\"ph-no-capture\" :class=\"{ [$style.title]: true, [$style.hoverable]: editable }\">\n\t\t\t\t\t{{ value }}\n\t\t\t\t\t<div :class=\"$style.editIconContainer\">\n\t\t\t\t\t\t<font-awesome-icon :class=\"$style.editIcon\" icon=\"pencil-alt\" v-if=\"editable\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</n8n-popover>\n\t</span>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tname: 'NodeTitle',\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t},\n\t\tnodeType: {},\n\t\treadOnly: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\teditName: false,\n\t\t\tnewName: '',\n\t\t};\n\t},\n\tcomputed: {\n\t\teditable(): boolean {\n\t\t\treturn !this.readOnly && window === window.parent;\n\t\t},\n\t},\n\tmethods: {\n\t\tonEdit() {\n\t\t\tthis.newName = this.value;\n\t\t\tthis.editName = true;\n\t\t\tthis.$nextTick(() => {\n\t\t\t\tconst inputRef = this.$refs.input as HTMLInputElement | undefined;\n\t\t\t\tif (inputRef) {\n\t\t\t\t\tinputRef.focus();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tonRename() {\n\t\t\tif (this.newName.trim() !== '') {\n\t\t\t\tthis.$emit('input', this.newName.trim());\n\t\t\t}\n\n\t\t\tthis.editName = false;\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\tfont-weight: var(--font-weight-bold);\n\tdisplay: flex;\n\tfont-size: var(--font-size-m);\n\tline-height: var(--font-line-height-compact);\n\toverflow-wrap: anywhere;\n\tpadding-right: var(--spacing-s);\n\toverflow: hidden;\n}\n\n.title {\n\tmax-height: 100px;\n\tdisplay: -webkit-box;\n\t-webkit-line-clamp: 5;\n\t-webkit-box-orient: vertical;\n\tcolor: var(--color-text-dark);\n}\n\n.hoverable {\n\t&:hover {\n\t\tcursor: pointer;\n\t\t.editIcon {\n\t\t\tdisplay: inline-block;\n\t\t}\n\t}\n}\n\n.iconWrapper {\n\tdisplay: inline-flex;\n\tmargin-right: var(--spacing-2xs);\n}\n\n.editIcon {\n\tdisplay: none;\n\tfont-size: var(--font-size-xs);\n\tcolor: var(--color-text-base);\n\tposition: absolute;\n\tbottom: 0;\n}\n\n.editIconContainer {\n\tdisplay: inline-block;\n\tposition: relative;\n\twidth: 0;\n}\n\n.editButtons {\n\ttext-align: right;\n\tmargin-top: var(--spacing-s);\n\n\t> * {\n\t\tmargin-left: var(--spacing-4xs);\n\t}\n}\n\n.editContainer {\n\ttext-align: left;\n\n\t> *:first-child {\n\t\tmargin-bottom: var(--spacing-4xs);\n\t}\n}\n</style>\n","<template>\n\t<n8n-tabs :options=\"options\" :value=\"value\" @input=\"onTabSelect\" @tooltipClick=\"onTooltipClick\" />\n</template>\n\n<script lang=\"ts\">\nimport { externalHooks } from '@/mixins/externalHooks';\nimport {\n\tBUILTIN_NODES_DOCS_URL,\n\tCOMMUNITY_NODES_INSTALLATION_DOCS_URL,\n\tNPM_PACKAGE_DOCS_BASE_URL,\n} from '@/constants';\nimport type { INodeUi, ITab } from '@/Interface';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport type { INodeTypeDescription } from 'n8n-workflow';\nimport { mapStores } from 'pinia';\n\nimport mixins from 'vue-typed-mixins';\nimport { isCommunityPackageName } from '@/utils';\n\nexport default mixins(externalHooks).extend({\n\tname: 'NodeSettingsTabs',\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t},\n\t\tnodeType: {},\n\t\tsessionId: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useNDVStore, useWorkflowsStore),\n\t\tactiveNode(): INodeUi | null {\n\t\t\treturn this.ndvStore.activeNode;\n\t\t},\n\t\tdocumentationUrl(): string {\n\t\t\tconst nodeType = this.nodeType as INodeTypeDescription | null;\n\n\t\t\tif (!nodeType) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (nodeType.documentationUrl && nodeType.documentationUrl.startsWith('http')) {\n\t\t\t\treturn nodeType.documentationUrl;\n\t\t\t}\n\n\t\t\tconst utmTags =\n\t\t\t\t'?utm_source=n8n_app&utm_medium=node_settings_modal-credential_link' +\n\t\t\t\t'&utm_campaign=' +\n\t\t\t\tnodeType.name;\n\n\t\t\t// Built-in node documentation available via its codex entry\n\t\t\tconst primaryDocUrl = nodeType.codex?.resources?.primaryDocumentation?.[0]?.url;\n\t\t\tif (primaryDocUrl) {\n\t\t\t\treturn primaryDocUrl + utmTags;\n\t\t\t}\n\n\t\t\tif (this.isCommunityNode) {\n\t\t\t\treturn `${NPM_PACKAGE_DOCS_BASE_URL}${nodeType.name.split('.')[0]}`;\n\t\t\t}\n\n\t\t\t// Fallback to the root of the node documentation\n\t\t\treturn BUILTIN_NODES_DOCS_URL + utmTags;\n\t\t},\n\t\tisCommunityNode(): boolean {\n\t\t\tconst nodeType = this.nodeType as INodeTypeDescription | null;\n\t\t\tif (nodeType) {\n\t\t\t\treturn isCommunityPackageName(nodeType.name);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tpackageName(): string {\n\t\t\tconst nodeType = this.nodeType as INodeTypeDescription;\n\t\t\treturn nodeType.name.split('.')[0];\n\t\t},\n\t\toptions(): ITab[] {\n\t\t\tconst options: ITab[] = [\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('nodeSettings.parameters'),\n\t\t\t\t\tvalue: 'params',\n\t\t\t\t},\n\t\t\t];\n\t\t\tif (this.documentationUrl) {\n\t\t\t\toptions.push({\n\t\t\t\t\tlabel: this.$locale.baseText('nodeSettings.docs'),\n\t\t\t\t\tvalue: 'docs',\n\t\t\t\t\thref: this.documentationUrl,\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (this.isCommunityNode) {\n\t\t\t\toptions.push({\n\t\t\t\t\ticon: 'cube',\n\t\t\t\t\tvalue: 'communityNode',\n\t\t\t\t\talign: 'right',\n\t\t\t\t\ttooltip: this.$locale.baseText('generic.communityNode.tooltip', {\n\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\tdocUrl: COMMUNITY_NODES_INSTALLATION_DOCS_URL,\n\t\t\t\t\t\t\tpackageName: this.packageName,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t}\n\t\t\t// If both tabs have align right, both will have excessive left margin\n\t\t\tconst pushCogRight = this.isCommunityNode ? false : true;\n\t\t\toptions.push({\n\t\t\t\ticon: 'cog',\n\t\t\t\tvalue: 'settings',\n\t\t\t\talign: pushCogRight ? 'right' : undefined,\n\t\t\t});\n\n\t\t\treturn options;\n\t\t},\n\t},\n\tmethods: {\n\t\tonTabSelect(tab: string) {\n\t\t\tif (tab === 'docs' && this.nodeType) {\n\t\t\t\tthis.$externalHooks().run('dataDisplay.onDocumentationUrlClick', {\n\t\t\t\t\tnodeType: this.nodeType as INodeTypeDescription,\n\t\t\t\t\tdocumentationUrl: this.documentationUrl,\n\t\t\t\t});\n\t\t\t\tthis.$telemetry.track('User clicked ndv link', {\n\t\t\t\t\tnode_type: this.activeNode.type,\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\tsession_id: this.sessionId,\n\t\t\t\t\tpane: 'main',\n\t\t\t\t\ttype: 'docs',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (tab === 'settings' && this.nodeType) {\n\t\t\t\tthis.$telemetry.track('User viewed node settings', {\n\t\t\t\t\tnode_type: (this.nodeType as INodeTypeDescription).name,\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (tab === 'settings' || tab === 'params') {\n\t\t\t\tthis.$emit('input', tab);\n\t\t\t}\n\t\t},\n\t\tonTooltipClick(tab: string, event: MouseEvent) {\n\t\t\tif (tab === 'communityNode' && (event.target as Element).localName === 'a') {\n\t\t\t\tthis.$telemetry.track('user clicked cnr docs link', { source: 'node details view' });\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\">\n#communityNode > div {\n\tcursor: auto;\n\n\t&:hover {\n\t\tcolor: unset;\n\t}\n}\n</style>\n","<template>\n\t<div v-if=\"webhooksNode.length\" class=\"webhooks\">\n\t\t<div\n\t\t\tclass=\"clickable headline\"\n\t\t\t:class=\"{ expanded: !isMinimized }\"\n\t\t\t@click=\"isMinimized = !isMinimized\"\n\t\t\t:title=\"\n\t\t\t\tisMinimized\n\t\t\t\t\t? $locale.baseText('nodeWebhooks.clickToDisplayWebhookUrls')\n\t\t\t\t\t: $locale.baseText('nodeWebhooks.clickToHideWebhookUrls')\n\t\t\t\"\n\t\t>\n\t\t\t<font-awesome-icon icon=\"angle-down\" class=\"minimize-button minimize-icon\" />\n\t\t\t{{ $locale.baseText('nodeWebhooks.webhookUrls') }}\n\t\t</div>\n\t\t<el-collapse-transition>\n\t\t\t<div class=\"node-webhooks\" v-if=\"!isMinimized\">\n\t\t\t\t<div class=\"url-selection\">\n\t\t\t\t\t<el-row>\n\t\t\t\t\t\t<el-col :span=\"24\">\n\t\t\t\t\t\t\t<n8n-radio-buttons\n\t\t\t\t\t\t\t\tv-model=\"showUrlFor\"\n\t\t\t\t\t\t\t\t:options=\"[\n\t\t\t\t\t\t\t\t\t{ label: this.$locale.baseText('nodeWebhooks.testUrl'), value: 'test' },\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('nodeWebhooks.productionUrl'),\n\t\t\t\t\t\t\t\t\t\tvalue: 'production',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</el-col>\n\t\t\t\t\t</el-row>\n\t\t\t\t</div>\n\n\t\t\t\t<n8n-tooltip\n\t\t\t\t\tv-for=\"(webhook, index) in webhooksNode\"\n\t\t\t\t\t:key=\"index\"\n\t\t\t\t\tclass=\"item\"\n\t\t\t\t\t:content=\"$locale.baseText('nodeWebhooks.clickToCopyWebhookUrls')\"\n\t\t\t\t\tplacement=\"left\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"webhook-wrapper\">\n\t\t\t\t\t\t<div class=\"http-field\">\n\t\t\t\t\t\t\t<div class=\"http-method\">\n\t\t\t\t\t\t\t\t{{ getWebhookExpressionValue(webhook, 'httpMethod') }}<br />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"url-field\">\n\t\t\t\t\t\t\t<div class=\"webhook-url left-ellipsis clickable\" @click=\"copyWebhookUrl(webhook)\">\n\t\t\t\t\t\t\t\t{{ getWebhookUrlDisplay(webhook) }}<br />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</n8n-tooltip>\n\t\t\t</div>\n\t\t</el-collapse-transition>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport type { INodeTypeDescription, IWebhookDescription } from 'n8n-workflow';\n\nimport { WEBHOOK_NODE_TYPE } from '@/constants';\nimport { copyPaste } from '@/mixins/copyPaste';\nimport { showMessage } from '@/mixins/showMessage';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\n\nimport mixins from 'vue-typed-mixins';\n\nexport default mixins(copyPaste, showMessage, workflowHelpers).extend({\n\tname: 'NodeWebhooks',\n\tprops: [\n\t\t'node', // NodeUi\n\t\t'nodeType', // INodeTypeDescription\n\t],\n\tdata() {\n\t\treturn {\n\t\t\tisMinimized: this.nodeType && this.nodeType.name !== WEBHOOK_NODE_TYPE,\n\t\t\tshowUrlFor: 'test',\n\t\t};\n\t},\n\tcomputed: {\n\t\twebhooksNode(): IWebhookDescription[] {\n\t\t\tif (this.nodeType === null || this.nodeType.webhooks === undefined) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn (this.nodeType as INodeTypeDescription).webhooks!.filter(\n\t\t\t\t(webhookData) => webhookData.restartWebhook !== true,\n\t\t\t);\n\t\t},\n\t},\n\tmethods: {\n\t\tcopyWebhookUrl(webhookData: IWebhookDescription): void {\n\t\t\tconst webhookUrl = this.getWebhookUrlDisplay(webhookData);\n\t\t\tthis.copyToClipboard(webhookUrl);\n\n\t\t\tthis.$showMessage({\n\t\t\t\ttitle: this.$locale.baseText('nodeWebhooks.showMessage.title'),\n\t\t\t\ttype: 'success',\n\t\t\t});\n\t\t\tthis.$telemetry.track('User copied webhook URL', {\n\t\t\t\tpane: 'parameters',\n\t\t\t\ttype: `${this.showUrlFor} url`,\n\t\t\t});\n\t\t},\n\t\tgetWebhookUrlDisplay(webhookData: IWebhookDescription): string {\n\t\t\tif (this.node) {\n\t\t\t\treturn this.getWebhookUrl(webhookData, this.node, this.showUrlFor);\n\t\t\t}\n\t\t\treturn '';\n\t\t},\n\t},\n\twatch: {\n\t\tnode() {\n\t\t\tthis.isMinimized = this.nodeType.name !== WEBHOOK_NODE_TYPE;\n\t\t},\n\t},\n});\n</script>\n\n<style scoped lang=\"scss\">\n.webhooks {\n\tpadding-bottom: var(--spacing-xs);\n\tmargin: var(--spacing-xs) 0;\n\tborder-bottom: 1px solid var(--color-text-lighter);\n\n\t.headline {\n\t\tcolor: $color-primary;\n\t\tfont-weight: 600;\n\t\tfont-size: var(--font-size-2xs);\n\t}\n}\n\n.http-field {\n\tposition: absolute;\n\twidth: 50px;\n\tdisplay: inline-block;\n\ttop: calc(50% - 8px);\n}\n\n.http-method {\n\tbackground-color: var(--color-foreground-xdark);\n\twidth: 40px;\n\theight: 16px;\n\tline-height: 16px;\n\tmargin-left: 5px;\n\ttext-align: center;\n\tborder-radius: 2px;\n\tfont-size: var(--font-size-2xs);\n\tfont-weight: var(--font-weight-bold);\n\tcolor: var(--color-foreground-xlight);\n}\n\n.minimize-icon {\n\tfont-size: 1.3em;\n\tmargin-right: 0.5em;\n}\n\n.mode-selection-headline {\n\tline-height: 1.8em;\n}\n\n.node-webhooks {\n\tmargin-left: 1em;\n}\n\n.url-field {\n\tdisplay: inline-block;\n\twidth: calc(100% - 60px);\n\tmargin-left: 55px;\n}\n\n.url-selection {\n\tmargin-top: var(--spacing-xs);\n}\n\n.minimize-button {\n\tdisplay: inline-block;\n\t-webkit-transition-duration: 0.5s;\n\t-moz-transition-duration: 0.5s;\n\t-o-transition-duration: 0.5s;\n\ttransition-duration: 0.5s;\n\n\t-webkit-transition-property: -webkit-transform;\n\t-moz-transition-property: -moz-transform;\n\t-o-transition-property: -o-transform;\n\ttransition-property: transform;\n}\n.expanded .minimize-button {\n\t-webkit-transform: rotate(180deg);\n\t-moz-transform: rotate(180deg);\n\t-o-transform: rotate(180deg);\n\ttransform: rotate(180deg);\n}\n\n.webhook-url {\n\tposition: relative;\n\ttop: 0;\n\twidth: 100%;\n\tfont-size: var(--font-size-2xs);\n\twhite-space: normal;\n\toverflow: visible;\n\ttext-overflow: initial;\n\tcolor: var(--color-text-dark);\n\ttext-align: left;\n\tdirection: ltr;\n\tword-break: break-all;\n}\n\n.webhook-wrapper {\n\tline-height: 1.5;\n\tposition: relative;\n\tmargin-top: var(--spacing-xs);\n\tbackground-color: var(--color-foreground-xlight);\n\tborder-radius: 3px;\n}\n</style>\n","import Vue from 'vue';\nimport type { INodeUi } from '@/Interface';\nimport type { INodeTypeDescription, IPinData } from 'n8n-workflow';\nimport { stringSizeInBytes } from '@/utils';\nimport { MAX_WORKFLOW_PINNED_DATA_SIZE, PIN_DATA_NODE_TYPES_DENYLIST } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\n\nexport interface IPinDataContext {\n\tnode: INodeUi;\n\tnodeType: INodeTypeDescription;\n\t$showError(error: Error, title: string): void;\n}\n\nexport const pinData = (Vue as Vue.VueConstructor<Vue & IPinDataContext>).extend({\n\tcomputed: {\n\t\t...mapStores(useWorkflowsStore),\n\t\tpinData(): IPinData[string] | undefined {\n\t\t\treturn this.node ? this.workflowsStore.pinDataByNodeName(this.node!.name) : undefined;\n\t\t},\n\t\thasPinData(): boolean {\n\t\t\treturn !!this.node && typeof this.pinData !== 'undefined';\n\t\t},\n\t\tisPinDataNodeType(): boolean {\n\t\t\treturn (\n\t\t\t\t!!this.node &&\n\t\t\t\t!this.isMultipleOutputsNodeType &&\n\t\t\t\t!PIN_DATA_NODE_TYPES_DENYLIST.includes(this.node.type)\n\t\t\t);\n\t\t},\n\t\tisMultipleOutputsNodeType(): boolean {\n\t\t\treturn this.nodeType?.outputs.length > 1;\n\t\t},\n\t},\n\tmethods: {\n\t\tisValidPinDataJSON(data: string): boolean {\n\t\t\ttry {\n\t\t\t\tJSON.parse(data);\n\n\t\t\t\treturn true;\n\t\t\t} catch (error) {\n\t\t\t\tconst title = this.$locale.baseText('runData.editOutputInvalid');\n\n\t\t\t\tconst toRemove = new RegExp(/JSON\\.parse:|of the JSON data/, 'g');\n\t\t\t\tconst message = error.message.replace(toRemove, '').trim();\n\t\t\t\tconst positionMatchRegEx = /at position (\\d+)/;\n\t\t\t\tconst positionMatch = error.message.match(positionMatchRegEx);\n\n\t\t\t\terror.message = message.charAt(0).toUpperCase() + message.slice(1);\n\t\t\t\terror.message = error.message.replace(\n\t\t\t\t\t\"Unexpected token ' in JSON\",\n\t\t\t\t\tthis.$locale.baseText('runData.editOutputInvalid.singleQuote'),\n\t\t\t\t);\n\n\t\t\t\tif (positionMatch) {\n\t\t\t\t\tconst position = parseInt(positionMatch[1], 10);\n\t\t\t\t\tconst lineBreaksUpToPosition = (data.slice(0, position).match(/\\n/g) || []).length;\n\n\t\t\t\t\terror.message = error.message.replace(\n\t\t\t\t\t\tpositionMatchRegEx,\n\t\t\t\t\t\tthis.$locale.baseText('runData.editOutputInvalid.atPosition', {\n\t\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\t\tposition: `${position}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\terror.message = `${this.$locale.baseText('runData.editOutputInvalid.onLine', {\n\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\tline: `${lineBreaksUpToPosition + 1}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t})} ${error.message}`;\n\t\t\t\t}\n\n\t\t\t\tthis.$showError(error, title);\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tisValidPinDataSize(data: string | object): boolean {\n\t\t\tif (typeof data === 'object') data = JSON.stringify(data);\n\n\t\t\tif (\n\t\t\t\tthis.workflowsStore.pinDataSize + stringSizeInBytes(data) >\n\t\t\t\tMAX_WORKFLOW_PINNED_DATA_SIZE\n\t\t\t) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\tnew Error(this.$locale.baseText('ndv.pinData.error.tooLarge.description')),\n\t\t\t\t\tthis.$locale.baseText('ndv.pinData.error.tooLarge.title'),\n\t\t\t\t);\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t},\n});\n","<template>\n\t<n8n-tooltip placement=\"bottom\" :disabled=\"!disabledHint\">\n\t\t<template #content>\n\t\t\t<div>{{ disabledHint }}</div>\n\t\t</template>\n\t\t<div>\n\t\t\t<n8n-button\n\t\t\t\t:loading=\"nodeRunning && !isListeningForEvents && !isListeningForWorkflowEvents\"\n\t\t\t\t:disabled=\"disabled || !!disabledHint\"\n\t\t\t\t:label=\"buttonLabel\"\n\t\t\t\t:type=\"type\"\n\t\t\t\t:size=\"size\"\n\t\t\t\t:transparentBackground=\"transparent\"\n\t\t\t\t@click=\"onClick\"\n\t\t\t/>\n\t\t</div>\n\t</n8n-tooltip>\n</template>\n\n<script lang=\"ts\">\nimport { WEBHOOK_NODE_TYPE, MANUAL_TRIGGER_NODE_TYPE } from '@/constants';\nimport type { INodeUi } from '@/Interface';\nimport type { INodeTypeDescription } from 'n8n-workflow';\nimport mixins from 'vue-typed-mixins';\nimport { workflowRun } from '@/mixins/workflowRun';\nimport { pinData } from '@/mixins/pinData';\nimport { dataPinningEventBus } from '@/event-bus';\nimport { mapStores } from 'pinia';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\n\nexport default mixins(workflowRun, pinData).extend({\n\tprops: {\n\t\tnodeName: {\n\t\t\ttype: String,\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tlabel: {\n\t\t\ttype: String,\n\t\t},\n\t\ttype: {\n\t\t\ttype: String,\n\t\t},\n\t\tsize: {\n\t\t\ttype: String,\n\t\t},\n\t\ttransparent: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\ttelemetrySource: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useNodeTypesStore, useNDVStore, useWorkflowsStore),\n\t\tnode(): INodeUi | null {\n\t\t\treturn this.workflowsStore.getNodeByName(this.nodeName);\n\t\t},\n\t\tnodeType(): INodeTypeDescription | null {\n\t\t\tif (this.node) {\n\t\t\t\treturn this.nodeTypesStore.getNodeType(this.node.type, this.node.typeVersion);\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tnodeRunning(): boolean {\n\t\t\tconst triggeredNode = this.workflowsStore.executedNode;\n\t\t\tconst executingNode = this.workflowsStore.executingNode;\n\t\t\treturn (\n\t\t\t\tthis.workflowRunning &&\n\t\t\t\t(executingNode === this.node.name || triggeredNode === this.node.name)\n\t\t\t);\n\t\t},\n\t\tworkflowRunning(): boolean {\n\t\t\treturn this.uiStore.isActionActive('workflowRunning');\n\t\t},\n\t\tisTriggerNode(): boolean {\n\t\t\treturn this.nodeTypesStore.isTriggerNode(this.node.type);\n\t\t},\n\t\tisManualTriggerNode(): boolean {\n\t\t\treturn Boolean(this.nodeType && this.nodeType.name === MANUAL_TRIGGER_NODE_TYPE);\n\t\t},\n\t\tisPollingTypeNode(): boolean {\n\t\t\treturn !!(this.nodeType && this.nodeType.polling);\n\t\t},\n\t\tisScheduleTrigger(): boolean {\n\t\t\treturn !!(this.nodeType && this.nodeType.group.includes('schedule'));\n\t\t},\n\t\tisWebhookNode(): boolean {\n\t\t\treturn Boolean(this.nodeType && this.nodeType.name === WEBHOOK_NODE_TYPE);\n\t\t},\n\t\tisListeningForEvents(): boolean {\n\t\t\tconst waitingOnWebhook = this.workflowsStore.executionWaitingForWebhook;\n\t\t\tconst executedNode = this.workflowsStore.executedNode;\n\n\t\t\treturn (\n\t\t\t\tthis.node &&\n\t\t\t\t!this.node.disabled &&\n\t\t\t\tthis.isTriggerNode &&\n\t\t\t\twaitingOnWebhook &&\n\t\t\t\t(!executedNode || executedNode === this.nodeName)\n\t\t\t);\n\t\t},\n\t\tisListeningForWorkflowEvents(): boolean {\n\t\t\treturn (\n\t\t\t\tthis.nodeRunning &&\n\t\t\t\tthis.isTriggerNode &&\n\t\t\t\t!this.isScheduleTrigger &&\n\t\t\t\t!this.isManualTriggerNode\n\t\t\t);\n\t\t},\n\t\thasIssues(): boolean {\n\t\t\treturn Boolean(\n\t\t\t\tthis.node &&\n\t\t\t\t\tthis.node.issues &&\n\t\t\t\t\t(this.node.issues.parameters || this.node.issues.credentials),\n\t\t\t);\n\t\t},\n\t\tdisabledHint(): string {\n\t\t\tif (this.isListeningForEvents) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (this.isTriggerNode && this.node.disabled) {\n\t\t\t\treturn this.$locale.baseText('ndv.execute.nodeIsDisabled');\n\t\t\t}\n\n\t\t\tif (this.isTriggerNode && this.hasIssues) {\n\t\t\t\tconst activeNode = this.ndvStore.activeNode;\n\t\t\t\tif (activeNode && activeNode.name !== this.nodeName) {\n\t\t\t\t\treturn this.$locale.baseText('ndv.execute.fixPrevious');\n\t\t\t\t}\n\n\t\t\t\treturn this.$locale.baseText('ndv.execute.requiredFieldsMissing');\n\t\t\t}\n\n\t\t\tif (this.workflowRunning && !this.nodeRunning) {\n\t\t\t\treturn this.$locale.baseText('ndv.execute.workflowAlreadyRunning');\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\t\tbuttonLabel(): string {\n\t\t\tif (this.isListeningForEvents || this.isListeningForWorkflowEvents) {\n\t\t\t\treturn this.$locale.baseText('ndv.execute.stopListening');\n\t\t\t}\n\n\t\t\tif (this.label) {\n\t\t\t\treturn this.label;\n\t\t\t}\n\n\t\t\tif (this.isWebhookNode) {\n\t\t\t\treturn this.$locale.baseText('ndv.execute.listenForTestEvent');\n\t\t\t}\n\n\t\t\tif (this.isPollingTypeNode || (this.nodeType && this.nodeType.mockManualExecution)) {\n\t\t\t\treturn this.$locale.baseText('ndv.execute.fetchEvent');\n\t\t\t}\n\n\t\t\tif (this.isTriggerNode && !this.isScheduleTrigger && !this.isManualTriggerNode) {\n\t\t\t\treturn this.$locale.baseText('ndv.execute.listenForEvent');\n\t\t\t}\n\n\t\t\treturn this.$locale.baseText('ndv.execute.executeNode');\n\t\t},\n\t},\n\tmethods: {\n\t\tasync stopWaitingForWebhook() {\n\t\t\ttry {\n\t\t\t\tawait this.workflowsStore.removeTestWebhook(this.workflowsStore.workflowId);\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('ndv.execute.stopWaitingForWebhook.error'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\n\t\tasync onClick() {\n\t\t\tif (this.isListeningForEvents) {\n\t\t\t\tawait this.stopWaitingForWebhook();\n\t\t\t} else if (this.isListeningForWorkflowEvents) {\n\t\t\t\tthis.$emit('stopExecution');\n\t\t\t} else {\n\t\t\t\tlet shouldUnpinAndExecute = false;\n\t\t\t\tif (this.hasPinData) {\n\t\t\t\t\tshouldUnpinAndExecute = await this.confirmMessage(\n\t\t\t\t\t\tthis.$locale.baseText('ndv.pinData.unpinAndExecute.description'),\n\t\t\t\t\t\tthis.$locale.baseText('ndv.pinData.unpinAndExecute.title'),\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tthis.$locale.baseText('ndv.pinData.unpinAndExecute.confirm'),\n\t\t\t\t\t\tthis.$locale.baseText('ndv.pinData.unpinAndExecute.cancel'),\n\t\t\t\t\t);\n\n\t\t\t\t\tif (shouldUnpinAndExecute) {\n\t\t\t\t\t\tdataPinningEventBus.emit('data-unpinning', { source: 'unpin-and-execute-modal' });\n\t\t\t\t\t\tthis.workflowsStore.unpinData({ node: this.node });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!this.hasPinData || shouldUnpinAndExecute) {\n\t\t\t\t\tconst telemetryPayload = {\n\t\t\t\t\t\tnode_type: this.nodeType ? this.nodeType.name : null,\n\t\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\t\tsource: this.telemetrySource,\n\t\t\t\t\t};\n\t\t\t\t\tthis.$telemetry.track('User clicked execute node button', telemetryPayload);\n\t\t\t\t\tawait this.$externalHooks().run('nodeExecuteButton.onClick', telemetryPayload);\n\n\t\t\t\t\tawait this.runWorkflow(this.nodeName, 'RunData.ExecuteNodeButton');\n\t\t\t\t\tthis.$emit('execute');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<div\n\t\t:class=\"{\n\t\t\t'node-settings': true,\n\t\t\tdragging: dragging,\n\t\t}\"\n\t\t@keydown.stop\n\t>\n\t\t<div :class=\"$style.header\">\n\t\t\t<div class=\"header-side-menu\">\n\t\t\t\t<NodeTitle\n\t\t\t\t\tclass=\"node-name\"\n\t\t\t\t\t:value=\"node && node.name\"\n\t\t\t\t\t:nodeType=\"nodeType\"\n\t\t\t\t\t:isReadOnly=\"isReadOnly\"\n\t\t\t\t\t@input=\"nameChanged\"\n\t\t\t\t></NodeTitle>\n\t\t\t\t<div v-if=\"isExecutable\">\n\t\t\t\t\t<NodeExecuteButton\n\t\t\t\t\t\tv-if=\"!blockUI\"\n\t\t\t\t\t\tdata-test-id=\"node-execute-button\"\n\t\t\t\t\t\t:nodeName=\"node.name\"\n\t\t\t\t\t\t:disabled=\"outputPanelEditMode.enabled && !isTriggerNode\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\ttelemetrySource=\"parameters\"\n\t\t\t\t\t\t@execute=\"onNodeExecute\"\n\t\t\t\t\t\t@stopExecution=\"onStopExecution\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<NodeSettingsTabs\n\t\t\t\tv-if=\"node && nodeValid\"\n\t\t\t\tv-model=\"openPanel\"\n\t\t\t\t:nodeType=\"nodeType\"\n\t\t\t\t:sessionId=\"sessionId\"\n\t\t\t/>\n\t\t</div>\n\t\t<div class=\"node-is-not-valid\" v-if=\"node && !nodeValid\">\n\t\t\t<p :class=\"$style.warningIcon\">\n\t\t\t\t<font-awesome-icon icon=\"exclamation-triangle\" />\n\t\t\t</p>\n\t\t\t<div class=\"missingNodeTitleContainer mt-s mb-xs\">\n\t\t\t\t<n8n-text size=\"large\" color=\"text-dark\" bold>\n\t\t\t\t\t{{ $locale.baseText('nodeSettings.communityNodeUnknown.title') }}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t\t<div v-if=\"isCommunityNode\" :class=\"$style.descriptionContainer\">\n\t\t\t\t<div class=\"mb-l\">\n\t\t\t\t\t<i18n\n\t\t\t\t\t\tpath=\"nodeSettings.communityNodeUnknown.description\"\n\t\t\t\t\t\ttag=\"span\"\n\t\t\t\t\t\t@click=\"onMissingNodeTextClick\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #action>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t:href=\"`https://www.npmjs.com/package/${node.type.split('.')[0]}`\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t>{{ node.type.split('.')[0] }}</a\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</i18n>\n\t\t\t\t</div>\n\t\t\t\t<n8n-link\n\t\t\t\t\t:to=\"COMMUNITY_NODES_INSTALLATION_DOCS_URL\"\n\t\t\t\t\t@click=\"onMissingNodeLearnMoreLinkClick\"\n\t\t\t\t>\n\t\t\t\t\t{{ $locale.baseText('nodeSettings.communityNodeUnknown.installLink.text') }}\n\t\t\t\t</n8n-link>\n\t\t\t</div>\n\t\t\t<i18n v-else path=\"nodeSettings.nodeTypeUnknown.description\" tag=\"span\">\n\t\t\t\t<template #action>\n\t\t\t\t\t<a\n\t\t\t\t\t\t:href=\"CUSTOM_NODES_DOCS_URL\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tv-text=\"$locale.baseText('nodeSettings.nodeTypeUnknown.description.customNode')\"\n\t\t\t\t\t/>\n\t\t\t\t</template>\n\t\t\t</i18n>\n\t\t</div>\n\t\t<div class=\"node-parameters-wrapper\" data-test-id=\"node-parameters\" v-if=\"node && nodeValid\">\n\t\t\t<n8n-notice\n\t\t\t\tv-if=\"hasForeignCredential\"\n\t\t\t\t:content=\"\n\t\t\t\t\t$locale.baseText('nodeSettings.hasForeignCredential', {\n\t\t\t\t\t\tinterpolate: { owner: credentialOwnerName },\n\t\t\t\t\t})\n\t\t\t\t\"\n\t\t\t/>\n\t\t\t<div v-show=\"openPanel === 'params'\">\n\t\t\t\t<node-webhooks :node=\"node\" :nodeType=\"nodeType\" />\n\n\t\t\t\t<parameter-input-list\n\t\t\t\t\t:parameters=\"parametersNoneSetting\"\n\t\t\t\t\t:hideDelete=\"true\"\n\t\t\t\t\t:nodeValues=\"nodeValues\"\n\t\t\t\t\t:isReadOnly=\"isReadOnly\"\n\t\t\t\t\t:hiddenIssuesInputs=\"hiddenIssuesInputs\"\n\t\t\t\t\tpath=\"parameters\"\n\t\t\t\t\t@valueChanged=\"valueChanged\"\n\t\t\t\t\t@activate=\"onWorkflowActivate\"\n\t\t\t\t\t@parameterBlur=\"onParameterBlur\"\n\t\t\t\t>\n\t\t\t\t\t<node-credentials\n\t\t\t\t\t\t:node=\"node\"\n\t\t\t\t\t\t:readonly=\"isReadOnly\"\n\t\t\t\t\t\t:showAll=\"true\"\n\t\t\t\t\t\t@credentialSelected=\"credentialSelected\"\n\t\t\t\t\t\t@valueChanged=\"valueChanged\"\n\t\t\t\t\t\t@blur=\"onParameterBlur\"\n\t\t\t\t\t\t:hide-issues=\"hiddenIssuesInputs.includes('credentials')\"\n\t\t\t\t\t/>\n\t\t\t\t</parameter-input-list>\n\t\t\t\t<div v-if=\"parametersNoneSetting.length === 0\" class=\"no-parameters\">\n\t\t\t\t\t<n8n-text>\n\t\t\t\t\t\t{{ $locale.baseText('nodeSettings.thisNodeDoesNotHaveAnyParameters') }}\n\t\t\t\t\t</n8n-text>\n\t\t\t\t</div>\n\n\t\t\t\t<div\n\t\t\t\t\tv-if=\"isCustomApiCallSelected(nodeValues)\"\n\t\t\t\t\tclass=\"parameter-item parameter-notice\"\n\t\t\t\t\tdata-test-id=\"node-parameters-http-notice\"\n\t\t\t\t>\n\t\t\t\t\t<n8n-notice\n\t\t\t\t\t\t:content=\"\n\t\t\t\t\t\t\t$locale.baseText('nodeSettings.useTheHttpRequestNode', {\n\t\t\t\t\t\t\t\tinterpolate: { nodeTypeDisplayName: nodeType.displayName },\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div v-show=\"openPanel === 'settings'\">\n\t\t\t\t<parameter-input-list\n\t\t\t\t\t:parameters=\"parametersSetting\"\n\t\t\t\t\t:nodeValues=\"nodeValues\"\n\t\t\t\t\t:isReadOnly=\"isReadOnly\"\n\t\t\t\t\t:hiddenIssuesInputs=\"hiddenIssuesInputs\"\n\t\t\t\t\tpath=\"parameters\"\n\t\t\t\t\t@valueChanged=\"valueChanged\"\n\t\t\t\t\t@parameterBlur=\"onParameterBlur\"\n\t\t\t\t/>\n\t\t\t\t<parameter-input-list\n\t\t\t\t\t:parameters=\"nodeSettings\"\n\t\t\t\t\t:hideDelete=\"true\"\n\t\t\t\t\t:nodeValues=\"nodeValues\"\n\t\t\t\t\t:isReadOnly=\"isReadOnly\"\n\t\t\t\t\t:hiddenIssuesInputs=\"hiddenIssuesInputs\"\n\t\t\t\t\tpath=\"\"\n\t\t\t\t\t@valueChanged=\"valueChanged\"\n\t\t\t\t\t@parameterBlur=\"onParameterBlur\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t\t<n8n-block-ui :show=\"blockUI\" />\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport type { PropType } from 'vue';\nimport Vue from 'vue';\nimport type {\n\tINodeTypeDescription,\n\tINodeParameters,\n\tINodeProperties,\n\tNodeParameterValue,\n} from 'n8n-workflow';\nimport { NodeHelpers, deepCopy } from 'n8n-workflow';\nimport type {\n\tINodeUi,\n\tINodeUpdatePropertiesInformation,\n\tIUpdateInformation,\n\tIUsedCredential,\n} from '@/Interface';\n\nimport {\n\tCOMMUNITY_NODES_INSTALLATION_DOCS_URL,\n\tCUSTOM_NODES_DOCS_URL,\n\tMAIN_NODE_PANEL_WIDTH,\n\tIMPORT_CURL_MODAL_KEY,\n} from '@/constants';\n\nimport NodeTitle from '@/components/NodeTitle.vue';\nimport ParameterInputFull from '@/components/ParameterInputFull.vue';\nimport ParameterInputList from '@/components/ParameterInputList.vue';\nimport NodeCredentials from '@/components/NodeCredentials.vue';\nimport NodeSettingsTabs from '@/components/NodeSettingsTabs.vue';\nimport NodeWebhooks from '@/components/NodeWebhooks.vue';\nimport { get, set, unset } from 'lodash-es';\n\nimport { externalHooks } from '@/mixins/externalHooks';\nimport { nodeHelpers } from '@/mixins/nodeHelpers';\n\nimport mixins from 'vue-typed-mixins';\nimport NodeExecuteButton from './NodeExecuteButton.vue';\nimport { isCommunityPackageName } from '@/utils';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport { useHistoryStore } from '@/stores/history.store';\nimport { RenameNodeCommand } from '@/models/history';\nimport useWorkflowsEEStore from '@/stores/workflows.ee.store';\nimport { useCredentialsStore } from '@/stores/credentials.store';\nimport type { EventBus } from '@/event-bus';\n\nexport default mixins(externalHooks, nodeHelpers).extend({\n\tname: 'NodeSettings',\n\tcomponents: {\n\t\tNodeTitle,\n\t\tNodeCredentials,\n\t\tParameterInputFull,\n\t\tParameterInputList,\n\t\tNodeSettingsTabs,\n\t\tNodeWebhooks,\n\t\tNodeExecuteButton,\n\t},\n\tcomputed: {\n\t\t...mapStores(\n\t\t\tuseHistoryStore,\n\t\t\tuseNodeTypesStore,\n\t\t\tuseNDVStore,\n\t\t\tuseUIStore,\n\t\t\tuseCredentialsStore,\n\t\t\tuseWorkflowsStore,\n\t\t\tuseWorkflowsEEStore,\n\t\t),\n\t\tisCurlImportModalOpen(): boolean {\n\t\t\treturn this.uiStore.isModalOpen(IMPORT_CURL_MODAL_KEY);\n\t\t},\n\t\tisReadOnly(): boolean {\n\t\t\treturn this.readOnly || this.hasForeignCredential;\n\t\t},\n\t\tisExecutable(): boolean {\n\t\t\treturn this.executable || this.hasForeignCredential;\n\t\t},\n\t\tnodeTypeName(): string {\n\t\t\tif (this.nodeType) {\n\t\t\t\tconst shortNodeType = this.$locale.shortNodeType(this.nodeType.name);\n\n\t\t\t\treturn this.$locale.headerText({\n\t\t\t\t\tkey: `headers.${shortNodeType}.displayName`,\n\t\t\t\t\tfallback: this.nodeType.name,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\t\tnodeTypeDescription(): string {\n\t\t\tif (this.nodeType && this.nodeType.description) {\n\t\t\t\tconst shortNodeType = this.$locale.shortNodeType(this.nodeType.name);\n\n\t\t\t\treturn this.$locale.headerText({\n\t\t\t\t\tkey: `headers.${shortNodeType}.description`,\n\t\t\t\t\tfallback: this.nodeType.description,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn this.$locale.baseText('nodeSettings.noDescriptionFound');\n\t\t\t}\n\t\t},\n\t\theaderStyle(): object {\n\t\t\tif (!this.node) {\n\t\t\t\treturn {};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t'background-color': this.node.color,\n\t\t\t};\n\t\t},\n\t\tnode(): INodeUi | null {\n\t\t\treturn this.ndvStore.activeNode;\n\t\t},\n\t\tparametersSetting(): INodeProperties[] {\n\t\t\treturn this.parameters.filter((item) => {\n\t\t\t\treturn item.isNodeSetting;\n\t\t\t});\n\t\t},\n\t\tparametersNoneSetting(): INodeProperties[] {\n\t\t\treturn this.parameters.filter((item) => {\n\t\t\t\treturn !item.isNodeSetting;\n\t\t\t});\n\t\t},\n\t\tparameters(): INodeProperties[] {\n\t\t\tif (this.nodeType === null) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn this.nodeType.properties;\n\t\t},\n\t\toutputPanelEditMode(): { enabled: boolean; value: string } {\n\t\t\treturn this.ndvStore.outputPanelEditMode;\n\t\t},\n\t\tisCommunityNode(): boolean {\n\t\t\treturn isCommunityPackageName(this.node.type);\n\t\t},\n\t\tisTriggerNode(): boolean {\n\t\t\treturn this.nodeTypesStore.isTriggerNode(this.node.type);\n\t\t},\n\t\tworkflowOwnerName(): string {\n\t\t\treturn this.workflowsEEStore.getWorkflowOwnerName(`${this.workflowsStore.workflowId}`);\n\t\t},\n\t\thasForeignCredential(): boolean {\n\t\t\treturn this.foreignCredentials.length > 0;\n\t\t},\n\t\tusedCredentials(): IUsedCredential[] {\n\t\t\treturn Object.values(this.workflowsStore.usedCredentials).filter((credential) => {\n\t\t\t\treturn Object.values(this.node?.credentials || []).find((nodeCredential) => {\n\t\t\t\t\treturn nodeCredential.id === credential.id;\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tcredentialOwnerName(): string {\n\t\t\tconst credential = this.usedCredentials\n\t\t\t\t? Object.values(this.usedCredentials).find((credential) => {\n\t\t\t\t\t\treturn credential.id === this.foreignCredentials[0];\n\t\t\t\t  })\n\t\t\t\t: undefined;\n\n\t\t\treturn this.credentialsStore.getCredentialOwnerName(credential);\n\t\t},\n\t},\n\tprops: {\n\t\teventBus: {\n\t\t\ttype: Object as PropType<EventBus>,\n\t\t},\n\t\tdragging: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tsessionId: {\n\t\t\ttype: String,\n\t\t},\n\t\tnodeType: {\n\t\t\ttype: Object as PropType<INodeTypeDescription>,\n\t\t},\n\t\treadOnly: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tforeignCredentials: {\n\t\t\ttype: Array as PropType<string[]>,\n\t\t\tdefault: () => [],\n\t\t},\n\t\tblockUI: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\texecutable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tnodeValid: true,\n\t\t\tnodeColor: null,\n\t\t\topenPanel: 'params',\n\t\t\tnodeValues: {\n\t\t\t\tcolor: '#ff0000',\n\t\t\t\talwaysOutputData: false,\n\t\t\t\texecuteOnce: false,\n\t\t\t\tnotesInFlow: false,\n\t\t\t\tcontinueOnFail: false,\n\t\t\t\tretryOnFail: false,\n\t\t\t\tmaxTries: 3,\n\t\t\t\twaitBetweenTries: 1000,\n\t\t\t\tnotes: '',\n\t\t\t\tparameters: {},\n\t\t\t} as INodeParameters,\n\n\t\t\tnodeSettings: [\n\t\t\t\t{\n\t\t\t\t\tdisplayName: this.$locale.baseText('nodeSettings.alwaysOutputData.displayName'),\n\t\t\t\t\tname: 'alwaysOutputData',\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: false,\n\t\t\t\t\tnoDataExpression: true,\n\t\t\t\t\tdescription: this.$locale.baseText('nodeSettings.alwaysOutputData.description'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: this.$locale.baseText('nodeSettings.executeOnce.displayName'),\n\t\t\t\t\tname: 'executeOnce',\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: false,\n\t\t\t\t\tnoDataExpression: true,\n\t\t\t\t\tdescription: this.$locale.baseText('nodeSettings.executeOnce.description'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: this.$locale.baseText('nodeSettings.retryOnFail.displayName'),\n\t\t\t\t\tname: 'retryOnFail',\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: false,\n\t\t\t\t\tnoDataExpression: true,\n\t\t\t\t\tdescription: this.$locale.baseText('nodeSettings.retryOnFail.description'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: this.$locale.baseText('nodeSettings.maxTries.displayName'),\n\t\t\t\t\tname: 'maxTries',\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\tminValue: 2,\n\t\t\t\t\t\tmaxValue: 5,\n\t\t\t\t\t},\n\t\t\t\t\tdefault: 3,\n\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\tretryOnFail: [true],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tnoDataExpression: true,\n\t\t\t\t\tdescription: this.$locale.baseText('nodeSettings.maxTries.description'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: this.$locale.baseText('nodeSettings.waitBetweenTries.displayName'),\n\t\t\t\t\tname: 'waitBetweenTries',\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\tminValue: 0,\n\t\t\t\t\t\tmaxValue: 5000,\n\t\t\t\t\t},\n\t\t\t\t\tdefault: 1000,\n\t\t\t\t\tdisplayOptions: {\n\t\t\t\t\t\tshow: {\n\t\t\t\t\t\t\tretryOnFail: [true],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tnoDataExpression: true,\n\t\t\t\t\tdescription: this.$locale.baseText('nodeSettings.waitBetweenTries.description'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: this.$locale.baseText('nodeSettings.continueOnFail.displayName'),\n\t\t\t\t\tname: 'continueOnFail',\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: false,\n\t\t\t\t\tnoDataExpression: true,\n\t\t\t\t\tdescription: this.$locale.baseText('nodeSettings.continueOnFail.description'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: this.$locale.baseText('nodeSettings.notes.displayName'),\n\t\t\t\t\tname: 'notes',\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ttypeOptions: {\n\t\t\t\t\t\trows: 5,\n\t\t\t\t\t},\n\t\t\t\t\tdefault: '',\n\t\t\t\t\tnoDataExpression: true,\n\t\t\t\t\tdescription: this.$locale.baseText('nodeSettings.notes.description'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tdisplayName: this.$locale.baseText('nodeSettings.notesInFlow.displayName'),\n\t\t\t\t\tname: 'notesInFlow',\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdefault: false,\n\t\t\t\t\tnoDataExpression: true,\n\t\t\t\t\tdescription: this.$locale.baseText('nodeSettings.notesInFlow.description'),\n\t\t\t\t},\n\t\t\t] as INodeProperties[],\n\t\t\tCOMMUNITY_NODES_INSTALLATION_DOCS_URL,\n\t\t\tCUSTOM_NODES_DOCS_URL,\n\t\t\tMAIN_NODE_PANEL_WIDTH,\n\t\t\thiddenIssuesInputs: [] as string[],\n\t\t};\n\t},\n\twatch: {\n\t\tnode(newNode, oldNode) {\n\t\t\tthis.setNodeValues();\n\t\t},\n\t\tisCurlImportModalOpen(newValue, oldValue) {\n\t\t\tif (newValue === false) {\n\t\t\t\tlet parameters = this.uiStore.getHttpNodeParameters || '';\n\n\t\t\t\tif (!parameters) return;\n\n\t\t\t\ttry {\n\t\t\t\t\tparameters = JSON.parse(parameters) as {\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\t\t[key: string]: any;\n\t\t\t\t\t};\n\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tthis.valueChanged({\n\t\t\t\t\t\tnode: this.node.name,\n\t\t\t\t\t\tname: 'parameters',\n\t\t\t\t\t\tvalue: parameters,\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.uiStore.setHttpNodeParameters({ name: IMPORT_CURL_MODAL_KEY, parameters: '' });\n\t\t\t\t} catch {}\n\t\t\t}\n\t\t},\n\t},\n\tmethods: {\n\t\tpopulateHiddenIssuesSet() {\n\t\t\tif (!this.node || !this.workflowsStore.isNodePristine(this.node.name)) return;\n\n\t\t\tthis.hiddenIssuesInputs.push('credentials');\n\t\t\tthis.parametersNoneSetting.forEach((parameter) => {\n\t\t\t\tthis.hiddenIssuesInputs.push(parameter.name);\n\t\t\t});\n\n\t\t\tthis.workflowsStore.setNodePristine(this.node.name, false);\n\t\t},\n\t\tonParameterBlur(parameterName: string) {\n\t\t\tthis.hiddenIssuesInputs = this.hiddenIssuesInputs.filter((name) => name !== parameterName);\n\t\t},\n\t\tonWorkflowActivate() {\n\t\t\tthis.hiddenIssuesInputs = [];\n\t\t\tthis.$emit('activate');\n\t\t},\n\t\tonNodeExecute() {\n\t\t\tthis.hiddenIssuesInputs = [];\n\t\t\tthis.$emit('execute');\n\t\t},\n\t\tsetValue(name: string, value: NodeParameterValue) {\n\t\t\tconst nameParts = name.split('.');\n\t\t\tlet lastNamePart: string | undefined = nameParts.pop();\n\n\t\t\tlet isArray = false;\n\t\t\tif (lastNamePart !== undefined && lastNamePart.includes('[')) {\n\t\t\t\t// It includes an index so we have to extract it\n\t\t\t\tconst lastNameParts = lastNamePart.match(/(.*)\\[(\\d+)\\]$/);\n\t\t\t\tif (lastNameParts) {\n\t\t\t\t\tnameParts.push(lastNameParts[1]);\n\t\t\t\t\tlastNamePart = lastNameParts[2];\n\t\t\t\t\tisArray = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set the value via Vue.set that everything updates correctly in the UI\n\t\t\tif (nameParts.length === 0) {\n\t\t\t\t// Data is on top level\n\t\t\t\tif (value === null) {\n\t\t\t\t\t// Property should be deleted\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tVue.delete(this.nodeValues, lastNamePart);\n\t\t\t\t} else {\n\t\t\t\t\t// Value should be set\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tVue.set(this.nodeValues, lastNamePart, value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Data is on lower level\n\t\t\t\tif (value === null) {\n\t\t\t\t\t// Property should be deleted\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tlet tempValue = get(this.nodeValues, nameParts.join('.')) as\n\t\t\t\t\t\t| INodeParameters\n\t\t\t\t\t\t| INodeParameters[];\n\t\t\t\t\tVue.delete(tempValue as object, lastNamePart as string);\n\n\t\t\t\t\tif (isArray === true && (tempValue as INodeParameters[]).length === 0) {\n\t\t\t\t\t\t// If a value from an array got delete and no values are left\n\t\t\t\t\t\t// delete also the parent\n\t\t\t\t\t\tlastNamePart = nameParts.pop();\n\t\t\t\t\t\ttempValue = get(this.nodeValues, nameParts.join('.')) as INodeParameters;\n\t\t\t\t\t\tVue.delete(tempValue as object, lastNamePart as string);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Value should be set\n\t\t\t\t\tif (typeof value === 'object') {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tVue.set(get(this.nodeValues, nameParts.join('.')), lastNamePart, deepCopy(value));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tVue.set(get(this.nodeValues, nameParts.join('.')), lastNamePart, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcredentialSelected(updateInformation: INodeUpdatePropertiesInformation) {\n\t\t\t// Update the values on the node\n\t\t\tthis.workflowsStore.updateNodeProperties(updateInformation);\n\n\t\t\tconst node = this.workflowsStore.getNodeByName(updateInformation.name);\n\n\t\t\tif (node) {\n\t\t\t\t// Update the issues\n\t\t\t\tthis.updateNodeCredentialIssues(node);\n\t\t\t}\n\n\t\t\tvoid this.$externalHooks().run('nodeSettings.credentialSelected', { updateInformation });\n\t\t},\n\t\tnameChanged(name: string) {\n\t\t\tif (this.node) {\n\t\t\t\tthis.historyStore.pushCommandToUndo(new RenameNodeCommand(this.node.name, name));\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t\tthis.valueChanged({\n\t\t\t\tvalue: name,\n\t\t\t\tname: 'name',\n\t\t\t});\n\t\t},\n\t\tvalueChanged(parameterData: IUpdateInformation) {\n\t\t\tlet newValue: NodeParameterValue;\n\n\t\t\tif (parameterData.hasOwnProperty('value')) {\n\t\t\t\t// New value is given\n\t\t\t\tnewValue = parameterData.value as string | number;\n\t\t\t} else {\n\t\t\t\t// Get new value from nodeData where it is set already\n\t\t\t\tnewValue = get(this.nodeValues, parameterData.name) as NodeParameterValue;\n\t\t\t}\n\t\t\t// Save the node name before we commit the change because\n\t\t\t// we need the old name to rename the node properly\n\t\t\tconst nodeNameBefore = parameterData.node || this.node.name;\n\t\t\tconst node = this.workflowsStore.getNodeByName(nodeNameBefore);\n\n\t\t\tif (node === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (parameterData.name === 'name') {\n\t\t\t\t// Name of node changed so we have to set also the new node name as active\n\n\t\t\t\t// Update happens in NodeView so emit event\n\t\t\t\tconst sendData = {\n\t\t\t\t\tvalue: newValue,\n\t\t\t\t\toldValue: nodeNameBefore,\n\t\t\t\t\tname: parameterData.name,\n\t\t\t\t};\n\t\t\t\tthis.$emit('valueChanged', sendData);\n\t\t\t} else if (parameterData.name === 'parameters') {\n\t\t\t\tconst nodeType = this.nodeTypesStore.getNodeType(node.type, node.typeVersion);\n\t\t\t\tif (!nodeType) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Get only the parameters which are different to the defaults\n\t\t\t\tlet nodeParameters = NodeHelpers.getNodeParameters(\n\t\t\t\t\tnodeType.properties,\n\t\t\t\t\tnode.parameters,\n\t\t\t\t\tfalse,\n\t\t\t\t\tfalse,\n\t\t\t\t\tnode,\n\t\t\t\t);\n\n\t\t\t\tconst oldNodeParameters = Object.assign({}, nodeParameters);\n\n\t\t\t\t// Copy the data because it is the data of vuex so make sure that\n\t\t\t\t// we do not edit it directly\n\t\t\t\tnodeParameters = deepCopy(nodeParameters);\n\n\t\t\t\tfor (const parameterName of Object.keys(parameterData.value)) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tnewValue = parameterData.value[parameterName];\n\n\t\t\t\t\t// Remove the 'parameters.' from the beginning to just have the\n\t\t\t\t\t// actual parameter name\n\t\t\t\t\tconst parameterPath = parameterName.split('.').slice(1).join('.');\n\n\t\t\t\t\t// Check if the path is supposed to change an array and if so get\n\t\t\t\t\t// the needed data like path and index\n\t\t\t\t\tconst parameterPathArray = parameterPath.match(/(.*)\\[(\\d+)\\]$/);\n\n\t\t\t\t\t// Apply the new value\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tif (parameterData[parameterName] === undefined && parameterPathArray !== null) {\n\t\t\t\t\t\t// Delete array item\n\t\t\t\t\t\tconst path = parameterPathArray[1];\n\t\t\t\t\t\tconst index = parameterPathArray[2];\n\t\t\t\t\t\tconst data = get(nodeParameters, path);\n\n\t\t\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\t\t\tdata.splice(parseInt(index, 10), 1);\n\t\t\t\t\t\t\tVue.set(nodeParameters as object, path, data);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (newValue === undefined) {\n\t\t\t\t\t\t\tunset(nodeParameters as object, parameterPath);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tset(nodeParameters as object, parameterPath, newValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvoid this.$externalHooks().run('nodeSettings.valueChanged', {\n\t\t\t\t\t\tparameterPath,\n\t\t\t\t\t\tnewValue,\n\t\t\t\t\t\tparameters: this.parameters,\n\t\t\t\t\t\toldNodeParameters,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Get the parameters with the now new defaults according to the\n\t\t\t\t// from the user actually defined parameters\n\t\t\t\tnodeParameters = NodeHelpers.getNodeParameters(\n\t\t\t\t\tnodeType.properties,\n\t\t\t\t\tnodeParameters as INodeParameters,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse,\n\t\t\t\t\tnode,\n\t\t\t\t);\n\n\t\t\t\tfor (const key of Object.keys(nodeParameters as object)) {\n\t\t\t\t\tif (nodeParameters && nodeParameters[key] !== null && nodeParameters[key] !== undefined) {\n\t\t\t\t\t\tthis.setValue(`parameters.${key}`, nodeParameters[key] as string);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (nodeParameters) {\n\t\t\t\t\tconst updateInformation: IUpdateInformation = {\n\t\t\t\t\t\tname: node.name,\n\t\t\t\t\t\tvalue: nodeParameters,\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.workflowsStore.setNodeParameters(updateInformation);\n\n\t\t\t\t\tthis.updateNodeParameterIssues(node, nodeType);\n\t\t\t\t\tthis.updateNodeCredentialIssues(node);\n\t\t\t\t}\n\t\t\t} else if (parameterData.name.startsWith('parameters.')) {\n\t\t\t\t// A node parameter changed\n\n\t\t\t\tconst nodeType = this.nodeTypesStore.getNodeType(node.type, node.typeVersion);\n\t\t\t\tif (!nodeType) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Get only the parameters which are different to the defaults\n\t\t\t\tlet nodeParameters = NodeHelpers.getNodeParameters(\n\t\t\t\t\tnodeType.properties,\n\t\t\t\t\tnode.parameters,\n\t\t\t\t\tfalse,\n\t\t\t\t\tfalse,\n\t\t\t\t\tnode,\n\t\t\t\t);\n\t\t\t\tconst oldNodeParameters = Object.assign({}, nodeParameters);\n\n\t\t\t\t// Copy the data because it is the data of vuex so make sure that\n\t\t\t\t// we do not edit it directly\n\t\t\t\tnodeParameters = deepCopy(nodeParameters);\n\n\t\t\t\t// Remove the 'parameters.' from the beginning to just have the\n\t\t\t\t// actual parameter name\n\t\t\t\tconst parameterPath = parameterData.name.split('.').slice(1).join('.');\n\n\t\t\t\t// Check if the path is supposed to change an array and if so get\n\t\t\t\t// the needed data like path and index\n\t\t\t\tconst parameterPathArray = parameterPath.match(/(.*)\\[(\\d+)\\]$/);\n\n\t\t\t\t// Apply the new value\n\t\t\t\tif (parameterData.value === undefined && parameterPathArray !== null) {\n\t\t\t\t\t// Delete array item\n\t\t\t\t\tconst path = parameterPathArray[1];\n\t\t\t\t\tconst index = parameterPathArray[2];\n\t\t\t\t\tconst data = get(nodeParameters, path);\n\n\t\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\t\tdata.splice(parseInt(index, 10), 1);\n\t\t\t\t\t\tVue.set(nodeParameters as object, path, data);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (newValue === undefined) {\n\t\t\t\t\t\tunset(nodeParameters as object, parameterPath);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tset(nodeParameters as object, parameterPath, newValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Get the parameters with the now new defaults according to the\n\t\t\t\t// from the user actually defined parameters\n\t\t\t\tnodeParameters = NodeHelpers.getNodeParameters(\n\t\t\t\t\tnodeType.properties,\n\t\t\t\t\tnodeParameters as INodeParameters,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse,\n\t\t\t\t\tnode,\n\t\t\t\t);\n\n\t\t\t\tfor (const key of Object.keys(nodeParameters as object)) {\n\t\t\t\t\tif (nodeParameters && nodeParameters[key] !== null && nodeParameters[key] !== undefined) {\n\t\t\t\t\t\tthis.setValue(`parameters.${key}`, nodeParameters[key] as string);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Update the data in vuex\n\t\t\t\tconst updateInformation: IUpdateInformation = {\n\t\t\t\t\tname: node.name,\n\t\t\t\t\tvalue: nodeParameters,\n\t\t\t\t};\n\n\t\t\t\tthis.workflowsStore.setNodeParameters(updateInformation);\n\n\t\t\t\tvoid this.$externalHooks().run('nodeSettings.valueChanged', {\n\t\t\t\t\tparameterPath,\n\t\t\t\t\tnewValue,\n\t\t\t\t\tparameters: this.parameters,\n\t\t\t\t\toldNodeParameters,\n\t\t\t\t});\n\n\t\t\t\tthis.updateNodeParameterIssues(node, nodeType);\n\t\t\t\tthis.updateNodeCredentialIssues(node);\n\t\t\t} else {\n\t\t\t\t// A property on the node itself changed\n\n\t\t\t\t// Update data in settings\n\t\t\t\tVue.set(this.nodeValues, parameterData.name, newValue);\n\n\t\t\t\t// Update data in vuex\n\t\t\t\tconst updateInformation = {\n\t\t\t\t\tname: node.name,\n\t\t\t\t\tkey: parameterData.name,\n\t\t\t\t\tvalue: newValue,\n\t\t\t\t};\n\n\t\t\t\tthis.workflowsStore.setNodeValue(updateInformation);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Sets the values of the active node in the internal settings variables\n\t\t */\n\t\tsetNodeValues() {\n\t\t\tif (!this.node) {\n\t\t\t\t// No node selected\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.nodeType !== null) {\n\t\t\t\tthis.nodeValid = true;\n\n\t\t\t\tconst foundNodeSettings = [];\n\t\t\t\tif (this.node.color) {\n\t\t\t\t\tfoundNodeSettings.push('color');\n\t\t\t\t\tVue.set(this.nodeValues, 'color', this.node.color);\n\t\t\t\t}\n\n\t\t\t\tif (this.node.notes) {\n\t\t\t\t\tfoundNodeSettings.push('notes');\n\t\t\t\t\tVue.set(this.nodeValues, 'notes', this.node.notes);\n\t\t\t\t}\n\n\t\t\t\tif (this.node.alwaysOutputData) {\n\t\t\t\t\tfoundNodeSettings.push('alwaysOutputData');\n\t\t\t\t\tVue.set(this.nodeValues, 'alwaysOutputData', this.node.alwaysOutputData);\n\t\t\t\t}\n\n\t\t\t\tif (this.node.executeOnce) {\n\t\t\t\t\tfoundNodeSettings.push('executeOnce');\n\t\t\t\t\tVue.set(this.nodeValues, 'executeOnce', this.node.executeOnce);\n\t\t\t\t}\n\n\t\t\t\tif (this.node.continueOnFail) {\n\t\t\t\t\tfoundNodeSettings.push('continueOnFail');\n\t\t\t\t\tVue.set(this.nodeValues, 'continueOnFail', this.node.continueOnFail);\n\t\t\t\t}\n\n\t\t\t\tif (this.node.notesInFlow) {\n\t\t\t\t\tfoundNodeSettings.push('notesInFlow');\n\t\t\t\t\tVue.set(this.nodeValues, 'notesInFlow', this.node.notesInFlow);\n\t\t\t\t}\n\n\t\t\t\tif (this.node.retryOnFail) {\n\t\t\t\t\tfoundNodeSettings.push('retryOnFail');\n\t\t\t\t\tVue.set(this.nodeValues, 'retryOnFail', this.node.retryOnFail);\n\t\t\t\t}\n\n\t\t\t\tif (this.node.maxTries) {\n\t\t\t\t\tfoundNodeSettings.push('maxTries');\n\t\t\t\t\tVue.set(this.nodeValues, 'maxTries', this.node.maxTries);\n\t\t\t\t}\n\n\t\t\t\tif (this.node.waitBetweenTries) {\n\t\t\t\t\tfoundNodeSettings.push('waitBetweenTries');\n\t\t\t\t\tVue.set(this.nodeValues, 'waitBetweenTries', this.node.waitBetweenTries);\n\t\t\t\t}\n\n\t\t\t\t// Set default node settings\n\t\t\t\tfor (const nodeSetting of this.nodeSettings) {\n\t\t\t\t\tif (!foundNodeSettings.includes(nodeSetting.name)) {\n\t\t\t\t\t\t// Set default value\n\t\t\t\t\t\tVue.set(this.nodeValues, nodeSetting.name, nodeSetting.default);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tVue.set(this.nodeValues, 'parameters', deepCopy(this.node.parameters));\n\t\t\t} else {\n\t\t\t\tthis.nodeValid = false;\n\t\t\t}\n\t\t},\n\t\tonMissingNodeTextClick(event: MouseEvent) {\n\t\t\tif ((event.target as Element).localName === 'a') {\n\t\t\t\tthis.$telemetry.track('user clicked cnr browse button', {\n\t\t\t\t\tsource: 'cnr missing node modal',\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tonMissingNodeLearnMoreLinkClick() {\n\t\t\tthis.$telemetry.track('user clicked cnr docs link', {\n\t\t\t\tsource: 'missing node modal source',\n\t\t\t\tpackage_name: this.node.type.split('.')[0],\n\t\t\t\tnode_type: this.node.type,\n\t\t\t});\n\t\t},\n\t\tonStopExecution() {\n\t\t\tthis.$emit('stopExecution');\n\t\t},\n\t\topenSettings() {\n\t\t\tthis.openPanel = 'settings';\n\t\t},\n\t},\n\tmounted() {\n\t\tthis.populateHiddenIssuesSet();\n\t\tthis.setNodeValues();\n\t\tthis.eventBus?.on('openSettings', this.openSettings);\n\n\t\tthis.updateNodeParameterIssues(this.node as INodeUi, this.nodeType);\n\t},\n\tdestroyed() {\n\t\tthis.eventBus?.off('openSettings', this.openSettings);\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.header {\n\tbackground-color: var(--color-background-base);\n}\n\n.warningIcon {\n\tcolor: var(--color-text-lighter);\n\tfont-size: var(--font-size-2xl);\n}\n\n.descriptionContainer {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n</style>\n\n<style lang=\"scss\">\n.node-settings {\n\toverflow: hidden;\n\tbackground-color: var(--color-background-xlight);\n\theight: 100%;\n\twidth: 100%;\n\n\t.no-parameters {\n\t\tmargin-top: var(--spacing-xs);\n\t}\n\n\t.header-side-menu {\n\t\tpadding: var(--spacing-s) var(--spacing-s) var(--spacing-s) var(--spacing-s);\n\t\tfont-size: var(--font-size-l);\n\t\tdisplay: flex;\n\n\t\t.node-name {\n\t\t\tpadding-top: var(--spacing-5xs);\n\t\t\tflex-grow: 1;\n\t\t}\n\t}\n\n\t.node-is-not-valid {\n\t\theight: 75%;\n\t\tpadding: 10px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\ttext-align: center;\n\t\tline-height: var(--font-line-height-regular);\n\t}\n\n\t.node-parameters-wrapper {\n\t\theight: 100%;\n\t\toverflow-y: auto;\n\t\tpadding: 0 20px 200px 20px;\n\t}\n\n\t&.dragging {\n\t\tborder-color: var(--color-primary);\n\t\tbox-shadow: 0px 6px 16px rgba(255, 74, 51, 0.15);\n\t}\n}\n\n.parameter-content {\n\tfont-size: 0.9em;\n\tmargin-right: -15px;\n\tmargin-left: -15px;\n\tinput {\n\t\twidth: calc(100% - 35px);\n\t\tpadding: 5px;\n\t}\n\tselect {\n\t\twidth: calc(100% - 20px);\n\t\tpadding: 5px;\n\t}\n\n\t&:before {\n\t\tdisplay: table;\n\t\tcontent: ' ';\n\t\tposition: relative;\n\t\tbox-sizing: border-box;\n\t\tclear: both;\n\t}\n}\n\n.parameter-wrapper {\n\tpadding: 0 1em;\n}\n\n.color-reset-button-wrapper {\n\tposition: relative;\n}\n.color-reset-button {\n\tposition: absolute;\n\tright: 7px;\n\ttop: -25px;\n}\n\n.parameter-value {\n\tinput.expression {\n\t\tborder-style: dashed;\n\t\tborder-color: #ff9600;\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t\tbackground-color: #793300;\n\t}\n}\n</style>\n","<template>\n\t<component\n\t\t:is=\"tag\"\n\t\t:class=\"{ [$style.dragging]: isDragging }\"\n\t\t@mousedown=\"onDragStart\"\n\t\tref=\"wrapper\"\n\t>\n\t\t<slot :isDragging=\"isDragging\"></slot>\n\n\t\t<Teleport to=\"body\">\n\t\t\t<div ref=\"draggable\" :class=\"$style.draggable\" :style=\"draggableStyle\" v-show=\"isDragging\">\n\t\t\t\t<slot name=\"preview\" :canDrop=\"canDrop\" :el=\"draggingEl\"></slot>\n\t\t\t</div>\n\t\t</Teleport>\n\t</component>\n</template>\n\n<script lang=\"ts\">\nimport type { XYPosition } from '@/Interface';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { mapStores } from 'pinia';\nimport { defineComponent } from 'vue';\n\n// @ts-ignore\nimport Teleport from 'vue2-teleport';\n\nexport default defineComponent({\n\tname: 'draggable',\n\tcomponents: {\n\t\tTeleport,\n\t},\n\tprops: {\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\ttype: {\n\t\t\ttype: String,\n\t\t},\n\t\tdata: {\n\t\t\ttype: String,\n\t\t},\n\t\ttag: {\n\t\t\ttype: String,\n\t\t\tdefault: 'div',\n\t\t},\n\t\ttargetDataKey: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tdata() {\n\t\tconst draggablePosition = {\n\t\t\tx: -100,\n\t\t\ty: -100,\n\t\t};\n\n\t\treturn {\n\t\t\tisDragging: false,\n\t\t\tdraggablePosition,\n\t\t\tdraggingEl: null as null | HTMLElement,\n\t\t\tdraggableStyle: {\n\t\t\t\ttransform: `translate(${draggablePosition.x}px, ${draggablePosition.y}px)`,\n\t\t\t},\n\t\t\tanimationFrameId: 0,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useNDVStore),\n\t\tcanDrop(): boolean {\n\t\t\treturn this.ndvStore.canDraggableDrop;\n\t\t},\n\t\tstickyPosition(): XYPosition | null {\n\t\t\treturn this.ndvStore.draggableStickyPos;\n\t\t},\n\t},\n\tmethods: {\n\t\tsetDraggableStyle() {\n\t\t\tthis.draggableStyle = {\n\t\t\t\ttransform: `translate(${this.draggablePosition.x}px, ${this.draggablePosition.y}px)`,\n\t\t\t};\n\t\t},\n\t\tonDragStart(e: MouseEvent) {\n\t\t\tif (this.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.draggingEl = e.target as HTMLElement;\n\t\t\tif (this.targetDataKey && this.draggingEl.dataset?.target !== this.targetDataKey) {\n\t\t\t\tthis.draggingEl = this.draggingEl.closest(\n\t\t\t\t\t`[data-target=\"${this.targetDataKey}\"]`,\n\t\t\t\t) as HTMLElement;\n\t\t\t}\n\n\t\t\tif (this.targetDataKey && this.draggingEl?.dataset?.target !== this.targetDataKey) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tthis.isDragging = false;\n\t\t\tthis.draggablePosition = { x: e.pageX, y: e.pageY };\n\t\t\tthis.setDraggableStyle();\n\n\t\t\twindow.addEventListener('mousemove', this.onDrag);\n\t\t\twindow.addEventListener('mouseup', this.onDragEnd);\n\n\t\t\t// blur so that any focused inputs update value\n\t\t\tconst activeElement = document.activeElement as HTMLElement;\n\t\t\tif (activeElement) {\n\t\t\t\tactiveElement.blur();\n\t\t\t}\n\t\t},\n\t\tonDrag(e: MouseEvent) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tif (this.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.isDragging) {\n\t\t\t\tthis.isDragging = true;\n\n\t\t\t\tconst data =\n\t\t\t\t\tthis.targetDataKey && this.draggingEl ? this.draggingEl.dataset.value : this.data || '';\n\t\t\t\tthis.ndvStore.draggableStartDragging({ type: this.type, data: data || '' });\n\n\t\t\t\tthis.$emit('dragstart', this.draggingEl);\n\t\t\t\tdocument.body.style.cursor = 'grabbing';\n\t\t\t}\n\n\t\t\tthis.animationFrameId = window.requestAnimationFrame(() => {\n\t\t\t\tif (this.canDrop && this.stickyPosition) {\n\t\t\t\t\tthis.draggablePosition = { x: this.stickyPosition[0], y: this.stickyPosition[1] };\n\t\t\t\t} else {\n\t\t\t\t\tthis.draggablePosition = { x: e.pageX, y: e.pageY };\n\t\t\t\t}\n\t\t\t\tthis.setDraggableStyle();\n\t\t\t\tthis.$emit('drag', this.draggablePosition);\n\t\t\t});\n\t\t},\n\t\tonDragEnd() {\n\t\t\tif (this.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdocument.body.style.cursor = 'unset';\n\t\t\twindow.removeEventListener('mousemove', this.onDrag);\n\t\t\twindow.removeEventListener('mouseup', this.onDragEnd);\n\t\t\twindow.cancelAnimationFrame(this.animationFrameId);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.$emit('dragend', this.draggingEl);\n\t\t\t\tthis.isDragging = false;\n\t\t\t\tthis.draggingEl = null;\n\t\t\t\tthis.ndvStore.draggableStopDragging();\n\t\t\t}, 0);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.dragging {\n\tvisibility: visible;\n\tcursor: grabbing;\n}\n\n.draggable {\n\tposition: fixed;\n\tz-index: 9999999;\n\ttop: 0;\n\tleft: 0;\n}\n\n.draggable-data-transfer {\n\twidth: 0;\n\theight: 0;\n}\n</style>\n","<template>\n\t<Draggable\n\t\ttype=\"panel-resize\"\n\t\t@drag=\"onDrag\"\n\t\t@dragstart=\"onDragStart\"\n\t\t@dragend=\"onDragEnd\"\n\t\t:class=\"$style.dragContainer\"\n\t>\n\t\t<template #default=\"{ isDragging }\">\n\t\t\t<div :class=\"{ [$style.dragButton]: true }\">\n\t\t\t\t<span\n\t\t\t\t\tv-if=\"canMoveLeft\"\n\t\t\t\t\t:class=\"{ [$style.leftArrow]: true, [$style.visible]: isDragging }\"\n\t\t\t\t>\n\t\t\t\t\t<font-awesome-icon icon=\"arrow-left\" />\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\tv-if=\"canMoveRight\"\n\t\t\t\t\t:class=\"{ [$style.rightArrow]: true, [$style.visible]: isDragging }\"\n\t\t\t\t>\n\t\t\t\t\t<font-awesome-icon icon=\"arrow-right\" />\n\t\t\t\t</span>\n\t\t\t\t<div :class=\"$style.grid\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t</Draggable>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport Draggable from './Draggable.vue';\n\nexport default defineComponent({\n\tcomponents: {\n\t\tDraggable,\n\t},\n\tprops: {\n\t\tcanMoveRight: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tcanMoveLeft: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tmethods: {\n\t\tonDrag(e: { x: number; y: number }) {\n\t\t\tthis.$emit('drag', e);\n\t\t},\n\t\tonDragStart() {\n\t\t\tthis.$emit('dragstart');\n\t\t},\n\t\tonDragEnd() {\n\t\t\tthis.$emit('dragend');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.dragContainer {\n\tpointer-events: all;\n}\n.dragButton {\n\tbackground-color: var(--color-background-base);\n\twidth: 64px;\n\theight: 21px;\n\tborder-top-left-radius: var(--border-radius-base);\n\tborder-top-right-radius: var(--border-radius-base);\n\tcursor: grab;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\toverflow: visible;\n\tposition: relative;\n\tz-index: 3;\n\n\t&:hover {\n\t\t.leftArrow,\n\t\t.rightArrow {\n\t\t\tvisibility: visible;\n\t\t}\n\t}\n}\n\n.visible {\n\tvisibility: visible !important;\n}\n\n.arrow {\n\tposition: absolute;\n\tcolor: var(--color-background-xlight);\n\tfont-size: var(--font-size-3xs);\n\tvisibility: hidden;\n\ttop: 0;\n}\n\n.leftArrow {\n\tcomposes: arrow;\n\tleft: -16px;\n}\n\n.rightArrow {\n\tcomposes: arrow;\n\tright: -16px;\n}\n\n.grid {\n\t> div {\n\t\tdisplay: flex;\n\n\t\t&:first-child {\n\t\t\t> div {\n\t\t\t\tmargin-bottom: 2px;\n\t\t\t}\n\t\t}\n\n\t\t> div {\n\t\t\theight: 2px;\n\t\t\twidth: 2px;\n\t\t\tborder-radius: 50%;\n\t\t\tbackground-color: var(--color-foreground-xdark);\n\t\t\tmargin-right: 4px;\n\n\t\t\t&:last-child {\n\t\t\t\tmargin-right: 0;\n\t\t\t}\n\t\t}\n\t}\n}\n</style>\n","<template>\n\t<div>\n\t\t<div :class=\"$style.inputPanel\" v-if=\"!hideInputAndOutput\" :style=\"inputPanelStyles\">\n\t\t\t<slot name=\"input\"></slot>\n\t\t</div>\n\t\t<div :class=\"$style.outputPanel\" v-if=\"!hideInputAndOutput\" :style=\"outputPanelStyles\">\n\t\t\t<slot name=\"output\"></slot>\n\t\t</div>\n\t\t<div :class=\"$style.mainPanel\" :style=\"mainPanelStyles\">\n\t\t\t<n8n-resize-wrapper\n\t\t\t\t:isResizingEnabled=\"currentNodePaneType !== 'unknown'\"\n\t\t\t\t:width=\"relativeWidthToPx(mainPanelDimensions.relativeWidth)\"\n\t\t\t\t:minWidth=\"MIN_PANEL_WIDTH\"\n\t\t\t\t:gridSize=\"20\"\n\t\t\t\t@resize=\"onResizeDebounced\"\n\t\t\t\t@resizestart=\"onResizeStart\"\n\t\t\t\t@resizeend=\"onResizeEnd\"\n\t\t\t\t:supportedDirections=\"supportedResizeDirections\"\n\t\t\t>\n\t\t\t\t<div :class=\"$style.dragButtonContainer\">\n\t\t\t\t\t<PanelDragButton\n\t\t\t\t\t\t:class=\"{ [$style.draggable]: true, [$style.visible]: isDragging }\"\n\t\t\t\t\t\t:canMoveLeft=\"canMoveLeft\"\n\t\t\t\t\t\t:canMoveRight=\"canMoveRight\"\n\t\t\t\t\t\tv-if=\"!hideInputAndOutput && isDraggable\"\n\t\t\t\t\t\t@dragstart=\"onDragStart\"\n\t\t\t\t\t\t@drag=\"onDrag\"\n\t\t\t\t\t\t@dragend=\"onDragEnd\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"{ [$style.mainPanelInner]: true, [$style.dragging]: isDragging }\">\n\t\t\t\t\t<slot name=\"main\" />\n\t\t\t\t</div>\n\t\t\t</n8n-resize-wrapper>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport type { PropType } from 'vue';\nimport { get } from 'lodash-es';\n\nimport type { INodeTypeDescription } from 'n8n-workflow';\nimport PanelDragButton from './PanelDragButton.vue';\n\nimport { LOCAL_STORAGE_MAIN_PANEL_RELATIVE_WIDTH, MAIN_NODE_PANEL_WIDTH } from '@/constants';\nimport mixins from 'vue-typed-mixins';\nimport { debounceHelper } from '@/mixins/debounce';\nimport { mapStores } from 'pinia';\nimport { useNDVStore } from '@/stores/ndv.store';\n\nconst SIDE_MARGIN = 24;\nconst SIDE_PANELS_MARGIN = 80;\nconst MIN_PANEL_WIDTH = 280;\nconst PANEL_WIDTH = 320;\nconst PANEL_WIDTH_LARGE = 420;\n\nconst initialMainPanelWidth: { [key: string]: number } = {\n\tregular: MAIN_NODE_PANEL_WIDTH,\n\tdragless: MAIN_NODE_PANEL_WIDTH,\n\tunknown: MAIN_NODE_PANEL_WIDTH,\n\tinputless: MAIN_NODE_PANEL_WIDTH,\n\twide: MAIN_NODE_PANEL_WIDTH * 2,\n};\n\nexport default mixins(debounceHelper).extend({\n\tname: 'NDVDraggablePanels',\n\tcomponents: {\n\t\tPanelDragButton,\n\t},\n\tprops: {\n\t\tisDraggable: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\thideInputAndOutput: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tposition: {\n\t\t\ttype: Number,\n\t\t},\n\t\tnodeType: {\n\t\t\ttype: Object as PropType<INodeTypeDescription>,\n\t\t\tdefault: () => ({}),\n\t\t},\n\t},\n\tdata(): {\n\t\twindowWidth: number;\n\t\tisDragging: boolean;\n\t\tMIN_PANEL_WIDTH: number;\n\t\tinitialized: boolean;\n\t} {\n\t\treturn {\n\t\t\twindowWidth: 1,\n\t\t\tisDragging: false,\n\t\t\tMIN_PANEL_WIDTH,\n\t\t\tinitialized: false,\n\t\t};\n\t},\n\tmounted() {\n\t\tthis.setTotalWidth();\n\n\t\t/*\n\t\t\tOnly set(or restore) initial position if `mainPanelDimensions`\n\t\t\tis at the default state({relativeLeft:1, relativeRight: 1, relativeWidth: 1}) to make sure we use store values if they are set\n\t\t*/\n\t\tif (\n\t\t\tthis.mainPanelDimensions.relativeLeft === 1 &&\n\t\t\tthis.mainPanelDimensions.relativeRight === 1\n\t\t) {\n\t\t\tthis.setMainPanelWidth();\n\t\t\tthis.setPositions(this.getInitialLeftPosition(this.mainPanelDimensions.relativeWidth));\n\t\t\tthis.restorePositionData();\n\t\t}\n\n\t\twindow.addEventListener('resize', this.setTotalWidth);\n\t\tthis.$emit('init', { position: this.mainPanelDimensions.relativeLeft });\n\t\tsetTimeout(() => {\n\t\t\tthis.initialized = true;\n\t\t}, 0);\n\t},\n\tdestroyed() {\n\t\twindow.removeEventListener('resize', this.setTotalWidth);\n\t},\n\tcomputed: {\n\t\t...mapStores(useNDVStore),\n\t\tmainPanelDimensions(): {\n\t\t\trelativeWidth: number;\n\t\t\trelativeLeft: number;\n\t\t\trelativeRight: number;\n\t\t} {\n\t\t\treturn this.ndvStore.getMainPanelDimensions(this.currentNodePaneType);\n\t\t},\n\t\tsupportedResizeDirections(): string[] {\n\t\t\tconst supportedDirections = ['right'];\n\n\t\t\tif (this.isDraggable) supportedDirections.push('left');\n\t\t\treturn supportedDirections;\n\t\t},\n\t\tcurrentNodePaneType(): string {\n\t\t\tif (!this.hasInputSlot) return 'inputless';\n\t\t\tif (!this.isDraggable) return 'dragless';\n\t\t\tif (this.nodeType === null) return 'unknown';\n\t\t\treturn get(this, 'nodeType.parameterPane') || 'regular';\n\t\t},\n\t\thasInputSlot(): boolean {\n\t\t\treturn this.$slots.input !== undefined;\n\t\t},\n\t\tinputPanelMargin(): number {\n\t\t\treturn this.pxToRelativeWidth(SIDE_PANELS_MARGIN);\n\t\t},\n\t\tminWindowWidth(): number {\n\t\t\treturn 2 * (SIDE_MARGIN + SIDE_PANELS_MARGIN) + MIN_PANEL_WIDTH;\n\t\t},\n\t\tminimumLeftPosition(): number {\n\t\t\tif (this.windowWidth < this.minWindowWidth) return this.pxToRelativeWidth(1);\n\n\t\t\tif (!this.hasInputSlot) return this.pxToRelativeWidth(SIDE_MARGIN);\n\t\t\treturn this.pxToRelativeWidth(SIDE_MARGIN + 20) + this.inputPanelMargin;\n\t\t},\n\t\tmaximumRightPosition(): number {\n\t\t\tif (this.windowWidth < this.minWindowWidth) return this.pxToRelativeWidth(1);\n\n\t\t\treturn this.pxToRelativeWidth(SIDE_MARGIN + 20) + this.inputPanelMargin;\n\t\t},\n\t\tcanMoveLeft(): boolean {\n\t\t\treturn this.mainPanelDimensions.relativeLeft > this.minimumLeftPosition;\n\t\t},\n\t\tcanMoveRight(): boolean {\n\t\t\treturn this.mainPanelDimensions.relativeRight > this.maximumRightPosition;\n\t\t},\n\t\tmainPanelStyles(): { left: string; right: string } {\n\t\t\treturn {\n\t\t\t\tleft: `${this.relativeWidthToPx(this.mainPanelDimensions.relativeLeft)}px`,\n\t\t\t\tright: `${this.relativeWidthToPx(this.mainPanelDimensions.relativeRight)}px`,\n\t\t\t};\n\t\t},\n\t\tinputPanelStyles(): { right: string } {\n\t\t\treturn {\n\t\t\t\tright: `${this.relativeWidthToPx(this.calculatedPositions.inputPanelRelativeRight)}px`,\n\t\t\t};\n\t\t},\n\t\toutputPanelStyles(): { left: string; transform: string } {\n\t\t\treturn {\n\t\t\t\tleft: `${this.relativeWidthToPx(this.calculatedPositions.outputPanelRelativeLeft)}px`,\n\t\t\t\ttransform: `translateX(-${this.relativeWidthToPx(this.outputPanelRelativeTranslate)}px)`,\n\t\t\t};\n\t\t},\n\t\tcalculatedPositions(): { inputPanelRelativeRight: number; outputPanelRelativeLeft: number } {\n\t\t\tconst hasInput = this.$slots.input !== undefined;\n\t\t\tconst outputPanelRelativeLeft =\n\t\t\t\tthis.mainPanelDimensions.relativeLeft + this.mainPanelDimensions.relativeWidth;\n\n\t\t\tconst inputPanelRelativeRight = hasInput\n\t\t\t\t? 1 - outputPanelRelativeLeft + this.mainPanelDimensions.relativeWidth\n\t\t\t\t: 1 - this.pxToRelativeWidth(SIDE_MARGIN);\n\n\t\t\treturn {\n\t\t\t\tinputPanelRelativeRight,\n\t\t\t\toutputPanelRelativeLeft,\n\t\t\t};\n\t\t},\n\t\toutputPanelRelativeTranslate(): number {\n\t\t\tconst panelMinLeft = 1 - this.pxToRelativeWidth(MIN_PANEL_WIDTH + SIDE_MARGIN);\n\t\t\tconst currentRelativeLeftDelta =\n\t\t\t\tthis.calculatedPositions.outputPanelRelativeLeft - panelMinLeft;\n\t\t\treturn currentRelativeLeftDelta > 0 ? currentRelativeLeftDelta : 0;\n\t\t},\n\t\thasDoubleWidth(): boolean {\n\t\t\treturn get(this, 'nodeType.parameterPane') === 'wide';\n\t\t},\n\t\tfixedPanelWidth(): number {\n\t\t\tconst multiplier = this.hasDoubleWidth ? 2 : 1;\n\n\t\t\tif (this.windowWidth > 1700) {\n\t\t\t\treturn PANEL_WIDTH_LARGE * multiplier;\n\t\t\t}\n\n\t\t\treturn PANEL_WIDTH * multiplier;\n\t\t},\n\t\tisBelowMinWidthMainPanel(): boolean {\n\t\t\tconst minRelativeWidth = this.pxToRelativeWidth(MIN_PANEL_WIDTH);\n\t\t\treturn this.mainPanelDimensions.relativeWidth < minRelativeWidth;\n\t\t},\n\t},\n\twatch: {\n\t\twindowWidth(windowWidth) {\n\t\t\tconst minRelativeWidth = this.pxToRelativeWidth(MIN_PANEL_WIDTH);\n\t\t\t// Prevent the panel resizing below MIN_PANEL_WIDTH whhile maintaing position\n\t\t\tif (this.isBelowMinWidthMainPanel) {\n\t\t\t\tthis.setMainPanelWidth(minRelativeWidth);\n\t\t\t}\n\n\t\t\tconst isBelowMinLeft = this.minimumLeftPosition > this.mainPanelDimensions.relativeLeft;\n\t\t\tconst isMaxRight = this.maximumRightPosition > this.mainPanelDimensions.relativeRight;\n\n\t\t\t// When user is resizing from non-supported view(sub ~488px) we need to refit the panels\n\t\t\tif (windowWidth > this.minWindowWidth && isBelowMinLeft && isMaxRight) {\n\t\t\t\tthis.setMainPanelWidth(minRelativeWidth);\n\t\t\t\tthis.setPositions(this.getInitialLeftPosition(this.mainPanelDimensions.relativeWidth));\n\t\t\t}\n\n\t\t\tthis.setPositions(this.mainPanelDimensions.relativeLeft);\n\t\t},\n\t},\n\tmethods: {\n\t\tgetInitialLeftPosition(width: number) {\n\t\t\tif (this.currentNodePaneType === 'dragless')\n\t\t\t\treturn this.pxToRelativeWidth(SIDE_MARGIN + 1 + this.fixedPanelWidth);\n\n\t\t\treturn this.hasInputSlot ? 0.5 - width / 2 : this.minimumLeftPosition;\n\t\t},\n\t\tsetMainPanelWidth(relativeWidth?: number) {\n\t\t\tconst mainPanelRelativeWidth =\n\t\t\t\trelativeWidth || this.pxToRelativeWidth(initialMainPanelWidth[this.currentNodePaneType]);\n\n\t\t\tthis.ndvStore.setMainPanelDimensions({\n\t\t\t\tpanelType: this.currentNodePaneType,\n\t\t\t\tdimensions: {\n\t\t\t\t\trelativeWidth: mainPanelRelativeWidth,\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\tsetPositions(relativeLeft: number) {\n\t\t\tconst mainPanelRelativeLeft =\n\t\t\t\trelativeLeft || 1 - this.calculatedPositions.inputPanelRelativeRight;\n\t\t\tconst mainPanelRelativeRight =\n\t\t\t\t1 - mainPanelRelativeLeft - this.mainPanelDimensions.relativeWidth;\n\n\t\t\tconst isMaxRight = this.maximumRightPosition > mainPanelRelativeRight;\n\t\t\tconst isMinLeft = this.minimumLeftPosition > mainPanelRelativeLeft;\n\t\t\tconst isInputless = this.currentNodePaneType === 'inputless';\n\n\t\t\tif (isMinLeft) {\n\t\t\t\tthis.ndvStore.setMainPanelDimensions({\n\t\t\t\t\tpanelType: this.currentNodePaneType,\n\t\t\t\t\tdimensions: {\n\t\t\t\t\t\trelativeLeft: this.minimumLeftPosition,\n\t\t\t\t\t\trelativeRight: 1 - this.mainPanelDimensions.relativeWidth - this.minimumLeftPosition,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isMaxRight) {\n\t\t\t\tthis.ndvStore.setMainPanelDimensions({\n\t\t\t\t\tpanelType: this.currentNodePaneType,\n\t\t\t\t\tdimensions: {\n\t\t\t\t\t\trelativeLeft: 1 - this.mainPanelDimensions.relativeWidth - this.maximumRightPosition,\n\t\t\t\t\t\trelativeRight: this.maximumRightPosition as number,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.ndvStore.setMainPanelDimensions({\n\t\t\t\tpanelType: this.currentNodePaneType,\n\t\t\t\tdimensions: {\n\t\t\t\t\trelativeLeft: isInputless ? this.minimumLeftPosition : mainPanelRelativeLeft,\n\t\t\t\t\trelativeRight: mainPanelRelativeRight,\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\tpxToRelativeWidth(px: number) {\n\t\t\treturn px / this.windowWidth;\n\t\t},\n\t\trelativeWidthToPx(relativeWidth: number) {\n\t\t\treturn relativeWidth * this.windowWidth;\n\t\t},\n\t\tonResizeStart() {\n\t\t\tthis.setTotalWidth();\n\t\t},\n\t\tonResizeEnd() {\n\t\t\tthis.storePositionData();\n\t\t},\n\t\tonResizeDebounced(data: { direction: string; x: number; width: number }) {\n\t\t\tif (this.initialized) {\n\t\t\t\tvoid this.callDebounced('onResize', { debounceTime: 10, trailing: true }, data);\n\t\t\t}\n\t\t},\n\t\tonResize({ direction, x, width }: { direction: string; x: number; width: number }) {\n\t\t\tconst relativeDistance = this.pxToRelativeWidth(x);\n\t\t\tconst relativeWidth = this.pxToRelativeWidth(width);\n\n\t\t\tif (direction === 'left' && relativeDistance <= this.minimumLeftPosition) return;\n\t\t\tif (direction === 'right' && 1 - relativeDistance <= this.maximumRightPosition) return;\n\t\t\tif (width <= MIN_PANEL_WIDTH) return;\n\n\t\t\tthis.setMainPanelWidth(relativeWidth);\n\t\t\tthis.setPositions(\n\t\t\t\tdirection === 'left' ? relativeDistance : this.mainPanelDimensions.relativeLeft,\n\t\t\t);\n\t\t},\n\t\trestorePositionData() {\n\t\t\tconst storedPanelWidthData = window.localStorage.getItem(\n\t\t\t\t`${LOCAL_STORAGE_MAIN_PANEL_RELATIVE_WIDTH}_${this.currentNodePaneType}`,\n\t\t\t);\n\n\t\t\tif (storedPanelWidthData) {\n\t\t\t\tconst parsedWidth = parseFloat(storedPanelWidthData);\n\t\t\t\tthis.setMainPanelWidth(parsedWidth);\n\t\t\t\tconst initialPosition = this.getInitialLeftPosition(parsedWidth);\n\n\t\t\t\tthis.setPositions(initialPosition);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tstorePositionData() {\n\t\t\twindow.localStorage.setItem(\n\t\t\t\t`${LOCAL_STORAGE_MAIN_PANEL_RELATIVE_WIDTH}_${this.currentNodePaneType}`,\n\t\t\t\tthis.mainPanelDimensions.relativeWidth.toString(),\n\t\t\t);\n\t\t},\n\t\tonDragStart() {\n\t\t\tthis.isDragging = true;\n\t\t\tthis.$emit('dragstart', { position: this.mainPanelDimensions.relativeLeft });\n\t\t},\n\t\tonDrag(e: { x: number; y: number }) {\n\t\t\tconst relativeLeft = this.pxToRelativeWidth(e.x) - this.mainPanelDimensions.relativeWidth / 2;\n\n\t\t\tthis.setPositions(relativeLeft);\n\t\t},\n\t\tonDragEnd() {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.isDragging = false;\n\t\t\t\tthis.$emit('dragend', {\n\t\t\t\t\twindowWidth: this.windowWidth,\n\t\t\t\t\tposition: this.mainPanelDimensions.relativeLeft,\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t\tthis.storePositionData();\n\t\t},\n\t\tsetTotalWidth() {\n\t\t\tthis.windowWidth = window.innerWidth;\n\t\t},\n\t\tclose() {\n\t\t\tthis.$emit('close');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.dataPanel {\n\tposition: absolute;\n\theight: calc(100% - 2 * var(--spacing-l));\n\tposition: absolute;\n\ttop: var(--spacing-l);\n\tz-index: 0;\n\tmin-width: 280px;\n}\n\n.inputPanel {\n\tcomposes: dataPanel;\n\tleft: var(--spacing-l);\n\n\t> * {\n\t\tborder-radius: var(--border-radius-large) 0 0 var(--border-radius-large);\n\t}\n}\n\n.outputPanel {\n\tcomposes: dataPanel;\n\tright: var(--spacing-l);\n\n\t> * {\n\t\tborder-radius: 0 var(--border-radius-large) var(--border-radius-large) 0;\n\t}\n}\n\n.mainPanel {\n\tposition: absolute;\n\theight: 100%;\n\n\t&:hover {\n\t\t.draggable {\n\t\t\tvisibility: visible;\n\t\t}\n\t}\n}\n\n.mainPanelInner {\n\theight: 100%;\n\tborder: var(--border-base);\n\tborder-radius: var(--border-radius-large);\n\tbox-shadow: 0 4px 16px rgb(50 61 85 / 10%);\n\toverflow: hidden;\n\n\t&.dragging {\n\t\tborder-color: var(--color-primary);\n\t\tbox-shadow: 0px 6px 16px rgba(255, 74, 51, 0.15);\n\t}\n}\n\n.draggable {\n\tvisibility: hidden;\n}\n\n.double-width {\n\tleft: 90%;\n}\n\n.dragButtonContainer {\n\tposition: absolute;\n\ttop: -12px;\n\twidth: 100%;\n\theight: 12px;\n\tdisplay: flex;\n\tjustify-content: center;\n\tpointer-events: none;\n\n\t.draggable {\n\t\tpointer-events: all;\n\t}\n\t&:hover .draggable {\n\t\tvisibility: visible;\n\t}\n}\n\n.visible {\n\tvisibility: visible;\n}\n</style>\n","<template>\n\t<span>\n\t\t<div v-if=\"isLoading\">Loading binary data...</div>\n\t\t<div v-else-if=\"error\">Error loading binary data</div>\n\t\t<span v-else>\n\t\t\t<video v-if=\"binaryData.fileType === 'video'\" controls autoplay>\n\t\t\t\t<source :src=\"embedSource\" :type=\"binaryData.mimeType\" />\n\t\t\t\t{{ $locale.baseText('binaryDataDisplay.yourBrowserDoesNotSupport') }}\n\t\t\t</video>\n\t\t\t<vue-json-pretty\n\t\t\t\tv-else-if=\"binaryData.fileType === 'json'\"\n\t\t\t\t:data=\"jsonData\"\n\t\t\t\t:deep=\"3\"\n\t\t\t\t:showLength=\"true\"\n\t\t\t/>\n\t\t\t<embed v-else :src=\"embedSource\" class=\"binary-data\" :class=\"embedClass()\" />\n\t\t</span>\n\t</span>\n</template>\n\n<script lang=\"ts\">\nimport type { IBinaryData } from 'n8n-workflow';\nimport { jsonParse } from 'n8n-workflow';\nimport type { PropType } from 'vue';\nimport VueJsonPretty from 'vue-json-pretty';\nimport { mapStores } from 'pinia';\nimport { useWorkflowsStore } from '@/stores';\nimport Vue from 'vue';\n\nexport default Vue.extend({\n\tname: 'BinaryDataDisplayEmbed',\n\tcomponents: {\n\t\tVueJsonPretty,\n\t},\n\tprops: {\n\t\tbinaryData: {\n\t\t\ttype: Object as PropType<IBinaryData>,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisLoading: true,\n\t\t\tembedSource: '',\n\t\t\terror: false,\n\t\t\tjsonData: '',\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useWorkflowsStore),\n\t},\n\tasync mounted() {\n\t\tconst { id, data, fileName, fileType, mimeType } = (this.binaryData || {}) as IBinaryData;\n\t\tconst isJSONData = fileType === 'json';\n\n\t\tif (!id) {\n\t\t\tif (isJSONData) {\n\t\t\t\tthis.jsonData = jsonParse(atob(data));\n\t\t\t} else {\n\t\t\t\tthis.embedSource = 'data:' + mimeType + ';base64,' + data;\n\t\t\t}\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tconst binaryUrl = this.workflowsStore.getBinaryUrl(id, 'view', fileName, mimeType);\n\t\t\t\tif (isJSONData) {\n\t\t\t\t\tthis.jsonData = await (await fetch(binaryUrl)).json();\n\t\t\t\t} else {\n\t\t\t\t\tthis.embedSource = binaryUrl;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tthis.error = true;\n\t\t\t}\n\t\t}\n\n\t\tthis.isLoading = false;\n\t},\n\tmethods: {\n\t\tembedClass(): string[] {\n\t\t\tconst { fileType } = (this.binaryData || {}) as IBinaryData;\n\t\t\treturn [fileType ?? 'other'];\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\">\n.binary-data {\n\tbackground-color: var(--color-foreground-xlight);\n\n\t&.image {\n\t\tmax-height: calc(100% - 1em);\n\t\tmax-width: calc(100% - 1em);\n\t}\n\n\t&.other {\n\t\theight: calc(100% - 1em);\n\t\twidth: calc(100% - 1em);\n\t}\n}\n</style>\n","<template>\n\t<div v-if=\"windowVisible\" :class=\"['binary-data-window', binaryData?.fileType]\">\n\t\t<n8n-button\n\t\t\t@click.stop=\"closeWindow\"\n\t\t\tsize=\"small\"\n\t\t\tclass=\"binary-data-window-back\"\n\t\t\t:title=\"$locale.baseText('binaryDataDisplay.backToOverviewPage')\"\n\t\t\ticon=\"arrow-left\"\n\t\t\t:label=\"$locale.baseText('binaryDataDisplay.backToList')\"\n\t\t/>\n\n\t\t<div class=\"binary-data-window-wrapper\">\n\t\t\t<div v-if=\"!binaryData\">\n\t\t\t\t{{ $locale.baseText('binaryDataDisplay.noDataFoundToDisplay') }}\n\t\t\t</div>\n\t\t\t<BinaryDataDisplayEmbed v-else :binaryData=\"binaryData\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport type { IBinaryData, IRunData } from 'n8n-workflow';\n\nimport BinaryDataDisplayEmbed from '@/components/BinaryDataDisplayEmbed.vue';\n\nimport { nodeHelpers } from '@/mixins/nodeHelpers';\n\nimport mixins from 'vue-typed-mixins';\nimport { mapStores } from 'pinia';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\n\nexport default mixins(nodeHelpers).extend({\n\tname: 'BinaryDataDisplay',\n\tcomponents: {\n\t\tBinaryDataDisplayEmbed,\n\t},\n\tprops: [\n\t\t'displayData', // IBinaryData\n\t\t'windowVisible', // boolean\n\t],\n\tcomputed: {\n\t\t...mapStores(useWorkflowsStore),\n\t\tbinaryData(): IBinaryData | null {\n\t\t\tconst binaryData = this.getBinaryData(\n\t\t\t\tthis.workflowRunData,\n\t\t\t\tthis.displayData.node,\n\t\t\t\tthis.displayData.runIndex,\n\t\t\t\tthis.displayData.outputIndex,\n\t\t\t);\n\n\t\t\tif (binaryData.length === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.displayData.index >= binaryData.length ||\n\t\t\t\tbinaryData[this.displayData.index][this.displayData.key] === undefined\n\t\t\t) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst binaryDataItem: IBinaryData = binaryData[this.displayData.index][this.displayData.key];\n\n\t\t\treturn binaryDataItem;\n\t\t},\n\n\t\tworkflowRunData(): IRunData | null {\n\t\t\tconst workflowExecution = this.workflowsStore.getWorkflowExecution;\n\t\t\tif (workflowExecution === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst executionData = workflowExecution.data;\n\t\t\treturn executionData ? executionData.resultData.runData : null;\n\t\t},\n\t},\n\tmethods: {\n\t\tcloseWindow() {\n\t\t\t// Handle the close externally as the visible parameter is an external prop\n\t\t\t// and is so not allowed to be changed here.\n\t\t\tthis.$emit('close');\n\t\t\treturn false;\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\">\n.binary-data-window {\n\tposition: absolute;\n\ttop: 50px;\n\tleft: 0;\n\tz-index: 10;\n\twidth: 100%;\n\theight: calc(100% - 50px);\n\tbackground-color: var(--color-background-base);\n\toverflow: hidden;\n\ttext-align: center;\n\n\t&.json {\n\t\toverflow: auto;\n\t}\n\n\t.binary-data-window-wrapper {\n\t\tmargin-top: 0.5em;\n\t\tpadding: 0 1em;\n\t\theight: calc(100% - 50px);\n\n\t\t.el-row,\n\t\t.el-col {\n\t\t\theight: 100%;\n\t\t}\n\t}\n}\n</style>\n","<template>\n\t<div>\n\t\t<div class=\"error-header\">\n\t\t\t<div class=\"error-message\">{{ getErrorMessage() }}</div>\n\t\t\t<div class=\"error-description\" v-if=\"error.description\" v-html=\"getErrorDescription()\"></div>\n\t\t</div>\n\t\t<details>\n\t\t\t<summary class=\"error-details__summary\">\n\t\t\t\t<font-awesome-icon class=\"error-details__icon\" icon=\"angle-right\" />\n\t\t\t\t{{ $locale.baseText('nodeErrorView.details') }}\n\t\t\t</summary>\n\t\t\t<div class=\"error-details__content\">\n\t\t\t\t<div v-if=\"error.context && error.context.causeDetailed\">\n\t\t\t\t\t<el-card class=\"box-card\" shadow=\"never\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{{ error.context.causeDetailed }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</el-card>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"error.timestamp\">\n\t\t\t\t\t<el-card class=\"box-card\" shadow=\"never\">\n\t\t\t\t\t\t<template #header>\n\t\t\t\t\t\t\t<div class=\"clearfix box-card__title\">\n\t\t\t\t\t\t\t\t<span>{{ $locale.baseText('nodeErrorView.time') }}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{{ new Date(error.timestamp).toLocaleString() }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</el-card>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tv-if=\"error.context && error.context.itemIndex !== undefined\"\n\t\t\t\t\tclass=\"el-card box-card is-never-shadow el-card__body\"\n\t\t\t\t>\n\t\t\t\t\t<span class=\"error-details__summary\"\n\t\t\t\t\t\t>{{ $locale.baseText('nodeErrorView.itemIndex') }}:</span\n\t\t\t\t\t>\n\t\t\t\t\t{{ error.context.itemIndex }}\n\t\t\t\t\t<span v-if=\"error.context.runIndex\">\n\t\t\t\t\t\t|\n\t\t\t\t\t\t<span class=\"error-details__summary\"\n\t\t\t\t\t\t\t>{{ $locale.baseText('nodeErrorView.itemIndex') }}:</span\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{{ error.context.runIndex }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span v-if=\"error.context.parameter\">\n\t\t\t\t\t\t|\n\t\t\t\t\t\t<span class=\"error-details__summary\"\n\t\t\t\t\t\t\t>{{ $locale.baseText('nodeErrorView.inParameter') }}:</span\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{{ parameterDisplayName(error.context.parameter) }}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"error.httpCode\">\n\t\t\t\t\t<el-card class=\"box-card\" shadow=\"never\">\n\t\t\t\t\t\t<template #header>\n\t\t\t\t\t\t\t<div class=\"clearfix box-card__title\">\n\t\t\t\t\t\t\t\t<span>{{ $locale.baseText('nodeErrorView.httpCode') }}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{{ error.httpCode }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</el-card>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"error.cause\">\n\t\t\t\t\t<el-card class=\"box-card\" shadow=\"never\">\n\t\t\t\t\t\t<template #header>\n\t\t\t\t\t\t\t<div class=\"clearfix box-card__title\">\n\t\t\t\t\t\t\t\t<span>{{ $locale.baseText('nodeErrorView.cause') }}</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span class=\"box-card__subtitle\">{{\n\t\t\t\t\t\t\t\t\t$locale.baseText('nodeErrorView.dataBelowMayContain')\n\t\t\t\t\t\t\t\t}}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div class=\"copy-button\" v-if=\"displayCause\">\n\t\t\t\t\t\t\t\t<n8n-icon-button\n\t\t\t\t\t\t\t\t\t@click=\"copyCause\"\n\t\t\t\t\t\t\t\t\t:title=\"$locale.baseText('nodeErrorView.copyToClipboard')\"\n\t\t\t\t\t\t\t\t\ticon=\"copy\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<vue-json-pretty\n\t\t\t\t\t\t\t\tv-if=\"displayCause\"\n\t\t\t\t\t\t\t\t:data=\"error.cause\"\n\t\t\t\t\t\t\t\t:deep=\"3\"\n\t\t\t\t\t\t\t\t:showLength=\"true\"\n\t\t\t\t\t\t\t\tselectableType=\"single\"\n\t\t\t\t\t\t\t\tpath=\"error\"\n\t\t\t\t\t\t\t\tclass=\"json-data\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span v-else>\n\t\t\t\t\t\t\t\t<font-awesome-icon icon=\"info-circle\" />{{\n\t\t\t\t\t\t\t\t\t$locale.baseText('nodeErrorView.theErrorCauseIsTooLargeToBeDisplayed')\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</el-card>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"error.stack\">\n\t\t\t\t\t<el-card class=\"box-card\" shadow=\"never\">\n\t\t\t\t\t\t<template #header>\n\t\t\t\t\t\t\t<div class=\"clearfix box-card__title\">\n\t\t\t\t\t\t\t\t<span>{{ $locale.baseText('nodeErrorView.stack') }}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<pre><code>{{error.stack}}</code></pre>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</el-card>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</details>\n\t</div>\n</template>\n\n<script lang=\"ts\">\n//@ts-ignore\nimport VueJsonPretty from 'vue-json-pretty';\nimport { copyPaste } from '@/mixins/copyPaste';\nimport { showMessage } from '@/mixins/showMessage';\nimport mixins from 'vue-typed-mixins';\nimport { MAX_DISPLAY_DATA_SIZE } from '@/constants';\n\nimport type { INodeProperties, INodePropertyCollection, INodePropertyOptions } from 'n8n-workflow';\nimport { sanitizeHtml } from '@/utils';\nimport { mapStores } from 'pinia';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\n\nexport default mixins(copyPaste, showMessage).extend({\n\tname: 'NodeErrorView',\n\tprops: ['error'],\n\tcomponents: {\n\t\tVueJsonPretty,\n\t},\n\tcomputed: {\n\t\t...mapStores(useNodeTypesStore, useNDVStore),\n\t\tdisplayCause(): boolean {\n\t\t\treturn JSON.stringify(this.error.cause).length < MAX_DISPLAY_DATA_SIZE;\n\t\t},\n\t\tparameters(): INodeProperties[] {\n\t\t\tconst node = this.ndvStore.activeNode;\n\t\t\tif (!node) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst nodeType = this.nodeTypesStore.getNodeType(node.type, node.typeVersion);\n\n\t\t\tif (nodeType === null) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn nodeType.properties;\n\t\t},\n\t},\n\tmethods: {\n\t\treplacePlaceholders(parameter: string, message: string): string {\n\t\t\tconst parameterName = this.parameterDisplayName(parameter, false);\n\t\t\tconst parameterFullName = this.parameterDisplayName(parameter, true);\n\t\t\treturn message\n\t\t\t\t.replace(/%%PARAMETER%%/g, parameterName)\n\t\t\t\t.replace(/%%PARAMETER_FULL%%/g, parameterFullName);\n\t\t},\n\t\tgetErrorDescription(): string {\n\t\t\tif (!this.error.context || !this.error.context.descriptionTemplate) {\n\t\t\t\treturn sanitizeHtml(this.error.description);\n\t\t\t}\n\n\t\t\tconst parameterName = this.parameterDisplayName(this.error.context.parameter);\n\t\t\treturn sanitizeHtml(\n\t\t\t\tthis.error.context.descriptionTemplate.replace(/%%PARAMETER%%/g, parameterName),\n\t\t\t);\n\t\t},\n\t\tgetErrorMessage(): string {\n\t\t\tconst baseErrorMessage = this.$locale.baseText('nodeErrorView.error') + ': ';\n\n\t\t\tif (!this.error.context || !this.error.context.messageTemplate) {\n\t\t\t\treturn baseErrorMessage + this.error.message;\n\t\t\t}\n\n\t\t\tconst parameterName = this.parameterDisplayName(this.error.context.parameter);\n\n\t\t\treturn (\n\t\t\t\tbaseErrorMessage +\n\t\t\t\tthis.error.context.messageTemplate.replace(/%%PARAMETER%%/g, parameterName)\n\t\t\t);\n\t\t},\n\t\tparameterDisplayName(path: string, fullPath = true) {\n\t\t\ttry {\n\t\t\t\tconst parameters = this.parameterName(this.parameters, path.split('.'));\n\t\t\t\tif (!parameters.length) {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\n\t\t\t\tif (fullPath === false) {\n\t\t\t\t\treturn parameters.pop()!.displayName;\n\t\t\t\t}\n\t\t\t\treturn parameters.map((parameter) => parameter.displayName).join(' > ');\n\t\t\t} catch (error) {\n\t\t\t\treturn `Could not find parameter \"${path}\"`;\n\t\t\t}\n\t\t},\n\t\tparameterName(\n\t\t\tparameters: Array<INodePropertyOptions | INodeProperties | INodePropertyCollection>,\n\t\t\tpathParts: string[],\n\t\t): Array<INodeProperties | INodePropertyCollection> {\n\t\t\tlet currentParameterName = pathParts.shift();\n\n\t\t\tif (currentParameterName === undefined) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst arrayMatch = currentParameterName.match(/(.*)\\[([\\d])\\]$/);\n\t\t\tif (arrayMatch !== null && arrayMatch.length > 0) {\n\t\t\t\tcurrentParameterName = arrayMatch[1];\n\t\t\t}\n\t\t\tconst currentParameter = parameters.find(\n\t\t\t\t(parameter) => parameter.name === currentParameterName,\n\t\t\t) as unknown as INodeProperties | INodePropertyCollection;\n\n\t\t\tif (currentParameter === undefined) {\n\t\t\t\tthrow new Error(`Could not find parameter \"${currentParameterName}\"`);\n\t\t\t}\n\n\t\t\tif (pathParts.length === 0) {\n\t\t\t\treturn [currentParameter];\n\t\t\t}\n\n\t\t\tif (currentParameter.hasOwnProperty('options')) {\n\t\t\t\treturn [\n\t\t\t\t\tcurrentParameter,\n\t\t\t\t\t...this.parameterName((currentParameter as INodeProperties).options!, pathParts),\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tif (currentParameter.hasOwnProperty('values')) {\n\t\t\t\treturn [\n\t\t\t\t\tcurrentParameter,\n\t\t\t\t\t...this.parameterName((currentParameter as INodePropertyCollection).values, pathParts),\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t// We can not resolve any deeper so lets stop here and at least return hopefully something useful\n\t\t\treturn [currentParameter];\n\t\t},\n\t\tcopyCause() {\n\t\t\tthis.copyToClipboard(JSON.stringify(this.error.cause));\n\t\t\tthis.copySuccess();\n\t\t},\n\t\tcopySuccess() {\n\t\t\tthis.$showMessage({\n\t\t\t\ttitle: this.$locale.baseText('nodeErrorView.showMessage.title'),\n\t\t\t\ttype: 'info',\n\t\t\t});\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\">\n.error-header {\n\tmargin-bottom: 10px;\n}\n\n.error-message {\n\tcolor: #ff0000;\n\tfont-weight: bold;\n\tfont-size: 1.1rem;\n}\n\n.error-description {\n\tmargin-top: 10px;\n\tfont-size: 1rem;\n}\n\n.error-details__summary {\n\tfont-weight: 600;\n\tfont-size: 16px;\n\tcursor: pointer;\n\toutline: none;\n}\n\n.error-details__icon {\n\tmargin-right: 4px;\n}\n\ndetails > summary {\n\tlist-style-type: none;\n}\n\ndetails > summary::-webkit-details-marker {\n\tdisplay: none;\n}\n\ndetails[open] {\n\t.error-details__icon {\n\t\ttransform: rotate(90deg);\n\t}\n}\n\n.error-details__content {\n\tmargin-top: 15px;\n}\n\n.el-divider__text {\n\tbackground-color: var(--color-background-light);\n}\n\n.box-card {\n\tmargin-top: 1em;\n\toverflow: auto;\n}\n\n.box-card__title {\n\tfont-weight: 400;\n}\n\n.box-card__subtitle {\n\tfont-weight: 200;\n\tfont-style: italic;\n\tfont-size: 0.7rem;\n}\n\n.copy-button {\n\tposition: absolute;\n\tright: 50px;\n\tz-index: 1000;\n}\n</style>\n","<template>\n\t<div :class=\"['run-data', $style.container]\">\n\t\t<n8n-callout\n\t\t\tv-if=\"canPinData && hasPinData && !editMode.enabled && !isProductionExecutionPreview\"\n\t\t\ttheme=\"secondary\"\n\t\t\ticon=\"thumbtack\"\n\t\t\t:class=\"$style.pinnedDataCallout\"\n\t\t>\n\t\t\t{{ $locale.baseText('runData.pindata.thisDataIsPinned') }}\n\t\t\t<span class=\"ml-4xs\" v-if=\"!isReadOnly\">\n\t\t\t\t<n8n-link\n\t\t\t\t\ttheme=\"secondary\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tunderline\n\t\t\t\t\tbold\n\t\t\t\t\t@click=\"onTogglePinData({ source: 'banner-link' })\"\n\t\t\t\t>\n\t\t\t\t\t{{ $locale.baseText('runData.pindata.unpin') }}\n\t\t\t\t</n8n-link>\n\t\t\t</span>\n\t\t\t<template #trailingContent>\n\t\t\t\t<n8n-link\n\t\t\t\t\t:to=\"dataPinningDocsUrl\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\ttheme=\"secondary\"\n\t\t\t\t\tbold\n\t\t\t\t\tunderline\n\t\t\t\t\t@click=\"onClickDataPinningDocsLink\"\n\t\t\t\t>\n\t\t\t\t\t{{ $locale.baseText('runData.pindata.learnMore') }}\n\t\t\t\t</n8n-link>\n\t\t\t</template>\n\t\t</n8n-callout>\n\n\t\t<BinaryDataDisplay\n\t\t\t:windowVisible=\"binaryDataDisplayVisible\"\n\t\t\t:displayData=\"binaryDataDisplayData\"\n\t\t\t@close=\"closeBinaryDataDisplay\"\n\t\t/>\n\n\t\t<div :class=\"$style.header\">\n\t\t\t<slot name=\"header\"></slot>\n\n\t\t\t<div\n\t\t\t\tv-show=\"!hasRunError\"\n\t\t\t\t@click.stop\n\t\t\t\t:class=\"$style.displayModes\"\n\t\t\t\tdata-test-id=\"run-data-pane-header\"\n\t\t\t>\n\t\t\t\t<n8n-radio-buttons\n\t\t\t\t\tv-show=\"\n\t\t\t\t\t\thasNodeRun &&\n\t\t\t\t\t\t((jsonData && jsonData.length > 0) || (binaryData && binaryData.length > 0)) &&\n\t\t\t\t\t\t!editMode.enabled\n\t\t\t\t\t\"\n\t\t\t\t\t:value=\"displayMode\"\n\t\t\t\t\t:options=\"buttons\"\n\t\t\t\t\t@input=\"onDisplayModeChange\"\n\t\t\t\t\tdata-test-id=\"ndv-run-data-display-mode\"\n\t\t\t\t/>\n\t\t\t\t<n8n-icon-button\n\t\t\t\t\tv-if=\"canPinData && !isReadOnly\"\n\t\t\t\t\tv-show=\"!editMode.enabled\"\n\t\t\t\t\t:title=\"$locale.baseText('runData.editOutput')\"\n\t\t\t\t\t:circle=\"false\"\n\t\t\t\t\t:disabled=\"node.disabled\"\n\t\t\t\t\tclass=\"ml-2xs\"\n\t\t\t\t\ticon=\"pencil-alt\"\n\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\tdata-test-id=\"ndv-edit-pinned-data\"\n\t\t\t\t\t@click=\"enterEditMode({ origin: 'editIconButton' })\"\n\t\t\t\t/>\n\t\t\t\t<n8n-tooltip\n\t\t\t\t\tplacement=\"bottom-end\"\n\t\t\t\t\tv-if=\"canPinData && jsonData && jsonData.length > 0\"\n\t\t\t\t\tv-show=\"!editMode.enabled\"\n\t\t\t\t\t:value=\"pinDataDiscoveryTooltipVisible\"\n\t\t\t\t\t:manual=\"isControlledPinDataTooltip\"\n\t\t\t\t>\n\t\t\t\t\t<template #content v-if=\"!isControlledPinDataTooltip\">\n\t\t\t\t\t\t<div :class=\"$style.tooltipContainer\">\n\t\t\t\t\t\t\t<strong>{{ $locale.baseText('ndv.pinData.pin.title') }}</strong>\n\t\t\t\t\t\t\t<n8n-text size=\"small\" tag=\"p\">\n\t\t\t\t\t\t\t\t{{ $locale.baseText('ndv.pinData.pin.description') }}\n\n\t\t\t\t\t\t\t\t<n8n-link :to=\"dataPinningDocsUrl\" size=\"small\">\n\t\t\t\t\t\t\t\t\t{{ $locale.baseText('ndv.pinData.pin.link') }}\n\t\t\t\t\t\t\t\t</n8n-link>\n\t\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #content v-else>\n\t\t\t\t\t\t<div :class=\"$style.tooltipContainer\">\n\t\t\t\t\t\t\t{{ $locale.baseText('node.discovery.pinData.ndv') }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t\t<n8n-icon-button\n\t\t\t\t\t\t:class=\"['ml-2xs', $style.pinDataButton]\"\n\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t:active=\"hasPinData\"\n\t\t\t\t\t\ticon=\"thumbtack\"\n\t\t\t\t\t\t:disabled=\"editMode.enabled || (inputData.length === 0 && !hasPinData) || isReadOnly\"\n\t\t\t\t\t\t@click=\"onTogglePinData({ source: 'pin-icon-click' })\"\n\t\t\t\t\t\tdata-test-id=\"ndv-pin-data\"\n\t\t\t\t\t/>\n\t\t\t\t</n8n-tooltip>\n\n\t\t\t\t<div :class=\"$style.editModeActions\" v-show=\"editMode.enabled\">\n\t\t\t\t\t<n8n-button\n\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t:label=\"$locale.baseText('runData.editor.cancel')\"\n\t\t\t\t\t\t@click=\"onClickCancelEdit\"\n\t\t\t\t\t/>\n\t\t\t\t\t<n8n-button\n\t\t\t\t\t\tclass=\"ml-2xs\"\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t:label=\"$locale.baseText('runData.editor.save')\"\n\t\t\t\t\t\t@click=\"onClickSaveEdit\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div\n\t\t\t:class=\"$style.runSelector\"\n\t\t\tv-if=\"maxRunIndex > 0\"\n\t\t\tv-show=\"!editMode.enabled\"\n\t\t\tdata-test-id=\"run-selector\"\n\t\t>\n\t\t\t<n8n-select\n\t\t\t\tsize=\"small\"\n\t\t\t\t:value=\"runIndex\"\n\t\t\t\t@input=\"onRunIndexChange\"\n\t\t\t\t@click.stop\n\t\t\t\tpopper-append-to-body\n\t\t\t>\n\t\t\t\t<template #prepend>{{ $locale.baseText('ndv.output.run') }}</template>\n\t\t\t\t<n8n-option\n\t\t\t\t\tv-for=\"option in maxRunIndex + 1\"\n\t\t\t\t\t:label=\"getRunLabel(option)\"\n\t\t\t\t\t:value=\"option - 1\"\n\t\t\t\t\t:key=\"option\"\n\t\t\t\t></n8n-option>\n\t\t\t</n8n-select>\n\n\t\t\t<n8n-tooltip\n\t\t\t\tplacement=\"right\"\n\t\t\t\tv-if=\"canLinkRuns\"\n\t\t\t\t:content=\"$locale.baseText(linkedRuns ? 'runData.unlinking.hint' : 'runData.linking.hint')\"\n\t\t\t>\n\t\t\t\t<n8n-icon-button\n\t\t\t\t\tv-if=\"linkedRuns\"\n\t\t\t\t\ticon=\"unlink\"\n\t\t\t\t\ttext\n\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t@click=\"unlinkRun\"\n\t\t\t\t/>\n\t\t\t\t<n8n-icon-button v-else icon=\"link\" text type=\"tertiary\" size=\"small\" @click=\"linkRun\" />\n\t\t\t</n8n-tooltip>\n\n\t\t\t<slot name=\"run-info\"></slot>\n\t\t</div>\n\n\t\t<div\n\t\t\tv-if=\"maxOutputIndex > 0 && branches.length > 1\"\n\t\t\t:class=\"$style.tabs\"\n\t\t\tdata-test-id=\"branches\"\n\t\t>\n\t\t\t<n8n-tabs :value=\"currentOutputIndex\" @input=\"onBranchChange\" :options=\"branches\" />\n\t\t</div>\n\n\t\t<div\n\t\t\tv-else-if=\"\n\t\t\t\thasNodeRun && dataCount > 0 && maxRunIndex === 0 && !isArtificialRecoveredEventItem\n\t\t\t\"\n\t\t\tv-show=\"!editMode.enabled\"\n\t\t\t:class=\"$style.itemsCount\"\n\t\t>\n\t\t\t<n8n-text>\n\t\t\t\t{{ dataCount }} {{ $locale.baseText('ndv.output.items', { adjustToNumber: dataCount }) }}\n\t\t\t</n8n-text>\n\t\t</div>\n\n\t\t<div :class=\"$style.dataContainer\" ref=\"dataContainer\" data-test-id=\"ndv-data-container\">\n\t\t\t<div v-if=\"isExecuting\" :class=\"$style.center\" data-test-id=\"ndv-executing\">\n\t\t\t\t<div :class=\"$style.spinner\"><n8n-spinner type=\"ring\" /></div>\n\t\t\t\t<n8n-text>{{ executingMessage }}</n8n-text>\n\t\t\t</div>\n\n\t\t\t<div v-else-if=\"editMode.enabled\" :class=\"$style.editMode\">\n\t\t\t\t<div :class=\"[$style.editModeBody, 'ignore-key-press']\">\n\t\t\t\t\t<code-node-editor\n\t\t\t\t\t\t:value=\"editMode.value\"\n\t\t\t\t\t\tlanguage=\"json\"\n\t\t\t\t\t\t@valueChanged=\"ndvStore.setOutputPanelEditModeValue($event)\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"$style.editModeFooter\">\n\t\t\t\t\t<n8n-info-tip :bold=\"false\" :class=\"$style.editModeFooterInfotip\">\n\t\t\t\t\t\t{{ $locale.baseText('runData.editor.copyDataInfo') }}\n\t\t\t\t\t\t<n8n-link :to=\"dataEditingDocsUrl\" size=\"small\">\n\t\t\t\t\t\t\t{{ $locale.baseText('generic.learnMore') }}\n\t\t\t\t\t\t</n8n-link>\n\t\t\t\t\t</n8n-info-tip>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tv-else-if=\"paneType === 'output' && hasSubworkflowExecutionError\"\n\t\t\t\t:class=\"$style.stretchVertically\"\n\t\t\t>\n\t\t\t\t<NodeErrorView :error=\"subworkflowExecutionError\" :class=\"$style.errorDisplay\" />\n\t\t\t</div>\n\n\t\t\t<div v-else-if=\"!hasNodeRun\" :class=\"$style.center\">\n\t\t\t\t<slot name=\"node-not-run\"></slot>\n\t\t\t</div>\n\n\t\t\t<div v-else-if=\"paneType === 'input' && node.disabled\" :class=\"$style.center\">\n\t\t\t\t<n8n-text>\n\t\t\t\t\t{{ $locale.baseText('ndv.input.disabled', { interpolate: { nodeName: node.name } }) }}\n\t\t\t\t\t<n8n-link @click=\"enableNode\">\n\t\t\t\t\t\t{{ $locale.baseText('ndv.input.disabled.cta') }}\n\t\t\t\t\t</n8n-link>\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\n\t\t\t<div v-else-if=\"hasNodeRun && isArtificialRecoveredEventItem\" :class=\"$style.center\">\n\t\t\t\t<slot name=\"recovered-artificial-output-data\"></slot>\n\t\t\t</div>\n\n\t\t\t<div v-else-if=\"hasNodeRun && hasRunError\" :class=\"$style.stretchVertically\">\n\t\t\t\t<n8n-text v-if=\"isPaneTypeInput\" :class=\"$style.center\" size=\"large\" tag=\"p\" bold>\n\t\t\t\t\t{{\n\t\t\t\t\t\t$locale.baseText('nodeErrorView.inputPanel.previousNodeError.title', {\n\t\t\t\t\t\t\tinterpolate: { nodeName: node.name },\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t</n8n-text>\n\t\t\t\t<NodeErrorView\n\t\t\t\t\tv-else\n\t\t\t\t\t:error=\"workflowRunData[node.name][runIndex].error\"\n\t\t\t\t\t:class=\"$style.dataDisplay\"\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tv-else-if=\"hasNodeRun && jsonData && jsonData.length === 0 && branches.length > 1\"\n\t\t\t\t:class=\"$style.center\"\n\t\t\t>\n\t\t\t\t<n8n-text>\n\t\t\t\t\t{{ noDataInBranchMessage }}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\n\t\t\t<div v-else-if=\"hasNodeRun && jsonData && jsonData.length === 0\" :class=\"$style.center\">\n\t\t\t\t<slot name=\"no-output-data\">xxx</slot>\n\t\t\t</div>\n\n\t\t\t<div v-else-if=\"hasNodeRun && !showData\" :class=\"$style.center\">\n\t\t\t\t<n8n-text :bold=\"true\" color=\"text-dark\" size=\"large\">{{ tooMuchDataTitle }}</n8n-text>\n\t\t\t\t<n8n-text align=\"center\" tag=\"div\"\n\t\t\t\t\t><span\n\t\t\t\t\t\tv-html=\"\n\t\t\t\t\t\t\t$locale.baseText('ndv.output.tooMuchData.message', {\n\t\t\t\t\t\t\t\tinterpolate: { size: dataSizeInMB },\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\"\n\t\t\t\t\t></span\n\t\t\t\t></n8n-text>\n\n\t\t\t\t<n8n-button\n\t\t\t\t\toutline\n\t\t\t\t\t:label=\"$locale.baseText('ndv.output.tooMuchData.showDataAnyway')\"\n\t\t\t\t\t@click=\"showTooMuchData\"\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tv-else-if=\"\n\t\t\t\t\thasNodeRun &&\n\t\t\t\t\tdisplayMode === 'table' &&\n\t\t\t\t\tbinaryData.length > 0 &&\n\t\t\t\t\tjsonData.length === 1 &&\n\t\t\t\t\tObject.keys(jsonData[0] || {}).length === 0\n\t\t\t\t\"\n\t\t\t\t:class=\"$style.center\"\n\t\t\t>\n\t\t\t\t<n8n-text>\n\t\t\t\t\t{{ $locale.baseText('runData.switchToBinary.info') }}\n\t\t\t\t\t<a @click=\"switchToBinary\">\n\t\t\t\t\t\t{{ $locale.baseText('runData.switchToBinary.binary') }}\n\t\t\t\t\t</a>\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\n\t\t\t<run-data-table\n\t\t\t\tv-else-if=\"hasNodeRun && displayMode === 'table'\"\n\t\t\t\t:node=\"node\"\n\t\t\t\t:inputData=\"inputData\"\n\t\t\t\t:mappingEnabled=\"mappingEnabled\"\n\t\t\t\t:distanceFromActive=\"distanceFromActive\"\n\t\t\t\t:runIndex=\"runIndex\"\n\t\t\t\t:pageOffset=\"currentPageOffset\"\n\t\t\t\t:totalRuns=\"maxRunIndex\"\n\t\t\t\t:hasDefaultHoverState=\"paneType === 'input'\"\n\t\t\t\t@mounted=\"$emit('tableMounted', $event)\"\n\t\t\t\t@activeRowChanged=\"onItemHover\"\n\t\t\t\t@displayModeChange=\"onDisplayModeChange\"\n\t\t\t/>\n\n\t\t\t<run-data-json\n\t\t\t\tv-else-if=\"hasNodeRun && displayMode === 'json'\"\n\t\t\t\t:paneType=\"paneType\"\n\t\t\t\t:editMode=\"editMode\"\n\t\t\t\t:sessioId=\"sessionId\"\n\t\t\t\t:node=\"node\"\n\t\t\t\t:inputData=\"inputData\"\n\t\t\t\t:mappingEnabled=\"mappingEnabled\"\n\t\t\t\t:distanceFromActive=\"distanceFromActive\"\n\t\t\t\t:runIndex=\"runIndex\"\n\t\t\t\t:totalRuns=\"maxRunIndex\"\n\t\t\t/>\n\n\t\t\t<run-data-html\n\t\t\t\tv-else-if=\"hasNodeRun && isPaneTypeOutput && displayMode === 'html'\"\n\t\t\t\t:inputData=\"inputData\"\n\t\t\t/>\n\n\t\t\t<run-data-schema\n\t\t\t\tv-else-if=\"hasNodeRun && isSchemaView\"\n\t\t\t\t:data=\"jsonData\"\n\t\t\t\t:mappingEnabled=\"mappingEnabled\"\n\t\t\t\t:distanceFromActive=\"distanceFromActive\"\n\t\t\t\t:node=\"node\"\n\t\t\t\t:paneType=\"paneType\"\n\t\t\t\t:runIndex=\"runIndex\"\n\t\t\t\t:totalRuns=\"maxRunIndex\"\n\t\t\t/>\n\n\t\t\t<div v-else-if=\"displayMode === 'binary' && binaryData.length === 0\" :class=\"$style.center\">\n\t\t\t\t<n8n-text align=\"center\" tag=\"div\">{{\n\t\t\t\t\t$locale.baseText('runData.noBinaryDataFound')\n\t\t\t\t}}</n8n-text>\n\t\t\t</div>\n\n\t\t\t<div v-else-if=\"displayMode === 'binary'\" :class=\"$style.dataDisplay\">\n\t\t\t\t<div v-for=\"(binaryDataEntry, index) in binaryData\" :key=\"index\">\n\t\t\t\t\t<div :class=\"$style.binaryIndex\" v-if=\"binaryData.length > 1\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{{ index + 1 }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div :class=\"$style.binaryRow\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t:class=\"$style.binaryCell\"\n\t\t\t\t\t\t\tv-for=\"(binaryData, key) in binaryDataEntry\"\n\t\t\t\t\t\t\t:key=\"index + '_' + key\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div :class=\"$style.binaryHeader\">\n\t\t\t\t\t\t\t\t\t{{ key }}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div v-if=\"binaryData.fileName\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<n8n-text size=\"small\" :bold=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t>{{ $locale.baseText('runData.fileName') }}:\n\t\t\t\t\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div :class=\"$style.binaryValue\">{{ binaryData.fileName }}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div v-if=\"binaryData.directory\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<n8n-text size=\"small\" :bold=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t>{{ $locale.baseText('runData.directory') }}:\n\t\t\t\t\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div :class=\"$style.binaryValue\">{{ binaryData.directory }}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div v-if=\"binaryData.fileExtension\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<n8n-text size=\"small\" :bold=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t>{{ $locale.baseText('runData.fileExtension') }}:</n8n-text\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div :class=\"$style.binaryValue\">{{ binaryData.fileExtension }}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div v-if=\"binaryData.mimeType\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<n8n-text size=\"small\" :bold=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t>{{ $locale.baseText('runData.mimeType') }}:\n\t\t\t\t\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div :class=\"$style.binaryValue\">{{ binaryData.mimeType }}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div v-if=\"binaryData.fileSize\">\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<n8n-text size=\"small\" :bold=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t>{{ $locale.baseText('runData.fileSize') }}:\n\t\t\t\t\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div :class=\"$style.binaryValue\">{{ binaryData.fileSize }}</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div :class=\"$style.binaryButtonContainer\">\n\t\t\t\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t\t\t\tv-if=\"isViewable(index, key)\"\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t:label=\"$locale.baseText('runData.showBinaryData')\"\n\t\t\t\t\t\t\t\t\t\tclass=\"binary-data-show-data-button\"\n\t\t\t\t\t\t\t\t\t\t@click=\"displayBinaryData(index, key)\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t\t\t\tv-if=\"isDownloadable(index, key)\"\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t:label=\"$locale.baseText('runData.downloadBinaryData')\"\n\t\t\t\t\t\t\t\t\t\tclass=\"binary-data-show-data-button\"\n\t\t\t\t\t\t\t\t\t\t@click=\"downloadBinaryData(index, key)\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\t:class=\"$style.pagination\"\n\t\t\tv-if=\"\n\t\t\t\thasNodeRun &&\n\t\t\t\t!hasRunError &&\n\t\t\t\tbinaryData.length === 0 &&\n\t\t\t\tdataCount > pageSize &&\n\t\t\t\t!isSchemaView\n\t\t\t\"\n\t\t\tv-show=\"!editMode.enabled\"\n\t\t>\n\t\t\t<el-pagination\n\t\t\t\tbackground\n\t\t\t\t:hide-on-single-page=\"true\"\n\t\t\t\t:current-page.sync=\"currentPage\"\n\t\t\t\t:pager-count=\"5\"\n\t\t\t\t:page-size=\"pageSize\"\n\t\t\t\tlayout=\"prev, pager, next\"\n\t\t\t\t@current-change=\"onCurrentPageChange\"\n\t\t\t\t:total=\"dataCount\"\n\t\t\t>\n\t\t\t</el-pagination>\n\n\t\t\t<div :class=\"$style.pageSizeSelector\">\n\t\t\t\t<n8n-select size=\"mini\" :value=\"pageSize\" @input=\"onPageSizeChange\" popper-append-to-body>\n\t\t\t\t\t<template #prepend>{{ $locale.baseText('ndv.output.pageSize') }}</template>\n\t\t\t\t\t<n8n-option v-for=\"size in pageSizes\" :key=\"size\" :label=\"size\" :value=\"size\">\n\t\t\t\t\t</n8n-option>\n\t\t\t\t\t<n8n-option :label=\"$locale.baseText('ndv.output.all')\" :value=\"dataCount\"> </n8n-option>\n\t\t\t\t</n8n-select>\n\t\t\t</div>\n\t\t</div>\n\t\t<n8n-block-ui :show=\"blockUI\" :class=\"$style.uiBlocker\" />\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport type { PropType } from 'vue';\nimport mixins from 'vue-typed-mixins';\nimport { saveAs } from 'file-saver';\nimport type {\n\tIBinaryData,\n\tIBinaryKeyData,\n\tIDataObject,\n\tINodeExecutionData,\n\tINodeTypeDescription,\n\tIRunData,\n\tIRunExecutionData,\n} from 'n8n-workflow';\n\nimport type {\n\tIExecutionResponse,\n\tINodeUi,\n\tINodeUpdatePropertiesInformation,\n\tIRunDataDisplayMode,\n\tITab,\n\tNodePanelType,\n} from '@/Interface';\n\nimport {\n\tDATA_PINNING_DOCS_URL,\n\tDATA_EDITING_DOCS_URL,\n\tNODE_TYPES_EXCLUDED_FROM_OUTPUT_NAME_APPEND,\n\tLOCAL_STORAGE_PIN_DATA_DISCOVERY_NDV_FLAG,\n\tLOCAL_STORAGE_PIN_DATA_DISCOVERY_CANVAS_FLAG,\n\tMAX_DISPLAY_DATA_SIZE,\n\tMAX_DISPLAY_ITEMS_AUTO_ALL,\n\tTEST_PIN_DATA,\n\tHTML_NODE_TYPE,\n} from '@/constants';\n\nimport BinaryDataDisplay from '@/components/BinaryDataDisplay.vue';\nimport WarningTooltip from '@/components/WarningTooltip.vue';\nimport NodeErrorView from '@/components/Error/NodeErrorView.vue';\n\nimport { externalHooks } from '@/mixins/externalHooks';\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport { nodeHelpers } from '@/mixins/nodeHelpers';\nimport { pinData } from '@/mixins/pinData';\nimport CodeNodeEditor from '@/components/CodeNodeEditor/CodeNodeEditor.vue';\nimport { dataPinningEventBus } from '@/event-bus';\nimport { clearJsonKey, executionDataToJson, stringSizeInBytes } from '@/utils';\nimport { isEmpty } from '@/utils';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { mapStores } from 'pinia';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\n\nconst RunDataTable = async () => import('@/components/RunDataTable.vue');\nconst RunDataJson = async () => import('@/components/RunDataJson.vue');\nconst RunDataSchema = async () => import('@/components/RunDataSchema.vue');\nconst RunDataHtml = async () => import('@/components/RunDataHtml.vue');\n\nexport type EnterEditModeArgs = {\n\torigin: 'editIconButton' | 'insertTestDataLink';\n};\n\nexport default mixins(externalHooks, genericHelpers, nodeHelpers, pinData).extend({\n\tname: 'RunData',\n\tcomponents: {\n\t\tBinaryDataDisplay,\n\t\tNodeErrorView,\n\t\tWarningTooltip,\n\t\tCodeNodeEditor,\n\t\tRunDataTable,\n\t\tRunDataJson,\n\t\tRunDataSchema,\n\t\tRunDataHtml,\n\t},\n\tprops: {\n\t\tnodeUi: {\n\t\t\ttype: Object as PropType<INodeUi>,\n\t\t},\n\t\trunIndex: {\n\t\t\ttype: Number,\n\t\t},\n\t\tlinkedRuns: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tcanLinkRuns: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\ttooMuchDataTitle: {\n\t\t\ttype: String,\n\t\t},\n\t\tnoDataInBranchMessage: {\n\t\t\ttype: String,\n\t\t},\n\t\tisExecuting: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\texecutingMessage: {\n\t\t\ttype: String,\n\t\t},\n\t\tsessionId: {\n\t\t\ttype: String,\n\t\t},\n\t\tpaneType: {\n\t\t\ttype: String as PropType<NodePanelType>,\n\t\t},\n\t\toverrideOutputs: {\n\t\t\ttype: Array as PropType<number[]>,\n\t\t},\n\t\tmappingEnabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tdistanceFromActive: {\n\t\t\ttype: Number,\n\t\t},\n\t\tblockUI: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tisProductionExecutionPreview: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tbinaryDataPreviewActive: false,\n\t\t\tdataSize: 0,\n\t\t\tshowData: false,\n\t\t\toutputIndex: 0,\n\t\t\tbinaryDataDisplayVisible: false,\n\t\t\tbinaryDataDisplayData: null as IBinaryData | null,\n\n\t\t\tMAX_DISPLAY_DATA_SIZE,\n\t\t\tMAX_DISPLAY_ITEMS_AUTO_ALL,\n\t\t\tcurrentPage: 1,\n\t\t\tpageSize: 10,\n\t\t\tpageSizes: [10, 25, 50, 100],\n\n\t\t\tpinDataDiscoveryTooltipVisible: false,\n\t\t\tisControlledPinDataTooltip: false,\n\t\t};\n\t},\n\tmounted() {\n\t\tthis.init();\n\n\t\tif (!this.isPaneTypeInput) {\n\t\t\tdataPinningEventBus.on('data-pinning-error', this.onDataPinningError);\n\t\t\tdataPinningEventBus.on('data-unpinning', this.onDataUnpinning);\n\n\t\t\tthis.showPinDataDiscoveryTooltip(this.jsonData);\n\t\t}\n\t\tthis.ndvStore.setNDVBranchIndex({\n\t\t\tpane: this.paneType as 'input' | 'output',\n\t\t\tbranchIndex: this.currentOutputIndex,\n\t\t});\n\n\t\tif (this.paneType === 'output') this.setDisplayMode();\n\t},\n\tdestroyed() {\n\t\tthis.hidePinDataDiscoveryTooltip();\n\t\tdataPinningEventBus.off('data-pinning-error', this.onDataPinningError);\n\t\tdataPinningEventBus.off('data-unpinning', this.onDataUnpinning);\n\t},\n\tcomputed: {\n\t\t...mapStores(useNodeTypesStore, useNDVStore, useWorkflowsStore),\n\t\tactiveNode(): INodeUi | null {\n\t\t\treturn this.ndvStore.activeNode;\n\t\t},\n\t\tdataPinningDocsUrl(): string {\n\t\t\treturn DATA_PINNING_DOCS_URL;\n\t\t},\n\t\tdataEditingDocsUrl(): string {\n\t\t\treturn DATA_EDITING_DOCS_URL;\n\t\t},\n\t\tdisplayMode(): IRunDataDisplayMode {\n\t\t\treturn this.ndvStore.getPanelDisplayMode(this.paneType);\n\t\t},\n\t\tnode(): INodeUi | null {\n\t\t\treturn (this.nodeUi as INodeUi | null) || null;\n\t\t},\n\t\tnodeType(): INodeTypeDescription | null {\n\t\t\tif (this.node) {\n\t\t\t\treturn this.nodeTypesStore.getNodeType(this.node.type, this.node.typeVersion);\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tisSchemaView(): boolean {\n\t\t\treturn this.displayMode === 'schema';\n\t\t},\n\t\tisTriggerNode(): boolean {\n\t\t\treturn this.nodeTypesStore.isTriggerNode(this.node.type);\n\t\t},\n\t\tcanPinData(): boolean {\n\t\t\treturn (\n\t\t\t\t!this.isPaneTypeInput &&\n\t\t\t\tthis.isPinDataNodeType &&\n\t\t\t\t!(this.binaryData && this.binaryData.length > 0)\n\t\t\t);\n\t\t},\n\t\tbuttons(): Array<{ label: string; value: string }> {\n\t\t\tconst defaults = [\n\t\t\t\t{ label: this.$locale.baseText('runData.table'), value: 'table' },\n\t\t\t\t{ label: this.$locale.baseText('runData.json'), value: 'json' },\n\t\t\t];\n\n\t\t\tif (this.binaryData.length) {\n\t\t\t\tdefaults.push({ label: this.$locale.baseText('runData.binary'), value: 'binary' });\n\t\t\t}\n\n\t\t\tconst schemaView = { label: this.$locale.baseText('runData.schema'), value: 'schema' };\n\t\t\tif (this.isPaneTypeInput) {\n\t\t\t\tdefaults.unshift(schemaView);\n\t\t\t} else {\n\t\t\t\tdefaults.push(schemaView);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.isPaneTypeOutput &&\n\t\t\t\tthis.activeNode?.type === HTML_NODE_TYPE &&\n\t\t\t\tthis.activeNode.parameters.operation === 'generateHtmlTemplate'\n\t\t\t) {\n\t\t\t\tdefaults.unshift({ label: 'HTML', value: 'html' });\n\t\t\t}\n\n\t\t\treturn defaults;\n\t\t},\n\t\thasNodeRun(): boolean {\n\t\t\treturn Boolean(\n\t\t\t\t!this.isExecuting &&\n\t\t\t\t\tthis.node &&\n\t\t\t\t\t((this.workflowRunData && this.workflowRunData.hasOwnProperty(this.node.name)) ||\n\t\t\t\t\t\tthis.hasPinData),\n\t\t\t);\n\t\t},\n\t\tisArtificialRecoveredEventItem(): boolean {\n\t\t\treturn this.inputData?.[0]?.json?.isArtificialRecoveredEventItem !== undefined ?? false;\n\t\t},\n\t\tsubworkflowExecutionError(): Error | null {\n\t\t\treturn this.workflowsStore.subWorkflowExecutionError;\n\t\t},\n\t\thasSubworkflowExecutionError(): boolean {\n\t\t\treturn Boolean(this.subworkflowExecutionError);\n\t\t},\n\t\thasRunError(): boolean {\n\t\t\treturn Boolean(\n\t\t\t\tthis.node &&\n\t\t\t\t\tthis.workflowRunData &&\n\t\t\t\t\tthis.workflowRunData[this.node.name] &&\n\t\t\t\t\tthis.workflowRunData[this.node.name][this.runIndex] &&\n\t\t\t\t\tthis.workflowRunData[this.node.name][this.runIndex].error,\n\t\t\t);\n\t\t},\n\t\tworkflowExecution(): IExecutionResponse | null {\n\t\t\treturn this.workflowsStore.getWorkflowExecution;\n\t\t},\n\t\tworkflowRunData(): IRunData | null {\n\t\t\tif (this.workflowExecution === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst executionData: IRunExecutionData | undefined = this.workflowExecution.data;\n\t\t\tif (executionData && executionData.resultData) {\n\t\t\t\treturn executionData.resultData.runData;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tdataCount(): number {\n\t\t\treturn this.getDataCount(this.runIndex, this.currentOutputIndex);\n\t\t},\n\t\tdataSizeInMB(): string {\n\t\t\treturn (this.dataSize / 1024 / 1000).toLocaleString();\n\t\t},\n\t\tmaxOutputIndex(): number {\n\t\t\tif (this.node === null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst runData: IRunData | null = this.workflowRunData;\n\n\t\t\tif (runData === null || !runData.hasOwnProperty(this.node.name)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (runData[this.node.name].length < this.runIndex) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (runData[this.node.name][this.runIndex]) {\n\t\t\t\tconst taskData = runData[this.node.name][this.runIndex].data;\n\t\t\t\tif (taskData && taskData.main) {\n\t\t\t\t\treturn taskData.main.length - 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t},\n\t\tcurrentPageOffset(): number {\n\t\t\treturn this.pageSize * (this.currentPage - 1);\n\t\t},\n\t\tmaxRunIndex(): number {\n\t\t\tif (this.node === null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst runData: IRunData | null = this.workflowRunData;\n\n\t\t\tif (runData === null || !runData.hasOwnProperty(this.node.name)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (runData[this.node.name].length) {\n\t\t\t\treturn runData[this.node.name].length - 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t},\n\t\trawInputData(): INodeExecutionData[] {\n\t\t\tlet inputData: INodeExecutionData[] = [];\n\n\t\t\tif (this.node) {\n\t\t\t\tinputData = this.getNodeInputData(this.node, this.runIndex, this.currentOutputIndex);\n\t\t\t}\n\n\t\t\tif (inputData.length === 0 || !Array.isArray(inputData)) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn inputData;\n\t\t},\n\t\tinputData(): INodeExecutionData[] {\n\t\t\tlet inputData = this.rawInputData;\n\n\t\t\tif (this.node && this.pinData && !this.isProductionExecutionPreview) {\n\t\t\t\tinputData = Array.isArray(this.pinData)\n\t\t\t\t\t? this.pinData.map((value) => ({\n\t\t\t\t\t\t\tjson: value,\n\t\t\t\t\t  }))\n\t\t\t\t\t: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tjson: this.pinData,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ];\n\t\t\t}\n\n\t\t\t// We don't want to paginate the schema view\n\t\t\tif (this.isSchemaView) {\n\t\t\t\treturn inputData;\n\t\t\t}\n\n\t\t\tconst offset = this.pageSize * (this.currentPage - 1);\n\t\t\tinputData = inputData.slice(offset, offset + this.pageSize);\n\n\t\t\treturn inputData;\n\t\t},\n\t\tjsonData(): IDataObject[] {\n\t\t\treturn executionDataToJson(this.inputData);\n\t\t},\n\t\tbinaryData(): IBinaryKeyData[] {\n\t\t\tif (!this.node) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst binaryData = this.getBinaryData(\n\t\t\t\tthis.workflowRunData,\n\t\t\t\tthis.node.name,\n\t\t\t\tthis.runIndex,\n\t\t\t\tthis.currentOutputIndex,\n\t\t\t);\n\t\t\treturn binaryData.filter((data) => Boolean(data && Object.keys(data).length));\n\t\t},\n\t\tcurrentOutputIndex(): number {\n\t\t\tif (\n\t\t\t\tthis.overrideOutputs &&\n\t\t\t\tthis.overrideOutputs.length &&\n\t\t\t\t!this.overrideOutputs.includes(this.outputIndex)\n\t\t\t) {\n\t\t\t\treturn this.overrideOutputs[0] as number;\n\t\t\t}\n\n\t\t\treturn this.outputIndex;\n\t\t},\n\t\tbranches(): ITab[] {\n\t\t\tfunction capitalize(name: string) {\n\t\t\t\treturn name.charAt(0).toLocaleUpperCase() + name.slice(1);\n\t\t\t}\n\t\t\tconst branches: ITab[] = [];\n\n\t\t\tfor (let i = 0; i <= this.maxOutputIndex; i++) {\n\t\t\t\tif (this.overrideOutputs && !this.overrideOutputs.includes(i)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst itemsCount = this.getDataCount(this.runIndex, i);\n\t\t\t\tconst items = this.$locale.baseText('ndv.output.items', { adjustToNumber: itemsCount });\n\t\t\t\tlet outputName = this.getOutputName(i);\n\t\t\t\tif (`${outputName}` === `${i}`) {\n\t\t\t\t\toutputName = `${this.$locale.baseText('ndv.output')} ${outputName}`;\n\t\t\t\t} else {\n\t\t\t\t\tconst appendBranchWord = NODE_TYPES_EXCLUDED_FROM_OUTPUT_NAME_APPEND.includes(\n\t\t\t\t\t\tthis.node?.type,\n\t\t\t\t\t)\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: ` ${this.$locale.baseText('ndv.output.branch')}`;\n\t\t\t\t\toutputName = capitalize(`${this.getOutputName(i)}${appendBranchWord}`);\n\t\t\t\t}\n\t\t\t\tbranches.push({\n\t\t\t\t\tlabel: itemsCount ? `${outputName} (${itemsCount} ${items})` : outputName,\n\t\t\t\t\tvalue: i,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn branches;\n\t\t},\n\t\teditMode(): { enabled: boolean; value: string } {\n\t\t\treturn this.isPaneTypeInput\n\t\t\t\t? { enabled: false, value: '' }\n\t\t\t\t: this.ndvStore.outputPanelEditMode;\n\t\t},\n\t\tisPaneTypeInput(): boolean {\n\t\t\treturn this.paneType === 'input';\n\t\t},\n\t\tisPaneTypeOutput(): boolean {\n\t\t\treturn this.paneType === 'output';\n\t\t},\n\t},\n\tmethods: {\n\t\tonItemHover(itemIndex: number | null) {\n\t\t\tif (itemIndex === null) {\n\t\t\t\tthis.$emit('itemHover', null);\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.$emit('itemHover', {\n\t\t\t\toutputIndex: this.currentOutputIndex,\n\t\t\t\titemIndex,\n\t\t\t});\n\t\t},\n\t\tonClickDataPinningDocsLink() {\n\t\t\tthis.$telemetry.track('User clicked ndv link', {\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\tnode_type: this.activeNode?.type,\n\t\t\t\tpane: 'output',\n\t\t\t\ttype: 'data-pinning-docs',\n\t\t\t});\n\t\t},\n\t\tshowPinDataDiscoveryTooltip(value: IDataObject[]) {\n\t\t\tif (!this.isTriggerNode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\tvalue.length > 0 &&\n\t\t\t\t!this.isReadOnly &&\n\t\t\t\t!localStorage.getItem(LOCAL_STORAGE_PIN_DATA_DISCOVERY_NDV_FLAG)\n\t\t\t) {\n\t\t\t\tthis.pinDataDiscoveryComplete();\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.isControlledPinDataTooltip = true;\n\t\t\t\t\tthis.pinDataDiscoveryTooltipVisible = true;\n\t\t\t\t\tdataPinningEventBus.emit('data-pinning-discovery', { isTooltipVisible: true });\n\t\t\t\t}, 500); // Wait for NDV to open\n\t\t\t}\n\t\t},\n\t\thidePinDataDiscoveryTooltip() {\n\t\t\tif (this.pinDataDiscoveryTooltipVisible) {\n\t\t\t\tthis.isControlledPinDataTooltip = false;\n\t\t\t\tthis.pinDataDiscoveryTooltipVisible = false;\n\t\t\t\tdataPinningEventBus.emit('data-pinning-discovery', { isTooltipVisible: false });\n\t\t\t}\n\t\t},\n\t\tpinDataDiscoveryComplete() {\n\t\t\tlocalStorage.setItem(LOCAL_STORAGE_PIN_DATA_DISCOVERY_NDV_FLAG, 'true');\n\t\t\tlocalStorage.setItem(LOCAL_STORAGE_PIN_DATA_DISCOVERY_CANVAS_FLAG, 'true');\n\t\t},\n\t\tenterEditMode({ origin }: EnterEditModeArgs) {\n\t\t\tconst inputData = this.pinData\n\t\t\t\t? clearJsonKey(this.pinData)\n\t\t\t\t: executionDataToJson(this.rawInputData);\n\n\t\t\tconst data = inputData.length > 0 ? inputData : TEST_PIN_DATA;\n\n\t\t\tthis.ndvStore.setOutputPanelEditModeEnabled(true);\n\t\t\tthis.ndvStore.setOutputPanelEditModeValue(JSON.stringify(data, null, 2));\n\n\t\t\tthis.$telemetry.track('User opened ndv edit state', {\n\t\t\t\tnode_type: this.activeNode?.type,\n\t\t\t\tclick_type: origin === 'editIconButton' ? 'button' : 'link',\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\trun_index: this.runIndex,\n\t\t\t\tis_output_present: this.hasNodeRun || this.hasPinData,\n\t\t\t\tview: !this.hasNodeRun && !this.hasPinData ? 'undefined' : this.displayMode,\n\t\t\t\tis_data_pinned: this.hasPinData,\n\t\t\t});\n\t\t},\n\t\tonClickCancelEdit() {\n\t\t\tthis.ndvStore.setOutputPanelEditModeEnabled(false);\n\t\t\tthis.ndvStore.setOutputPanelEditModeValue('');\n\t\t\tthis.onExitEditMode({ type: 'cancel' });\n\t\t},\n\t\tonClickSaveEdit() {\n\t\t\tconst { value } = this.editMode;\n\n\t\t\tthis.clearAllStickyNotifications();\n\n\t\t\tif (!this.isValidPinDataSize(value)) {\n\t\t\t\tthis.onDataPinningError({ errorType: 'data-too-large', source: 'save-edit' });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.isValidPinDataJSON(value)) {\n\t\t\t\tthis.onDataPinningError({ errorType: 'invalid-json', source: 'save-edit' });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.ndvStore.setOutputPanelEditModeEnabled(false);\n\t\t\tthis.workflowsStore.pinData({\n\t\t\t\tnode: this.node,\n\t\t\t\tdata: clearJsonKey(value) as INodeExecutionData[],\n\t\t\t});\n\n\t\t\tthis.onDataPinningSuccess({ source: 'save-edit' });\n\n\t\t\tthis.onExitEditMode({ type: 'save' });\n\t\t},\n\t\tonExitEditMode({ type }: { type: 'save' | 'cancel' }) {\n\t\t\tthis.$telemetry.track('User closed ndv edit state', {\n\t\t\t\tnode_type: this.activeNode?.type,\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\trun_index: this.runIndex,\n\t\t\t\tview: this.displayMode,\n\t\t\t\ttype,\n\t\t\t});\n\t\t},\n\t\tonDataUnpinning({\n\t\t\tsource,\n\t\t}: {\n\t\t\tsource: 'banner-link' | 'pin-icon-click' | 'unpin-and-execute-modal';\n\t\t}) {\n\t\t\tthis.$telemetry.track('User unpinned ndv data', {\n\t\t\t\tnode_type: this.activeNode?.type,\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\trun_index: this.runIndex,\n\t\t\t\tsource,\n\t\t\t\tdata_size: stringSizeInBytes(this.pinData),\n\t\t\t});\n\t\t},\n\t\tonDataPinningSuccess({ source }: { source: 'pin-icon-click' | 'save-edit' }) {\n\t\t\tconst telemetryPayload = {\n\t\t\t\tpinning_source: source,\n\t\t\t\tnode_type: this.activeNode.type,\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\tdata_size: stringSizeInBytes(this.pinData),\n\t\t\t\tview: this.displayMode,\n\t\t\t\trun_index: this.runIndex,\n\t\t\t};\n\t\t\tthis.$externalHooks().run('runData.onDataPinningSuccess', telemetryPayload);\n\t\t\tthis.$telemetry.track('Ndv data pinning success', telemetryPayload);\n\t\t},\n\t\tonDataPinningError({\n\t\t\terrorType,\n\t\t\tsource,\n\t\t}: {\n\t\t\terrorType: 'data-too-large' | 'invalid-json';\n\t\t\tsource: 'on-ndv-close-modal' | 'pin-icon-click' | 'save-edit';\n\t\t}) {\n\t\t\tthis.$telemetry.track('Ndv data pinning failure', {\n\t\t\t\tpinning_source: source,\n\t\t\t\tnode_type: this.activeNode.type,\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\tdata_size: stringSizeInBytes(this.pinData),\n\t\t\t\tview: this.displayMode,\n\t\t\t\trun_index: this.runIndex,\n\t\t\t\terror_type: errorType,\n\t\t\t});\n\t\t},\n\t\tasync onTogglePinData({\n\t\t\tsource,\n\t\t}: {\n\t\t\tsource: 'banner-link' | 'pin-icon-click' | 'unpin-and-execute-modal';\n\t\t}) {\n\t\t\tif (source === 'pin-icon-click') {\n\t\t\t\tconst telemetryPayload = {\n\t\t\t\t\tnode_type: this.activeNode.type,\n\t\t\t\t\tsession_id: this.sessionId,\n\t\t\t\t\trun_index: this.runIndex,\n\t\t\t\t\tview: !this.hasNodeRun && !this.hasPinData ? 'none' : this.displayMode,\n\t\t\t\t};\n\n\t\t\t\tthis.$externalHooks().run('runData.onTogglePinData', telemetryPayload);\n\t\t\t\tthis.$telemetry.track('User clicked pin data icon', telemetryPayload);\n\t\t\t}\n\n\t\t\tthis.updateNodeParameterIssues(this.node);\n\n\t\t\tif (this.hasPinData) {\n\t\t\t\tthis.onDataUnpinning({ source });\n\t\t\t\tthis.workflowsStore.unpinData({ node: this.node });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.isValidPinDataSize(this.inputData)) {\n\t\t\t\tthis.onDataPinningError({ errorType: 'data-too-large', source: 'pin-icon-click' });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.onDataPinningSuccess({ source: 'pin-icon-click' });\n\n\t\t\tthis.workflowsStore.pinData({ node: this.node, data: this.inputData });\n\n\t\t\tif (this.maxRunIndex > 0) {\n\t\t\t\tthis.$showToast({\n\t\t\t\t\ttitle: this.$locale.baseText('ndv.pinData.pin.multipleRuns.title', {\n\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\tindex: `${this.runIndex}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\tmessage: this.$locale.baseText('ndv.pinData.pin.multipleRuns.description'),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tduration: 2000,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.hidePinDataDiscoveryTooltip();\n\t\t\tthis.pinDataDiscoveryComplete();\n\t\t},\n\t\tswitchToBinary() {\n\t\t\tthis.onDisplayModeChange('binary');\n\t\t},\n\t\tonBranchChange(value: number) {\n\t\t\tthis.outputIndex = value;\n\n\t\t\tthis.$telemetry.track('User changed ndv branch', {\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\tbranch_index: value,\n\t\t\t\tnode_type: this.activeNode.type,\n\t\t\t\tnode_type_input_selection: this.nodeType ? this.nodeType.name : '',\n\t\t\t\tpane: this.paneType,\n\t\t\t});\n\t\t},\n\t\tshowTooMuchData() {\n\t\t\tthis.showData = true;\n\t\t\tthis.$telemetry.track('User clicked ndv button', {\n\t\t\t\tnode_type: this.activeNode.type,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\tpane: this.paneType,\n\t\t\t\ttype: 'showTooMuchData',\n\t\t\t});\n\t\t},\n\t\tlinkRun() {\n\t\t\tthis.$emit('linkRun');\n\t\t},\n\t\tunlinkRun() {\n\t\t\tthis.$emit('unlinkRun');\n\t\t},\n\t\tonCurrentPageChange() {\n\t\t\tthis.$telemetry.track('User changed ndv page', {\n\t\t\t\tnode_type: this.activeNode?.type,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\tpane: this.paneType,\n\t\t\t\tpage_selected: this.currentPage,\n\t\t\t\tpage_size: this.pageSize,\n\t\t\t\titems_total: this.dataCount,\n\t\t\t});\n\t\t},\n\t\tonPageSizeChange(pageSize: number) {\n\t\t\tthis.pageSize = pageSize;\n\t\t\tconst maxPage = Math.ceil(this.dataCount / this.pageSize);\n\t\t\tif (maxPage < this.currentPage) {\n\t\t\t\tthis.currentPage = maxPage;\n\t\t\t}\n\n\t\t\tthis.$telemetry.track('User changed ndv page size', {\n\t\t\t\tnode_type: this.activeNode?.type,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\tpane: this.paneType,\n\t\t\t\tpage_selected: this.currentPage,\n\t\t\t\tpage_size: this.pageSize,\n\t\t\t\titems_total: this.dataCount,\n\t\t\t});\n\t\t},\n\t\tonDisplayModeChange(displayMode: IRunDataDisplayMode) {\n\t\t\tconst previous = this.displayMode;\n\t\t\tthis.ndvStore.setPanelDisplayMode({ pane: this.paneType, mode: displayMode });\n\n\t\t\tconst dataContainerRef = this.$refs.dataContainer as Element | undefined;\n\t\t\tif (dataContainerRef) {\n\t\t\t\tconst dataDisplay = dataContainerRef.children[0];\n\n\t\t\t\tif (dataDisplay) {\n\t\t\t\t\tdataDisplay.scrollTo(0, 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.closeBinaryDataDisplay();\n\t\t\tthis.$externalHooks().run('runData.displayModeChanged', {\n\t\t\t\tnewValue: displayMode,\n\t\t\t\toldValue: previous,\n\t\t\t});\n\t\t\tif (this.activeNode) {\n\t\t\t\tthis.$telemetry.track('User changed ndv item view', {\n\t\t\t\t\tprevious_view: previous,\n\t\t\t\t\tnew_view: displayMode,\n\t\t\t\t\tnode_type: this.activeNode.type,\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\tsession_id: this.sessionId,\n\t\t\t\t\tpane: this.paneType,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tgetRunLabel(option: number) {\n\t\t\tlet itemsCount = 0;\n\t\t\tfor (let i = 0; i <= this.maxOutputIndex; i++) {\n\t\t\t\titemsCount += this.getDataCount(option - 1, i);\n\t\t\t}\n\t\t\tconst items = this.$locale.baseText('ndv.output.items', { adjustToNumber: itemsCount });\n\t\t\tconst itemsLabel = itemsCount > 0 ? ` (${itemsCount} ${items})` : '';\n\t\t\treturn option + this.$locale.baseText('ndv.output.of') + (this.maxRunIndex + 1) + itemsLabel;\n\t\t},\n\t\tgetDataCount(runIndex: number, outputIndex: number) {\n\t\t\tif (this.pinData) {\n\t\t\t\treturn this.pinData.length;\n\t\t\t}\n\n\t\t\tif (this.node === null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst runData: IRunData | null = this.workflowRunData;\n\n\t\t\tif (runData === null || !runData.hasOwnProperty(this.node.name)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (runData[this.node.name].length <= runIndex) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (runData[this.node.name][runIndex].hasOwnProperty('error')) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!runData[this.node.name][runIndex].hasOwnProperty('data') ||\n\t\t\t\trunData[this.node.name][runIndex].data === undefined\n\t\t\t) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst inputData = this.getMainInputData(runData[this.node.name][runIndex].data!, outputIndex);\n\n\t\t\treturn inputData.length;\n\t\t},\n\t\tinit() {\n\t\t\t// Reset the selected output index every time another node gets selected\n\t\t\tthis.outputIndex = 0;\n\t\t\tthis.refreshDataSize();\n\t\t\tthis.closeBinaryDataDisplay();\n\t\t\tif (this.binaryData.length > 0) {\n\t\t\t\tthis.ndvStore.setPanelDisplayMode({\n\t\t\t\t\tpane: this.paneType as 'input' | 'output',\n\t\t\t\t\tmode: 'binary',\n\t\t\t\t});\n\t\t\t} else if (this.displayMode === 'binary') {\n\t\t\t\tthis.ndvStore.setPanelDisplayMode({\n\t\t\t\t\tpane: this.paneType as 'input' | 'output',\n\t\t\t\t\tmode: 'table',\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tcloseBinaryDataDisplay() {\n\t\t\tthis.binaryDataDisplayVisible = false;\n\t\t\tthis.binaryDataDisplayData = null;\n\t\t},\n\t\tclearExecutionData() {\n\t\t\tthis.workflowsStore.setWorkflowExecutionData(null);\n\t\t\tthis.updateNodesExecutionIssues();\n\t\t},\n\t\tisViewable(index: number, key: string): boolean {\n\t\t\tconst { fileType } = this.binaryData[index][key];\n\t\t\treturn !!fileType && ['image', 'video', 'text', 'json'].includes(fileType);\n\t\t},\n\t\tisDownloadable(index: number, key: string): boolean {\n\t\t\tconst { mimeType, fileName } = this.binaryData[index][key];\n\t\t\treturn !!(mimeType && fileName);\n\t\t},\n\t\tasync downloadBinaryData(index: number, key: string) {\n\t\t\tconst { id, data, fileName, fileExtension, mimeType } = this.binaryData[index][key];\n\n\t\t\tif (id) {\n\t\t\t\tconst url = this.workflowsStore.getBinaryUrl(id, 'download', fileName, mimeType);\n\t\t\t\tsaveAs(url, [fileName, fileExtension].join('.'));\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tconst bufferString = 'data:' + mimeType + ';base64,' + data;\n\t\t\t\tconst blob = await fetch(bufferString).then(async (d) => d.blob());\n\t\t\t\tsaveAs(blob, fileName);\n\t\t\t}\n\t\t},\n\t\tdisplayBinaryData(index: number, key: string) {\n\t\t\tthis.binaryDataDisplayVisible = true;\n\n\t\t\tthis.binaryDataDisplayData = {\n\t\t\t\tnode: this.node!.name,\n\t\t\t\trunIndex: this.runIndex,\n\t\t\t\toutputIndex: this.currentOutputIndex,\n\t\t\t\tindex,\n\t\t\t\tkey,\n\t\t\t};\n\t\t},\n\t\tgetOutputName(outputIndex: number) {\n\t\t\tif (this.node === null) {\n\t\t\t\treturn outputIndex + 1;\n\t\t\t}\n\n\t\t\tconst nodeType = this.nodeType;\n\t\t\tif (!nodeType || !nodeType.outputNames || nodeType.outputNames.length <= outputIndex) {\n\t\t\t\treturn outputIndex + 1;\n\t\t\t}\n\n\t\t\treturn nodeType.outputNames[outputIndex];\n\t\t},\n\t\trefreshDataSize() {\n\t\t\t// Hide by default the data from being displayed\n\t\t\tthis.showData = false;\n\n\t\t\t// Check how much data there is to display\n\t\t\tconst inputData = this.getNodeInputData(this.node, this.runIndex, this.currentOutputIndex);\n\n\t\t\tconst offset = this.pageSize * (this.currentPage - 1);\n\t\t\tconst jsonItems = inputData.slice(offset, offset + this.pageSize).map((item) => item.json);\n\n\t\t\tthis.dataSize = JSON.stringify(jsonItems).length;\n\n\t\t\tif (this.dataSize < this.MAX_DISPLAY_DATA_SIZE) {\n\t\t\t\t// Data is reasonable small (< 200kb) so display it directly\n\t\t\t\tthis.showData = true;\n\t\t\t}\n\t\t},\n\t\tonRunIndexChange(run: number) {\n\t\t\tthis.$emit('runChange', run);\n\t\t},\n\t\tenableNode() {\n\t\t\tif (this.node) {\n\t\t\t\tconst updateInformation = {\n\t\t\t\t\tname: this.node.name,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tdisabled: !this.node.disabled,\n\t\t\t\t\t} as IDataObject,\n\t\t\t\t} as INodeUpdatePropertiesInformation;\n\n\t\t\t\tthis.workflowsStore.updateNodeProperties(updateInformation);\n\t\t\t}\n\t\t},\n\t\tsetDisplayMode() {\n\t\t\tif (!this.activeNode) return;\n\n\t\t\tconst shouldDisplayHtml =\n\t\t\t\tthis.activeNode.type === HTML_NODE_TYPE &&\n\t\t\t\tthis.activeNode.parameters.operation === 'generateHtmlTemplate';\n\n\t\t\tif (shouldDisplayHtml) {\n\t\t\t\tthis.ndvStore.setPanelDisplayMode({\n\t\t\t\t\tpane: 'output',\n\t\t\t\t\tmode: 'html',\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t},\n\twatch: {\n\t\tnode() {\n\t\t\tthis.init();\n\t\t},\n\t\thasNodeRun() {\n\t\t\tif (this.paneType === 'output') this.setDisplayMode();\n\t\t},\n\t\tinputData: {\n\t\t\thandler(data: INodeExecutionData[]) {\n\t\t\t\tif (this.paneType && data) {\n\t\t\t\t\tthis.ndvStore.setNDVPanelDataIsEmpty({\n\t\t\t\t\t\tpanel: this.paneType as 'input' | 'output',\n\t\t\t\t\t\tisEmpty: data.every((item) => isEmpty(item.json)),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\timmediate: true,\n\t\t\tdeep: true,\n\t\t},\n\t\tjsonData(value: IDataObject[]) {\n\t\t\tthis.refreshDataSize();\n\t\t\tthis.showPinDataDiscoveryTooltip(value);\n\t\t},\n\t\tbinaryData(newData: IBinaryKeyData[], prevData: IBinaryKeyData[]) {\n\t\t\tif (newData.length && !prevData.length && this.displayMode !== 'binary') {\n\t\t\t\tthis.switchToBinary();\n\t\t\t} else if (!newData.length && this.displayMode === 'binary') {\n\t\t\t\tthis.onDisplayModeChange('table');\n\t\t\t}\n\t\t},\n\t\tcurrentOutputIndex(branchIndex: number) {\n\t\t\tthis.ndvStore.setNDVBranchIndex({\n\t\t\t\tpane: this.paneType as 'input' | 'output',\n\t\t\t\tbranchIndex,\n\t\t\t});\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.infoIcon {\n\tcolor: var(--color-foreground-dark);\n}\n\n.center {\n\tdisplay: flex;\n\theight: 100%;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: var(--spacing-s) var(--spacing-s) var(--spacing-xl) var(--spacing-s);\n\ttext-align: center;\n\n\t> * {\n\t\tmax-width: 316px;\n\t\tmargin-bottom: var(--spacing-2xs);\n\t}\n}\n\n.container {\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: var(--color-background-base);\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.pinnedDataCallout {\n\tborder-radius: inherit;\n\tborder-bottom-right-radius: 0;\n\tborder-top: 0;\n\tborder-left: 0;\n\tborder-right: 0;\n}\n\n.header {\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-bottom: var(--spacing-s);\n\tpadding: var(--spacing-s) var(--spacing-s) 0 var(--spacing-s);\n\tposition: relative;\n\toverflow-x: auto;\n\toverflow-y: hidden;\n\tmin-height: calc(30px + var(--spacing-s));\n\n\t> *:first-child {\n\t\tflex-grow: 1;\n\t}\n}\n\n.dataContainer {\n\tposition: relative;\n\theight: 100%;\n\n\t&:hover {\n\t\t.actions-group {\n\t\t\topacity: 1;\n\t\t}\n\t}\n}\n\n.dataDisplay {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tpadding: 0 var(--spacing-s) var(--spacing-3xl) var(--spacing-s);\n\tright: 0;\n\toverflow-y: auto;\n\tline-height: var(--font-line-height-xloose);\n\tword-break: normal;\n\theight: 100%;\n}\n\n.tabs {\n\tmargin-bottom: var(--spacing-s);\n}\n\n.itemsCount {\n\tmargin-left: var(--spacing-s);\n\tmargin-bottom: var(--spacing-s);\n}\n\n.runSelector {\n\tmax-width: 210px;\n\tmargin-left: var(--spacing-s);\n\tmargin-bottom: var(--spacing-s);\n\tdisplay: flex;\n\talign-items: center;\n\n\t> * {\n\t\tmargin-right: var(--spacing-4xs);\n\t}\n}\n\n.pagination {\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbottom: 0;\n\tpadding: 5px;\n\toverflow: auto;\n}\n\n.pageSizeSelector {\n\ttext-transform: capitalize;\n\tmax-width: 150px;\n\tflex: 0 1 auto;\n}\n\n.binaryIndex {\n\tdisplay: block;\n\tpadding: var(--spacing-2xs);\n\tfont-size: var(--font-size-2xs);\n\n\t> * {\n\t\tdisplay: inline-block;\n\t\twidth: 30px;\n\t\theight: 30px;\n\t\tline-height: 30px;\n\t\tborder-radius: var(--border-radius-base);\n\t\ttext-align: center;\n\t\tbackground-color: var(--color-foreground-xdark);\n\t\tfont-weight: var(--font-weight-bold);\n\t\tcolor: var(--color-text-xlight);\n\t}\n}\n\n.binaryRow {\n\tdisplay: inline-flex;\n\tfont-size: var(--font-size-2xs);\n}\n\n.binaryCell {\n\tdisplay: inline-block;\n\twidth: 300px;\n\toverflow: hidden;\n\tbackground-color: var(--color-foreground-xlight);\n\tmargin-right: var(--spacing-s);\n\tmargin-bottom: var(--spacing-s);\n\tborder-radius: var(--border-radius-base);\n\tborder: var(--border-base);\n\tpadding: var(--spacing-s);\n}\n\n.binaryHeader {\n\tcolor: $color-primary;\n\tfont-weight: var(--font-weight-bold);\n\tfont-size: 1.2em;\n\tpadding-bottom: var(--spacing-2xs);\n\tmargin-bottom: var(--spacing-2xs);\n\tborder-bottom: 1px solid var(--color-text-light);\n}\n\n.binaryButtonContainer {\n\tmargin-top: 1.5em;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\n\t> * {\n\t\tflex-grow: 0;\n\t\tmargin-right: var(--spacing-3xs);\n\t}\n}\n\n.binaryValue {\n\twhite-space: initial;\n\tword-wrap: break-word;\n}\n\n.displayModes {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tflex-grow: 1;\n}\n.tooltipContain {\n\tmax-width: 240px;\n}\n\n.pinDataButton {\n\tsvg {\n\t\ttransition: transform 0.3s ease;\n\t}\n}\n\n.spinner {\n\t* {\n\t\tcolor: var(--color-primary);\n\t\tmin-height: 40px;\n\t\tmin-width: 40px;\n\t}\n\n\tdisplay: flex;\n\tjustify-content: center;\n\tmargin-bottom: var(--spacing-s);\n}\n\n.editMode {\n\theight: 100%;\n\tmax-height: calc(100% - var(--spacing-3xl));\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: stretch;\n\tpadding-left: var(--spacing-s);\n\tpadding-right: var(--spacing-s);\n}\n\n.editModeBody {\n\tflex: 1 1 auto;\n\tmax-height: 100%;\n\twidth: 100%;\n\toverflow: auto;\n}\n\n.editModeFooter {\n\tflex: 0 1 auto;\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding-top: var(--spacing-s);\n\tpadding-bottom: var(--spacing-s);\n}\n\n.editModeFooterInfotip {\n\tdisplay: flex;\n\tflex: 1;\n\twidth: 100%;\n}\n\n.editModeActions {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\talign-items: center;\n\tmargin-left: var(--spacing-s);\n}\n\n.stretchVertically {\n\theight: 100%;\n}\n\n.uiBlocker {\n\tborder-top-left-radius: 0;\n\tborder-bottom-left-radius: 0;\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.run-data {\n\t.code-node-editor {\n\t\theight: 100%;\n\t}\n}\n</style>\n","<template>\n\t<n8n-info-tip type=\"tooltip\" theme=\"info-light\" tooltipPlacement=\"right\" v-if=\"runMetadata\">\n\t\t<div>\n\t\t\t<n8n-text :bold=\"true\" size=\"small\">{{\n\t\t\t\t$locale.baseText('runData.startTime') + ':'\n\t\t\t}}</n8n-text>\n\t\t\t{{ runMetadata.startTime }}<br />\n\t\t\t<n8n-text :bold=\"true\" size=\"small\">{{\n\t\t\t\t$locale.baseText('runData.executionTime') + ':'\n\t\t\t}}</n8n-text>\n\t\t\t{{ runMetadata.executionTime }} {{ $locale.baseText('runData.ms') }}\n\t\t</div>\n\t</n8n-info-tip>\n</template>\n\n<script lang=\"ts\">\nimport type { ITaskData } from 'n8n-workflow';\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tprops: {\n\t\ttaskData: {}, // ITaskData\n\t},\n\n\tcomputed: {\n\t\trunTaskData(): ITaskData {\n\t\t\treturn this.taskData as ITaskData;\n\t\t},\n\t\trunMetadata(): { executionTime: number; startTime: string } | null {\n\t\t\tif (!this.runTaskData) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\texecutionTime: this.runTaskData.executionTime,\n\t\t\t\tstartTime: new Date(this.runTaskData.startTime).toLocaleString(),\n\t\t\t};\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<RunData\n\t\t:nodeUi=\"node\"\n\t\t:runIndex=\"runIndex\"\n\t\t:linkedRuns=\"linkedRuns\"\n\t\t:canLinkRuns=\"canLinkRuns\"\n\t\t:tooMuchDataTitle=\"$locale.baseText('ndv.output.tooMuchData.title')\"\n\t\t:noDataInBranchMessage=\"$locale.baseText('ndv.output.noOutputDataInBranch')\"\n\t\t:isExecuting=\"isNodeRunning\"\n\t\t:executingMessage=\"$locale.baseText('ndv.output.executing')\"\n\t\t:sessionId=\"sessionId\"\n\t\t:blockUI=\"blockUI\"\n\t\t:isProductionExecutionPreview=\"isProductionExecutionPreview\"\n\t\tpaneType=\"output\"\n\t\t@runChange=\"onRunIndexChange\"\n\t\t@linkRun=\"onLinkRun\"\n\t\t@unlinkRun=\"onUnlinkRun\"\n\t\t@tableMounted=\"$emit('tableMounted', $event)\"\n\t\t@itemHover=\"$emit('itemHover', $event)\"\n\t\tref=\"runData\"\n\t>\n\t\t<template #header>\n\t\t\t<div :class=\"$style.titleSection\">\n\t\t\t\t<span :class=\"$style.title\">\n\t\t\t\t\t{{ $locale.baseText(outputPanelEditMode.enabled ? 'ndv.output.edit' : 'ndv.output') }}\n\t\t\t\t</span>\n\t\t\t\t<RunInfo\n\t\t\t\t\tv-if=\"!hasPinData && runsCount === 1\"\n\t\t\t\t\tv-show=\"!outputPanelEditMode.enabled\"\n\t\t\t\t\t:taskData=\"runTaskData\"\n\t\t\t\t/>\n\n\t\t\t\t<n8n-info-tip\n\t\t\t\t\ttheme=\"warning\"\n\t\t\t\t\ttype=\"tooltip\"\n\t\t\t\t\ttooltipPlacement=\"right\"\n\t\t\t\t\tv-if=\"hasNodeRun && staleData\"\n\t\t\t\t>\n\t\t\t\t\t<template>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tv-html=\"\n\t\t\t\t\t\t\t\t$locale.baseText(\n\t\t\t\t\t\t\t\t\thasPinData\n\t\t\t\t\t\t\t\t\t\t? 'ndv.output.staleDataWarning.pinData'\n\t\t\t\t\t\t\t\t\t\t: 'ndv.output.staleDataWarning.regular',\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t</template>\n\t\t\t\t</n8n-info-tip>\n\t\t\t</div>\n\t\t</template>\n\n\t\t<template #node-not-run>\n\t\t\t<n8n-text v-if=\"workflowRunning && !isTriggerNode\" data-test-id=\"ndv-output-waiting\">{{\n\t\t\t\t$locale.baseText('ndv.output.waitingToRun')\n\t\t\t}}</n8n-text>\n\t\t\t<n8n-text v-if=\"!workflowRunning\" data-test-id=\"ndv-output-run-node-hint\">\n\t\t\t\t{{ $locale.baseText('ndv.output.runNodeHint') }}\n\t\t\t\t<span @click=\"insertTestData\" v-if=\"canPinData\">\n\t\t\t\t\t<br />\n\t\t\t\t\t{{ $locale.baseText('generic.or') }}\n\t\t\t\t\t<n8n-text tag=\"a\" size=\"medium\" color=\"primary\">\n\t\t\t\t\t\t{{ $locale.baseText('ndv.output.insertTestData') }}\n\t\t\t\t\t</n8n-text>\n\t\t\t\t</span>\n\t\t\t</n8n-text>\n\t\t</template>\n\n\t\t<template #no-output-data>\n\t\t\t<n8n-text :bold=\"true\" color=\"text-dark\" size=\"large\">{{\n\t\t\t\t$locale.baseText('ndv.output.noOutputData.title')\n\t\t\t}}</n8n-text>\n\t\t\t<n8n-text>\n\t\t\t\t{{ $locale.baseText('ndv.output.noOutputData.message') }}\n\t\t\t\t<a @click=\"openSettings\">{{\n\t\t\t\t\t$locale.baseText('ndv.output.noOutputData.message.settings')\n\t\t\t\t}}</a>\n\t\t\t\t{{ $locale.baseText('ndv.output.noOutputData.message.settingsOption') }}\n\t\t\t</n8n-text>\n\t\t</template>\n\n\t\t<template #recovered-artificial-output-data>\n\t\t\t<div :class=\"$style.recoveredOutputData\">\n\t\t\t\t<n8n-text tag=\"div\" :bold=\"true\" color=\"text-dark\" size=\"large\">{{\n\t\t\t\t\t$locale.baseText('executionDetails.executionFailed.recoveredNodeTitle')\n\t\t\t\t}}</n8n-text>\n\t\t\t\t<n8n-text>\n\t\t\t\t\t{{ $locale.baseText('executionDetails.executionFailed.recoveredNodeMessage') }}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t</template>\n\n\t\t<template #run-info v-if=\"!hasPinData && runsCount > 1\">\n\t\t\t<RunInfo :taskData=\"runTaskData\" />\n\t\t</template>\n\t</RunData>\n</template>\n\n<script lang=\"ts\">\nimport type { IExecutionResponse, INodeUi } from '@/Interface';\nimport type { INodeTypeDescription, IRunData, IRunExecutionData, ITaskData } from 'n8n-workflow';\nimport RunData from './RunData.vue';\nimport RunInfo from './RunInfo.vue';\nimport { pinData } from '@/mixins/pinData';\nimport mixins from 'vue-typed-mixins';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\n\ntype RunDataRef = InstanceType<typeof RunData>;\n\nexport default mixins(pinData).extend({\n\tname: 'OutputPanel',\n\tcomponents: { RunData, RunInfo },\n\tprops: {\n\t\trunIndex: {\n\t\t\ttype: Number,\n\t\t},\n\t\tisReadOnly: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tlinkedRuns: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tcanLinkRuns: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tsessionId: {\n\t\t\ttype: String,\n\t\t},\n\t\tblockUI: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tisProductionExecutionPreview: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useNodeTypesStore, useNDVStore, useUIStore, useWorkflowsStore),\n\t\tnode(): INodeUi | null {\n\t\t\treturn this.ndvStore.activeNode;\n\t\t},\n\t\tnodeType(): INodeTypeDescription | null {\n\t\t\tif (this.node) {\n\t\t\t\treturn this.nodeTypesStore.getNodeType(this.node.type, this.node.typeVersion);\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tisTriggerNode(): boolean {\n\t\t\treturn this.nodeTypesStore.isTriggerNode(this.node.type);\n\t\t},\n\t\tisPollingTypeNode(): boolean {\n\t\t\treturn !!(this.nodeType && this.nodeType.polling);\n\t\t},\n\t\tisScheduleTrigger(): boolean {\n\t\t\treturn !!(this.nodeType && this.nodeType.group.includes('schedule'));\n\t\t},\n\t\tisNodeRunning(): boolean {\n\t\t\tconst executingNode = this.workflowsStore.executingNode;\n\t\t\treturn this.node && executingNode === this.node.name;\n\t\t},\n\t\tworkflowRunning(): boolean {\n\t\t\treturn this.uiStore.isActionActive('workflowRunning');\n\t\t},\n\t\tworkflowExecution(): IExecutionResponse | null {\n\t\t\treturn this.workflowsStore.getWorkflowExecution;\n\t\t},\n\t\tworkflowRunData(): IRunData | null {\n\t\t\tif (this.workflowExecution === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst executionData: IRunExecutionData | undefined = this.workflowExecution.data;\n\t\t\tif (!executionData || !executionData.resultData || !executionData.resultData.runData) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn executionData.resultData.runData;\n\t\t},\n\t\thasNodeRun(): boolean {\n\t\t\tif (this.workflowsStore.subWorkflowExecutionError) return true;\n\n\t\t\treturn Boolean(\n\t\t\t\tthis.node && this.workflowRunData && this.workflowRunData.hasOwnProperty(this.node.name),\n\t\t\t);\n\t\t},\n\t\trunTaskData(): ITaskData | null {\n\t\t\tif (!this.node || this.workflowExecution === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst runData = this.workflowRunData;\n\n\t\t\tif (runData === null || !runData.hasOwnProperty(this.node.name)) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (runData[this.node.name].length <= this.runIndex) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn runData[this.node.name][this.runIndex];\n\t\t},\n\t\trunsCount(): number {\n\t\t\tif (this.node === null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst runData: IRunData | null = this.workflowRunData;\n\n\t\t\tif (runData === null || !runData.hasOwnProperty(this.node.name)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (runData[this.node.name].length) {\n\t\t\t\treturn runData[this.node.name].length;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t},\n\t\tstaleData(): boolean {\n\t\t\tif (!this.node) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst updatedAt = this.workflowsStore.getParametersLastUpdate(this.node.name);\n\t\t\tif (!updatedAt || !this.runTaskData) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst runAt = this.runTaskData.startTime;\n\t\t\treturn updatedAt > runAt;\n\t\t},\n\t\toutputPanelEditMode(): { enabled: boolean; value: string } {\n\t\t\treturn this.ndvStore.outputPanelEditMode;\n\t\t},\n\t\tcanPinData(): boolean {\n\t\t\treturn this.isPinDataNodeType && !this.isReadOnly;\n\t\t},\n\t},\n\tmethods: {\n\t\tinsertTestData() {\n\t\t\tconst runDataRef = this.$refs.runData as RunDataRef | undefined;\n\t\t\tif (runDataRef) {\n\t\t\t\trunDataRef.enterEditMode({\n\t\t\t\t\torigin: 'insertTestDataLink',\n\t\t\t\t});\n\n\t\t\t\tthis.$telemetry.track('User clicked ndv link', {\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\tsession_id: this.sessionId,\n\t\t\t\t\tnode_type: this.node.type,\n\t\t\t\t\tpane: 'output',\n\t\t\t\t\ttype: 'insert-test-data',\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tonLinkRun() {\n\t\t\tthis.$emit('linkRun');\n\t\t},\n\t\tonUnlinkRun() {\n\t\t\tthis.$emit('unlinkRun');\n\t\t},\n\t\topenSettings() {\n\t\t\tthis.$emit('openSettings');\n\t\t\tthis.$telemetry.track('User clicked ndv link', {\n\t\t\t\tnode_type: this.node.type,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\tpane: 'output',\n\t\t\t\ttype: 'settings',\n\t\t\t});\n\t\t},\n\t\tonRunIndexChange(run: number) {\n\t\t\tthis.$emit('runChange', run);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.titleSection {\n\tdisplay: flex;\n\n\t> * {\n\t\tmargin-right: var(--spacing-2xs);\n\t}\n}\n\n.title {\n\ttext-transform: uppercase;\n\tcolor: var(--color-text-light);\n\tletter-spacing: 3px;\n\tfont-weight: var(--font-weight-bold);\n\tfont-size: var(--font-size-s);\n}\n\n.noOutputData {\n\tmax-width: 180px;\n\n\t> *:first-child {\n\t\tmargin-bottom: var(--spacing-m);\n\t}\n\n\t> * {\n\t\tmargin-bottom: var(--spacing-2xs);\n\t}\n}\n\n.recoveredOutputData {\n\tmargin: auto;\n\tmax-width: 250px;\n\ttext-align: center;\n\n\t> *:first-child {\n\t\tmargin-bottom: var(--spacing-m);\n\t}\n}\n</style>\n","<template>\n\t<RunData\n\t\t:nodeUi=\"currentNode\"\n\t\t:runIndex=\"runIndex\"\n\t\t:linkedRuns=\"linkedRuns\"\n\t\t:canLinkRuns=\"canLinkRuns\"\n\t\t:tooMuchDataTitle=\"$locale.baseText('ndv.input.tooMuchData.title')\"\n\t\t:noDataInBranchMessage=\"$locale.baseText('ndv.input.noOutputDataInBranch')\"\n\t\t:isExecuting=\"isExecutingPrevious\"\n\t\t:executingMessage=\"$locale.baseText('ndv.input.executingPrevious')\"\n\t\t:sessionId=\"sessionId\"\n\t\t:overrideOutputs=\"connectedCurrentNodeOutputs\"\n\t\t:mappingEnabled=\"!readOnly\"\n\t\t:distanceFromActive=\"currentNodeDepth\"\n\t\t:isProductionExecutionPreview=\"isProductionExecutionPreview\"\n\t\tpaneType=\"input\"\n\t\t@itemHover=\"$emit('itemHover', $event)\"\n\t\t@linkRun=\"onLinkRun\"\n\t\t@unlinkRun=\"onUnlinkRun\"\n\t\t@runChange=\"onRunIndexChange\"\n\t\t@tableMounted=\"$emit('tableMounted', $event)\"\n\t\tdata-test-id=\"ndv-input-panel\"\n\t>\n\t\t<template #header>\n\t\t\t<div :class=\"$style.titleSection\">\n\t\t\t\t<n8n-select\n\t\t\t\t\tv-if=\"parentNodes.length\"\n\t\t\t\t\t:popper-append-to-body=\"true\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t:value=\"currentNodeName\"\n\t\t\t\t\t@input=\"onSelect\"\n\t\t\t\t\t:no-data-text=\"$locale.baseText('ndv.input.noNodesFound')\"\n\t\t\t\t\t:placeholder=\"$locale.baseText('ndv.input.parentNodes')\"\n\t\t\t\t\tfilterable\n\t\t\t\t\tdata-test-id=\"ndv-input-select\"\n\t\t\t\t>\n\t\t\t\t\t<template #prepend>\n\t\t\t\t\t\t<span :class=\"$style.title\">{{ $locale.baseText('ndv.input') }}</span>\n\t\t\t\t\t</template>\n\t\t\t\t\t<n8n-option\n\t\t\t\t\t\tv-for=\"node of parentNodes\"\n\t\t\t\t\t\t:value=\"node.name\"\n\t\t\t\t\t\t:key=\"node.name\"\n\t\t\t\t\t\tclass=\"node-option\"\n\t\t\t\t\t\t:label=\"`${truncate(node.name)} ${getMultipleNodesText(node.name)}`\"\n\t\t\t\t\t\tdata-test-id=\"ndv-input-option\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"ph-no-capture\">{{ truncate(node.name) }}&nbsp;</span>\n\t\t\t\t\t\t<span v-if=\"getMultipleNodesText(node.name)\">{{\n\t\t\t\t\t\t\tgetMultipleNodesText(node.name)\n\t\t\t\t\t\t}}</span>\n\t\t\t\t\t\t<span v-else>{{\n\t\t\t\t\t\t\t$locale.baseText('ndv.input.nodeDistance', { adjustToNumber: node.depth })\n\t\t\t\t\t\t}}</span>\n\t\t\t\t\t</n8n-option>\n\t\t\t\t</n8n-select>\n\t\t\t\t<span v-else :class=\"$style.title\">{{ $locale.baseText('ndv.input') }}</span>\n\t\t\t</div>\n\t\t</template>\n\n\t\t<template #node-not-run>\n\t\t\t<div :class=\"$style.noOutputData\" v-if=\"parentNodes.length\">\n\t\t\t\t<n8n-text tag=\"div\" :bold=\"true\" color=\"text-dark\" size=\"large\">{{\n\t\t\t\t\t$locale.baseText('ndv.input.noOutputData.title')\n\t\t\t\t}}</n8n-text>\n\t\t\t\t<n8n-tooltip\n\t\t\t\t\tv-if=\"!readOnly\"\n\t\t\t\t\t:manual=\"true\"\n\t\t\t\t\t:value=\"showDraggableHint && showDraggableHintWithDelay\"\n\t\t\t\t>\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tv-html=\"\n\t\t\t\t\t\t\t\t$locale.baseText('dataMapping.dragFromPreviousHint', {\n\t\t\t\t\t\t\t\t\tinterpolate: { name: focusedMappableInput },\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t></div>\n\t\t\t\t\t</template>\n\t\t\t\t\t<NodeExecuteButton\n\t\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t\t:transparent=\"true\"\n\t\t\t\t\t\t:nodeName=\"currentNodeName\"\n\t\t\t\t\t\t:label=\"$locale.baseText('ndv.input.noOutputData.executePrevious')\"\n\t\t\t\t\t\t@execute=\"onNodeExecute\"\n\t\t\t\t\t\ttelemetrySource=\"inputs\"\n\t\t\t\t\t\tdata-test-id=\"execute-previous-node\"\n\t\t\t\t\t/>\n\t\t\t\t</n8n-tooltip>\n\t\t\t\t<n8n-text v-if=\"!readOnly\" tag=\"div\" size=\"small\">\n\t\t\t\t\t{{ $locale.baseText('ndv.input.noOutputData.hint') }}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.notConnected\" v-else>\n\t\t\t\t<div>\n\t\t\t\t\t<WireMeUp />\n\t\t\t\t</div>\n\t\t\t\t<n8n-text tag=\"div\" :bold=\"true\" color=\"text-dark\" size=\"large\">{{\n\t\t\t\t\t$locale.baseText('ndv.input.notConnected.title')\n\t\t\t\t}}</n8n-text>\n\t\t\t\t<n8n-text tag=\"div\">\n\t\t\t\t\t{{ $locale.baseText('ndv.input.notConnected.message') }}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://docs.n8n.io/workflows/connections/\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t@click=\"onConnectionHelpClick\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $locale.baseText('ndv.input.notConnected.learnMore') }}\n\t\t\t\t\t</a>\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t</template>\n\n\t\t<template #no-output-data>\n\t\t\t<n8n-text tag=\"div\" :bold=\"true\" color=\"text-dark\" size=\"large\">{{\n\t\t\t\t$locale.baseText('ndv.input.noOutputData')\n\t\t\t}}</n8n-text>\n\t\t</template>\n\n\t\t<template #recovered-artificial-output-data>\n\t\t\t<div :class=\"$style.recoveredOutputData\">\n\t\t\t\t<n8n-text tag=\"div\" :bold=\"true\" color=\"text-dark\" size=\"large\">{{\n\t\t\t\t\t$locale.baseText('executionDetails.executionFailed.recoveredNodeTitle')\n\t\t\t\t}}</n8n-text>\n\t\t\t\t<n8n-text>\n\t\t\t\t\t{{ $locale.baseText('executionDetails.executionFailed.recoveredNodeMessage') }}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t</template>\n\t</RunData>\n</template>\n\n<script lang=\"ts\">\nimport type { INodeUi } from '@/Interface';\nimport type { IConnectedNode, INodeTypeDescription, Workflow } from 'n8n-workflow';\nimport RunData from './RunData.vue';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport mixins from 'vue-typed-mixins';\nimport NodeExecuteButton from './NodeExecuteButton.vue';\nimport WireMeUp from './WireMeUp.vue';\nimport {\n\tCRON_NODE_TYPE,\n\tINTERVAL_NODE_TYPE,\n\tMANUAL_TRIGGER_NODE_TYPE,\n\tSTART_NODE_TYPE,\n} from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\n\nexport default mixins(workflowHelpers).extend({\n\tname: 'InputPanel',\n\tcomponents: { RunData, NodeExecuteButton, WireMeUp },\n\tprops: {\n\t\tcurrentNodeName: {\n\t\t\ttype: String,\n\t\t},\n\t\trunIndex: {\n\t\t\ttype: Number,\n\t\t},\n\t\tlinkedRuns: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tworkflow: {},\n\t\tcanLinkRuns: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tsessionId: {\n\t\t\ttype: String,\n\t\t},\n\t\treadOnly: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tisProductionExecutionPreview: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tshowDraggableHintWithDelay: false,\n\t\t\tdraggableHintShown: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useNodeTypesStore, useNDVStore, useWorkflowsStore),\n\t\tfocusedMappableInput(): string {\n\t\t\treturn this.ndvStore.focusedMappableInput;\n\t\t},\n\t\tisUserOnboarded(): boolean {\n\t\t\treturn this.ndvStore.isMappingOnboarded;\n\t\t},\n\t\tshowDraggableHint(): boolean {\n\t\t\tconst toIgnore = [\n\t\t\t\tSTART_NODE_TYPE,\n\t\t\t\tMANUAL_TRIGGER_NODE_TYPE,\n\t\t\t\tCRON_NODE_TYPE,\n\t\t\t\tINTERVAL_NODE_TYPE,\n\t\t\t];\n\t\t\tif (!this.currentNode || toIgnore.includes(this.currentNode.type)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !!this.focusedMappableInput && !this.isUserOnboarded;\n\t\t},\n\t\tisExecutingPrevious(): boolean {\n\t\t\tif (!this.workflowRunning) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst triggeredNode = this.workflowsStore.executedNode;\n\t\t\tconst executingNode = this.workflowsStore.executingNode;\n\t\t\tif (\n\t\t\t\tthis.activeNode &&\n\t\t\t\ttriggeredNode === this.activeNode.name &&\n\t\t\t\tthis.activeNode.name !== executingNode\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (executingNode || triggeredNode) {\n\t\t\t\treturn !!this.parentNodes.find(\n\t\t\t\t\t(node) => node.name === executingNode || node.name === triggeredNode,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tworkflowRunning(): boolean {\n\t\t\treturn this.uiStore.isActionActive('workflowRunning');\n\t\t},\n\t\tcurrentWorkflow(): Workflow {\n\t\t\treturn this.workflow as Workflow;\n\t\t},\n\t\tactiveNode(): INodeUi | null {\n\t\t\treturn this.ndvStore.activeNode;\n\t\t},\n\t\tcurrentNode(): INodeUi | null {\n\t\t\treturn this.workflowsStore.getNodeByName(this.currentNodeName);\n\t\t},\n\t\tconnectedCurrentNodeOutputs(): number[] | undefined {\n\t\t\tconst search = this.parentNodes.find(({ name }) => name === this.currentNodeName);\n\t\t\tif (search) {\n\t\t\t\treturn search.indicies;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t},\n\t\tparentNodes(): IConnectedNode[] {\n\t\t\tif (!this.activeNode) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst nodes: IConnectedNode[] = (this.workflow as Workflow).getParentNodesByDepth(\n\t\t\t\tthis.activeNode.name,\n\t\t\t);\n\n\t\t\treturn nodes.filter(\n\t\t\t\t({ name }, i) =>\n\t\t\t\t\tthis.activeNode &&\n\t\t\t\t\tname !== this.activeNode.name &&\n\t\t\t\t\tnodes.findIndex((node) => node.name === name) === i,\n\t\t\t);\n\t\t},\n\t\tcurrentNodeDepth(): number {\n\t\t\tconst node = this.parentNodes.find(\n\t\t\t\t(node) => this.currentNode && node.name === this.currentNode.name,\n\t\t\t);\n\t\t\treturn node ? node.depth : -1;\n\t\t},\n\t\tactiveNodeType(): INodeTypeDescription | null {\n\t\t\tif (!this.activeNode) return null;\n\n\t\t\treturn this.nodeTypesStore.getNodeType(this.activeNode.type, this.activeNode.typeVersion);\n\t\t},\n\t\tisMultiInputNode(): boolean {\n\t\t\treturn this.activeNodeType !== null && this.activeNodeType.inputs.length > 1;\n\t\t},\n\t},\n\tmethods: {\n\t\tgetMultipleNodesText(nodeName?: string): string {\n\t\t\tif (\n\t\t\t\t!nodeName ||\n\t\t\t\t!this.isMultiInputNode ||\n\t\t\t\t!this.activeNode ||\n\t\t\t\tthis.activeNodeType === null ||\n\t\t\t\tthis.activeNodeType.inputNames === undefined\n\t\t\t)\n\t\t\t\treturn '';\n\n\t\t\tconst activeNodeConnections =\n\t\t\t\tthis.currentWorkflow.connectionsByDestinationNode[this.activeNode.name].main || [];\n\t\t\t// Collect indexes of connected nodes\n\t\t\tconst connectedInputIndexes = activeNodeConnections.reduce((acc: number[], node, index) => {\n\t\t\t\tif (node[0] && node[0].node === nodeName) return [...acc, index];\n\t\t\t\treturn acc;\n\t\t\t}, []);\n\n\t\t\t// Match connected input indexes to their names specified by active node\n\t\t\tconst connectedInputs = connectedInputIndexes.map(\n\t\t\t\t(inputIndex) =>\n\t\t\t\t\tthis.activeNodeType &&\n\t\t\t\t\tthis.activeNodeType.inputNames &&\n\t\t\t\t\tthis.activeNodeType.inputNames[inputIndex],\n\t\t\t);\n\n\t\t\tif (connectedInputs.length === 0) return '';\n\n\t\t\treturn `(${connectedInputs.join(' & ')})`;\n\t\t},\n\t\tonNodeExecute() {\n\t\t\tthis.$emit('execute');\n\t\t\tif (this.activeNode) {\n\t\t\t\tthis.$telemetry.track('User clicked ndv button', {\n\t\t\t\t\tnode_type: this.activeNode.type,\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\tsession_id: this.sessionId,\n\t\t\t\t\tpane: 'input',\n\t\t\t\t\ttype: 'executePrevious',\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tonRunIndexChange(run: number) {\n\t\t\tthis.$emit('runChange', run);\n\t\t},\n\t\tonLinkRun() {\n\t\t\tthis.$emit('linkRun');\n\t\t},\n\t\tonUnlinkRun() {\n\t\t\tthis.$emit('unlinkRun');\n\t\t},\n\t\tonSelect(value: string) {\n\t\t\tconst index = this.parentNodes.findIndex((node) => node.name === value) + 1;\n\t\t\tthis.$emit('select', value, index);\n\t\t},\n\t\tonConnectionHelpClick() {\n\t\t\tif (this.activeNode) {\n\t\t\t\tthis.$telemetry.track('User clicked ndv link', {\n\t\t\t\t\tnode_type: this.activeNode.type,\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\tsession_id: this.sessionId,\n\t\t\t\t\tpane: 'input',\n\t\t\t\t\ttype: 'not-connected-help',\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\ttruncate(nodeName: string) {\n\t\t\tconst truncated = nodeName.substring(0, 30);\n\t\t\tif (truncated.length < nodeName.length) {\n\t\t\t\treturn `${truncated}...`;\n\t\t\t}\n\t\t\treturn truncated;\n\t\t},\n\t},\n\twatch: {\n\t\tshowDraggableHint(curr: boolean, prev: boolean) {\n\t\t\tif (curr && !prev) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (this.draggableHintShown) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.showDraggableHintWithDelay = this.showDraggableHint;\n\t\t\t\t\tif (this.showDraggableHintWithDelay) {\n\t\t\t\t\t\tthis.draggableHintShown = true;\n\n\t\t\t\t\t\tthis.$telemetry.track('User viewed data mapping tooltip', {\n\t\t\t\t\t\t\ttype: 'unexecuted input pane',\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, 1000);\n\t\t\t} else if (!curr) {\n\t\t\t\tthis.showDraggableHintWithDelay = false;\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.titleSection {\n\tdisplay: flex;\n\tmax-width: 300px;\n\n\t> * {\n\t\tmargin-right: var(--spacing-2xs);\n\t}\n}\n\n.noOutputData {\n\tmax-width: 180px;\n\n\t> *:first-child {\n\t\tmargin-bottom: var(--spacing-m);\n\t}\n\n\t> * {\n\t\tmargin-bottom: var(--spacing-2xs);\n\t}\n}\n\n.recoveredOutputData {\n\tmargin: auto;\n\tmax-width: 250px;\n\ttext-align: center;\n\n\t> *:first-child {\n\t\tmargin-bottom: var(--spacing-m);\n\t}\n}\n\n.notConnected {\n\tmax-width: 300px;\n\n\t> *:first-child {\n\t\tmargin-bottom: var(--spacing-m);\n\t}\n\n\t> * {\n\t\tmargin-bottom: var(--spacing-2xs);\n\t}\n}\n\n.title {\n\ttext-transform: uppercase;\n\tcolor: var(--color-text-light);\n\tletter-spacing: 3px;\n\tfont-size: var(--font-size-s);\n\tfont-weight: var(--font-weight-bold);\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.node-option {\n\tfont-weight: var(--font-weight-regular) !important;\n\n\tspan {\n\t\tcolor: var(--color-text-light);\n\t}\n\n\t&.selected > span {\n\t\tcolor: var(--color-primary);\n\t}\n}\n</style>\n","<template>\n\t<div :class=\"$style.container\">\n\t\t<transition name=\"fade\" mode=\"out-in\">\n\t\t\t<div key=\"empty\" v-if=\"hasIssues\"></div>\n\t\t\t<div key=\"listening\" v-else-if=\"isListeningForEvents\">\n\t\t\t\t<n8n-pulse>\n\t\t\t\t\t<NodeIcon :nodeType=\"nodeType\" :size=\"40\"></NodeIcon>\n\t\t\t\t</n8n-pulse>\n\t\t\t\t<div v-if=\"isWebhookNode\">\n\t\t\t\t\t<n8n-text tag=\"div\" size=\"large\" color=\"text-dark\" class=\"mb-2xs\" bold>{{\n\t\t\t\t\t\t$locale.baseText('ndv.trigger.webhookNode.listening')\n\t\t\t\t\t}}</n8n-text>\n\t\t\t\t\t<div :class=\"[$style.shake, 'mb-xs']\">\n\t\t\t\t\t\t<n8n-text>\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t$locale.baseText('ndv.trigger.webhookNode.requestHint', {\n\t\t\t\t\t\t\t\t\tinterpolate: { type: this.webhookHttpMethod },\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CopyInput\n\t\t\t\t\t\t:value=\"webhookTestUrl\"\n\t\t\t\t\t\t:toastTitle=\"$locale.baseText('ndv.trigger.copiedTestUrl')\"\n\t\t\t\t\t\tclass=\"mb-2xl\"\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t:collapse=\"true\"\n\t\t\t\t\t\t:copy-button-text=\"$locale.baseText('generic.clickToCopy')\"\n\t\t\t\t\t\t@copy=\"onTestLinkCopied\"\n\t\t\t\t\t></CopyInput>\n\t\t\t\t\t<NodeExecuteButton\n\t\t\t\t\t\t:nodeName=\"nodeName\"\n\t\t\t\t\t\t@execute=\"onNodeExecute\"\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\ttelemetrySource=\"inputs\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div v-else>\n\t\t\t\t\t<n8n-text tag=\"div\" size=\"large\" color=\"text-dark\" class=\"mb-2xs\" bold>{{\n\t\t\t\t\t\t$locale.baseText('ndv.trigger.webhookBasedNode.listening')\n\t\t\t\t\t}}</n8n-text>\n\t\t\t\t\t<div :class=\"[$style.shake, 'mb-xs']\">\n\t\t\t\t\t\t<n8n-text tag=\"div\">\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t$locale.baseText('ndv.trigger.webhookBasedNode.serviceHint', {\n\t\t\t\t\t\t\t\t\tinterpolate: { service: serviceName },\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<NodeExecuteButton\n\t\t\t\t\t\t:nodeName=\"nodeName\"\n\t\t\t\t\t\t@execute=\"onNodeExecute\"\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\ttelemetrySource=\"inputs\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div key=\"default\" v-else>\n\t\t\t\t<div class=\"mb-xl\" v-if=\"isActivelyPolling\">\n\t\t\t\t\t<n8n-spinner type=\"ring\" />\n\t\t\t\t</div>\n\n\t\t\t\t<div :class=\"$style.action\">\n\t\t\t\t\t<div :class=\"$style.header\">\n\t\t\t\t\t\t<n8n-heading v-if=\"header\" tag=\"h1\" bold>\n\t\t\t\t\t\t\t{{ header }}\n\t\t\t\t\t\t</n8n-heading>\n\t\t\t\t\t\t<n8n-text v-if=\"subheader\">\n\t\t\t\t\t\t\t<span v-text=\"subheader\" />\n\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<NodeExecuteButton\n\t\t\t\t\t\t:nodeName=\"nodeName\"\n\t\t\t\t\t\t@execute=\"onNodeExecute\"\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\ttelemetrySource=\"inputs\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<n8n-text size=\"small\" @click=\"onLinkClick\" v-if=\"activationHint\">\n\t\t\t\t\t<span v-html=\"activationHint\"></span>&nbsp;\n\t\t\t\t</n8n-text>\n\t\t\t\t<n8n-link\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tv-if=\"activationHint && executionsHelp\"\n\t\t\t\t\t@click=\"expandExecutionHelp\"\n\t\t\t\t\t>{{ $locale.baseText('ndv.trigger.moreInfo') }}</n8n-link\n\t\t\t\t>\n\t\t\t\t<n8n-info-accordion\n\t\t\t\t\tref=\"help\"\n\t\t\t\t\tv-if=\"executionsHelp\"\n\t\t\t\t\t:class=\"$style.accordion\"\n\t\t\t\t\t:title=\"$locale.baseText('ndv.trigger.executionsHint.question')\"\n\t\t\t\t\t:description=\"executionsHelp\"\n\t\t\t\t\t@click=\"onLinkClick\"\n\t\t\t\t></n8n-info-accordion>\n\t\t\t</div>\n\t\t</transition>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { EXECUTIONS_MODAL_KEY, WEBHOOK_NODE_TYPE, WORKFLOW_SETTINGS_MODAL_KEY } from '@/constants';\nimport type { INodeUi } from '@/Interface';\nimport type { INodeTypeDescription } from 'n8n-workflow';\nimport { getTriggerNodeServiceName } from '@/utils';\nimport NodeExecuteButton from './NodeExecuteButton.vue';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport mixins from 'vue-typed-mixins';\nimport CopyInput from './CopyInput.vue';\nimport NodeIcon from './NodeIcon.vue';\nimport { copyPaste } from '@/mixins/copyPaste';\nimport { showMessage } from '@/mixins/showMessage';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport type { N8nInfoAccordion } from 'n8n-design-system';\n\ntype HelpRef = InstanceType<typeof N8nInfoAccordion>;\n\nexport default mixins(workflowHelpers, copyPaste, showMessage).extend({\n\tname: 'TriggerPanel',\n\tcomponents: {\n\t\tNodeExecuteButton,\n\t\tCopyInput,\n\t\tNodeIcon,\n\t},\n\tprops: {\n\t\tnodeName: {\n\t\t\ttype: String,\n\t\t},\n\t\tsessionId: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useNodeTypesStore, useNDVStore, useUIStore, useWorkflowsStore),\n\t\tnode(): INodeUi | null {\n\t\t\treturn this.workflowsStore.getNodeByName(this.nodeName);\n\t\t},\n\t\tnodeType(): INodeTypeDescription | null {\n\t\t\tif (this.node) {\n\t\t\t\treturn this.nodeTypesStore.getNodeType(this.node.type, this.node.typeVersion);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\thasIssues(): boolean {\n\t\t\treturn Boolean(\n\t\t\t\tthis.node &&\n\t\t\t\t\tthis.node.issues &&\n\t\t\t\t\t(this.node.issues.parameters || this.node.issues.credentials),\n\t\t\t);\n\t\t},\n\t\tserviceName(): string {\n\t\t\tif (this.nodeType) {\n\t\t\t\treturn getTriggerNodeServiceName(this.nodeType);\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\t\tisWebhookNode(): boolean {\n\t\t\treturn Boolean(this.node && this.node.type === WEBHOOK_NODE_TYPE);\n\t\t},\n\t\twebhookHttpMethod(): string | undefined {\n\t\t\tif (\n\t\t\t\t!this.node ||\n\t\t\t\t!this.nodeType ||\n\t\t\t\t!this.nodeType.webhooks ||\n\t\t\t\t!this.nodeType.webhooks.length\n\t\t\t) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn this.getWebhookExpressionValue(this.nodeType.webhooks[0], 'httpMethod');\n\t\t},\n\t\twebhookTestUrl(): string | undefined {\n\t\t\tif (\n\t\t\t\t!this.node ||\n\t\t\t\t!this.nodeType ||\n\t\t\t\t!this.nodeType.webhooks ||\n\t\t\t\t!this.nodeType.webhooks.length\n\t\t\t) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn this.getWebhookUrl(this.nodeType.webhooks[0], this.node, 'test');\n\t\t},\n\t\twebhookProdUrl(): string | undefined {\n\t\t\tif (\n\t\t\t\t!this.node ||\n\t\t\t\t!this.nodeType ||\n\t\t\t\t!this.nodeType.webhooks ||\n\t\t\t\t!this.nodeType.webhooks.length\n\t\t\t) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn this.getWebhookUrl(this.nodeType.webhooks[0], this.node, 'prod');\n\t\t},\n\t\tisWebhookBasedNode(): boolean {\n\t\t\treturn Boolean(this.nodeType && this.nodeType.webhooks && this.nodeType.webhooks.length);\n\t\t},\n\t\tisPollingNode(): boolean {\n\t\t\treturn Boolean(this.nodeType && this.nodeType.polling);\n\t\t},\n\t\tisListeningForEvents(): boolean {\n\t\t\tconst waitingOnWebhook = this.workflowsStore.executionWaitingForWebhook as boolean;\n\t\t\tconst executedNode = this.workflowsStore.executedNode as string | undefined;\n\t\t\treturn (\n\t\t\t\t!!this.node &&\n\t\t\t\t!this.node.disabled &&\n\t\t\t\tthis.isWebhookBasedNode &&\n\t\t\t\twaitingOnWebhook &&\n\t\t\t\t(!executedNode || executedNode === this.nodeName)\n\t\t\t);\n\t\t},\n\t\tworkflowRunning(): boolean {\n\t\t\treturn this.uiStore.isActionActive('workflowRunning');\n\t\t},\n\t\tisActivelyPolling(): boolean {\n\t\t\tconst triggeredNode = this.workflowsStore.executedNode;\n\n\t\t\treturn this.workflowRunning && this.isPollingNode && this.nodeName === triggeredNode;\n\t\t},\n\t\tisWorkflowActive(): boolean {\n\t\t\treturn this.workflowsStore.isWorkflowActive;\n\t\t},\n\t\theader(): string {\n\t\t\tconst serviceName = this.nodeType ? getTriggerNodeServiceName(this.nodeType) : '';\n\n\t\t\tif (this.isActivelyPolling) {\n\t\t\t\treturn this.$locale.baseText('ndv.trigger.pollingNode.fetchingEvent');\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.nodeType &&\n\t\t\t\tthis.nodeType.triggerPanel &&\n\t\t\t\ttypeof this.nodeType.triggerPanel.header === 'string'\n\t\t\t) {\n\t\t\t\treturn this.nodeType.triggerPanel.header;\n\t\t\t}\n\n\t\t\tif (this.isWebhookBasedNode) {\n\t\t\t\treturn this.$locale.baseText('ndv.trigger.webhookBasedNode.action', {\n\t\t\t\t\tinterpolate: { name: serviceName },\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\t\tsubheader(): string {\n\t\t\tconst serviceName = this.nodeType ? getTriggerNodeServiceName(this.nodeType) : '';\n\t\t\tif (this.isActivelyPolling) {\n\t\t\t\treturn this.$locale.baseText('ndv.trigger.pollingNode.fetchingHint', {\n\t\t\t\t\tinterpolate: { name: serviceName },\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\t\texecutionsHelp(): string {\n\t\t\tif (\n\t\t\t\tthis.nodeType &&\n\t\t\t\tthis.nodeType.triggerPanel &&\n\t\t\t\tthis.nodeType.triggerPanel.executionsHelp !== undefined\n\t\t\t) {\n\t\t\t\tif (typeof this.nodeType.triggerPanel.executionsHelp === 'string') {\n\t\t\t\t\treturn this.nodeType.triggerPanel.executionsHelp;\n\t\t\t\t}\n\t\t\t\tif (!this.isWorkflowActive && this.nodeType.triggerPanel.executionsHelp.inactive) {\n\t\t\t\t\treturn this.nodeType.triggerPanel.executionsHelp.inactive;\n\t\t\t\t}\n\t\t\t\tif (this.isWorkflowActive && this.nodeType.triggerPanel.executionsHelp.active) {\n\t\t\t\t\treturn this.nodeType.triggerPanel.executionsHelp.active;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isWebhookBasedNode) {\n\t\t\t\tif (this.isWorkflowActive) {\n\t\t\t\t\treturn this.$locale.baseText('ndv.trigger.webhookBasedNode.executionsHelp.active', {\n\t\t\t\t\t\tinterpolate: { service: this.serviceName },\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn this.$locale.baseText('ndv.trigger.webhookBasedNode.executionsHelp.inactive', {\n\t\t\t\t\t\tinterpolate: { service: this.serviceName },\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isPollingNode) {\n\t\t\t\tif (this.isWorkflowActive) {\n\t\t\t\t\treturn this.$locale.baseText('ndv.trigger.pollingNode.executionsHelp.active', {\n\t\t\t\t\t\tinterpolate: { service: this.serviceName },\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn this.$locale.baseText('ndv.trigger.pollingNode.executionsHelp.inactive', {\n\t\t\t\t\t\tinterpolate: { service: this.serviceName },\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\t\tactivationHint(): string {\n\t\t\tif (this.isActivelyPolling) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.nodeType &&\n\t\t\t\tthis.nodeType.triggerPanel &&\n\t\t\t\tthis.nodeType.triggerPanel.activationHint\n\t\t\t) {\n\t\t\t\tif (typeof this.nodeType.triggerPanel.activationHint === 'string') {\n\t\t\t\t\treturn this.nodeType.triggerPanel.activationHint;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t!this.isWorkflowActive &&\n\t\t\t\t\ttypeof this.nodeType.triggerPanel.activationHint.inactive === 'string'\n\t\t\t\t) {\n\t\t\t\t\treturn this.nodeType.triggerPanel.activationHint.inactive;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis.isWorkflowActive &&\n\t\t\t\t\ttypeof this.nodeType.triggerPanel.activationHint.active === 'string'\n\t\t\t\t) {\n\t\t\t\t\treturn this.nodeType.triggerPanel.activationHint.active;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isWebhookBasedNode) {\n\t\t\t\tif (this.isWorkflowActive) {\n\t\t\t\t\treturn this.$locale.baseText('ndv.trigger.webhookBasedNode.activationHint.active', {\n\t\t\t\t\t\tinterpolate: { service: this.serviceName },\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn this.$locale.baseText('ndv.trigger.webhookBasedNode.activationHint.inactive', {\n\t\t\t\t\t\tinterpolate: { service: this.serviceName },\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isPollingNode) {\n\t\t\t\tif (this.isWorkflowActive) {\n\t\t\t\t\treturn this.$locale.baseText('ndv.trigger.pollingNode.activationHint.active', {\n\t\t\t\t\t\tinterpolate: { service: this.serviceName },\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn this.$locale.baseText('ndv.trigger.pollingNode.activationHint.inactive', {\n\t\t\t\t\t\tinterpolate: { service: this.serviceName },\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\t},\n\tmethods: {\n\t\texpandExecutionHelp() {\n\t\t\tif (this.$refs.help) {\n\t\t\t\t(this.$refs.help as HelpRef).$emit('expand');\n\t\t\t}\n\t\t},\n\t\tonLinkClick(e: MouseEvent) {\n\t\t\tif (!e.target) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst target = e.target as HTMLElement;\n\t\t\tif (target.localName !== 'a') return;\n\n\t\t\tif (target.dataset && target.dataset.key) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif (target.dataset.key === 'activate') {\n\t\t\t\t\tthis.$emit('activate');\n\t\t\t\t} else if (target.dataset.key === 'executions') {\n\t\t\t\t\tthis.$telemetry.track('User clicked ndv link', {\n\t\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\t\tsession_id: this.sessionId,\n\t\t\t\t\t\tpane: 'input',\n\t\t\t\t\t\ttype: 'open-executions-log',\n\t\t\t\t\t});\n\t\t\t\t\tthis.ndvStore.activeNodeName = null;\n\t\t\t\t\tthis.uiStore.openModal(EXECUTIONS_MODAL_KEY);\n\t\t\t\t} else if (target.dataset.key === 'settings') {\n\t\t\t\t\tthis.uiStore.openModal(WORKFLOW_SETTINGS_MODAL_KEY);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonTestLinkCopied() {\n\t\t\tthis.$telemetry.track('User copied webhook URL', {\n\t\t\t\tpane: 'inputs',\n\t\t\t\ttype: 'test url',\n\t\t\t});\n\t\t},\n\t\tonNodeExecute() {\n\t\t\tthis.$emit('execute');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: var(--color-background-base);\n\tdisplay: flex;\n\tflex-direction: column;\n\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: var(--spacing-s) var(--spacing-s) var(--spacing-xl) var(--spacing-s);\n\ttext-align: center;\n\toverflow: hidden;\n\n\t> * {\n\t\twidth: 100%;\n\t}\n}\n\n.header {\n\tmargin-bottom: var(--spacing-s);\n\n\t> * {\n\t\tmargin-bottom: var(--spacing-2xs);\n\t}\n}\n\n.action {\n\tmargin-bottom: var(--spacing-2xl);\n}\n\n.shake {\n\tanimation: shake 8s infinite;\n}\n\n@keyframes shake {\n\t90% {\n\t\ttransform: translateX(0);\n\t}\n\t92.5% {\n\t\ttransform: translateX(6px);\n\t}\n\t95% {\n\t\ttransform: translateX(-6px);\n\t}\n\t97.5% {\n\t\ttransform: translateX(6px);\n\t}\n\t100% {\n\t\ttransform: translateX(0);\n\t}\n}\n\n.accordion {\n\tposition: absolute;\n\tbottom: 0;\n\tleft: 0;\n\twidth: 100%;\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.fade-enter-active,\n.fade-leave-active {\n\ttransition: opacity 200ms;\n}\n.fade-enter,\n.fade-leave-to {\n\topacity: 0;\n}\n</style>\n","<template>\n\t<el-dialog\n\t\t:visible=\"(!!activeNode || renaming) && !isActiveStickyNode\"\n\t\t:before-close=\"close\"\n\t\t:show-close=\"false\"\n\t\tcustom-class=\"data-display-wrapper\"\n\t\tclass=\"ndv-wrapper\"\n\t\twidth=\"auto\"\n\t\tappend-to-body\n\t\tdata-test-id=\"ndv\"\n\t>\n\t\t<n8n-tooltip\n\t\t\tplacement=\"bottom-start\"\n\t\t\t:value=\"showTriggerWaitingWarning\"\n\t\t\t:disabled=\"!showTriggerWaitingWarning\"\n\t\t\tmanual\n\t\t>\n\t\t\t<template #content>\n\t\t\t\t<div :class=\"$style.triggerWarning\">\n\t\t\t\t\t{{ $locale.baseText('ndv.backToCanvas.waitingForTriggerWarning') }}\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<div :class=\"$style.backToCanvas\" @click=\"close\" data-test-id=\"back-to-canvas\">\n\t\t\t\t<n8n-icon icon=\"arrow-left\" color=\"text-xlight\" size=\"medium\" />\n\t\t\t\t<n8n-text color=\"text-xlight\" size=\"medium\" :bold=\"true\">\n\t\t\t\t\t{{ $locale.baseText('ndv.backToCanvas') }}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t</n8n-tooltip>\n\n\t\t<div\n\t\t\tv-if=\"activeNode\"\n\t\t\tclass=\"data-display\"\n\t\t\tref=\"container\"\n\t\t\t@keydown.capture=\"onKeyDown\"\n\t\t\ttabindex=\"0\"\n\t\t>\n\t\t\t<div @click=\"close\" :class=\"$style.modalBackground\"></div>\n\t\t\t<NDVDraggablePanels\n\t\t\t\t:isTriggerNode=\"isTriggerNode\"\n\t\t\t\t:hideInputAndOutput=\"activeNodeType === null\"\n\t\t\t\t:position=\"isTriggerNode && !showTriggerPanel ? 0 : undefined\"\n\t\t\t\t:isDraggable=\"!isTriggerNode\"\n\t\t\t\t:hasDoubleWidth=\"activeNodeType?.parameterPane === 'wide'\"\n\t\t\t\t:nodeType=\"activeNodeType\"\n\t\t\t\t@close=\"close\"\n\t\t\t\t@init=\"onPanelsInit\"\n\t\t\t\t@dragstart=\"onDragStart\"\n\t\t\t\t@dragend=\"onDragEnd\"\n\t\t\t>\n\t\t\t\t<template #input>\n\t\t\t\t\t<TriggerPanel\n\t\t\t\t\t\tv-if=\"showTriggerPanel\"\n\t\t\t\t\t\t:nodeName=\"activeNode.name\"\n\t\t\t\t\t\t:sessionId=\"sessionId\"\n\t\t\t\t\t\t@execute=\"onNodeExecute\"\n\t\t\t\t\t\t@activate=\"onWorkflowActivate\"\n\t\t\t\t\t/>\n\t\t\t\t\t<InputPanel\n\t\t\t\t\t\tv-else-if=\"!isTriggerNode\"\n\t\t\t\t\t\t:workflow=\"workflow\"\n\t\t\t\t\t\t:canLinkRuns=\"canLinkRuns\"\n\t\t\t\t\t\t:runIndex=\"inputRun\"\n\t\t\t\t\t\t:linkedRuns=\"linked\"\n\t\t\t\t\t\t:currentNodeName=\"inputNodeName\"\n\t\t\t\t\t\t:sessionId=\"sessionId\"\n\t\t\t\t\t\t:readOnly=\"readOnly || hasForeignCredential\"\n\t\t\t\t\t\t:isProductionExecutionPreview=\"isProductionExecutionPreview\"\n\t\t\t\t\t\t@linkRun=\"onLinkRunToInput\"\n\t\t\t\t\t\t@unlinkRun=\"() => onUnlinkRun('input')\"\n\t\t\t\t\t\t@runChange=\"onRunInputIndexChange\"\n\t\t\t\t\t\t@openSettings=\"openSettings\"\n\t\t\t\t\t\t@select=\"onInputSelect\"\n\t\t\t\t\t\t@execute=\"onNodeExecute\"\n\t\t\t\t\t\t@tableMounted=\"onInputTableMounted\"\n\t\t\t\t\t\t@itemHover=\"onInputItemHover\"\n\t\t\t\t\t/>\n\t\t\t\t</template>\n\t\t\t\t<template #output>\n\t\t\t\t\t<OutputPanel\n\t\t\t\t\t\tdata-test-id=\"output-panel\"\n\t\t\t\t\t\t:canLinkRuns=\"canLinkRuns\"\n\t\t\t\t\t\t:runIndex=\"outputRun\"\n\t\t\t\t\t\t:linkedRuns=\"linked\"\n\t\t\t\t\t\t:sessionId=\"sessionId\"\n\t\t\t\t\t\t:isReadOnly=\"readOnly || hasForeignCredential\"\n\t\t\t\t\t\t:blockUI=\"blockUi && isTriggerNode && !isExecutableTriggerNode\"\n\t\t\t\t\t\t:isProductionExecutionPreview=\"isProductionExecutionPreview\"\n\t\t\t\t\t\t@linkRun=\"onLinkRunToOutput\"\n\t\t\t\t\t\t@unlinkRun=\"() => onUnlinkRun('output')\"\n\t\t\t\t\t\t@runChange=\"onRunOutputIndexChange\"\n\t\t\t\t\t\t@openSettings=\"openSettings\"\n\t\t\t\t\t\t@tableMounted=\"onOutputTableMounted\"\n\t\t\t\t\t\t@itemHover=\"onOutputItemHover\"\n\t\t\t\t\t/>\n\t\t\t\t</template>\n\t\t\t\t<template #main>\n\t\t\t\t\t<NodeSettings\n\t\t\t\t\t\t:eventBus=\"settingsEventBus\"\n\t\t\t\t\t\t:dragging=\"isDragging\"\n\t\t\t\t\t\t:sessionId=\"sessionId\"\n\t\t\t\t\t\t:nodeType=\"activeNodeType\"\n\t\t\t\t\t\t:foreignCredentials=\"foreignCredentials\"\n\t\t\t\t\t\t:readOnly=\"readOnly\"\n\t\t\t\t\t\t:blockUI=\"blockUi && showTriggerPanel\"\n\t\t\t\t\t\t:executable=\"!readOnly\"\n\t\t\t\t\t\t@valueChanged=\"valueChanged\"\n\t\t\t\t\t\t@execute=\"onNodeExecute\"\n\t\t\t\t\t\t@stopExecution=\"onStopExecution\"\n\t\t\t\t\t\t@activate=\"onWorkflowActivate\"\n\t\t\t\t\t/>\n\t\t\t\t\t<a\n\t\t\t\t\t\tv-if=\"featureRequestUrl\"\n\t\t\t\t\t\t@click=\"onFeatureRequestClick\"\n\t\t\t\t\t\t:class=\"$style.featureRequest\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<font-awesome-icon icon=\"lightbulb\" />\n\t\t\t\t\t\t{{ $locale.baseText('ndv.featureRequest') }}\n\t\t\t\t\t</a>\n\t\t\t\t</template>\n\t\t\t</NDVDraggablePanels>\n\t\t</div>\n\t</el-dialog>\n</template>\n\n<script lang=\"ts\">\nimport type {\n\tINodeConnections,\n\tINodeTypeDescription,\n\tIRunData,\n\tIRunExecutionData,\n\tWorkflow,\n} from 'n8n-workflow';\nimport { jsonParse } from 'n8n-workflow';\nimport type { IExecutionResponse, INodeUi, IUpdateInformation, TargetItem } from '@/Interface';\n\nimport { externalHooks } from '@/mixins/externalHooks';\nimport { nodeHelpers } from '@/mixins/nodeHelpers';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\n\nimport NodeSettings from '@/components/NodeSettings.vue';\nimport NDVDraggablePanels from './NDVDraggablePanels.vue';\n\nimport mixins from 'vue-typed-mixins';\nimport OutputPanel from './OutputPanel.vue';\nimport InputPanel from './InputPanel.vue';\nimport TriggerPanel from './TriggerPanel.vue';\nimport {\n\tBASE_NODE_SURVEY_URL,\n\tEnterpriseEditionFeature,\n\tEXECUTABLE_TRIGGER_NODE_TYPES,\n\tSTART_NODE_TYPE,\n\tSTICKY_NODE_TYPE,\n} from '@/constants';\nimport { workflowActivate } from '@/mixins/workflowActivate';\nimport { pinData } from '@/mixins/pinData';\nimport { createEventBus, dataPinningEventBus } from '@/event-bus';\nimport { mapStores } from 'pinia';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport useDeviceSupport from '@/composables/useDeviceSupport';\n\nexport default mixins(\n\texternalHooks,\n\tnodeHelpers,\n\tworkflowHelpers,\n\tworkflowActivate,\n\tpinData,\n).extend({\n\tname: 'NodeDetailsView',\n\tcomponents: {\n\t\tNodeSettings,\n\t\tInputPanel,\n\t\tOutputPanel,\n\t\tNDVDraggablePanels,\n\t\tTriggerPanel,\n\t},\n\tprops: {\n\t\treadOnly: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\trenaming: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tisProductionExecutionPreview: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tsetup() {\n\t\treturn {\n\t\t\t...useDeviceSupport(),\n\t\t};\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tsettingsEventBus: createEventBus(),\n\t\t\trunInputIndex: -1,\n\t\t\trunOutputIndex: -1,\n\t\t\tisLinkingEnabled: true,\n\t\t\tselectedInput: undefined as string | undefined,\n\t\t\ttriggerWaitingWarningEnabled: false,\n\t\t\tisDragging: false,\n\t\t\tmainPanelPosition: 0,\n\t\t\tpinDataDiscoveryTooltipVisible: false,\n\t\t\tavgInputRowHeight: 0,\n\t\t\tavgOutputRowHeight: 0,\n\t\t};\n\t},\n\tmounted() {\n\t\tdataPinningEventBus.on('data-pinning-discovery', this.setIsTooltipVisible);\n\t},\n\tdestroyed() {\n\t\tdataPinningEventBus.off('data-pinning-discovery', this.setIsTooltipVisible);\n\t},\n\tcomputed: {\n\t\t...mapStores(useNodeTypesStore, useNDVStore, useUIStore, useWorkflowsStore, useSettingsStore),\n\t\tsessionId(): string {\n\t\t\treturn this.ndvStore.sessionId;\n\t\t},\n\t\tworkflowRunning(): boolean {\n\t\t\treturn this.uiStore.isActionActive('workflowRunning');\n\t\t},\n\t\tshowTriggerWaitingWarning(): boolean {\n\t\t\treturn (\n\t\t\t\tthis.triggerWaitingWarningEnabled &&\n\t\t\t\t!!this.activeNodeType &&\n\t\t\t\t!this.activeNodeType.group.includes('trigger') &&\n\t\t\t\tthis.workflowRunning &&\n\t\t\t\tthis.workflowsStore.executionWaitingForWebhook\n\t\t\t);\n\t\t},\n\t\tactiveNode(): INodeUi | null {\n\t\t\treturn this.ndvStore.activeNode;\n\t\t},\n\t\tinputNodeName(): string | undefined {\n\t\t\treturn this.selectedInput || this.parentNode;\n\t\t},\n\t\tinputNode(): INodeUi | null {\n\t\t\tif (this.inputNodeName) {\n\t\t\t\treturn this.workflowsStore.getNodeByName(this.inputNodeName);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tactiveNodeType(): INodeTypeDescription | null {\n\t\t\tif (this.activeNode) {\n\t\t\t\treturn this.nodeTypesStore.getNodeType(this.activeNode.type, this.activeNode.typeVersion);\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tshowTriggerPanel(): boolean {\n\t\t\tconst isWebhookBasedNode = !!this.activeNodeType?.webhooks?.length;\n\t\t\tconst isPollingNode = this.activeNodeType?.polling;\n\t\t\tconst override = !!this.activeNodeType?.triggerPanel;\n\t\t\treturn (\n\t\t\t\t!this.readOnly && this.isTriggerNode && (isWebhookBasedNode || isPollingNode || override)\n\t\t\t);\n\t\t},\n\t\tworkflow(): Workflow {\n\t\t\treturn this.getCurrentWorkflow();\n\t\t},\n\t\tparentNodes(): string[] {\n\t\t\tif (this.activeNode) {\n\t\t\t\treturn (\n\t\t\t\t\tthis.workflow.getParentNodesByDepth(this.activeNode.name, 1).map(({ name }) => name) || []\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\t\tparentNode(): string | undefined {\n\t\t\treturn this.parentNodes[0];\n\t\t},\n\t\tisExecutableTriggerNode(): boolean {\n\t\t\tif (!this.activeNodeType) return false;\n\n\t\t\treturn EXECUTABLE_TRIGGER_NODE_TYPES.includes(this.activeNodeType.name);\n\t\t},\n\t\tisTriggerNode(): boolean {\n\t\t\treturn (\n\t\t\t\t!!this.activeNodeType &&\n\t\t\t\t(this.activeNodeType.group.includes('trigger') ||\n\t\t\t\t\tthis.activeNodeType.name === START_NODE_TYPE)\n\t\t\t);\n\t\t},\n\t\tisActiveStickyNode(): boolean {\n\t\t\treturn !!this.ndvStore.activeNode && this.ndvStore.activeNode.type === STICKY_NODE_TYPE;\n\t\t},\n\t\tworkflowExecution(): IExecutionResponse | null {\n\t\t\treturn this.workflowsStore.getWorkflowExecution;\n\t\t},\n\t\tworkflowRunData(): IRunData | null {\n\t\t\tif (this.workflowExecution === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst executionData: IRunExecutionData | undefined = this.workflowExecution.data;\n\t\t\tif (executionData && executionData.resultData) {\n\t\t\t\treturn executionData.resultData.runData;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tmaxOutputRun(): number {\n\t\t\tif (this.activeNode === null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst runData: IRunData | null = this.workflowRunData;\n\n\t\t\tif (runData === null || !runData.hasOwnProperty(this.activeNode.name)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (runData[this.activeNode.name].length) {\n\t\t\t\treturn runData[this.activeNode.name].length - 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t},\n\t\toutputRun(): number {\n\t\t\tif (this.runOutputIndex === -1) {\n\t\t\t\treturn this.maxOutputRun;\n\t\t\t}\n\n\t\t\treturn Math.min(this.runOutputIndex, this.maxOutputRun);\n\t\t},\n\t\tmaxInputRun(): number {\n\t\t\tif (this.inputNode === null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst runData: IRunData | null = this.workflowRunData;\n\n\t\t\tif (runData === null || !runData.hasOwnProperty(this.inputNode.name)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (runData[this.inputNode.name].length) {\n\t\t\t\treturn runData[this.inputNode.name].length - 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t},\n\t\tinputRun(): number {\n\t\t\tif (this.isLinkingEnabled && this.maxOutputRun === this.maxInputRun) {\n\t\t\t\treturn this.outputRun;\n\t\t\t}\n\t\t\tif (this.runInputIndex === -1) {\n\t\t\t\treturn this.maxInputRun;\n\t\t\t}\n\n\t\t\treturn Math.min(this.runInputIndex, this.maxInputRun);\n\t\t},\n\t\tcanLinkRuns(): boolean {\n\t\t\treturn this.maxOutputRun > 0 && this.maxOutputRun === this.maxInputRun;\n\t\t},\n\t\tlinked(): boolean {\n\t\t\treturn this.isLinkingEnabled && this.canLinkRuns;\n\t\t},\n\t\tinputPanelMargin(): number {\n\t\t\treturn this.isTriggerNode ? 0 : 80;\n\t\t},\n\t\tfeatureRequestUrl(): string {\n\t\t\tif (!this.activeNodeType) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn `${BASE_NODE_SURVEY_URL}${this.activeNodeType.name}`;\n\t\t},\n\t\toutputPanelEditMode(): { enabled: boolean; value: string } {\n\t\t\treturn this.ndvStore.outputPanelEditMode;\n\t\t},\n\t\tisWorkflowRunning(): boolean {\n\t\t\treturn this.uiStore.isActionActive('workflowRunning');\n\t\t},\n\t\tisExecutionWaitingForWebhook(): boolean {\n\t\t\treturn this.workflowsStore.executionWaitingForWebhook;\n\t\t},\n\t\tblockUi(): boolean {\n\t\t\treturn this.isWorkflowRunning || this.isExecutionWaitingForWebhook;\n\t\t},\n\t\tforeignCredentials(): string[] {\n\t\t\tconst credentials = (this.activeNode || {}).credentials;\n\t\t\tconst usedCredentials = this.workflowsStore.usedCredentials;\n\n\t\t\tconst foreignCredentials: string[] = [];\n\t\t\tif (\n\t\t\t\tcredentials &&\n\t\t\t\tthis.settingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.Sharing)\n\t\t\t) {\n\t\t\t\tObject.values(credentials).forEach((credential) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tcredential.id &&\n\t\t\t\t\t\tusedCredentials[credential.id] &&\n\t\t\t\t\t\t!usedCredentials[credential.id].currentUserHasAccess\n\t\t\t\t\t) {\n\t\t\t\t\t\tforeignCredentials.push(credential.id);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn foreignCredentials;\n\t\t},\n\t\thasForeignCredential(): boolean {\n\t\t\treturn this.foreignCredentials.length > 0;\n\t\t},\n\t},\n\twatch: {\n\t\tactiveNode(node: INodeUi | null) {\n\t\t\tif (node && !this.isActiveStickyNode) {\n\t\t\t\tthis.runInputIndex = -1;\n\t\t\t\tthis.runOutputIndex = -1;\n\t\t\t\tthis.isLinkingEnabled = true;\n\t\t\t\tthis.selectedInput = undefined;\n\t\t\t\tthis.triggerWaitingWarningEnabled = false;\n\t\t\t\tthis.avgOutputRowHeight = 0;\n\t\t\t\tthis.avgInputRowHeight = 0;\n\n\t\t\t\tsetTimeout(this.ndvStore.setNDVSessionId, 0);\n\t\t\t\tthis.$externalHooks().run('dataDisplay.nodeTypeChanged', {\n\t\t\t\t\tnodeSubtitle: this.getNodeSubtitle(node, this.activeNodeType, this.getCurrentWorkflow()),\n\t\t\t\t});\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (this.activeNode) {\n\t\t\t\t\t\tconst outgoingConnections = this.workflowsStore.outgoingConnectionsByNodeName(\n\t\t\t\t\t\t\tthis.activeNode.name,\n\t\t\t\t\t\t) as INodeConnections;\n\n\t\t\t\t\t\tthis.$telemetry.track('User opened node modal', {\n\t\t\t\t\t\t\tnode_type: this.activeNodeType ? this.activeNodeType.name : '',\n\t\t\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\t\t\tsession_id: this.sessionId,\n\t\t\t\t\t\t\tis_editable: !this.hasForeignCredential,\n\t\t\t\t\t\t\tparameters_pane_position: this.mainPanelPosition,\n\t\t\t\t\t\t\tinput_first_connector_runs: this.maxInputRun,\n\t\t\t\t\t\t\toutput_first_connector_runs: this.maxOutputRun,\n\t\t\t\t\t\t\tselected_view_inputs: this.isTriggerNode\n\t\t\t\t\t\t\t\t? 'trigger'\n\t\t\t\t\t\t\t\t: this.ndvStore.inputPanelDisplayMode,\n\t\t\t\t\t\t\tselected_view_outputs: this.ndvStore.outputPanelDisplayMode,\n\t\t\t\t\t\t\tinput_connectors: this.parentNodes.length,\n\t\t\t\t\t\t\toutput_connectors:\n\t\t\t\t\t\t\t\toutgoingConnections && outgoingConnections.main && outgoingConnections.main.length,\n\t\t\t\t\t\t\tinput_displayed_run_index: this.inputRun,\n\t\t\t\t\t\t\toutput_displayed_run_index: this.outputRun,\n\t\t\t\t\t\t\tdata_pinning_tooltip_presented: this.pinDataDiscoveryTooltipVisible,\n\t\t\t\t\t\t\tinput_displayed_row_height_avg: this.avgInputRowHeight,\n\t\t\t\t\t\t\toutput_displayed_row_height_avg: this.avgOutputRowHeight,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, 2000); // wait for RunData to mount and present pindata discovery tooltip\n\t\t\t}\n\t\t\tif (window.top && !this.isActiveStickyNode) {\n\t\t\t\twindow.top.postMessage(JSON.stringify({ command: node ? 'openNDV' : 'closeNDV' }), '*');\n\t\t\t}\n\t\t},\n\t\tmaxOutputRun() {\n\t\t\tthis.runOutputIndex = -1;\n\t\t},\n\t\tmaxInputRun() {\n\t\t\tthis.runInputIndex = -1;\n\t\t},\n\t\tinputNodeName(nodeName: string | undefined) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.ndvStore.setInputNodeName(nodeName);\n\t\t\t}, 0);\n\t\t},\n\t\tinputRun() {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.ndvStore.setInputRunIndex(this.inputRun);\n\t\t\t}, 0);\n\t\t},\n\t},\n\tmethods: {\n\t\tsetIsTooltipVisible({ isTooltipVisible }: { isTooltipVisible: boolean }) {\n\t\t\tthis.pinDataDiscoveryTooltipVisible = isTooltipVisible;\n\t\t},\n\t\tonKeyDown(e: KeyboardEvent) {\n\t\t\tif (e.key === 's' && this.isCtrlKeyPressed(e)) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif (this.readOnly) return;\n\n\t\t\t\tthis.$emit('saveKeyboardShortcut', e);\n\t\t\t}\n\t\t},\n\t\tonInputItemHover(e: { itemIndex: number; outputIndex: number } | null) {\n\t\t\tif (!this.inputNodeName) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (e === null) {\n\t\t\t\tthis.ndvStore.setHoveringItem(null);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst item: TargetItem = {\n\t\t\t\tnodeName: this.inputNodeName,\n\t\t\t\trunIndex: this.inputRun,\n\t\t\t\toutputIndex: e.outputIndex,\n\t\t\t\titemIndex: e.itemIndex,\n\t\t\t};\n\t\t\tthis.ndvStore.setHoveringItem(item);\n\t\t},\n\t\tonOutputItemHover(e: { itemIndex: number; outputIndex: number } | null) {\n\t\t\tif (e === null || !this.activeNode) {\n\t\t\t\tthis.ndvStore.setHoveringItem(null);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst item: TargetItem = {\n\t\t\t\tnodeName: this.activeNode.name,\n\t\t\t\trunIndex: this.outputRun,\n\t\t\t\toutputIndex: e.outputIndex,\n\t\t\t\titemIndex: e.itemIndex,\n\t\t\t};\n\t\t\tthis.ndvStore.setHoveringItem(item);\n\t\t},\n\t\tonInputTableMounted(e: { avgRowHeight: number }) {\n\t\t\tthis.avgInputRowHeight = e.avgRowHeight;\n\t\t},\n\t\tonOutputTableMounted(e: { avgRowHeight: number }) {\n\t\t\tthis.avgOutputRowHeight = e.avgRowHeight;\n\t\t},\n\t\tonWorkflowActivate() {\n\t\t\tthis.ndvStore.activeNodeName = null;\n\t\t\tsetTimeout(() => {\n\t\t\t\tvoid this.activateCurrentWorkflow('ndv');\n\t\t\t}, 1000);\n\t\t},\n\t\tonFeatureRequestClick() {\n\t\t\twindow.open(this.featureRequestUrl, '_blank');\n\t\t\tif (this.activeNode) {\n\t\t\t\tthis.$telemetry.track('User clicked ndv link', {\n\t\t\t\t\tnode_type: this.activeNode.type,\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\tsession_id: this.sessionId,\n\t\t\t\t\tpane: 'main',\n\t\t\t\t\ttype: 'i-wish-this-node-would',\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tonPanelsInit(e: { position: number }) {\n\t\t\tthis.mainPanelPosition = e.position;\n\t\t},\n\t\tonDragStart(e: { position: number }) {\n\t\t\tthis.isDragging = true;\n\t\t\tthis.mainPanelPosition = e.position;\n\t\t},\n\t\tonDragEnd(e: { windowWidth: number; position: number }) {\n\t\t\tthis.isDragging = false;\n\t\t\tthis.$telemetry.track('User moved parameters pane', {\n\t\t\t\twindow_width: e.windowWidth,\n\t\t\t\tstart_position: this.mainPanelPosition,\n\t\t\t\tend_position: e.position,\n\t\t\t\tnode_type: this.activeNodeType ? this.activeNodeType.name : '',\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t});\n\t\t\tthis.mainPanelPosition = e.position;\n\t\t},\n\t\tonLinkRunToInput() {\n\t\t\tthis.runOutputIndex = this.runInputIndex;\n\t\t\tthis.isLinkingEnabled = true;\n\t\t\tthis.trackLinking('input');\n\t\t},\n\t\tonLinkRunToOutput() {\n\t\t\tthis.isLinkingEnabled = true;\n\t\t\tthis.trackLinking('output');\n\t\t},\n\t\tonUnlinkRun(pane: string) {\n\t\t\tthis.runInputIndex = this.runOutputIndex;\n\t\t\tthis.isLinkingEnabled = false;\n\t\t\tthis.trackLinking(pane);\n\t\t},\n\t\ttrackLinking(pane: string) {\n\t\t\tthis.$telemetry.track('User changed ndv run linking', {\n\t\t\t\tnode_type: this.activeNodeType ? this.activeNodeType.name : '',\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\tlinked: this.linked,\n\t\t\t\tpane,\n\t\t\t});\n\t\t},\n\t\tonNodeExecute() {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!this.activeNode || !this.workflowRunning) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.triggerWaitingWarningEnabled = true;\n\t\t\t}, 1000);\n\t\t},\n\t\topenSettings() {\n\t\t\tthis.settingsEventBus.emit('openSettings');\n\t\t},\n\t\tvalueChanged(parameterData: IUpdateInformation) {\n\t\t\tthis.$emit('valueChanged', parameterData);\n\t\t},\n\t\tnodeTypeSelected(nodeTypeName: string) {\n\t\t\tthis.$emit('nodeTypeSelected', nodeTypeName);\n\t\t},\n\t\tasync close() {\n\t\t\tif (this.isDragging) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.outputPanelEditMode.enabled) {\n\t\t\t\tconst shouldPinDataBeforeClosing = await this.confirmMessage(\n\t\t\t\t\t'',\n\t\t\t\t\tthis.$locale.baseText('ndv.pinData.beforeClosing.title'),\n\t\t\t\t\tnull,\n\t\t\t\t\tthis.$locale.baseText('ndv.pinData.beforeClosing.confirm'),\n\t\t\t\t\tthis.$locale.baseText('ndv.pinData.beforeClosing.cancel'),\n\t\t\t\t);\n\n\t\t\t\tif (shouldPinDataBeforeClosing) {\n\t\t\t\t\tconst { value } = this.outputPanelEditMode;\n\n\t\t\t\t\tif (!this.isValidPinDataSize(value)) {\n\t\t\t\t\t\tdataPinningEventBus.emit('data-pinning-error', {\n\t\t\t\t\t\t\terrorType: 'data-too-large',\n\t\t\t\t\t\t\tsource: 'on-ndv-close-modal',\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.isValidPinDataJSON(value)) {\n\t\t\t\t\t\tdataPinningEventBus.emit('data-pinning-error', {\n\t\t\t\t\t\t\terrorType: 'invalid-json',\n\t\t\t\t\t\t\tsource: 'on-ndv-close-modal',\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.activeNode) {\n\t\t\t\t\t\tthis.workflowsStore.pinData({ node: this.activeNode, data: jsonParse(value) });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.ndvStore.setOutputPanelEditModeEnabled(false);\n\t\t\t}\n\n\t\t\tawait this.$externalHooks().run('dataDisplay.nodeEditingFinished');\n\t\t\tthis.$telemetry.track('User closed node modal', {\n\t\t\t\tnode_type: this.activeNodeType ? this.activeNodeType.name : '',\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t});\n\t\t\tthis.triggerWaitingWarningEnabled = false;\n\t\t\tthis.ndvStore.activeNodeName = null;\n\t\t\tthis.ndvStore.resetNDVSessionId();\n\t\t},\n\t\tonRunOutputIndexChange(run: number) {\n\t\t\tthis.runOutputIndex = run;\n\t\t\tthis.trackRunChange(run, 'output');\n\t\t},\n\t\tonRunInputIndexChange(run: number) {\n\t\t\tthis.runInputIndex = run;\n\t\t\tif (this.linked) {\n\t\t\t\tthis.runOutputIndex = run;\n\t\t\t}\n\t\t\tthis.trackRunChange(run, 'input');\n\t\t},\n\t\ttrackRunChange(run: number, pane: string) {\n\t\t\tthis.$telemetry.track('User changed ndv run dropdown', {\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\trun_index: run,\n\t\t\t\tnode_type: this.activeNodeType ? this.activeNodeType.name : '',\n\t\t\t\tpane,\n\t\t\t});\n\t\t},\n\t\tonInputSelect(value: string, index: number) {\n\t\t\tthis.runInputIndex = -1;\n\t\t\tthis.isLinkingEnabled = true;\n\t\t\tthis.selectedInput = value;\n\n\t\t\tthis.$telemetry.track('User changed ndv input dropdown', {\n\t\t\t\tnode_type: this.activeNode ? this.activeNode.type : '',\n\t\t\t\tsession_id: this.sessionId,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\tselection_value: index,\n\t\t\t\tinput_node_type: this.inputNode ? this.inputNode.type : '',\n\t\t\t});\n\t\t},\n\t\tonStopExecution() {\n\t\t\tthis.$emit('stopExecution');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\">\n.ndv-wrapper {\n\toverflow: hidden;\n}\n\n.data-display-wrapper {\n\theight: 93%;\n\twidth: 100%;\n\tmargin-top: var(--spacing-xl) !important;\n\tbackground: none;\n\tborder: none;\n\n\t.el-dialog__header {\n\t\tpadding: 0 !important;\n\t}\n\n\t.el-dialog__body {\n\t\tpadding: 0 !important;\n\t\theight: 100%;\n\t\tmin-height: 400px;\n\t\toverflow: hidden;\n\t\tborder-radius: 8px;\n\t}\n}\n\n.data-display {\n\theight: 100%;\n\twidth: 100%;\n\tdisplay: flex;\n}\n</style>\n\n<style lang=\"scss\" module>\n$main-panel-width: 360px;\n\n.modalBackground {\n\theight: 100%;\n\twidth: 100%;\n}\n\n.triggerWarning {\n\tmax-width: 180px;\n}\n\n.backToCanvas {\n\tposition: fixed;\n\ttop: var(--spacing-xs);\n\tleft: var(--spacing-l);\n\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\n\t> * {\n\t\tmargin-right: var(--spacing-3xs);\n\t}\n}\n\n@media (min-width: $breakpoint-lg) {\n\t.backToCanvas {\n\t\ttop: var(--spacing-xs);\n\t\tleft: var(--spacing-m);\n\t}\n}\n\n.featureRequest {\n\tposition: absolute;\n\tbottom: var(--spacing-4xs);\n\tleft: calc(100% + var(--spacing-s));\n\tcolor: var(--color-text-xlight);\n\tfont-size: var(--font-size-2xs);\n\twhite-space: nowrap;\n\n\t* {\n\t\tmargin-right: var(--spacing-3xs);\n\t}\n}\n</style>\n","import type { PropType } from 'vue';\nimport mixins from 'vue-typed-mixins';\nimport type { INodeUi } from '@/Interface';\nimport { deviceSupportHelpers } from '@/mixins/deviceSupportHelpers';\nimport { NO_OP_NODE_TYPE } from '@/constants';\n\nimport type { INodeTypeDescription } from 'n8n-workflow';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport type { BrowserJsPlumbInstance } from '@jsplumb/browser-ui';\nimport type { Endpoint, EndpointOptions } from '@jsplumb/core';\nimport * as NodeViewUtils from '@/utils/nodeViewUtils';\nimport { useHistoryStore } from '@/stores/history.store';\nimport { useCanvasStore } from '@/stores/canvas.store';\n\nexport const nodeBase = mixins(deviceSupportHelpers).extend({\n\tmounted() {\n\t\t// Initialize the node\n\t\tif (this.data !== null) {\n\t\t\ttry {\n\t\t\t\tthis.__addNode(this.data);\n\t\t\t} catch (error) {\n\t\t\t\t// This breaks when new nodes are loaded into store but workflow tab is not currently active\n\t\t\t\t// Shouldn't affect anything\n\t\t\t}\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapStores(useNodeTypesStore, useUIStore, useCanvasStore, useWorkflowsStore, useHistoryStore),\n\t\tdata(): INodeUi | null {\n\t\t\treturn this.workflowsStore.getNodeByName(this.name);\n\t\t},\n\t\tnodeId(): string {\n\t\t\treturn this.data?.id || '';\n\t\t},\n\t},\n\tprops: {\n\t\tname: {\n\t\t\ttype: String,\n\t\t},\n\t\tinstance: {\n\t\t\ttype: Object as PropType<BrowserJsPlumbInstance>,\n\t\t},\n\t\tisReadOnly: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tisActive: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\thideActions: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tdisableSelecting: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tshowCustomTooltip: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tmethods: {\n\t\t__addEndpointTestingData(endpoint: Endpoint, type: string, inputIndex: number) {\n\t\t\tif (window?.Cypress && 'canvas' in endpoint.endpoint) {\n\t\t\t\tconst canvas = endpoint.endpoint.canvas;\n\t\t\t\tthis.instance.setAttribute(canvas, 'data-endpoint-name', this.data.name);\n\t\t\t\tthis.instance.setAttribute(canvas, 'data-input-index', inputIndex.toString());\n\t\t\t\tthis.instance.setAttribute(canvas, 'data-endpoint-type', type);\n\t\t\t}\n\t\t},\n\t\t__addInputEndpoints(node: INodeUi, nodeTypeData: INodeTypeDescription) {\n\t\t\t// Add Inputs\n\t\t\tlet index;\n\t\t\tconst indexData: {\n\t\t\t\t[key: string]: number;\n\t\t\t} = {};\n\n\t\t\tnodeTypeData.inputs.forEach((inputName: string, i: number) => {\n\t\t\t\t// Increment the index for inputs with current name\n\t\t\t\tif (indexData.hasOwnProperty(inputName)) {\n\t\t\t\t\tindexData[inputName]++;\n\t\t\t\t} else {\n\t\t\t\t\tindexData[inputName] = 0;\n\t\t\t\t}\n\t\t\t\tindex = indexData[inputName];\n\n\t\t\t\t// Get the position of the anchor depending on how many it has\n\t\t\t\tconst anchorPosition =\n\t\t\t\t\tNodeViewUtils.ANCHOR_POSITIONS.input[nodeTypeData.inputs.length][index];\n\n\t\t\t\tconst newEndpointData: EndpointOptions = {\n\t\t\t\t\tuuid: NodeViewUtils.getInputEndpointUUID(this.nodeId, index),\n\t\t\t\t\tanchor: anchorPosition,\n\t\t\t\t\tmaxConnections: -1,\n\t\t\t\t\tendpoint: 'Rectangle',\n\t\t\t\t\tpaintStyle: NodeViewUtils.getInputEndpointStyle(nodeTypeData, '--color-foreground-xdark'),\n\t\t\t\t\thoverPaintStyle: NodeViewUtils.getInputEndpointStyle(nodeTypeData, '--color-primary'),\n\t\t\t\t\tsource: false,\n\t\t\t\t\ttarget: !this.isReadOnly && nodeTypeData.inputs.length > 1, // only enabled for nodes with multiple inputs.. otherwise attachment handled by connectionDrag event in NodeView,\n\t\t\t\t\tparameters: {\n\t\t\t\t\t\tnodeId: this.nodeId,\n\t\t\t\t\t\ttype: inputName,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t},\n\t\t\t\t\tenabled: !this.isReadOnly, // enabled in default case to allow dragging\n\t\t\t\t\tcssClass: 'rect-input-endpoint',\n\t\t\t\t\tdragAllowedWhenFull: true,\n\t\t\t\t\thoverClass: 'dropHover',\n\t\t\t\t};\n\n\t\t\t\tconst endpoint = this.instance?.addEndpoint(\n\t\t\t\t\tthis.$refs[this.data.name] as Element,\n\t\t\t\t\tnewEndpointData,\n\t\t\t\t);\n\t\t\t\tthis.__addEndpointTestingData(endpoint, 'input', index);\n\t\t\t\tif (nodeTypeData.inputNames) {\n\t\t\t\t\t// Apply input names if they got set\n\t\t\t\t\tendpoint.addOverlay(NodeViewUtils.getInputNameOverlay(nodeTypeData.inputNames[index]));\n\t\t\t\t}\n\t\t\t\tif (!Array.isArray(endpoint)) {\n\t\t\t\t\tendpoint.__meta = {\n\t\t\t\t\t\tnodeName: node.name,\n\t\t\t\t\t\tnodeId: this.nodeId,\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\ttotalEndpoints: nodeTypeData.inputs.length,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// TODO: Activate again if it makes sense. Currently makes problems when removing\n\t\t\t\t//       connection on which the input has a name. It does not get hidden because\n\t\t\t\t//       the endpoint to which it connects when letting it go over the node is\n\t\t\t\t//       different to the regular one (have different ids). So that seems to make\n\t\t\t\t//       problems when hiding the input-name.\n\n\t\t\t\t// if (index === 0 && inputName === 'main') {\n\t\t\t\t// \t// Make the first main-input the default one to connect to when connection gets dropped on node\n\t\t\t\t// \tthis.instance.makeTarget(this.nodeId, newEndpointData);\n\t\t\t\t// }\n\t\t\t});\n\t\t\tif (nodeTypeData.inputs.length === 0) {\n\t\t\t\tthis.instance.manage(this.$refs[this.data.name] as Element);\n\t\t\t}\n\t\t},\n\t\t__addOutputEndpoints(node: INodeUi, nodeTypeData: INodeTypeDescription) {\n\t\t\tlet index;\n\t\t\tconst indexData: {\n\t\t\t\t[key: string]: number;\n\t\t\t} = {};\n\n\t\t\tnodeTypeData.outputs.forEach((inputName: string, i: number) => {\n\t\t\t\t// Increment the index for outputs with current name\n\t\t\t\tif (indexData.hasOwnProperty(inputName)) {\n\t\t\t\t\tindexData[inputName]++;\n\t\t\t\t} else {\n\t\t\t\t\tindexData[inputName] = 0;\n\t\t\t\t}\n\t\t\t\tindex = indexData[inputName];\n\n\t\t\t\t// Get the position of the anchor depending on how many it has\n\t\t\t\tconst anchorPosition =\n\t\t\t\t\tNodeViewUtils.ANCHOR_POSITIONS.output[nodeTypeData.outputs.length][index];\n\n\t\t\t\tconst newEndpointData: EndpointOptions = {\n\t\t\t\t\tuuid: NodeViewUtils.getOutputEndpointUUID(this.nodeId, index),\n\t\t\t\t\tanchor: anchorPosition,\n\t\t\t\t\tmaxConnections: -1,\n\t\t\t\t\tendpoint: {\n\t\t\t\t\t\ttype: 'Dot',\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tradius: nodeTypeData && nodeTypeData.outputs.length > 2 ? 7 : 9,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tpaintStyle: NodeViewUtils.getOutputEndpointStyle(\n\t\t\t\t\t\tnodeTypeData,\n\t\t\t\t\t\t'--color-foreground-xdark',\n\t\t\t\t\t),\n\t\t\t\t\thoverPaintStyle: NodeViewUtils.getOutputEndpointStyle(nodeTypeData, '--color-primary'),\n\t\t\t\t\tsource: true,\n\t\t\t\t\ttarget: false,\n\t\t\t\t\tenabled: !this.isReadOnly,\n\t\t\t\t\tparameters: {\n\t\t\t\t\t\tnodeId: this.nodeId,\n\t\t\t\t\t\ttype: inputName,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t},\n\t\t\t\t\thoverClass: 'dot-output-endpoint-hover',\n\t\t\t\t\tconnectionsDirected: true,\n\t\t\t\t\tcssClass: 'dot-output-endpoint',\n\t\t\t\t\tdragAllowedWhenFull: false,\n\t\t\t\t};\n\n\t\t\t\tconst endpoint = this.instance.addEndpoint(\n\t\t\t\t\tthis.$refs[this.data.name] as Element,\n\t\t\t\t\tnewEndpointData,\n\t\t\t\t);\n\t\t\t\tthis.__addEndpointTestingData(endpoint, 'output', index);\n\t\t\t\tif (nodeTypeData.outputNames) {\n\t\t\t\t\t// Apply output names if they got set\n\t\t\t\t\tconst overlaySpec = NodeViewUtils.getOutputNameOverlay(nodeTypeData.outputNames[index]);\n\t\t\t\t\tendpoint.addOverlay(overlaySpec);\n\t\t\t\t}\n\n\t\t\t\tif (!Array.isArray(endpoint)) {\n\t\t\t\t\tendpoint.__meta = {\n\t\t\t\t\t\tnodeName: node.name,\n\t\t\t\t\t\tnodeId: this.nodeId,\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\ttotalEndpoints: nodeTypeData.outputs.length,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (!this.isReadOnly) {\n\t\t\t\t\tconst plusEndpointData: EndpointOptions = {\n\t\t\t\t\t\tuuid: NodeViewUtils.getOutputEndpointUUID(this.nodeId, index),\n\t\t\t\t\t\tanchor: anchorPosition,\n\t\t\t\t\t\tmaxConnections: -1,\n\t\t\t\t\t\tendpoint: {\n\t\t\t\t\t\t\ttype: 'N8nPlus',\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tdimensions: 24,\n\t\t\t\t\t\t\t\tconnectedEndpoint: endpoint,\n\t\t\t\t\t\t\t\tshowOutputLabel: nodeTypeData.outputs.length === 1,\n\t\t\t\t\t\t\t\tsize: nodeTypeData.outputs.length >= 3 ? 'small' : 'medium',\n\t\t\t\t\t\t\t\thoverMessage: this.$locale.baseText('nodeBase.clickToAddNodeOrDragToConnect'),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsource: true,\n\t\t\t\t\t\ttarget: false,\n\t\t\t\t\t\tenabled: !this.isReadOnly,\n\t\t\t\t\t\tpaintStyle: {\n\t\t\t\t\t\t\toutlineStroke: 'none',\n\t\t\t\t\t\t},\n\t\t\t\t\t\thoverPaintStyle: {\n\t\t\t\t\t\t\toutlineStroke: 'none',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tparameters: {\n\t\t\t\t\t\t\tnodeId: this.nodeId,\n\t\t\t\t\t\t\ttype: inputName,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcssClass: 'plus-draggable-endpoint',\n\t\t\t\t\t\tdragAllowedWhenFull: false,\n\t\t\t\t\t};\n\t\t\t\t\tconst plusEndpoint = this.instance.addEndpoint(\n\t\t\t\t\t\tthis.$refs[this.data.name] as Element,\n\t\t\t\t\t\tplusEndpointData,\n\t\t\t\t\t);\n\t\t\t\t\tthis.__addEndpointTestingData(plusEndpoint, 'plus', index);\n\n\t\t\t\t\tif (!Array.isArray(plusEndpoint)) {\n\t\t\t\t\t\tplusEndpoint.__meta = {\n\t\t\t\t\t\t\tnodeName: node.name,\n\t\t\t\t\t\t\tnodeId: this.nodeId,\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\ttotalEndpoints: nodeTypeData.outputs.length,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t__addNode(node: INodeUi) {\n\t\t\tconst nodeTypeData = (this.nodeTypesStore.getNodeType(node.type, node.typeVersion) ??\n\t\t\t\tthis.nodeTypesStore.getNodeType(NO_OP_NODE_TYPE)) as INodeTypeDescription;\n\n\t\t\tthis.__addInputEndpoints(node, nodeTypeData);\n\t\t\tthis.__addOutputEndpoints(node, nodeTypeData);\n\t\t},\n\t\ttouchEnd(e: MouseEvent) {\n\t\t\tif (this.isTouchDevice) {\n\t\t\t\tif (this.uiStore.isActionActive('dragActive')) {\n\t\t\t\t\tthis.uiStore.removeActiveAction('dragActive');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmouseLeftClick(e: MouseEvent) {\n\t\t\t// @ts-ignore\n\t\t\tconst path = e.path || (e.composedPath && e.composedPath());\n\t\t\tfor (let index = 0; index < path.length; index++) {\n\t\t\t\tif (\n\t\t\t\t\tpath[index].className &&\n\t\t\t\t\ttypeof path[index].className === 'string' &&\n\t\t\t\t\tpath[index].className.includes('no-select-on-click')\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.isTouchDevice) {\n\t\t\t\tif (this.uiStore.isActionActive('dragActive')) {\n\t\t\t\t\tthis.uiStore.removeActiveAction('dragActive');\n\t\t\t\t} else {\n\t\t\t\t\tif (!this.isCtrlKeyPressed(e)) {\n\t\t\t\t\t\tthis.$emit('deselectAllNodes');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.uiStore.isNodeSelected(this.data.name)) {\n\t\t\t\t\t\tthis.$emit('deselectNode', this.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$emit('nodeSelected', this.name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n});\n","<template>\n\t<div\n\t\t:class=\"{ 'node-wrapper': true, 'node-wrapper--trigger': isTriggerNode }\"\n\t\t:style=\"nodePosition\"\n\t\t:id=\"nodeId\"\n\t\tdata-test-id=\"canvas-node\"\n\t\t:ref=\"data.name\"\n\t\t:data-name=\"data.name\"\n\t>\n\t\t<div class=\"select-background\" v-show=\"isSelected\"></div>\n\t\t<div\n\t\t\t:class=\"{\n\t\t\t\t'node-default': true,\n\t\t\t\t'touch-active': isTouchActive,\n\t\t\t\t'is-touch-device': isTouchDevice,\n\t\t\t}\"\n\t\t>\n\t\t\t<div\n\t\t\t\t:class=\"nodeClass\"\n\t\t\t\t:style=\"nodeStyle\"\n\t\t\t\t@click.left=\"onClick\"\n\t\t\t\tv-touch:start=\"touchStart\"\n\t\t\t\tv-touch:end=\"touchEnd\"\n\t\t\t>\n\t\t\t\t<i class=\"trigger-icon\" v-if=\"isTriggerNode\">\n\t\t\t\t\t<n8n-tooltip placement=\"bottom\">\n\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t<span v-html=\"$locale.baseText('node.thisIsATriggerNode')\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<font-awesome-icon icon=\"bolt\" size=\"lg\" />\n\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t</i>\n\t\t\t\t<div\n\t\t\t\t\tv-if=\"!data.disabled\"\n\t\t\t\t\t:class=\"{ 'node-info-icon': true, 'shift-icon': shiftOutputCount }\"\n\t\t\t\t>\n\t\t\t\t\t<div v-if=\"hasIssues\" class=\"node-issues\">\n\t\t\t\t\t\t<n8n-tooltip placement=\"bottom\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<titled-list :title=\"`${$locale.baseText('node.issues')}:`\" :items=\"nodeIssues\" />\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<font-awesome-icon icon=\"exclamation-triangle\" />\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-else-if=\"waiting || nodeExecutionStatus === 'waiting'\" class=\"waiting\">\n\t\t\t\t\t\t<n8n-tooltip placement=\"bottom\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<div v-text=\"waiting\"></div>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<font-awesome-icon icon=\"clock\" />\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span v-else-if=\"showPinnedDataInfo\" class=\"node-pin-data-icon\">\n\t\t\t\t\t\t<font-awesome-icon icon=\"thumbtack\" />\n\t\t\t\t\t\t<span v-if=\"workflowDataItems > 1\" class=\"items-count\"> {{ workflowDataItems }}</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span v-else-if=\"nodeExecutionStatus === 'unknown'\">\n\t\t\t\t\t\t<!-- Do nothing, unknown means the node never executed -->\n\t\t\t\t\t</span>\n\t\t\t\t\t<span v-else-if=\"workflowDataItems\" class=\"data-count\">\n\t\t\t\t\t\t<font-awesome-icon icon=\"check\" />\n\t\t\t\t\t\t<span v-if=\"workflowDataItems > 1\" class=\"items-count\"> {{ workflowDataItems }}</span>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"node-executing-info\" :title=\"$locale.baseText('node.nodeIsExecuting')\">\n\t\t\t\t\t<font-awesome-icon icon=\"sync-alt\" spin />\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"node-trigger-tooltip__wrapper\">\n\t\t\t\t\t<n8n-tooltip\n\t\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\t\tmanual\n\t\t\t\t\t\t:value=\"showTriggerNodeTooltip\"\n\t\t\t\t\t\tpopper-class=\"node-trigger-tooltip__wrapper--item\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t<div v-text=\"getTriggerNodeTooltip\"></div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<span />\n\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t<n8n-tooltip\n\t\t\t\t\t\tv-if=\"isTriggerNode\"\n\t\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\t\tmanual\n\t\t\t\t\t\t:value=\"pinDataDiscoveryTooltipVisible\"\n\t\t\t\t\t\tpopper-class=\"node-trigger-tooltip__wrapper--item\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t{{ $locale.baseText('node.discovery.pinData.canvas') }}\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<span />\n\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t</div>\n\n\t\t\t\t<NodeIcon\n\t\t\t\t\tclass=\"node-icon\"\n\t\t\t\t\t:nodeType=\"nodeType\"\n\t\t\t\t\t:size=\"40\"\n\t\t\t\t\t:shrink=\"false\"\n\t\t\t\t\t:disabled=\"this.data.disabled\"\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div class=\"node-options no-select-on-click\" v-if=\"!isReadOnly\" v-show=\"!hideActions\">\n\t\t\t\t<div\n\t\t\t\t\tv-touch:tap=\"deleteNode\"\n\t\t\t\t\tclass=\"option\"\n\t\t\t\t\t:title=\"$locale.baseText('node.deleteNode')\"\n\t\t\t\t\tdata-test-id=\"delete-node-button\"\n\t\t\t\t>\n\t\t\t\t\t<font-awesome-icon icon=\"trash\" />\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tv-touch:tap=\"disableNode\"\n\t\t\t\t\tclass=\"option\"\n\t\t\t\t\t:title=\"$locale.baseText('node.activateDeactivateNode')\"\n\t\t\t\t\tdata-test-id=\"disable-node-button\"\n\t\t\t\t>\n\t\t\t\t\t<font-awesome-icon :icon=\"nodeDisabledIcon\" />\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tv-touch:tap=\"duplicateNode\"\n\t\t\t\t\tclass=\"option\"\n\t\t\t\t\t:title=\"$locale.baseText('node.duplicateNode')\"\n\t\t\t\t\tv-if=\"isDuplicatable\"\n\t\t\t\t\tdata-test-id=\"duplicate-node-button\"\n\t\t\t\t>\n\t\t\t\t\t<font-awesome-icon icon=\"clone\" />\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tv-touch:tap=\"setNodeActive\"\n\t\t\t\t\tclass=\"option touch\"\n\t\t\t\t\t:title=\"$locale.baseText('node.editNode')\"\n\t\t\t\t\tdata-test-id=\"activate-node-button\"\n\t\t\t\t>\n\t\t\t\t\t<font-awesome-icon class=\"execute-icon\" icon=\"cog\" />\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tv-touch:tap=\"executeNode\"\n\t\t\t\t\tclass=\"option\"\n\t\t\t\t\t:title=\"$locale.baseText('node.executeNode')\"\n\t\t\t\t\tv-if=\"!workflowRunning\"\n\t\t\t\t\tdata-test-id=\"execute-node-button\"\n\t\t\t\t>\n\t\t\t\t\t<font-awesome-icon class=\"execute-icon\" icon=\"play-circle\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\t:class=\"{\n\t\t\t\t\t'disabled-linethrough': true,\n\t\t\t\t\tsuccess: !['unknown'].includes(nodeExecutionStatus) && workflowDataItems > 0,\n\t\t\t\t}\"\n\t\t\t\tv-if=\"showDisabledLinethrough\"\n\t\t\t></div>\n\t\t</div>\n\t\t<div class=\"node-description\">\n\t\t\t<div class=\"node-name ph-no-capture\" :title=\"nodeTitle\">\n\t\t\t\t<p data-test-id=\"canvas-node-box-title\">\n\t\t\t\t\t{{ nodeTitle }}\n\t\t\t\t</p>\n\t\t\t\t<p v-if=\"data.disabled\">({{ $locale.baseText('node.disabled') }})</p>\n\t\t\t</div>\n\t\t\t<div v-if=\"nodeSubtitle !== undefined\" class=\"node-subtitle\" :title=\"nodeSubtitle\">\n\t\t\t\t{{ nodeSubtitle }}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport {\n\tCUSTOM_API_CALL_KEY,\n\tLOCAL_STORAGE_PIN_DATA_DISCOVERY_CANVAS_FLAG,\n\tWAIT_TIME_UNLIMITED,\n\tMANUAL_TRIGGER_NODE_TYPE,\n} from '@/constants';\nimport { externalHooks } from '@/mixins/externalHooks';\nimport { nodeBase } from '@/mixins/nodeBase';\nimport { nodeHelpers } from '@/mixins/nodeHelpers';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport { pinData } from '@/mixins/pinData';\n\nimport type { INodeTypeDescription, ITaskData } from 'n8n-workflow';\nimport { NodeHelpers } from 'n8n-workflow';\n\nimport NodeIcon from '@/components/NodeIcon.vue';\nimport TitledList from '@/components/TitledList.vue';\n\nimport mixins from 'vue-typed-mixins';\n\nimport { get } from 'lodash-es';\nimport { getStyleTokenValue, getTriggerNodeServiceName } from '@/utils';\nimport type { IExecutionsSummary, INodeUi, XYPosition } from '@/Interface';\nimport { debounceHelper } from '@/mixins/debounce';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport { EnableNodeToggleCommand } from '@/models/history';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\nexport default mixins(\n\texternalHooks,\n\tnodeBase,\n\tnodeHelpers,\n\tworkflowHelpers,\n\tpinData,\n\tdebounceHelper,\n).extend({\n\tname: 'Node',\n\tcomponents: {\n\t\tTitledList,\n\t\tFontAwesomeIcon,\n\t\tNodeIcon,\n\t},\n\tprops: {\n\t\tisProductionExecutionPreview: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useNodeTypesStore, useNDVStore, useUIStore, useWorkflowsStore),\n\t\tshowPinnedDataInfo(): boolean {\n\t\t\treturn this.hasPinData && !this.isProductionExecutionPreview;\n\t\t},\n\t\tisDuplicatable(): boolean {\n\t\t\tif (!this.nodeType) return true;\n\t\t\treturn (\n\t\t\t\tthis.nodeType.maxNodes === undefined || this.sameTypeNodes.length < this.nodeType.maxNodes\n\t\t\t);\n\t\t},\n\t\tisScheduledGroup(): boolean {\n\t\t\treturn this.nodeType?.group.includes('schedule') === true;\n\t\t},\n\t\tnodeRunData(): ITaskData[] {\n\t\t\treturn this.workflowsStore.getWorkflowResultDataByNodeName(this.data?.name || '') || [];\n\t\t},\n\t\thasIssues(): boolean {\n\t\t\tif (\n\t\t\t\tthis.nodeExecutionStatus &&\n\t\t\t\t['crashed', 'error', 'failed'].includes(this.nodeExecutionStatus)\n\t\t\t)\n\t\t\t\treturn true;\n\t\t\tif (this.hasPinData) return false;\n\t\t\tif (this.data?.issues !== undefined && Object.keys(this.data.issues).length) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tworkflowDataItems(): number {\n\t\t\tconst workflowResultDataNode = this.nodeRunData;\n\t\t\tif (workflowResultDataNode === null) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\treturn workflowResultDataNode.length;\n\t\t},\n\t\tcanvasOffsetPosition() {\n\t\t\treturn this.uiStore.nodeViewOffsetPosition;\n\t\t},\n\t\tgetTriggerNodeTooltip(): string | undefined {\n\t\t\tif (this.nodeType !== null && this.nodeType.hasOwnProperty('eventTriggerDescription')) {\n\t\t\t\tconst nodeName = this.$locale.shortNodeType(this.nodeType.name);\n\t\t\t\tconst { eventTriggerDescription } = this.nodeType;\n\t\t\t\treturn this.$locale\n\t\t\t\t\t.nodeText()\n\t\t\t\t\t.eventTriggerDescription(nodeName, eventTriggerDescription || '');\n\t\t\t} else {\n\t\t\t\treturn this.$locale.baseText('node.waitingForYouToCreateAnEventIn', {\n\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\tnodeType: this.nodeType ? getTriggerNodeServiceName(this.nodeType) : '',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tisPollingTypeNode(): boolean {\n\t\t\treturn !!(this.nodeType && this.nodeType.polling);\n\t\t},\n\t\tisExecuting(): boolean {\n\t\t\treturn this.workflowsStore.executingNode === this.data.name;\n\t\t},\n\t\tisSingleActiveTriggerNode(): boolean {\n\t\t\tconst nodes = this.workflowsStore.workflowTriggerNodes.filter((node: INodeUi) => {\n\t\t\t\tconst nodeType = this.nodeTypesStore.getNodeType(node.type, node.typeVersion);\n\t\t\t\treturn nodeType && nodeType.eventTriggerDescription !== '' && !node.disabled;\n\t\t\t});\n\n\t\t\treturn nodes.length === 1;\n\t\t},\n\t\tisManualTypeNode(): boolean {\n\t\t\treturn this.data.type === MANUAL_TRIGGER_NODE_TYPE;\n\t\t},\n\t\tisTriggerNode(): boolean {\n\t\t\treturn this.nodeTypesStore.isTriggerNode(this.data?.type || '');\n\t\t},\n\t\tisTriggerNodeTooltipEmpty(): boolean {\n\t\t\treturn this.nodeType !== null ? this.nodeType.eventTriggerDescription === '' : false;\n\t\t},\n\t\tisNodeDisabled(): boolean | undefined {\n\t\t\treturn this.node && this.node.disabled;\n\t\t},\n\t\tnodeType(): INodeTypeDescription | null {\n\t\t\treturn this.data && this.nodeTypesStore.getNodeType(this.data.type, this.data.typeVersion);\n\t\t},\n\t\tnode(): INodeUi | undefined {\n\t\t\t// same as this.data but reactive..\n\t\t\treturn this.workflowsStore.nodesByName[this.name] as INodeUi | undefined;\n\t\t},\n\t\tsameTypeNodes(): INodeUi[] {\n\t\t\treturn this.workflowsStore.allNodes.filter((node: INodeUi) => node.type === this.data.type);\n\t\t},\n\t\tnodeClass(): object {\n\t\t\treturn {\n\t\t\t\t'node-box': true,\n\t\t\t\tdisabled: this.data.disabled,\n\t\t\t\texecuting: this.isExecuting,\n\t\t\t};\n\t\t},\n\t\tnodeExecutionStatus(): string {\n\t\t\tconst nodeExecutionRunData = this.workflowsStore.getWorkflowRunData?.[this.name];\n\t\t\tif (nodeExecutionRunData) {\n\t\t\t\treturn nodeExecutionRunData[0].executionStatus ?? '';\n\t\t\t}\n\t\t\treturn '';\n\t\t},\n\t\tnodeIssues(): string[] {\n\t\t\tconst issues: string[] = [];\n\t\t\tconst nodeExecutionRunData = this.workflowsStore.getWorkflowRunData?.[this.name];\n\t\t\tif (nodeExecutionRunData) {\n\t\t\t\tnodeExecutionRunData.forEach((executionRunData) => {\n\t\t\t\t\tif (executionRunData.error) {\n\t\t\t\t\t\tissues.push(\n\t\t\t\t\t\t\t`${executionRunData.error.message}${\n\t\t\t\t\t\t\t\texecutionRunData.error.description ? ` (${executionRunData.error.description})` : ''\n\t\t\t\t\t\t\t}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (this.data?.issues !== undefined) {\n\t\t\t\tissues.push(...NodeHelpers.nodeIssuesToString(this.data.issues, this.data));\n\t\t\t}\n\t\t\treturn issues;\n\t\t},\n\t\tnodeDisabledIcon(): string {\n\t\t\tif (this.data.disabled === false) {\n\t\t\t\treturn 'pause';\n\t\t\t} else {\n\t\t\t\treturn 'play';\n\t\t\t}\n\t\t},\n\t\tposition(): XYPosition {\n\t\t\treturn this.node ? this.node.position : [0, 0];\n\t\t},\n\t\tshowDisabledLinethrough(): boolean {\n\t\t\treturn !!(\n\t\t\t\tthis.data.disabled &&\n\t\t\t\tthis.nodeType &&\n\t\t\t\tthis.nodeType.inputs.length === 1 &&\n\t\t\t\tthis.nodeType.outputs.length === 1\n\t\t\t);\n\t\t},\n\t\tnodePosition(): object {\n\t\t\tconst returnStyles: {\n\t\t\t\t[key: string]: string;\n\t\t\t} = {\n\t\t\t\tleft: this.position[0] + 'px',\n\t\t\t\ttop: this.position[1] + 'px',\n\t\t\t};\n\n\t\t\treturn returnStyles;\n\t\t},\n\t\tshortNodeType(): string {\n\t\t\treturn this.$locale.shortNodeType(this.data.type);\n\t\t},\n\t\tnodeTitle(): string {\n\t\t\tif (this.data.name === 'Start') {\n\t\t\t\treturn this.$locale.headerText({\n\t\t\t\t\tkey: 'headers.start.displayName',\n\t\t\t\t\tfallback: 'Start',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this.data.name;\n\t\t},\n\t\twaiting(): string | undefined {\n\t\t\tconst workflowExecution = this.workflowsStore.getWorkflowExecution as IExecutionsSummary;\n\n\t\t\tif (workflowExecution && workflowExecution.waitTill) {\n\t\t\t\tconst lastNodeExecuted = get(workflowExecution, 'data.resultData.lastNodeExecuted');\n\t\t\t\tif (this.name === lastNodeExecuted) {\n\t\t\t\t\tconst waitDate = new Date(workflowExecution.waitTill);\n\t\t\t\t\tif (waitDate.toISOString() === WAIT_TIME_UNLIMITED) {\n\t\t\t\t\t\treturn this.$locale.baseText(\n\t\t\t\t\t\t\t'node.theNodeIsWaitingIndefinitelyForAnIncomingWebhookCall',\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn this.$locale.baseText('node.nodeIsWaitingTill', {\n\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\tdate: waitDate.toLocaleDateString(),\n\t\t\t\t\t\t\ttime: waitDate.toLocaleTimeString(),\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t},\n\t\tworkflowRunning(): boolean {\n\t\t\treturn this.uiStore.isActionActive('workflowRunning');\n\t\t},\n\t\tnodeStyle(): object {\n\t\t\tlet borderColor = getStyleTokenValue('--color-foreground-xdark');\n\n\t\t\tif (this.data.disabled) {\n\t\t\t\tborderColor = getStyleTokenValue('--color-foreground-base');\n\t\t\t} else if (!this.isExecuting) {\n\t\t\t\tif (this.hasIssues) {\n\t\t\t\t\tborderColor = getStyleTokenValue('--color-danger');\n\t\t\t\t} else if (this.waiting || this.showPinnedDataInfo) {\n\t\t\t\t\tborderColor = getStyleTokenValue('--color-secondary');\n\t\t\t\t} else if (this.nodeExecutionStatus === 'unknown') {\n\t\t\t\t\tborderColor = getStyleTokenValue('--color-foreground-xdark');\n\t\t\t\t} else if (this.workflowDataItems) {\n\t\t\t\t\tborderColor = getStyleTokenValue('--color-success');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst returnStyles: {\n\t\t\t\t[key: string]: string;\n\t\t\t} = {\n\t\t\t\t'border-color': borderColor,\n\t\t\t};\n\n\t\t\treturn returnStyles;\n\t\t},\n\t\tisSelected(): boolean {\n\t\t\treturn (\n\t\t\t\tthis.uiStore.getSelectedNodes.find((node: INodeUi) => node.name === this.data.name) !==\n\t\t\t\tundefined\n\t\t\t);\n\t\t},\n\t\tshiftOutputCount(): boolean {\n\t\t\treturn !!(this.nodeType && this.nodeType.outputs.length > 2);\n\t\t},\n\t\tshouldShowTriggerTooltip(): boolean {\n\t\t\treturn (\n\t\t\t\t!!this.node &&\n\t\t\t\tthis.isTriggerNode &&\n\t\t\t\t!this.isPollingTypeNode &&\n\t\t\t\t!this.hasPinData &&\n\t\t\t\t!this.isNodeDisabled &&\n\t\t\t\tthis.workflowRunning &&\n\t\t\t\tthis.workflowDataItems === 0 &&\n\t\t\t\tthis.isSingleActiveTriggerNode &&\n\t\t\t\t!this.isTriggerNodeTooltipEmpty &&\n\t\t\t\t!this.hasIssues &&\n\t\t\t\t!this.dragging\n\t\t\t);\n\t\t},\n\t},\n\twatch: {\n\t\tisActive(newValue, oldValue) {\n\t\t\tif (!newValue && oldValue) {\n\t\t\t\tthis.setSubtitle();\n\t\t\t}\n\t\t},\n\t\tcanvasOffsetPosition() {\n\t\t\tif (this.showTriggerNodeTooltip) {\n\t\t\t\tthis.showTriggerNodeTooltip = false;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.showTriggerNodeTooltip = this.shouldShowTriggerTooltip;\n\t\t\t\t}, 200);\n\t\t\t}\n\n\t\t\tif (this.pinDataDiscoveryTooltipVisible) {\n\t\t\t\tthis.pinDataDiscoveryTooltipVisible = false;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.pinDataDiscoveryTooltipVisible = true;\n\t\t\t\t}, 200);\n\t\t\t}\n\t\t},\n\t\tshouldShowTriggerTooltip(shouldShowTriggerTooltip) {\n\t\t\tif (shouldShowTriggerTooltip) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.showTriggerNodeTooltip = this.shouldShowTriggerTooltip;\n\t\t\t\t}, 2500);\n\t\t\t} else {\n\t\t\t\tthis.showTriggerNodeTooltip = false;\n\t\t\t}\n\t\t},\n\t\tnodeRunData(newValue) {\n\t\t\tthis.$emit('run', { name: this.data.name, data: newValue, waiting: !!this.waiting });\n\t\t},\n\t},\n\tcreated() {\n\t\tconst hasSeenPinDataTooltip = localStorage.getItem(\n\t\t\tLOCAL_STORAGE_PIN_DATA_DISCOVERY_CANVAS_FLAG,\n\t\t);\n\t\tif (!hasSeenPinDataTooltip) {\n\t\t\tthis.unwatchWorkflowDataItems = this.$watch('workflowDataItems', (dataItemsCount: number) => {\n\t\t\t\tthis.showPinDataDiscoveryTooltip(dataItemsCount);\n\t\t\t});\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.setSubtitle();\n\t\tif (this.nodeRunData) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.$emit('run', {\n\t\t\t\t\tname: this.data && this.data.name,\n\t\t\t\t\tdata: this.nodeRunData,\n\t\t\t\t\twaiting: !!this.waiting,\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisTouchActive: false,\n\t\t\tnodeSubtitle: '',\n\t\t\tshowTriggerNodeTooltip: false,\n\t\t\tpinDataDiscoveryTooltipVisible: false,\n\t\t\tdragging: false,\n\t\t\tunwatchWorkflowDataItems: () => {},\n\t\t};\n\t},\n\tmethods: {\n\t\tshowPinDataDiscoveryTooltip(dataItemsCount: number): void {\n\t\t\tif (\n\t\t\t\t!this.isTriggerNode ||\n\t\t\t\tthis.isManualTypeNode ||\n\t\t\t\tthis.isScheduledGroup ||\n\t\t\t\tdataItemsCount === 0\n\t\t\t)\n\t\t\t\treturn;\n\n\t\t\tlocalStorage.setItem(LOCAL_STORAGE_PIN_DATA_DISCOVERY_CANVAS_FLAG, 'true');\n\n\t\t\tthis.pinDataDiscoveryTooltipVisible = true;\n\t\t\tthis.unwatchWorkflowDataItems();\n\t\t},\n\t\tsetSubtitle() {\n\t\t\tconst nodeSubtitle =\n\t\t\t\tthis.getNodeSubtitle(this.data, this.nodeType, this.getCurrentWorkflow()) || '';\n\n\t\t\tthis.nodeSubtitle = nodeSubtitle.includes(CUSTOM_API_CALL_KEY) ? '' : nodeSubtitle;\n\t\t},\n\t\tdisableNode() {\n\t\t\tif (this.data !== null) {\n\t\t\t\tthis.disableNodes([this.data]);\n\t\t\t\tthis.historyStore.pushCommandToUndo(\n\t\t\t\t\tnew EnableNodeToggleCommand(\n\t\t\t\t\t\tthis.data.name,\n\t\t\t\t\t\t!this.data.disabled,\n\t\t\t\t\t\tthis.data.disabled === true,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tthis.$telemetry.track('User clicked node hover button', {\n\t\t\t\t\tnode_type: this.data.type,\n\t\t\t\t\tbutton_name: 'disable',\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\texecuteNode() {\n\t\t\tthis.$emit('runWorkflow', this.data.name, 'Node.executeNode');\n\t\t\tthis.$telemetry.track('User clicked node hover button', {\n\t\t\t\tnode_type: this.data.type,\n\t\t\t\tbutton_name: 'execute',\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t});\n\t\t},\n\t\tdeleteNode() {\n\t\t\tthis.$telemetry.track('User clicked node hover button', {\n\t\t\t\tnode_type: this.data.type,\n\t\t\t\tbutton_name: 'delete',\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t});\n\n\t\t\tVue.nextTick(() => {\n\t\t\t\t// Wait a tick else vue causes problems because the data is gone\n\t\t\t\tthis.$emit('removeNode', this.data.name);\n\t\t\t});\n\t\t},\n\t\tduplicateNode() {\n\t\t\tthis.$telemetry.track('User clicked node hover button', {\n\t\t\t\tnode_type: this.data.type,\n\t\t\t\tbutton_name: 'duplicate',\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t});\n\t\t\tVue.nextTick(() => {\n\t\t\t\t// Wait a tick else vue causes problems because the data is gone\n\t\t\t\tthis.$emit('duplicateNode', this.data.name);\n\t\t\t});\n\t\t},\n\n\t\tonClick(event: MouseEvent) {\n\t\t\tvoid this.callDebounced('onClickDebounced', { debounceTime: 50, trailing: true }, event);\n\t\t},\n\n\t\tonClickDebounced(event: MouseEvent) {\n\t\t\tconst isDoubleClick = event.detail >= 2;\n\t\t\tif (isDoubleClick) {\n\t\t\t\tthis.setNodeActive();\n\t\t\t} else {\n\t\t\t\tthis.mouseLeftClick(event);\n\t\t\t}\n\t\t},\n\n\t\tsetNodeActive() {\n\t\t\tthis.ndvStore.activeNodeName = this.data ? this.data.name : '';\n\t\t\tthis.pinDataDiscoveryTooltipVisible = false;\n\t\t},\n\t\ttouchStart() {\n\t\t\tif (this.isTouchDevice === true && this.isMacOs === false && this.isTouchActive === false) {\n\t\t\t\tthis.isTouchActive = true;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.isTouchActive = false;\n\t\t\t\t}, 2000);\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.node-wrapper {\n\tposition: absolute;\n\twidth: 100px;\n\theight: 100px;\n\n\t.node-description {\n\t\tposition: absolute;\n\t\ttop: 100px;\n\t\tleft: -50px;\n\t\tline-height: 1.5;\n\t\ttext-align: center;\n\t\tcursor: default;\n\t\tpadding: 8px;\n\t\twidth: 200px;\n\t\tpointer-events: none; // prevent container from being draggable\n\n\t\t.node-name > p {\n\t\t\t// must be paragraph tag to have two lines in safari\n\t\t\ttext-overflow: ellipsis;\n\t\t\tdisplay: -webkit-box;\n\t\t\t-webkit-box-orient: vertical;\n\t\t\t-webkit-line-clamp: 2;\n\t\t\toverflow: hidden;\n\t\t\toverflow-wrap: anywhere;\n\t\t\tfont-weight: var(--font-weight-bold);\n\t\t\tline-height: var(--font-line-height-compact);\n\t\t}\n\n\t\t.node-subtitle {\n\t\t\twhite-space: nowrap;\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t\tfont-weight: 400;\n\t\t\tcolor: $custom-font-light;\n\t\t\tfont-size: 0.8em;\n\t\t}\n\t}\n\n\t.node-default {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tcursor: pointer;\n\n\t\t.node-box {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tborder: 2px solid var(--color-foreground-xdark);\n\t\t\tborder-radius: var(--border-radius-large);\n\t\t\tbackground-color: var(--color-background-xlight);\n\t\t\t&.executing {\n\t\t\t\tbackground-color: var(--color-primary-tint-3) !important;\n\n\t\t\t\t.node-executing-info {\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t&.touch-active,\n\t\t&:hover {\n\t\t\t.node-execute {\n\t\t\t\tdisplay: initial;\n\t\t\t}\n\n\t\t\t.node-options {\n\t\t\t\tdisplay: initial;\n\t\t\t}\n\t\t}\n\n\t\t.node-executing-info {\n\t\t\tdisplay: none;\n\t\t\tposition: absolute;\n\t\t\tleft: 0px;\n\t\t\ttop: 0px;\n\t\t\tz-index: 12;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tfont-size: 3.75em;\n\t\t\tline-height: 1.65em;\n\t\t\ttext-align: center;\n\t\t\tcolor: hsla(var(--color-primary-h), var(--color-primary-s), var(--color-primary-l), 0.7);\n\t\t}\n\n\t\t.node-icon {\n\t\t\tposition: absolute;\n\t\t\ttop: calc(50% - 20px);\n\t\t\tleft: calc(50% - 20px);\n\t\t}\n\n\t\t.node-info-icon {\n\t\t\tposition: absolute;\n\t\t\tbottom: 6px;\n\t\t\tright: 6px;\n\n\t\t\t&.shift-icon {\n\t\t\t\tright: 12px;\n\t\t\t}\n\n\t\t\t.data-count {\n\t\t\t\tfont-weight: 600;\n\t\t\t\tcolor: var(--color-success);\n\t\t\t}\n\n\t\t\t.node-issues {\n\t\t\t\tcolor: var(--color-danger);\n\t\t\t}\n\n\t\t\t.items-count {\n\t\t\t\tfont-size: var(--font-size-s);\n\t\t\t\tpadding: 0;\n\t\t\t}\n\t\t}\n\n\t\t.node-pin-data-icon {\n\t\t\tcolor: var(--color-secondary);\n\t\t\tmargin-right: 2px;\n\n\t\t\tsvg {\n\t\t\t\theight: 0.85rem;\n\t\t\t}\n\t\t}\n\n\t\t.waiting {\n\t\t\tcolor: var(--color-secondary);\n\t\t}\n\n\t\t.node-options {\n\t\t\tdisplay: none;\n\t\t\tposition: absolute;\n\t\t\ttop: -25px;\n\t\t\tleft: -10px;\n\t\t\twidth: 120px;\n\t\t\theight: 26px;\n\t\t\tfont-size: 0.9em;\n\t\t\ttext-align: left;\n\t\t\tz-index: 10;\n\t\t\tcolor: #aaa;\n\t\t\ttext-align: center;\n\n\t\t\t.option {\n\t\t\t\twidth: 28px;\n\t\t\t\tdisplay: inline-block;\n\n\t\t\t\t&.touch {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t&:hover {\n\t\t\t\t\tcolor: $color-primary;\n\t\t\t\t}\n\n\t\t\t\t.execute-icon {\n\t\t\t\t\tposition: relative;\n\t\t\t\t\ttop: 2px;\n\t\t\t\t\tfont-size: 1.2em;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t&.is-touch-device .node-options {\n\t\t\tleft: -25px;\n\t\t\twidth: 150px;\n\n\t\t\t.option.touch {\n\t\t\t\tdisplay: initial;\n\t\t\t}\n\t\t}\n\t}\n\t&--trigger .node-default .node-box {\n\t\tborder-radius: 32px 8px 8px 32px;\n\t}\n\t.trigger-icon {\n\t\tposition: absolute;\n\t\tright: 100%;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\tmargin: auto;\n\t\tcolor: var(--color-primary);\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\theight: fit-content;\n\t\t// Increase click radius of the bolt icon\n\t\tpadding: var(--spacing-2xs);\n\t}\n}\n\n.select-background {\n\tdisplay: block;\n\tbackground-color: hsla(\n\t\tvar(--color-foreground-base-h),\n\t\tvar(--color-foreground-base-s),\n\t\tvar(--color-foreground-base-l),\n\t\t60%\n\t);\n\tborder-radius: var(--border-radius-xlarge);\n\toverflow: hidden;\n\tposition: absolute;\n\tleft: -8px !important;\n\ttop: -8px !important;\n\theight: 116px;\n\twidth: 116px !important;\n\n\t.node-wrapper--trigger & {\n\t\tborder-radius: 36px 8px 8px 36px;\n\t}\n}\n\n.disabled-linethrough {\n\tborder: 1px solid var(--color-foreground-dark);\n\tposition: absolute;\n\ttop: 49px;\n\tleft: -3px;\n\twidth: 111px;\n\tpointer-events: none;\n\n\t&.success {\n\t\tborder-color: var(--color-success-light);\n\t}\n}\n</style>\n\n<style lang=\"scss\">\n.jtk-endpoint {\n\tz-index: 2;\n}\n\n.node-trigger-tooltip {\n\t&__wrapper {\n\t\ttop: -22px;\n\t\tleft: 50px;\n\t\tposition: relative;\n\n\t\t&--item {\n\t\t\tmax-width: 160px;\n\t\t\tposition: fixed;\n\t\t\tz-index: 0 !important;\n\t\t}\n\t}\n}\n.dot-output-endpoint:hover circle {\n\tfill: var(--color-primary);\n}\n/** connector */\n.jtk-connector {\n\tz-index: 3;\n}\n\n.jtk-floating-endpoint {\n\topacity: 0;\n}\n\n.jtk-connector path {\n\ttransition: stroke 0.1s ease-in-out;\n}\n\n.jtk-overlay {\n\tz-index: 3;\n}\n.jtk-connector {\n\tz-index: 4;\n}\n.node-input-endpoint-label,\n.node-output-endpoint-label,\n.connection-run-items-label {\n\tz-index: 5;\n}\n.jtk-connector.jtk-hover {\n\tz-index: 6;\n}\n\n.jtk-endpoint.plus-endpoint {\n\tz-index: 6;\n}\n.jtk-endpoint.dot-output-endpoint {\n\tz-index: 7;\n\toverflow: auto;\n}\n\n.disabled-linethrough {\n\tz-index: 8;\n}\n\n.jtk-drag-active.dot-output-endpoint,\n.jtk-drag-active.rect-input-endpoint {\n\tz-index: 9;\n}\n.rect-input-endpoint > * {\n\tpointer-events: none;\n}\n\n.connection-actions {\n\tz-index: 100;\n}\n\n.node-options {\n\tz-index: 10;\n}\n\n.drop-add-node-label {\n\tz-index: 10;\n}\n\n.jtk-connector.success:not(.jtk-hover) {\n\tpath:not(.jtk-connector-outline) {\n\t\tstroke: var(--color-success-light);\n\t}\n\tpath[jtk-overlay-id='endpoint-arrow'],\n\tpath[jtk-overlay-id='midpoint-arrow'] {\n\t\tfill: var(--color-success-light);\n\t}\n}\n</style>\n\n<style lang=\"scss\">\n:root {\n\t--endpoint-size-small: 14px;\n\t--endpoint-size-medium: 18px;\n\t--stalk-size: 40px;\n\t--stalk-success-size: 87px;\n\t--stalk-success-size-without-label: 40px;\n\t--stalk-long-size: 127px;\n\t--plus-endpoint-box-size: 24px;\n\t--plus-endpoint-box-size-small: 17px;\n}\n\n.plus-svg-circle {\n\tz-index: 111;\n\tcircle {\n\t\tstroke: var(--color-foreground-xdark);\n\t\tstroke-width: 2px;\n\t\tfill: var(--color-foreground-xdark);\n\t}\n\n\t&:hover {\n\t\tcircle {\n\t\t\tstroke: var(--color-primary);\n\t\t\tfill: var(--color-primary);\n\t\t}\n\t}\n}\n.plus-stalk {\n\twidth: calc(var(--stalk-size) + 2px);\n\tborder: 1px solid var(--color-foreground-dark);\n\tmargin-left: calc(var(--stalk-size) / 2);\n\tz-index: 3;\n\t&.ep-success {\n\t\tborder-color: var(--color-success-light);\n\n\t\t&:after {\n\t\t\tcontent: attr(data-label);\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 100%;\n\t\t\tmargin: auto;\n\t\t\tmargin-bottom: 2px;\n\t\t\ttext-align: center;\n\n\t\t\tline-height: 1.3em;\n\t\t\tfont-size: var(--font-size-s);\n\t\t\tfont-weight: var(--font-weight-regular);\n\t\t\tcolor: var(--color-success);\n\t\t}\n\t}\n}\n.connection-run-items-label {\n\t// Disable points events so that the label does not block the connection\n\t// mouse over event.\n\tpointer-events: none;\n\tspan {\n\t\tborder-radius: 7px;\n\t\tbackground-color: hsla(\n\t\t\tvar(--color-canvas-background-h),\n\t\t\tvar(--color-canvas-background-s),\n\t\t\tvar(--color-canvas-background-l),\n\t\t\t0.85\n\t\t);\n\t\tline-height: 1.3em;\n\t\tpadding: 0px 3px;\n\t\twhite-space: nowrap;\n\t\tfont-size: var(--font-size-s);\n\t\tfont-weight: var(--font-weight-regular);\n\t\tcolor: var(--color-success);\n\t\tmargin-top: -15px;\n\n\t\t&.floating {\n\t\t\tposition: absolute;\n\t\t\ttop: -6px;\n\t\t\ttransform: translateX(-50%);\n\t\t}\n\t}\n}\n\n.connection-input-name-label {\n\tposition: relative;\n\n\tspan {\n\t\tposition: absolute;\n\t\ttop: -10px;\n\t\tleft: -60px;\n\t}\n}\n\n.plus-endpoint {\n\tcursor: pointer;\n\tz-index: 10;\n\tmargin-left: calc((var(--stalk-size) + var(--plus-endpoint-box-size) / 2) - 1px);\n\tg {\n\t\tfill: var(--color-background-xlight);\n\t\tpointer-events: none;\n\t}\n\n\t&:hover {\n\t\tpath {\n\t\t\tfill: var(--color-primary);\n\t\t}\n\t\trect {\n\t\t\tstroke: var(--color-primary);\n\t\t}\n\t}\n\tpath {\n\t\tfill: var(--color-foreground-xdark);\n\t}\n\trect {\n\t\tstroke: var(--color-foreground-xdark);\n\t}\n\n\t&.small {\n\t\tmargin-left: calc((var(--stalk-size) + var(--plus-endpoint-box-size-small) / 2));\n\t\tg {\n\t\t\ttransform: scale(0.75);\n\t\t\ttransform-origin: center;\n\t\t}\n\t\trect {\n\t\t\tstroke-width: 2.5;\n\t\t}\n\t}\n\t&:hover .plus-container {\n\t\tcolor: var(--color-primary);\n\t\tborder: 2px solid var(--color-primary);\n\t}\n\t&:hover .drop-hover-message {\n\t\tdisplay: block;\n\t}\n\n\t&.hidden {\n\t\tdisplay: none;\n\t}\n}\n\n.node-input-endpoint-label,\n.node-output-endpoint-label {\n\tbackground-color: hsla(\n\t\tvar(--color-canvas-background-h),\n\t\tvar(--color-canvas-background-s),\n\t\tvar(--color-canvas-background-l),\n\t\t0.85\n\t);\n\tborder-radius: 7px;\n\tfont-size: 0.7em;\n\tpadding: 2px;\n\twhite-space: nowrap;\n}\n\n.node-output-endpoint-label {\n\tmargin-left: calc(var(--endpoint-size-small) + var(--spacing-2xs));\n}\n.node-input-endpoint-label {\n\ttext-align: right;\n\tmargin-left: -25px;\n\n\t&--moved {\n\t\tmargin-left: -40px;\n\t}\n}\n.hover-message.jtk-overlay {\n\t--hover-message-width: 110px;\n\tfont-weight: var(--font-weight-bold);\n\tfont-size: var(--font-size-2xs);\n\tline-height: var(--font-line-height-regular);\n\tcolor: var(--color-text-light);\n\twidth: var(--hover-message-width);\n\tmargin-left: calc(\n\t\t(var(--hover-message-width) / 2) + var(--stalk-size) + var(--plus-endpoint-box-size) +\n\t\t\tvar(--spacing-2xs)\n\t);\n\topacity: 0;\n\tpointer-events: none;\n\t&.small {\n\t\tmargin-left: calc(\n\t\t\t(var(--hover-message-width) / 2) + var(--stalk-size) + var(--plus-endpoint-box-size-small) +\n\t\t\t\tvar(--spacing-2xs)\n\t\t);\n\t}\n\t&.visible {\n\t\tpointer-events: all;\n\t\topacity: 1;\n\t}\n}\n.long-stalk {\n\t--stalk-size: var(--stalk-long-size);\n}\n.ep-success {\n\t--stalk-size: var(--stalk-success-size);\n}\n.ep-success--without-label {\n\t--stalk-size: var(--stalk-success-size-without-label);\n}\n</style>\n","<template>\n\t<div\n\t\tclass=\"sticky-wrapper\"\n\t\t:id=\"nodeId\"\n\t\t:ref=\"data.name\"\n\t\t:style=\"stickyPosition\"\n\t\t:data-name=\"data.name\"\n\t\tdata-test-id=\"sticky\"\n\t>\n\t\t<div\n\t\t\t:class=\"{\n\t\t\t\t'sticky-default': true,\n\t\t\t\t'touch-active': isTouchActive,\n\t\t\t\t'is-touch-device': isTouchDevice,\n\t\t\t}\"\n\t\t\t:style=\"stickySize\"\n\t\t>\n\t\t\t<div class=\"select-sticky-background\" v-show=\"isSelected\" />\n\t\t\t<div\n\t\t\t\tclass=\"sticky-box\"\n\t\t\t\t@click.left=\"mouseLeftClick\"\n\t\t\t\tv-touch:start=\"touchStart\"\n\t\t\t\tv-touch:end=\"touchEnd\"\n\t\t\t>\n\t\t\t\t<n8n-sticky\n\t\t\t\t\t:content.sync=\"node.parameters.content\"\n\t\t\t\t\t:height=\"node.parameters.height\"\n\t\t\t\t\t:width=\"node.parameters.width\"\n\t\t\t\t\t:scale=\"nodeViewScale\"\n\t\t\t\t\t:id=\"node.id\"\n\t\t\t\t\t:readOnly=\"isReadOnly\"\n\t\t\t\t\t:defaultText=\"defaultText\"\n\t\t\t\t\t:editMode=\"isActive && !isReadOnly\"\n\t\t\t\t\t:gridSize=\"gridSize\"\n\t\t\t\t\t@input=\"onInputChange\"\n\t\t\t\t\t@edit=\"onEdit\"\n\t\t\t\t\t@resizestart=\"onResizeStart\"\n\t\t\t\t\t@resize=\"onResize\"\n\t\t\t\t\t@resizeend=\"onResizeEnd\"\n\t\t\t\t\t@markdown-click=\"onMarkdownClick\"\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div v-show=\"showActions\" class=\"sticky-options no-select-on-click\">\n\t\t\t\t<div\n\t\t\t\t\tv-touch:tap=\"deleteNode\"\n\t\t\t\t\tclass=\"option\"\n\t\t\t\t\tdata-test-id=\"delete-sticky\"\n\t\t\t\t\t:title=\"$locale.baseText('node.deleteNode')\"\n\t\t\t\t>\n\t\t\t\t\t<font-awesome-icon icon=\"trash\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\n\nimport mixins from 'vue-typed-mixins';\nimport { externalHooks } from '@/mixins/externalHooks';\nimport { nodeBase } from '@/mixins/nodeBase';\nimport { nodeHelpers } from '@/mixins/nodeHelpers';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport { isNumber, isString } from '@/utils';\nimport type {\n\tINodeUi,\n\tINodeUpdatePropertiesInformation,\n\tIUpdateInformation,\n\tXYPosition,\n} from '@/Interface';\n\nimport type { INodeTypeDescription } from 'n8n-workflow';\nimport { QUICKSTART_NOTE_NAME } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\n\nexport default mixins(externalHooks, nodeBase, nodeHelpers, workflowHelpers).extend({\n\tname: 'Sticky',\n\tprops: {\n\t\tnodeViewScale: {\n\t\t\ttype: Number,\n\t\t},\n\t\tgridSize: {\n\t\t\ttype: Number,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useNodeTypesStore, useNDVStore, useUIStore, useWorkflowsStore),\n\t\tdefaultText(): string {\n\t\t\tif (!this.nodeType) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tconst properties = this.nodeType.properties;\n\t\t\tconst content = properties.find((property) => property.name === 'content');\n\n\t\t\treturn content && isString(content.default) ? content.default : '';\n\t\t},\n\t\tisSelected(): boolean {\n\t\t\treturn (\n\t\t\t\tthis.uiStore.getSelectedNodes.find((node: INodeUi) => node.name === this.data.name) !==\n\t\t\t\tundefined\n\t\t\t);\n\t\t},\n\t\tnodeType(): INodeTypeDescription | null {\n\t\t\treturn this.data && this.nodeTypesStore.getNodeType(this.data.type, this.data.typeVersion);\n\t\t},\n\t\tnode(): INodeUi | null {\n\t\t\t// same as this.data but reactive..\n\t\t\treturn this.workflowsStore.getNodeByName(this.name);\n\t\t},\n\t\tposition(): XYPosition {\n\t\t\tif (this.node) {\n\t\t\t\treturn this.node.position;\n\t\t\t} else {\n\t\t\t\treturn [0, 0];\n\t\t\t}\n\t\t},\n\t\theight(): number {\n\t\t\treturn this.node && isNumber(this.node.parameters.height) ? this.node.parameters.height : 0;\n\t\t},\n\t\twidth(): number {\n\t\t\treturn this.node && isNumber(this.node.parameters.width) ? this.node.parameters.width : 0;\n\t\t},\n\t\tstickySize(): object {\n\t\t\tconst returnStyles: {\n\t\t\t\t[key: string]: string | number;\n\t\t\t} = {\n\t\t\t\theight: this.height + 'px',\n\t\t\t\twidth: this.width + 'px',\n\t\t\t};\n\n\t\t\treturn returnStyles;\n\t\t},\n\t\tstickyPosition(): object {\n\t\t\tconst returnStyles: {\n\t\t\t\t[key: string]: string | number;\n\t\t\t} = {\n\t\t\t\tleft: this.position[0] + 'px',\n\t\t\t\ttop: this.position[1] + 'px',\n\t\t\t\tzIndex: this.isActive ? 9999999 : -1 * Math.floor((this.height * this.width) / 1000),\n\t\t\t};\n\n\t\t\treturn returnStyles;\n\t\t},\n\t\tshowActions(): boolean {\n\t\t\treturn !(this.hideActions || this.isReadOnly || this.workflowRunning || this.isResizing);\n\t\t},\n\t\tworkflowRunning(): boolean {\n\t\t\treturn this.uiStore.isActionActive('workflowRunning');\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisResizing: false,\n\t\t\tisTouchActive: false,\n\t\t};\n\t},\n\tmethods: {\n\t\tdeleteNode() {\n\t\t\tVue.nextTick(() => {\n\t\t\t\t// Wait a tick else vue causes problems because the data is gone\n\t\t\t\tthis.$emit('removeNode', this.data.name);\n\t\t\t});\n\t\t},\n\t\tonEdit(edit: boolean) {\n\t\t\tif (edit && !this.isActive && this.node) {\n\t\t\t\tthis.ndvStore.activeNodeName = this.node.name;\n\t\t\t} else if (this.isActive && !edit) {\n\t\t\t\tthis.ndvStore.activeNodeName = null;\n\t\t\t}\n\t\t},\n\t\tonMarkdownClick(link: HTMLAnchorElement, event: Event) {\n\t\t\tif (link) {\n\t\t\t\tconst isOnboardingNote = this.name === QUICKSTART_NOTE_NAME;\n\t\t\t\tconst isWelcomeVideo = link.querySelector('img[alt=\"n8n quickstart video\"');\n\t\t\t\tconst type =\n\t\t\t\t\tisOnboardingNote && isWelcomeVideo\n\t\t\t\t\t\t? 'welcome_video'\n\t\t\t\t\t\t: isOnboardingNote && link.getAttribute('href') === '/templates'\n\t\t\t\t\t\t? 'templates'\n\t\t\t\t\t\t: 'other';\n\n\t\t\t\tthis.$telemetry.track('User clicked note link', { type });\n\t\t\t}\n\t\t},\n\t\tonInputChange(content: string) {\n\t\t\tthis.setParameters({ content });\n\t\t},\n\t\tonResizeStart() {\n\t\t\tthis.isResizing = true;\n\t\t\tif (!this.isSelected && this.node) {\n\t\t\t\tthis.$emit('nodeSelected', this.node.name, false, true);\n\t\t\t}\n\t\t},\n\t\tonResize({ height, width, dX, dY }: { width: number; height: number; dX: number; dY: number }) {\n\t\t\tif (!this.node) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (dX !== 0 || dY !== 0) {\n\t\t\t\tthis.setPosition([this.node.position[0] + (dX || 0), this.node.position[1] + (dY || 0)]);\n\t\t\t}\n\n\t\t\tthis.setParameters({ height, width });\n\t\t},\n\t\tonResizeEnd() {\n\t\t\tthis.isResizing = false;\n\t\t},\n\t\tsetParameters(params: { content?: string; height?: number; width?: number }) {\n\t\t\tif (this.node) {\n\t\t\t\tconst nodeParameters = {\n\t\t\t\t\tcontent: isString(params.content) ? params.content : this.node.parameters.content,\n\t\t\t\t\theight: isNumber(params.height) ? params.height : this.node.parameters.height,\n\t\t\t\t\twidth: isNumber(params.width) ? params.width : this.node.parameters.width,\n\t\t\t\t};\n\n\t\t\t\tconst updateInformation: IUpdateInformation = {\n\t\t\t\t\tkey: this.node.id,\n\t\t\t\t\tname: this.node.name,\n\t\t\t\t\tvalue: nodeParameters,\n\t\t\t\t};\n\n\t\t\t\tthis.workflowsStore.setNodeParameters(updateInformation);\n\t\t\t}\n\t\t},\n\t\tsetPosition(position: XYPosition) {\n\t\t\tif (!this.node) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst updateInformation: INodeUpdatePropertiesInformation = {\n\t\t\t\tname: this.node.name,\n\t\t\t\tproperties: {\n\t\t\t\t\tposition,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tthis.workflowsStore.updateNodeProperties(updateInformation);\n\t\t},\n\t\ttouchStart() {\n\t\t\tif (this.isTouchDevice === true && this.isMacOs === false && this.isTouchActive === false) {\n\t\t\t\tthis.isTouchActive = true;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.isTouchActive = false;\n\t\t\t\t}, 2000);\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.sticky-wrapper {\n\tposition: absolute;\n\n\t.sticky-default {\n\t\t.sticky-box {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t}\n\n\t\t&.touch-active,\n\t\t&:hover {\n\t\t\t.sticky-options {\n\t\t\t\tdisplay: flex;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t}\n\n\t\t.sticky-options {\n\t\t\tdisplay: none;\n\t\t\tjustify-content: flex-start;\n\t\t\tposition: absolute;\n\t\t\ttop: -25px;\n\t\t\tleft: -8px;\n\t\t\theight: 26px;\n\t\t\tfont-size: 0.9em;\n\t\t\ttext-align: left;\n\t\t\tz-index: 10;\n\t\t\tcolor: #aaa;\n\t\t\ttext-align: center;\n\n\t\t\t.option {\n\t\t\t\twidth: 28px;\n\t\t\t\tdisplay: inline-block;\n\n\t\t\t\t&.touch {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t&:hover {\n\t\t\t\t\tcolor: $color-primary;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t&.is-touch-device .sticky-options {\n\t\t\tleft: -25px;\n\t\t\twidth: 150px;\n\n\t\t\t.option.touch {\n\t\t\t\tdisplay: initial;\n\t\t\t}\n\t\t}\n\t}\n}\n\n.select-sticky-background {\n\tdisplay: block;\n\tposition: absolute;\n\tbackground-color: hsla(\n\t\tvar(--color-foreground-base-h),\n\t\tvar(--color-foreground-base-s),\n\t\tvar(--color-foreground-base-l),\n\t\t60%\n\t);\n\tborder-radius: var(--border-radius-xlarge);\n\toverflow: hidden;\n\theight: calc(100% + 16px);\n\twidth: calc(100% + 16px);\n\tleft: -8px;\n\ttop: -8px;\n\tz-index: 0;\n}\n</style>\n","<template>\n\t<div\n\t\t:class=\"$style.canvasAddButton\"\n\t\t:style=\"containerCssVars\"\n\t\tref=\"container\"\n\t\tdata-test-id=\"canvas-add-button\"\n\t>\n\t\t<n8n-tooltip\n\t\t\tplacement=\"top\"\n\t\t\t:value=\"showTooltip\"\n\t\t\tmanual\n\t\t\t:disabled=\"nodeCreatorStore.showScrim\"\n\t\t\t:popper-class=\"$style.tooltip\"\n\t\t\t:open-delay=\"700\"\n\t\t>\n\t\t\t<button :class=\"$style.button\" @click=\"$emit('click')\" data-test-id=\"canvas-plus-button\">\n\t\t\t\t<font-awesome-icon icon=\"plus\" size=\"lg\" />\n\t\t\t</button>\n\t\t\t<template #content>\n\t\t\t\t<p v-text=\"$locale.baseText('nodeView.canvasAddButton.addATriggerNodeBeforeExecuting')\" />\n\t\t\t</template>\n\t\t</n8n-tooltip>\n\t\t<p :class=\"$style.label\" v-text=\"$locale.baseText('nodeView.canvasAddButton.addFirstStep')\" />\n\t</div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport type { XYPosition } from '@/Interface';\nimport { useNodeCreatorStore } from '@/stores/nodeCreator.store';\n\nexport interface Props {\n\tshowTooltip: boolean;\n\tposition: XYPosition;\n}\n\nconst props = defineProps<Props>();\n\nconst nodeCreatorStore = useNodeCreatorStore();\nconst containerCssVars = computed(() => ({\n\t'--trigger-placeholder-left-position': `${props.position[0]}px`,\n\t'--trigger-placeholder-top-position': `${props.position[1]}px`,\n}));\n</script>\n\n<style lang=\"scss\" module>\n.canvasAddButton {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 100px;\n\theight: 100px;\n\tposition: absolute;\n\ttop: var(--trigger-placeholder-top-position);\n\tleft: var(--trigger-placeholder-left-position);\n\t// We have to increase z-index to make sure it's higher than selecting box in NodeView\n\t// otherwise the clics wouldn't register\n\tz-index: 101;\n\n\t&:hover .button svg path {\n\t\tfill: var(--color-primary);\n\t}\n}\n\n.button {\n\tbackground: var(--color-foreground-xlight);\n\tborder: 2px dashed var(--color-foreground-xdark);\n\tborder-radius: 8px;\n\tpadding: 0;\n\n\tmin-width: 100px;\n\tmin-height: 100px;\n\tcursor: pointer;\n\n\tsvg {\n\t\twidth: 26px !important;\n\t\theight: 40px;\n\t\tpath {\n\t\t\tfill: var(--color-foreground-xdark);\n\t\t}\n\t}\n}\n\n:root .tooltip {\n\tmax-width: 180px;\n}\n\n.label {\n\twidth: max-content;\n\tfont-weight: var(--font-weight-bold);\n\tfont-size: var(--font-size-m);\n\tline-height: var(--font-line-height-xloose);\n\tcolor: var(--color-text-dark);\n\tmargin-top: var(--spacing-2xs);\n}\n</style>\n","<template>\n\t<div :class=\"$style['content']\">\n\t\t<div\n\t\t\tclass=\"node-view-root do-not-select\"\n\t\t\tid=\"node-view-root\"\n\t\t\tdata-test-id=\"node-view-root\"\n\t\t\t@dragover=\"onDragOver\"\n\t\t\t@drop=\"onDrop\"\n\t\t>\n\t\t\t<div\n\t\t\t\tclass=\"node-view-wrapper\"\n\t\t\t\t:class=\"workflowClasses\"\n\t\t\t\t@touchstart=\"mouseDown\"\n\t\t\t\t@touchend=\"mouseUp\"\n\t\t\t\t@touchmove=\"mouseMoveNodeWorkflow\"\n\t\t\t\t@mousedown=\"mouseDown\"\n\t\t\t\tv-touch:tap=\"touchTap\"\n\t\t\t\t@mouseup=\"mouseUp\"\n\t\t\t\t@wheel=\"canvasStore.wheelScroll\"\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tid=\"node-view-background\"\n\t\t\t\t\tclass=\"node-view-background\"\n\t\t\t\t\t:style=\"backgroundStyle\"\n\t\t\t\t\tdata-test-id=\"node-view-background\"\n\t\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tid=\"node-view\"\n\t\t\t\t\tclass=\"node-view\"\n\t\t\t\t\t:style=\"workflowStyle\"\n\t\t\t\t\tref=\"nodeView\"\n\t\t\t\t\tdata-test-id=\"node-view\"\n\t\t\t\t>\n\t\t\t\t\t<canvas-add-button\n\t\t\t\t\t\t:style=\"canvasAddButtonStyle\"\n\t\t\t\t\t\t@click=\"showTriggerCreator(NODE_CREATOR_OPEN_SOURCES.TRIGGER_PLACEHOLDER_BUTTON)\"\n\t\t\t\t\t\tv-show=\"showCanvasAddButton\"\n\t\t\t\t\t\t:showTooltip=\"!containsTrigger && showTriggerMissingTooltip\"\n\t\t\t\t\t\t:position=\"canvasStore.canvasAddButtonPosition\"\n\t\t\t\t\t\tref=\"canvasAddButton\"\n\t\t\t\t\t\t@hook:mounted=\"canvasStore.setRecenteredCanvasAddButtonPosition\"\n\t\t\t\t\t\tdata-test-id=\"canvas-add-button\"\n\t\t\t\t\t/>\n\t\t\t\t\t<template v-for=\"nodeData in nodes\">\n\t\t\t\t\t\t<node\n\t\t\t\t\t\t\tv-if=\"nodeData.type !== STICKY_NODE_TYPE\"\n\t\t\t\t\t\t\t@duplicateNode=\"duplicateNode\"\n\t\t\t\t\t\t\t@deselectAllNodes=\"deselectAllNodes\"\n\t\t\t\t\t\t\t@deselectNode=\"nodeDeselectedByName\"\n\t\t\t\t\t\t\t@nodeSelected=\"nodeSelectedByName\"\n\t\t\t\t\t\t\t@removeNode=\"(name) => removeNode(name, true)\"\n\t\t\t\t\t\t\t@runWorkflow=\"onRunNode\"\n\t\t\t\t\t\t\t@moved=\"onNodeMoved\"\n\t\t\t\t\t\t\t@run=\"onNodeRun\"\n\t\t\t\t\t\t\t:key=\"`${nodeData.id}_node`\"\n\t\t\t\t\t\t\t:name=\"nodeData.name\"\n\t\t\t\t\t\t\t:isReadOnly=\"isReadOnly\"\n\t\t\t\t\t\t\t:instance=\"instance\"\n\t\t\t\t\t\t\t:isActive=\"!!activeNode && activeNode.name === nodeData.name\"\n\t\t\t\t\t\t\t:hideActions=\"pullConnActive\"\n\t\t\t\t\t\t\t:isProductionExecutionPreview=\"isProductionExecutionPreview\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<template #custom-tooltip>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tv-text=\"\n\t\t\t\t\t\t\t\t\t\t$locale.baseText('nodeView.placeholderNode.addTriggerNodeBeforeExecuting')\n\t\t\t\t\t\t\t\t\t\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<sticky\n\t\t\t\t\t\t\tv-else\n\t\t\t\t\t\t\t@deselectAllNodes=\"deselectAllNodes\"\n\t\t\t\t\t\t\t@deselectNode=\"nodeDeselectedByName\"\n\t\t\t\t\t\t\t@nodeSelected=\"nodeSelectedByName\"\n\t\t\t\t\t\t\t@removeNode=\"(name) => removeNode(name, true)\"\n\t\t\t\t\t\t\t:key=\"`${nodeData.id}_sticky`\"\n\t\t\t\t\t\t\t:name=\"nodeData.name\"\n\t\t\t\t\t\t\t:isReadOnly=\"isReadOnly\"\n\t\t\t\t\t\t\t:instance=\"instance\"\n\t\t\t\t\t\t\t:isActive=\"!!activeNode && activeNode.name === nodeData.name\"\n\t\t\t\t\t\t\t:nodeViewScale=\"nodeViewScale\"\n\t\t\t\t\t\t\t:gridSize=\"GRID_SIZE\"\n\t\t\t\t\t\t\t:hideActions=\"pullConnActive\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</template>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<node-details-view\n\t\t\t\t:readOnly=\"isReadOnly\"\n\t\t\t\t:renaming=\"renamingActive\"\n\t\t\t\t:isProductionExecutionPreview=\"isProductionExecutionPreview\"\n\t\t\t\t@valueChanged=\"valueChanged\"\n\t\t\t\t@stopExecution=\"stopExecution\"\n\t\t\t\t@saveKeyboardShortcut=\"onSaveKeyboardShortcut\"\n\t\t\t/>\n\t\t\t<node-creation\n\t\t\t\tv-if=\"!isReadOnly\"\n\t\t\t\t:create-node-active=\"createNodeActive\"\n\t\t\t\t:node-view-scale=\"nodeViewScale\"\n\t\t\t\t@toggleNodeCreator=\"onToggleNodeCreator\"\n\t\t\t\t@addNode=\"onAddNode\"\n\t\t\t/>\n\t\t\t<canvas-controls />\n\t\t\t<div class=\"workflow-execute-wrapper\" v-if=\"!isReadOnly\">\n\t\t\t\t<span\n\t\t\t\t\t@mouseenter=\"showTriggerMissingToltip(true)\"\n\t\t\t\t\t@mouseleave=\"showTriggerMissingToltip(false)\"\n\t\t\t\t\t@click=\"onRunContainerClick\"\n\t\t\t\t>\n\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t@click.stop=\"onRunWorkflow\"\n\t\t\t\t\t\t:loading=\"workflowRunning\"\n\t\t\t\t\t\t:label=\"runButtonText\"\n\t\t\t\t\t\t:title=\"$locale.baseText('nodeView.executesTheWorkflowFromATriggerNode')\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\ticon=\"play-circle\"\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t:disabled=\"isExecutionDisabled\"\n\t\t\t\t\t\tdata-test-id=\"execute-workflow-button\"\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\n\t\t\t\t<n8n-icon-button\n\t\t\t\t\tv-if=\"workflowRunning === true && !executionWaitingForWebhook\"\n\t\t\t\t\ticon=\"stop\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tclass=\"stop-execution\"\n\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t:title=\"\n\t\t\t\t\t\tstopExecutionInProgress\n\t\t\t\t\t\t\t? $locale.baseText('nodeView.stoppingCurrentExecution')\n\t\t\t\t\t\t\t: $locale.baseText('nodeView.stopCurrentExecution')\n\t\t\t\t\t\"\n\t\t\t\t\t:loading=\"stopExecutionInProgress\"\n\t\t\t\t\t@click.stop=\"stopExecution\"\n\t\t\t\t\tdata-test-id=\"stop-execution-button\"\n\t\t\t\t/>\n\n\t\t\t\t<n8n-icon-button\n\t\t\t\t\tv-if=\"workflowRunning === true && executionWaitingForWebhook === true\"\n\t\t\t\t\tclass=\"stop-execution\"\n\t\t\t\t\ticon=\"stop\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t:title=\"$locale.baseText('nodeView.stopWaitingForWebhookCall')\"\n\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\t@click.stop=\"stopWaitingForWebhook\"\n\t\t\t\t\tdata-test-id=\"stop-execution-waiting-for-webhook-button\"\n\t\t\t\t/>\n\n\t\t\t\t<n8n-icon-button\n\t\t\t\t\tv-if=\"!isReadOnly && workflowExecution && !workflowRunning && !allTriggersDisabled\"\n\t\t\t\t\t:title=\"$locale.baseText('nodeView.deletesTheCurrentExecutionData')\"\n\t\t\t\t\ticon=\"trash\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t@click.stop=\"clearExecutionData\"\n\t\t\t\t\tdata-test-id=\"clear-execution-data-button\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport { mapStores } from 'pinia';\n\nimport type {\n\tEndpoint,\n\tConnection,\n\tConnectionEstablishedParams,\n\tBeforeDropParams,\n\tConnectionDetachedParams,\n\tConnectionMovedParams,\n} from '@jsplumb/core';\nimport {\n\tEVENT_CONNECTION,\n\tEVENT_CONNECTION_DETACHED,\n\tEVENT_CONNECTION_MOVED,\n\tINTERCEPT_BEFORE_DROP,\n} from '@jsplumb/core';\nimport type { MessageBoxInputData } from 'element-ui/types/message-box';\n\nimport {\n\tFIRST_ONBOARDING_PROMPT_TIMEOUT,\n\tMAIN_HEADER_TABS,\n\tMODAL_CANCEL,\n\tMODAL_CLOSE,\n\tMODAL_CONFIRMED,\n\tNODE_OUTPUT_DEFAULT_KEY,\n\tONBOARDING_CALL_SIGNUP_MODAL_KEY,\n\tONBOARDING_PROMPT_TIMEBOX,\n\tPLACEHOLDER_EMPTY_WORKFLOW_ID,\n\tQUICKSTART_NOTE_NAME,\n\tSTART_NODE_TYPE,\n\tSTICKY_NODE_TYPE,\n\tVIEWS,\n\tWEBHOOK_NODE_TYPE,\n\tTRIGGER_NODE_CREATOR_VIEW,\n\tEnterpriseEditionFeature,\n\tREGULAR_NODE_CREATOR_VIEW,\n\tMANUAL_TRIGGER_NODE_TYPE,\n\tNODE_CREATOR_OPEN_SOURCES,\n} from '@/constants';\nimport { copyPaste } from '@/mixins/copyPaste';\nimport { externalHooks } from '@/mixins/externalHooks';\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport { moveNodeWorkflow } from '@/mixins/moveNodeWorkflow';\nimport useGlobalLinkActions from '@/composables/useGlobalLinkActions';\nimport useCanvasMouseSelect from '@/composables/useCanvasMouseSelect';\nimport { showMessage } from '@/mixins/showMessage';\nimport { useTitleChange } from '@/composables/useTitleChange';\nimport { useUniqueNodeName } from '@/composables/useUniqueNodeName';\nimport { useI18n } from '@/composables/useI18n';\n\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport { workflowRun } from '@/mixins/workflowRun';\n\nimport NodeDetailsView from '@/components/NodeDetailsView.vue';\nimport Node from '@/components/Node.vue';\nimport NodeSettings from '@/components/NodeSettings.vue';\nimport Sticky from '@/components/Sticky.vue';\nimport CanvasAddButton from './CanvasAddButton.vue';\nimport mixins from 'vue-typed-mixins';\nimport { v4 as uuid } from 'uuid';\nimport type {\n\tIConnection,\n\tIConnections,\n\tIDataObject,\n\tIExecutionsSummary,\n\tINode,\n\tINodeConnections,\n\tINodeCredentialsDetails,\n\tINodeIssues,\n\tINodeTypeDescription,\n\tINodeTypeNameVersion,\n\tIPinData,\n\tIRun,\n\tITaskData,\n\tITelemetryTrackProperties,\n\tIWorkflowBase,\n\tWorkflow,\n} from 'n8n-workflow';\nimport { deepCopy, NodeHelpers, TelemetryHelpers } from 'n8n-workflow';\nimport type {\n\tICredentialsResponse,\n\tIExecutionResponse,\n\tIWorkflowDb,\n\tIWorkflowData,\n\tINodeUi,\n\tIUpdateInformation,\n\tIWorkflowDataUpdate,\n\tXYPosition,\n\tIPushDataExecutionFinished,\n\tITag,\n\tINewWorkflowData,\n\tIWorkflowTemplate,\n\tIWorkflowToShare,\n\tIUser,\n\tINodeUpdatePropertiesInformation,\n\tNodeCreatorOpenSource,\n} from '@/Interface';\n\nimport { debounceHelper } from '@/mixins/debounce';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport type { Route, RawLocation } from 'vue-router';\nimport { dataPinningEventBus, nodeViewEventBus } from '@/event-bus';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport { useSegment } from '@/stores/segment.store';\nimport { useTemplatesStore } from '@/stores/templates.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport { useCredentialsStore } from '@/stores/credentials.store';\nimport { useTagsStore } from '@/stores/tags.store';\nimport { useNodeCreatorStore } from '@/stores/nodeCreator.store';\nimport { useCanvasStore } from '@/stores/canvas.store';\nimport { useWorkflowsEEStore } from '@/stores/workflows.ee.store';\nimport { useEnvironmentsStore } from '@/stores';\nimport * as NodeViewUtils from '@/utils/nodeViewUtils';\nimport { getAccountAge, getConnectionInfo, getNodeViewTab } from '@/utils';\nimport { useHistoryStore } from '@/stores/history.store';\nimport {\n\tAddConnectionCommand,\n\tAddNodeCommand,\n\tMoveNodeCommand,\n\tRemoveConnectionCommand,\n\tRemoveNodeCommand,\n\tRenameNodeCommand,\n\thistoryBus,\n} from '@/models/history';\nimport type { BrowserJsPlumbInstance } from '@jsplumb/browser-ui';\nimport {\n\tEVENT_ENDPOINT_MOUSEOVER,\n\tEVENT_ENDPOINT_MOUSEOUT,\n\tEVENT_DRAG_MOVE,\n\tEVENT_CONNECTION_DRAG,\n\tEVENT_CONNECTION_ABORT,\n\tEVENT_CONNECTION_MOUSEOUT,\n\tEVENT_CONNECTION_MOUSEOVER,\n\tready,\n} from '@jsplumb/browser-ui';\nimport type { N8nPlusEndpoint } from '@/plugins/endpoints/N8nPlusEndpointType';\nimport {\n\tN8nPlusEndpointType,\n\tEVENT_PLUS_ENDPOINT_CLICK,\n} from '@/plugins/endpoints/N8nPlusEndpointType';\n\ninterface AddNodeOptions {\n\tposition?: XYPosition;\n\tdragAndDrop?: boolean;\n}\n\nconst NodeCreator = async () => import('@/components/Node/NodeCreator/NodeCreator.vue');\nconst NodeCreation = async () => import('@/components/Node/NodeCreation.vue');\nconst CanvasControls = async () => import('@/components/CanvasControls.vue');\n\nexport default mixins(\n\tcopyPaste,\n\texternalHooks,\n\tgenericHelpers,\n\tmoveNodeWorkflow,\n\tshowMessage,\n\tworkflowHelpers,\n\tworkflowRun,\n\tdebounceHelper,\n).extend({\n\tname: 'NodeView',\n\tcomponents: {\n\t\tNodeDetailsView,\n\t\tNode,\n\t\tNodeCreator,\n\t\tNodeSettings,\n\t\tSticky,\n\t\tCanvasAddButton,\n\t\tNodeCreation,\n\t\tCanvasControls,\n\t},\n\tsetup() {\n\t\treturn {\n\t\t\t...useCanvasMouseSelect(),\n\t\t\t...useGlobalLinkActions(),\n\t\t\t...useTitleChange(),\n\t\t\t...useUniqueNodeName(),\n\t\t\t...useI18n(),\n\t\t};\n\t},\n\terrorCaptured: (err, vm, info) => {\n\t\tconsole.error('errorCaptured'); // eslint-disable-line no-console\n\t\tconsole.error(err); // eslint-disable-line no-console\n\t},\n\twatch: {\n\t\t// Listen to route changes and load the workflow accordingly\n\t\t$route(to: Route, from: Route) {\n\t\t\tconst currentTab = getNodeViewTab(to);\n\t\t\tconst nodeViewNotInitialized = !this.uiStore.nodeViewInitialized;\n\t\t\tlet workflowChanged =\n\t\t\t\tfrom.params.name !== to.params.name &&\n\t\t\t\t// Both 'new' and __EMPTY__ are new workflow names, so ignore them when detecting if wf changed\n\t\t\t\t!(from.params.name === 'new' && this.currentWorkflow === PLACEHOLDER_EMPTY_WORKFLOW_ID) &&\n\t\t\t\t// Also ignore if workflow id changes when saving new workflow\n\t\t\t\tto.params.action !== 'workflowSave';\n\t\t\tconst isOpeningTemplate = to.name === VIEWS.TEMPLATE_IMPORT;\n\n\t\t\t// When entering this tab:\n\t\t\tif (currentTab === MAIN_HEADER_TABS.WORKFLOW || isOpeningTemplate) {\n\t\t\t\tif (workflowChanged || nodeViewNotInitialized || isOpeningTemplate) {\n\t\t\t\t\tthis.startLoading();\n\t\t\t\t\tif (nodeViewNotInitialized) {\n\t\t\t\t\t\tconst previousDirtyState = this.uiStore.stateIsDirty;\n\t\t\t\t\t\tthis.resetWorkspace();\n\t\t\t\t\t\tthis.uiStore.stateIsDirty = previousDirtyState;\n\t\t\t\t\t}\n\t\t\t\t\tvoid this.loadCredentials();\n\t\t\t\t\tvoid this.initView().then(() => {\n\t\t\t\t\t\tthis.stopLoading();\n\t\t\t\t\t\tif (this.blankRedirect) {\n\t\t\t\t\t\t\tthis.blankRedirect = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Also, when landing on executions tab, check if workflow data is changed\n\t\t\tif (currentTab === MAIN_HEADER_TABS.EXECUTIONS) {\n\t\t\t\tworkflowChanged =\n\t\t\t\t\tfrom.params.name !== to.params.name &&\n\t\t\t\t\t!(to.params.name === 'new' && from.params.name === undefined);\n\t\t\t\tif (workflowChanged) {\n\t\t\t\t\t// This will trigger node view to update next time workflow tab is opened\n\t\t\t\t\tthis.uiStore.nodeViewInitialized = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tactiveNode() {\n\t\t\t// When a node gets set as active deactivate the create-menu\n\t\t\tthis.createNodeActive = false;\n\t\t},\n\t\tcontainsTrigger(containsTrigger) {\n\t\t\t// Re-center CanvasAddButton if there's no triggers\n\t\t\tif (containsTrigger === false)\n\t\t\t\tthis.canvasStore.setRecenteredCanvasAddButtonPosition(this.getNodeViewOffsetPosition);\n\t\t},\n\t\tnodeViewScale(newScale) {\n\t\t\tconst elementRef = this.$refs.nodeView as HTMLDivElement | undefined;\n\t\t\tif (elementRef) {\n\t\t\t\telementRef.style.transform = `scale(${newScale})`;\n\t\t\t}\n\t\t},\n\t},\n\tasync beforeRouteLeave(to, from, next) {\n\t\tif (getNodeViewTab(to) === MAIN_HEADER_TABS.EXECUTIONS || from.name === VIEWS.TEMPLATE_IMPORT) {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\t\tif (this.uiStore.stateIsDirty) {\n\t\t\tconst confirmModal = await this.confirmModal(\n\t\t\t\tthis.$locale.baseText('generic.unsavedWork.confirmMessage.message'),\n\t\t\t\tthis.$locale.baseText('generic.unsavedWork.confirmMessage.headline'),\n\t\t\t\t'warning',\n\t\t\t\tthis.$locale.baseText('generic.unsavedWork.confirmMessage.confirmButtonText'),\n\t\t\t\tthis.$locale.baseText('generic.unsavedWork.confirmMessage.cancelButtonText'),\n\t\t\t\ttrue,\n\t\t\t);\n\t\t\tif (confirmModal === MODAL_CONFIRMED) {\n\t\t\t\t// Make sure workflow id is empty when leaving the editor\n\t\t\t\tthis.workflowsStore.setWorkflowId(PLACEHOLDER_EMPTY_WORKFLOW_ID);\n\t\t\t\tconst saved = await this.saveCurrentWorkflow({}, false);\n\t\t\t\tif (saved) {\n\t\t\t\t\tawait this.settingsStore.fetchPromptsData();\n\t\t\t\t}\n\t\t\t\tthis.uiStore.stateIsDirty = false;\n\n\t\t\t\tif (from.name === VIEWS.NEW_WORKFLOW) {\n\t\t\t\t\t// Replace the current route with the new workflow route\n\t\t\t\t\t// before navigating to the new route when saving new workflow.\n\t\t\t\t\tthis.$router.replace(\n\t\t\t\t\t\t{ name: VIEWS.WORKFLOW, params: { name: this.currentWorkflow } },\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t// We can't use next() here since vue-router\n\t\t\t\t\t\t\t// would prevent the navigation with an error\n\t\t\t\t\t\t\tvoid this.$router.push(to as RawLocation);\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t} else if (confirmModal === MODAL_CANCEL) {\n\t\t\t\tthis.workflowsStore.setWorkflowId(PLACEHOLDER_EMPTY_WORKFLOW_ID);\n\t\t\t\tthis.resetWorkspace();\n\t\t\t\tthis.uiStore.stateIsDirty = false;\n\t\t\t\tnext();\n\t\t\t}\n\t\t} else {\n\t\t\tnext();\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapStores(\n\t\t\tuseCanvasStore,\n\t\t\tuseTagsStore,\n\t\t\tuseCredentialsStore,\n\t\t\tuseNodeCreatorStore,\n\t\t\tuseNodeTypesStore,\n\t\t\tuseNDVStore,\n\t\t\tuseRootStore,\n\t\t\tuseSettingsStore,\n\t\t\tuseTemplatesStore,\n\t\t\tuseUIStore,\n\t\t\tuseWorkflowsStore,\n\t\t\tuseUsersStore,\n\t\t\tuseNodeCreatorStore,\n\t\t\tuseEnvironmentsStore,\n\t\t\tuseWorkflowsEEStore,\n\t\t\tuseHistoryStore,\n\t\t),\n\t\tnativelyNumberSuffixedDefaults(): string[] {\n\t\t\treturn this.rootStore.nativelyNumberSuffixedDefaults;\n\t\t},\n\t\tcurrentUser(): IUser | null {\n\t\t\treturn this.usersStore.currentUser;\n\t\t},\n\t\tactiveNode(): INodeUi | null {\n\t\t\treturn this.ndvStore.activeNode;\n\t\t},\n\t\texecutionWaitingForWebhook(): boolean {\n\t\t\treturn this.workflowsStore.executionWaitingForWebhook;\n\t\t},\n\t\tisDemo(): boolean {\n\t\t\treturn this.$route.name === VIEWS.DEMO;\n\t\t},\n\t\tshowCanvasAddButton(): boolean {\n\t\t\treturn this.loadingService === null && !this.containsTrigger && !this.isDemo;\n\t\t},\n\t\tlastSelectedNode(): INodeUi | null {\n\t\t\treturn this.uiStore.getLastSelectedNode;\n\t\t},\n\t\tnodes(): INodeUi[] {\n\t\t\treturn this.workflowsStore.allNodes;\n\t\t},\n\t\trunButtonText(): string {\n\t\t\tif (!this.workflowRunning) {\n\t\t\t\treturn this.$locale.baseText('nodeView.runButtonText.executeWorkflow');\n\t\t\t}\n\n\t\t\tif (this.executionWaitingForWebhook) {\n\t\t\t\treturn this.$locale.baseText('nodeView.runButtonText.waitingForTriggerEvent');\n\t\t\t}\n\n\t\t\treturn this.$locale.baseText('nodeView.runButtonText.executingWorkflow');\n\t\t},\n\t\tworkflowStyle(): object {\n\t\t\tconst offsetPosition = this.uiStore.nodeViewOffsetPosition;\n\t\t\treturn {\n\t\t\t\tleft: offsetPosition[0] + 'px',\n\t\t\t\ttop: offsetPosition[1] + 'px',\n\t\t\t};\n\t\t},\n\t\tcanvasAddButtonStyle(): object {\n\t\t\treturn {\n\t\t\t\t'pointer-events': this.createNodeActive ? 'none' : 'all',\n\t\t\t};\n\t\t},\n\t\tbackgroundStyle(): object {\n\t\t\treturn NodeViewUtils.getBackgroundStyles(\n\t\t\t\tthis.nodeViewScale,\n\t\t\t\tthis.uiStore.nodeViewOffsetPosition,\n\t\t\t\tthis.isExecutionPreview,\n\t\t\t);\n\t\t},\n\t\tworkflowClasses() {\n\t\t\tconst returnClasses = [];\n\t\t\tif (this.ctrlKeyPressed || this.moveCanvasKeyPressed) {\n\t\t\t\tif (this.uiStore.nodeViewMoveInProgress === true) {\n\t\t\t\t\treturnClasses.push('move-in-process');\n\t\t\t\t} else {\n\t\t\t\t\treturnClasses.push('move-active');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.selectActive || this.ctrlKeyPressed || this.moveCanvasKeyPressed) {\n\t\t\t\t// Makes sure that nothing gets selected while select or move is active\n\t\t\t\treturnClasses.push('do-not-select');\n\t\t\t}\n\t\t\treturn returnClasses;\n\t\t},\n\t\tworkflowExecution(): IExecutionResponse | null {\n\t\t\treturn this.workflowsStore.getWorkflowExecution;\n\t\t},\n\t\tworkflowRunning(): boolean {\n\t\t\treturn this.uiStore.isActionActive('workflowRunning');\n\t\t},\n\t\tcurrentWorkflow(): string {\n\t\t\treturn this.$route.params.name || this.workflowsStore.workflowId;\n\t\t},\n\t\tworkflowName(): string {\n\t\t\treturn this.workflowsStore.workflowName;\n\t\t},\n\t\tallTriggersDisabled(): boolean {\n\t\t\tconst disabledTriggerNodes = this.triggerNodes.filter((node) => node.disabled);\n\t\t\treturn disabledTriggerNodes.length === this.triggerNodes.length;\n\t\t},\n\t\ttriggerNodes(): INodeUi[] {\n\t\t\treturn this.nodes.filter(\n\t\t\t\t(node) => node.type === START_NODE_TYPE || this.nodeTypesStore.isTriggerNode(node.type),\n\t\t\t);\n\t\t},\n\t\tcontainsTrigger(): boolean {\n\t\t\treturn this.triggerNodes.length > 0;\n\t\t},\n\t\tisExecutionDisabled(): boolean {\n\t\t\treturn !this.containsTrigger || this.allTriggersDisabled;\n\t\t},\n\t\tgetNodeViewOffsetPosition(): XYPosition {\n\t\t\treturn this.uiStore.nodeViewOffsetPosition;\n\t\t},\n\t\tnodeViewScale(): number {\n\t\t\treturn this.canvasStore.nodeViewScale;\n\t\t},\n\t\tinstance(): BrowserJsPlumbInstance {\n\t\t\treturn this.canvasStore.jsPlumbInstance;\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tGRID_SIZE: NodeViewUtils.GRID_SIZE,\n\t\t\tSTICKY_NODE_TYPE,\n\t\t\tcreateNodeActive: false,\n\t\t\tlastClickPosition: [450, 450] as XYPosition,\n\t\t\tctrlKeyPressed: false,\n\t\t\tmoveCanvasKeyPressed: false,\n\t\t\tstopExecutionInProgress: false,\n\t\t\tblankRedirect: false,\n\t\t\tcredentialsUpdated: false,\n\t\t\tpullConnActiveNodeName: null as string | null,\n\t\t\tpullConnActive: false,\n\t\t\tdropPrevented: false,\n\t\t\trenamingActive: false,\n\t\t\tshowStickyButton: false,\n\t\t\tisExecutionPreview: false,\n\t\t\tshowTriggerMissingTooltip: false,\n\t\t\tworkflowData: null as INewWorkflowData | null,\n\t\t\tactiveConnection: null as null | Connection,\n\t\t\tisProductionExecutionPreview: false,\n\t\t\tenterTimer: undefined as undefined | ReturnType<typeof setTimeout>,\n\t\t\texitTimer: undefined as undefined | ReturnType<typeof setTimeout>,\n\t\t\t// jsplumb automatically deletes all loose connections which is in turn recorded\n\t\t\t// in undo history as a user action.\n\t\t\t// This should prevent automatically removed connections from populating undo stack\n\t\t\tsuspendRecordingDetachedConnections: false,\n\t\t\tNODE_CREATOR_OPEN_SOURCES,\n\t\t};\n\t},\n\tbeforeDestroy() {\n\t\tthis.resetWorkspace();\n\t\t// Make sure the event listeners get removed again else we\n\t\t// could add up with them registered multiple times\n\t\tdocument.removeEventListener('keydown', this.keyDown);\n\t\tdocument.removeEventListener('keyup', this.keyUp);\n\t\tthis.unregisterCustomAction('showNodeCreator');\n\t},\n\tmethods: {\n\t\tshowTriggerMissingToltip(isVisible: boolean) {\n\t\t\tthis.showTriggerMissingTooltip = isVisible;\n\t\t},\n\t\tonRunNode(nodeName: string, source: string) {\n\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName);\n\t\t\tconst telemetryPayload = {\n\t\t\t\tnode_type: node ? node.type : null,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\tsource: 'canvas',\n\t\t\t};\n\t\t\tthis.$telemetry.track('User clicked execute node button', telemetryPayload);\n\t\t\tthis.$externalHooks().run('nodeView.onRunNode', telemetryPayload);\n\t\t\tthis.runWorkflow(nodeName, source);\n\t\t},\n\t\tasync onRunWorkflow() {\n\t\t\tthis.getWorkflowDataToSave().then((workflowData) => {\n\t\t\t\tconst telemetryPayload = {\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\tnode_graph_string: JSON.stringify(\n\t\t\t\t\t\tTelemetryHelpers.generateNodesGraph(workflowData as IWorkflowBase, this.getNodeTypes())\n\t\t\t\t\t\t\t.nodeGraph,\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t\tthis.$telemetry.track('User clicked execute workflow button', telemetryPayload);\n\t\t\t\tthis.$externalHooks().run('nodeView.onRunWorkflow', telemetryPayload);\n\t\t\t});\n\n\t\t\tawait this.runWorkflow();\n\t\t},\n\t\tonRunContainerClick() {\n\t\t\tif (this.containsTrigger && !this.allTriggersDisabled) return;\n\n\t\t\tconst message =\n\t\t\t\tthis.containsTrigger && this.allTriggersDisabled\n\t\t\t\t\t? this.$locale.baseText('nodeView.addOrEnableTriggerNode')\n\t\t\t\t\t: this.$locale.baseText('nodeView.addATriggerNodeFirst');\n\n\t\t\tthis.registerCustomAction('showNodeCreator', () =>\n\t\t\t\tthis.showTriggerCreator(NODE_CREATOR_OPEN_SOURCES.NO_TRIGGER_EXECUTION_TOOLTIP),\n\t\t\t);\n\t\t\tconst notice = this.$showMessage({\n\t\t\t\ttype: 'info',\n\t\t\t\ttitle: this.$locale.baseText('nodeView.cantExecuteNoTrigger'),\n\t\t\t\tmessage,\n\t\t\t\tduration: 3000,\n\t\t\t\tonClick: () =>\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t// Close the creator panel if user clicked on the link\n\t\t\t\t\t\tif (this.createNodeActive) notice.close();\n\t\t\t\t\t}, 0),\n\t\t\t});\n\t\t},\n\t\tclearExecutionData() {\n\t\t\tthis.workflowsStore.workflowExecutionData = null;\n\t\t\tthis.updateNodesExecutionIssues();\n\t\t},\n\t\tasync onSaveKeyboardShortcut(e: KeyboardEvent) {\n\t\t\tlet saved = await this.saveCurrentWorkflow();\n\t\t\tif (saved) await this.settingsStore.fetchPromptsData();\n\t\t\tif (this.activeNode) {\n\t\t\t\t// If NDV is open, save will not work from editable input fields\n\t\t\t\t// so don't show success message if this is true\n\t\t\t\tif (e.target instanceof HTMLInputElement) {\n\t\t\t\t\tsaved = e.target.readOnly;\n\t\t\t\t} else {\n\t\t\t\t\tsaved = true;\n\t\t\t\t}\n\t\t\t\tif (saved) {\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: this.$locale.baseText('generic.workflowSaved'),\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshowTriggerCreator(source: NodeCreatorOpenSource) {\n\t\t\tif (this.createNodeActive) return;\n\t\t\tthis.nodeCreatorStore.setSelectedView(TRIGGER_NODE_CREATOR_VIEW);\n\t\t\tthis.nodeCreatorStore.setShowScrim(true);\n\t\t\tthis.onToggleNodeCreator({ source, createNodeActive: true });\n\t\t},\n\t\tasync openExecution(executionId: string) {\n\t\t\tthis.startLoading();\n\t\t\tthis.resetWorkspace();\n\t\t\tlet data: IExecutionResponse | undefined;\n\t\t\ttry {\n\t\t\t\tdata = await this.workflowsStore.getExecution(executionId);\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('nodeView.showError.openExecution.title'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (data === undefined) {\n\t\t\t\tthrow new Error(`Execution with id \"${executionId}\" could not be found!`);\n\t\t\t}\n\t\t\tthis.workflowsStore.setWorkflowName({\n\t\t\t\tnewName: data.workflowData.name,\n\t\t\t\tsetStateDirty: false,\n\t\t\t});\n\t\t\tthis.workflowsStore.setWorkflowId(PLACEHOLDER_EMPTY_WORKFLOW_ID);\n\t\t\tthis.workflowsStore.setWorkflowExecutionData(data);\n\t\t\tif (data.workflowData.pinData) {\n\t\t\t\tthis.workflowsStore.setWorkflowPinData(data.workflowData.pinData);\n\t\t\t}\n\n\t\t\tawait this.addNodes(\n\t\t\t\tdeepCopy(data.workflowData.nodes),\n\t\t\t\tdeepCopy(data.workflowData.connections),\n\t\t\t);\n\t\t\tthis.$nextTick(() => {\n\t\t\t\tthis.canvasStore.zoomToFit();\n\t\t\t\tthis.uiStore.stateIsDirty = false;\n\t\t\t});\n\t\t\tthis.$externalHooks().run('execution.open', {\n\t\t\t\tworkflowId: data.workflowData.id,\n\t\t\t\tworkflowName: data.workflowData.name,\n\t\t\t\texecutionId,\n\t\t\t});\n\t\t\tthis.$telemetry.track('User opened read-only execution', {\n\t\t\t\tworkflow_id: data.workflowData.id,\n\t\t\t\texecution_mode: data.mode,\n\t\t\t\texecution_finished: data.finished,\n\t\t\t});\n\n\t\t\tif (!data.finished && data.data?.resultData?.error) {\n\t\t\t\t// Check if any node contains an error\n\t\t\t\tlet nodeErrorFound = false;\n\t\t\t\tif (data.data.resultData.runData) {\n\t\t\t\t\tconst runData = data.data.resultData.runData;\n\t\t\t\t\terrorCheck: for (const nodeName of Object.keys(runData)) {\n\t\t\t\t\t\tfor (const taskData of runData[nodeName]) {\n\t\t\t\t\t\t\tif (taskData.error) {\n\t\t\t\t\t\t\t\tnodeErrorFound = true;\n\t\t\t\t\t\t\t\tbreak errorCheck;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!nodeErrorFound && data.data.resultData.error.stack) {\n\t\t\t\t\t// Display some more information for now in console to make debugging easier\n\t\t\t\t\t// TODO: Improve this in the future by displaying in UI\n\t\t\t\t\tconsole.error(`Execution ${executionId} error:`); // eslint-disable-line no-console\n\t\t\t\t\tconsole.error(data.data.resultData.error.stack); // eslint-disable-line no-console\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((data as IExecutionsSummary).waitTill) {\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('nodeView.thisExecutionHasntFinishedYet'),\n\t\t\t\t\tmessage: `<a data-action=\"reload\">${this.$locale.baseText(\n\t\t\t\t\t\t'nodeView.refresh',\n\t\t\t\t\t)}</a> ${this.$locale.baseText(\n\t\t\t\t\t\t'nodeView.toSeeTheLatestStatus',\n\t\t\t\t\t)}.<br/> <a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.wait/\" target=\"_blank\">${this.$locale.baseText(\n\t\t\t\t\t\t'nodeView.moreInfo',\n\t\t\t\t\t)}</a>`,\n\t\t\t\t\ttype: 'warning',\n\t\t\t\t\tduration: 0,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.stopLoading();\n\t\t},\n\t\tasync importWorkflowExact(data: { workflow: IWorkflowDataUpdate }) {\n\t\t\tif (!data.workflow.nodes || !data.workflow.connections) {\n\t\t\t\tthrow new Error('Invalid workflow object');\n\t\t\t}\n\t\t\tthis.resetWorkspace();\n\t\t\tdata.workflow.nodes = NodeViewUtils.getFixedNodesList(data.workflow.nodes);\n\n\t\t\tawait this.addNodes(data.workflow.nodes as INodeUi[], data.workflow.connections);\n\n\t\t\tif (data.workflow.pinData) {\n\t\t\t\tthis.workflowsStore.setWorkflowPinData(data.workflow.pinData);\n\t\t\t}\n\n\t\t\tthis.$nextTick(() => {\n\t\t\t\tthis.canvasStore.zoomToFit();\n\t\t\t});\n\t\t},\n\t\tasync openWorkflowTemplate(templateId: string) {\n\t\t\tthis.startLoading();\n\t\t\tthis.setLoadingText(this.$locale.baseText('nodeView.loadingTemplate'));\n\t\t\tthis.resetWorkspace();\n\n\t\t\tthis.workflowsStore.currentWorkflowExecutions = [];\n\t\t\tthis.workflowsStore.activeWorkflowExecution = null;\n\n\t\t\tlet data: IWorkflowTemplate | undefined;\n\t\t\ttry {\n\t\t\t\tthis.$externalHooks().run('template.requested', { templateId });\n\t\t\t\tdata = await this.templatesStore.getWorkflowTemplate(templateId);\n\n\t\t\t\tif (!data) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\tthis.$locale.baseText('nodeView.workflowTemplateWithIdCouldNotBeFound', {\n\t\t\t\t\t\t\tinterpolate: { templateId },\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('nodeView.couldntImportWorkflow'));\n\t\t\t\tvoid this.$router.replace({ name: VIEWS.NEW_WORKFLOW });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata.workflow.nodes = NodeViewUtils.getFixedNodesList(data.workflow.nodes) as INodeUi[];\n\n\t\t\tthis.blankRedirect = true;\n\t\t\tvoid this.$router.replace({ name: VIEWS.NEW_WORKFLOW, query: { templateId } });\n\n\t\t\tawait this.addNodes(data.workflow.nodes, data.workflow.connections);\n\t\t\tthis.workflowData = (await this.workflowsStore.getNewWorkflowData(data.name)) || {};\n\t\t\tthis.$nextTick(() => {\n\t\t\t\tthis.canvasStore.zoomToFit();\n\t\t\t\tthis.uiStore.stateIsDirty = true;\n\t\t\t});\n\n\t\t\tthis.$externalHooks().run('template.open', {\n\t\t\t\ttemplateId,\n\t\t\t\ttemplateName: data.name,\n\t\t\t\tworkflow: data.workflow,\n\t\t\t});\n\t\t\tthis.stopLoading();\n\t\t},\n\t\tasync openWorkflow(workflow: IWorkflowDb) {\n\t\t\tthis.startLoading();\n\n\t\t\tconst selectedExecution = this.workflowsStore.activeWorkflowExecution;\n\n\t\t\tthis.resetWorkspace();\n\n\t\t\tthis.workflowsStore.addWorkflow(workflow);\n\t\t\tthis.workflowsStore.setActive(workflow.active || false);\n\t\t\tthis.workflowsStore.setWorkflowId(workflow.id);\n\t\t\tthis.workflowsStore.setWorkflowName({ newName: workflow.name, setStateDirty: false });\n\t\t\tthis.workflowsStore.setWorkflowSettings(workflow.settings || {});\n\t\t\tthis.workflowsStore.setWorkflowPinData(workflow.pinData || {});\n\t\t\tthis.workflowsStore.setWorkflowVersionId(workflow.versionId);\n\n\t\t\tif (workflow.ownedBy) {\n\t\t\t\tthis.workflowsEEStore.setWorkflowOwnedBy({\n\t\t\t\t\tworkflowId: workflow.id,\n\t\t\t\t\townedBy: workflow.ownedBy,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (workflow.sharedWith) {\n\t\t\t\tthis.workflowsEEStore.setWorkflowSharedWith({\n\t\t\t\t\tworkflowId: workflow.id,\n\t\t\t\t\tsharedWith: workflow.sharedWith,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (workflow.usedCredentials) {\n\t\t\t\tthis.workflowsStore.setUsedCredentials(workflow.usedCredentials);\n\t\t\t}\n\n\t\t\tconst tags = (workflow.tags || []) as ITag[];\n\t\t\tconst tagIds = tags.map((tag) => tag.id);\n\t\t\tthis.workflowsStore.setWorkflowTagIds(tagIds || []);\n\t\t\tthis.tagsStore.upsertTags(tags);\n\n\t\t\tawait this.addNodes(workflow.nodes, workflow.connections);\n\n\t\t\tif (!this.credentialsUpdated) {\n\t\t\t\tthis.uiStore.stateIsDirty = false;\n\t\t\t}\n\t\t\tthis.canvasStore.zoomToFit();\n\t\t\tthis.$externalHooks().run('workflow.open', {\n\t\t\t\tworkflowId: workflow.id,\n\t\t\t\tworkflowName: workflow.name,\n\t\t\t});\n\t\t\tif (selectedExecution?.workflowId !== workflow.id) {\n\t\t\t\tthis.workflowsStore.activeWorkflowExecution = null;\n\t\t\t\tthis.workflowsStore.currentWorkflowExecutions = [];\n\t\t\t} else {\n\t\t\t\tthis.workflowsStore.activeWorkflowExecution = selectedExecution;\n\t\t\t}\n\t\t\tthis.stopLoading();\n\t\t},\n\t\ttouchTap(e: MouseEvent | TouchEvent) {\n\t\t\tif (this.isTouchDevice) {\n\t\t\t\tthis.mouseDown(e);\n\t\t\t}\n\t\t},\n\t\tmouseDown(e: MouseEvent | TouchEvent) {\n\t\t\t// Save the location of the mouse click\n\t\t\tthis.lastClickPosition = this.getMousePositionWithinNodeView(e);\n\t\t\tif (e instanceof MouseEvent && e.button === 1) {\n\t\t\t\tthis.moveCanvasKeyPressed = true;\n\t\t\t}\n\n\t\t\tthis.mouseDownMouseSelect(e as MouseEvent, this.moveCanvasKeyPressed);\n\t\t\tthis.mouseDownMoveWorkflow(e as MouseEvent, this.moveCanvasKeyPressed);\n\n\t\t\t// Hide the node-creator\n\t\t\tthis.createNodeActive = false;\n\t\t},\n\t\tmouseUp(e: MouseEvent) {\n\t\t\tif (e.button === 1) {\n\t\t\t\tthis.moveCanvasKeyPressed = false;\n\t\t\t}\n\t\t\tthis.mouseUpMouseSelect(e);\n\t\t\tthis.mouseUpMoveWorkflow(e);\n\t\t},\n\t\tkeyUp(e: KeyboardEvent) {\n\t\t\tif (e.key === this.controlKeyCode) {\n\t\t\t\tthis.ctrlKeyPressed = false;\n\t\t\t}\n\t\t\tif (e.key === ' ') {\n\t\t\t\tthis.moveCanvasKeyPressed = false;\n\t\t\t}\n\t\t},\n\t\tasync keyDown(e: KeyboardEvent) {\n\t\t\tif (e.key === 's' && this.isCtrlKeyPressed(e)) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif (this.isReadOnly) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.callDebounced('onSaveKeyboardShortcut', { debounceTime: 1000 }, e);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// @ts-ignore\n\t\t\tconst path = e.path || (e.composedPath && e.composedPath());\n\n\t\t\t// Check if the keys got emitted from a message box or from something\n\t\t\t// else which should ignore the default keybindings\n\t\t\tfor (const element of path) {\n\t\t\t\tif (\n\t\t\t\t\telement.className &&\n\t\t\t\t\ttypeof element.className === 'string' &&\n\t\t\t\t\telement.className.includes('ignore-key-press')\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// el-dialog or el-message-box element is open\n\t\t\tif (window.document.body.classList.contains('el-popup-parent--hidden')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.key === 'Escape') {\n\t\t\t\tthis.createNodeActive = false;\n\t\t\t\tif (this.activeNode) {\n\t\t\t\t\tthis.$externalHooks().run('dataDisplay.nodeEditingFinished');\n\t\t\t\t\tthis.ndvStore.activeNodeName = null;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// node modal is open\n\t\t\tif (this.activeNode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.key === 'd') {\n\t\t\t\tthis.callDebounced('deactivateSelectedNode', { debounceTime: 350 });\n\t\t\t} else if (e.key === 'Delete' || e.key === 'Backspace') {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\n\t\t\t\tthis.callDebounced('deleteSelectedNodes', { debounceTime: 500 });\n\t\t\t} else if (e.key === 'Tab') {\n\t\t\t\tthis.onToggleNodeCreator({\n\t\t\t\t\tsource: NODE_CREATOR_OPEN_SOURCES.TAB,\n\t\t\t\t\tcreateNodeActive: !this.createNodeActive && !this.isReadOnly,\n\t\t\t\t});\n\t\t\t} else if (e.key === this.controlKeyCode) {\n\t\t\t\tthis.ctrlKeyPressed = true;\n\t\t\t} else if (e.key === ' ') {\n\t\t\t\tthis.moveCanvasKeyPressed = true;\n\t\t\t} else if (e.key === 'F2' && !this.isReadOnly) {\n\t\t\t\tconst lastSelectedNode = this.lastSelectedNode;\n\t\t\t\tif (lastSelectedNode !== null && lastSelectedNode.type !== STICKY_NODE_TYPE) {\n\t\t\t\t\tthis.callDebounced('renameNodePrompt', { debounceTime: 1500 }, lastSelectedNode.name);\n\t\t\t\t}\n\t\t\t} else if (e.key === 'a' && this.isCtrlKeyPressed(e) === true) {\n\t\t\t\t// Select all nodes\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\n\t\t\t\tthis.callDebounced('selectAllNodes', { debounceTime: 1000 });\n\t\t\t} else if (e.key === 'c' && this.isCtrlKeyPressed(e)) {\n\t\t\t\tthis.callDebounced('copySelectedNodes', { debounceTime: 1000 });\n\t\t\t} else if (e.key === 'x' && this.isCtrlKeyPressed(e)) {\n\t\t\t\t// Cut nodes\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\n\t\t\t\tthis.callDebounced('cutSelectedNodes', { debounceTime: 1000 });\n\t\t\t} else if (e.key === 'n' && this.isCtrlKeyPressed(e) && e.altKey) {\n\t\t\t\t// Create a new workflow\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.isDemo) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.$router.currentRoute.name === VIEWS.NEW_WORKFLOW) {\n\t\t\t\t\tthis.$root.$emit('newWorkflow');\n\t\t\t\t} else {\n\t\t\t\t\tvoid this.$router.push({ name: VIEWS.NEW_WORKFLOW });\n\t\t\t\t}\n\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('nodeView.showMessage.keyDown.title'),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t} else if (e.key === 'Enter') {\n\t\t\t\t// Activate the last selected node\n\t\t\t\tconst lastSelectedNode = this.lastSelectedNode;\n\n\t\t\t\tif (lastSelectedNode !== null) {\n\t\t\t\t\tif (lastSelectedNode.type === STICKY_NODE_TYPE && this.isReadOnly) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.ndvStore.activeNodeName = lastSelectedNode.name;\n\t\t\t\t}\n\t\t\t} else if (e.key === 'ArrowRight' && e.shiftKey) {\n\t\t\t\t// Select all downstream nodes\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\n\t\t\t\tthis.callDebounced('selectDownstreamNodes', { debounceTime: 1000 });\n\t\t\t} else if (e.key === 'ArrowRight') {\n\t\t\t\t// Set child node active\n\t\t\t\tconst lastSelectedNode = this.lastSelectedNode;\n\t\t\t\tif (lastSelectedNode === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst connections = this.workflowsStore.outgoingConnectionsByNodeName(\n\t\t\t\t\tlastSelectedNode.name,\n\t\t\t\t);\n\n\t\t\t\tif (connections.main === undefined || connections.main.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.callDebounced(\n\t\t\t\t\t'nodeSelectedByName',\n\t\t\t\t\t{ debounceTime: 100 },\n\t\t\t\t\tconnections.main[0][0].node,\n\t\t\t\t\tfalse,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t} else if (e.key === 'ArrowLeft' && e.shiftKey) {\n\t\t\t\t// Select all downstream nodes\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\n\t\t\t\tthis.callDebounced('selectUpstreamNodes', { debounceTime: 1000 });\n\t\t\t} else if (e.key === 'ArrowLeft') {\n\t\t\t\t// Set parent node active\n\t\t\t\tconst lastSelectedNode = this.lastSelectedNode;\n\t\t\t\tif (lastSelectedNode === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst workflow = this.getCurrentWorkflow();\n\n\t\t\t\tif (!workflow.connectionsByDestinationNode.hasOwnProperty(lastSelectedNode.name)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst connections = workflow.connectionsByDestinationNode[lastSelectedNode.name];\n\n\t\t\t\tif (connections.main === undefined || connections.main.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.callDebounced(\n\t\t\t\t\t'nodeSelectedByName',\n\t\t\t\t\t{ debounceTime: 100 },\n\t\t\t\t\tconnections.main[0][0].node,\n\t\t\t\t\tfalse,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t} else if (['ArrowUp', 'ArrowDown'].includes(e.key)) {\n\t\t\t\t// Set sibling node as active\n\n\t\t\t\t// Check first if it has a parent node\n\t\t\t\tconst lastSelectedNode = this.lastSelectedNode;\n\t\t\t\tif (lastSelectedNode === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst workflow = this.getCurrentWorkflow();\n\n\t\t\t\tif (!workflow.connectionsByDestinationNode.hasOwnProperty(lastSelectedNode.name)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst connections = workflow.connectionsByDestinationNode[lastSelectedNode.name];\n\n\t\t\t\tif (!Array.isArray(connections.main) || !connections.main.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst parentNode = connections.main[0][0].node;\n\t\t\t\tconst connectionsParent = this.workflowsStore.outgoingConnectionsByNodeName(parentNode);\n\n\t\t\t\tif (!Array.isArray(connectionsParent.main) || !connectionsParent.main.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Get all the sibling nodes and their x positions to know which one to set active\n\t\t\t\tlet siblingNode: INodeUi | null;\n\t\t\t\tlet lastCheckedNodePosition = e.key === 'ArrowUp' ? -99999999 : 99999999;\n\t\t\t\tlet nextSelectNode: string | null = null;\n\t\t\t\tfor (const ouputConnections of connectionsParent.main) {\n\t\t\t\t\tfor (const ouputConnection of ouputConnections) {\n\t\t\t\t\t\tif (ouputConnection.node === lastSelectedNode.name) {\n\t\t\t\t\t\t\t// Ignore current node\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsiblingNode = this.workflowsStore.getNodeByName(ouputConnection.node);\n\n\t\t\t\t\t\tif (siblingNode) {\n\t\t\t\t\t\t\tif (e.key === 'ArrowUp') {\n\t\t\t\t\t\t\t\t// Get the next node on the left\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tsiblingNode.position[1] <= lastSelectedNode.position[1] &&\n\t\t\t\t\t\t\t\t\tsiblingNode.position[1] > lastCheckedNodePosition\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tnextSelectNode = siblingNode.name;\n\t\t\t\t\t\t\t\t\tlastCheckedNodePosition = siblingNode.position[1];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Get the next node on the right\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tsiblingNode.position[1] >= lastSelectedNode.position[1] &&\n\t\t\t\t\t\t\t\t\tsiblingNode.position[1] < lastCheckedNodePosition\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tnextSelectNode = siblingNode.name;\n\t\t\t\t\t\t\t\t\tlastCheckedNodePosition = siblingNode.position[1];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (nextSelectNode !== null) {\n\t\t\t\t\tthis.callDebounced(\n\t\t\t\t\t\t'nodeSelectedByName',\n\t\t\t\t\t\t{ debounceTime: 100 },\n\t\t\t\t\t\tnextSelectNode,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdeactivateSelectedNode() {\n\t\t\tif (!this.editAllowedCheck()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.disableNodes(this.uiStore.getSelectedNodes, true);\n\t\t},\n\n\t\tdeleteSelectedNodes() {\n\t\t\t// Copy \"selectedNodes\" as the nodes get deleted out of selection\n\t\t\t// when they get deleted and if we would use original it would mess\n\t\t\t// with the index and would so not delete all nodes\n\t\t\tconst nodesToDelete: string[] = this.uiStore.getSelectedNodes.map((node: INodeUi) => {\n\t\t\t\treturn node.name;\n\t\t\t});\n\t\t\tthis.historyStore.startRecordingUndo();\n\t\t\tnodesToDelete.forEach((nodeName: string) => {\n\t\t\t\tthis.removeNode(nodeName, true, false);\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.historyStore.stopRecordingUndo();\n\t\t\t}, 200);\n\t\t},\n\n\t\tselectAllNodes() {\n\t\t\tthis.nodes.forEach((node) => {\n\t\t\t\tthis.nodeSelectedByName(node.name);\n\t\t\t});\n\t\t},\n\n\t\tselectUpstreamNodes() {\n\t\t\tconst lastSelectedNode = this.lastSelectedNode;\n\t\t\tif (lastSelectedNode === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.deselectAllNodes();\n\n\t\t\t// Get all upstream nodes and select them\n\t\t\tconst workflow = this.getCurrentWorkflow();\n\t\t\tfor (const nodeName of workflow.getParentNodes(lastSelectedNode.name)) {\n\t\t\t\tthis.nodeSelectedByName(nodeName);\n\t\t\t}\n\n\t\t\t// At the end select the previously selected node again\n\t\t\tthis.nodeSelectedByName(lastSelectedNode.name);\n\t\t},\n\t\tselectDownstreamNodes() {\n\t\t\tconst lastSelectedNode = this.lastSelectedNode;\n\t\t\tif (lastSelectedNode === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.deselectAllNodes();\n\n\t\t\t// Get all downstream nodes and select them\n\t\t\tconst workflow = this.getCurrentWorkflow();\n\t\t\tfor (const nodeName of workflow.getChildNodes(lastSelectedNode.name)) {\n\t\t\t\tthis.nodeSelectedByName(nodeName);\n\t\t\t}\n\n\t\t\t// At the end select the previously selected node again\n\t\t\tthis.nodeSelectedByName(lastSelectedNode.name);\n\t\t},\n\n\t\tpushDownstreamNodes(sourceNodeName: string, margin: number, recordHistory = false) {\n\t\t\tconst sourceNode = this.workflowsStore.nodesByName[sourceNodeName];\n\t\t\tconst workflow = this.getCurrentWorkflow();\n\t\t\tconst childNodes = workflow.getChildNodes(sourceNodeName);\n\t\t\tfor (const nodeName of childNodes) {\n\t\t\t\tconst node = this.workflowsStore.nodesByName[nodeName] as INodeUi;\n\t\t\t\tconst oldPosition = node.position;\n\n\t\t\t\tif (node.position[0] < sourceNode.position[0]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst updateInformation: INodeUpdatePropertiesInformation = {\n\t\t\t\t\tname: nodeName,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tposition: [node.position[0] + margin, node.position[1]],\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tthis.workflowsStore.updateNodeProperties(updateInformation);\n\t\t\t\tthis.onNodeMoved(node);\n\n\t\t\t\tif (\n\t\t\t\t\t(recordHistory && oldPosition[0] !== node.position[0]) ||\n\t\t\t\t\toldPosition[1] !== node.position[1]\n\t\t\t\t) {\n\t\t\t\t\tthis.historyStore.pushCommandToUndo(\n\t\t\t\t\t\tnew MoveNodeCommand(nodeName, oldPosition, node.position, this),\n\t\t\t\t\t\trecordHistory,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcutSelectedNodes() {\n\t\t\tconst deleteCopiedNodes = !this.isReadOnly;\n\t\t\tthis.copySelectedNodes(deleteCopiedNodes);\n\t\t\tif (deleteCopiedNodes) {\n\t\t\t\tthis.deleteSelectedNodes();\n\t\t\t}\n\t\t},\n\n\t\tcopySelectedNodes(isCut: boolean) {\n\t\t\tvoid this.getSelectedNodesToSave().then((data) => {\n\t\t\t\tconst workflowToCopy: IWorkflowToShare = {\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tinstanceId: this.rootStore.instanceId,\n\t\t\t\t\t},\n\t\t\t\t\t...data,\n\t\t\t\t};\n\n\t\t\t\tthis.removeForeignCredentialsFromWorkflow(\n\t\t\t\t\tworkflowToCopy,\n\t\t\t\t\tthis.credentialsStore.allCredentials,\n\t\t\t\t);\n\n\t\t\t\tconst nodeData = JSON.stringify(workflowToCopy, null, 2);\n\n\t\t\t\tthis.copyToClipboard(nodeData);\n\t\t\t\tif (data.nodes.length > 0) {\n\t\t\t\t\tif (!isCut) {\n\t\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\t\ttitle: 'Copied!',\n\t\t\t\t\t\t\tmessage: '',\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis.$telemetry.track('User copied nodes', {\n\t\t\t\t\t\tnode_types: data.nodes.map((node) => node.type),\n\t\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tasync stopExecution() {\n\t\t\tconst executionId = this.workflowsStore.activeExecutionId;\n\t\t\tif (executionId === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.stopExecutionInProgress = true;\n\t\t\t\tawait this.workflowsStore.stopCurrentExecution(executionId);\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('nodeView.showMessage.stopExecutionTry.title'),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\t// Execution stop might fail when the execution has already finished. Let's treat this here.\n\t\t\t\tconst execution = await this.workflowsStore.getExecution(executionId);\n\n\t\t\t\tif (execution === undefined) {\n\t\t\t\t\t// execution finished but was not saved (e.g. due to low connectivity)\n\n\t\t\t\t\tthis.workflowsStore.finishActiveExecution({\n\t\t\t\t\t\texecutionId,\n\t\t\t\t\t\tdata: { finished: true, stoppedAt: new Date() },\n\t\t\t\t\t});\n\t\t\t\t\tthis.workflowsStore.executingNode = null;\n\t\t\t\t\tthis.uiStore.removeActiveAction('workflowRunning');\n\n\t\t\t\t\tthis.titleSet(this.workflowsStore.workflowName, 'IDLE');\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: this.$locale.baseText('nodeView.showMessage.stopExecutionCatch.unsaved.title'),\n\t\t\t\t\t\tmessage: this.$locale.baseText(\n\t\t\t\t\t\t\t'nodeView.showMessage.stopExecutionCatch.unsaved.message',\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t});\n\t\t\t\t} else if (execution?.finished) {\n\t\t\t\t\t// execution finished before it could be stopped\n\n\t\t\t\t\tconst executedData = {\n\t\t\t\t\t\tdata: execution.data,\n\t\t\t\t\t\tfinished: execution.finished,\n\t\t\t\t\t\tmode: execution.mode,\n\t\t\t\t\t\tstartedAt: execution.startedAt,\n\t\t\t\t\t\tstoppedAt: execution.stoppedAt,\n\t\t\t\t\t} as IRun;\n\t\t\t\t\tconst pushData = {\n\t\t\t\t\t\tdata: executedData,\n\t\t\t\t\t\texecutionId,\n\t\t\t\t\t\tretryOf: execution.retryOf,\n\t\t\t\t\t} as IPushDataExecutionFinished;\n\t\t\t\t\tthis.workflowsStore.finishActiveExecution(pushData);\n\t\t\t\t\tthis.titleSet(execution.workflowData.name, 'IDLE');\n\t\t\t\t\tthis.workflowsStore.executingNode = null;\n\t\t\t\t\tthis.workflowsStore.setWorkflowExecutionData(executedData as IExecutionResponse);\n\t\t\t\t\tthis.uiStore.removeActiveAction('workflowRunning');\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: this.$locale.baseText('nodeView.showMessage.stopExecutionCatch.title'),\n\t\t\t\t\t\tmessage: this.$locale.baseText('nodeView.showMessage.stopExecutionCatch.message'),\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.$showError(error, this.$locale.baseText('nodeView.showError.stopExecution.title'));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.stopExecutionInProgress = false;\n\n\t\t\tthis.getWorkflowDataToSave().then((workflowData) => {\n\t\t\t\tconst trackProps = {\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\tnode_graph_string: JSON.stringify(\n\t\t\t\t\t\tTelemetryHelpers.generateNodesGraph(workflowData as IWorkflowBase, this.getNodeTypes())\n\t\t\t\t\t\t\t.nodeGraph,\n\t\t\t\t\t),\n\t\t\t\t};\n\n\t\t\t\tthis.$telemetry.track('User clicked stop workflow execution', trackProps);\n\t\t\t});\n\t\t},\n\n\t\tasync stopWaitingForWebhook() {\n\t\t\ttry {\n\t\t\t\tawait this.workflowsStore.removeTestWebhook(this.workflowsStore.workflowId);\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('nodeView.showError.stopWaitingForWebhook.title'),\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * This method gets called when data got pasted into the window\n\t\t */\n\t\tasync receivedCopyPasteData(plainTextData: string): Promise<void> {\n\t\t\tconst currentTab = getNodeViewTab(this.$route);\n\t\t\tif (currentTab === MAIN_HEADER_TABS.WORKFLOW) {\n\t\t\t\tlet workflowData: IWorkflowDataUpdate | undefined;\n\t\t\t\tif (this.editAllowedCheck() === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Check if it is an URL which could contain workflow data\n\t\t\t\tif (plainTextData.match(/^http[s]?:\\/\\/.*\\.json$/i)) {\n\t\t\t\t\t// Pasted data points to a possible workflow JSON file\n\n\t\t\t\t\tif (!this.editAllowedCheck()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst importConfirm = await this.confirmMessage(\n\t\t\t\t\t\tthis.$locale.baseText('nodeView.confirmMessage.receivedCopyPasteData.message', {\n\t\t\t\t\t\t\tinterpolate: { plainTextData },\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tthis.$locale.baseText('nodeView.confirmMessage.receivedCopyPasteData.headline'),\n\t\t\t\t\t\t'warning',\n\t\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t\t'nodeView.confirmMessage.receivedCopyPasteData.confirmButtonText',\n\t\t\t\t\t\t),\n\t\t\t\t\t\tthis.$locale.baseText('nodeView.confirmMessage.receivedCopyPasteData.cancelButtonText'),\n\t\t\t\t\t);\n\n\t\t\t\t\tif (!importConfirm) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tworkflowData = await this.getWorkflowDataFromUrl(plainTextData);\n\t\t\t\t\tif (workflowData === undefined) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Pasted data is is possible workflow data\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Check first if it is valid JSON\n\t\t\t\t\t\tworkflowData = JSON.parse(plainTextData);\n\n\t\t\t\t\t\tif (!this.editAllowedCheck()) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// Is no valid JSON so ignore\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn this.importWorkflowData(workflowData!, 'paste', false);\n\t\t\t}\n\t\t},\n\n\t\t// Returns the workflow data from a given URL. If no data gets found or\n\t\t// data is invalid it returns undefined and displays an error message by itself.\n\t\tasync getWorkflowDataFromUrl(url: string): Promise<IWorkflowDataUpdate | undefined> {\n\t\t\tlet workflowData: IWorkflowDataUpdate;\n\n\t\t\tthis.startLoading();\n\t\t\ttry {\n\t\t\t\tworkflowData = await this.workflowsStore.getWorkflowFromUrl(url);\n\t\t\t} catch (error) {\n\t\t\t\tthis.stopLoading();\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('nodeView.showError.getWorkflowDataFromUrl.title'),\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.stopLoading();\n\n\t\t\treturn workflowData;\n\t\t},\n\n\t\t// Imports the given workflow data into the current workflow\n\t\tasync importWorkflowData(\n\t\t\tworkflowData: IWorkflowToShare,\n\t\t\tsource: string,\n\t\t\timportTags = true,\n\t\t): Promise<void> {\n\t\t\t// eslint-disable-line @typescript-eslint/default-param-last\n\t\t\t// If it is JSON check if it looks on the first look like data we can use\n\t\t\tif (!workflowData.hasOwnProperty('nodes') || !workflowData.hasOwnProperty('connections')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst nodeIdMap: { [prev: string]: string } = {};\n\t\t\t\tif (workflowData.nodes) {\n\t\t\t\t\t// set all new ids when pasting/importing workflows\n\t\t\t\t\tworkflowData.nodes.forEach((node: INode) => {\n\t\t\t\t\t\tif (node.id) {\n\t\t\t\t\t\t\tconst newId = uuid();\n\t\t\t\t\t\t\tnodeIdMap[newId] = node.id;\n\t\t\t\t\t\t\tnode.id = newId;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode.id = uuid();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst currInstanceId = this.rootStore.instanceId;\n\n\t\t\t\tconst nodeGraph = JSON.stringify(\n\t\t\t\t\tTelemetryHelpers.generateNodesGraph(workflowData as IWorkflowBase, this.getNodeTypes(), {\n\t\t\t\t\t\tnodeIdMap,\n\t\t\t\t\t\tsourceInstanceId:\n\t\t\t\t\t\t\tworkflowData.meta && workflowData.meta.instanceId !== currInstanceId\n\t\t\t\t\t\t\t\t? workflowData.meta.instanceId\n\t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t}).nodeGraph,\n\t\t\t\t);\n\t\t\t\tif (source === 'paste') {\n\t\t\t\t\tthis.$telemetry.track('User pasted nodes', {\n\t\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\t\tnode_graph_string: nodeGraph,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.$telemetry.track('User imported workflow', {\n\t\t\t\t\t\tsource,\n\t\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\t\tnode_graph_string: nodeGraph,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// By default we automatically deselect all the currently\n\t\t\t\t// selected nodes and select the new ones\n\t\t\t\tthis.deselectAllNodes();\n\n\t\t\t\t// Fix the node position as it could be totally offscreen\n\t\t\t\t// and the pasted nodes would so not be directly visible to\n\t\t\t\t// the user\n\t\t\t\tthis.updateNodePositions(\n\t\t\t\t\tworkflowData,\n\t\t\t\t\tNodeViewUtils.getNewNodePosition(this.nodes, this.lastClickPosition),\n\t\t\t\t);\n\n\t\t\t\tconst data = await this.addNodesToWorkflow(workflowData);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tdata.nodes!.forEach((node: INodeUi) => {\n\t\t\t\t\t\tthis.nodeSelectedByName(node.name);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tif (workflowData.pinData) {\n\t\t\t\t\tthis.workflowsStore.setWorkflowPinData(workflowData.pinData);\n\t\t\t\t}\n\n\t\t\t\tconst tagsEnabled = this.settingsStore.areTagsEnabled;\n\t\t\t\tif (importTags && tagsEnabled && Array.isArray(workflowData.tags)) {\n\t\t\t\t\tconst allTags = await this.tagsStore.fetchAll();\n\t\t\t\t\tconst tagNames = new Set(allTags.map((tag) => tag.name));\n\n\t\t\t\t\tconst workflowTags = workflowData.tags as ITag[];\n\t\t\t\t\tconst notFound = workflowTags.filter((tag) => !tagNames.has(tag.name));\n\n\t\t\t\t\tconst creatingTagPromises: Array<Promise<ITag>> = [];\n\t\t\t\t\tfor (const tag of notFound) {\n\t\t\t\t\t\tconst creationPromise = this.tagsStore.create(tag.name).then((tag: ITag) => {\n\t\t\t\t\t\t\tallTags.push(tag);\n\t\t\t\t\t\t\treturn tag;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tcreatingTagPromises.push(creationPromise);\n\t\t\t\t\t}\n\n\t\t\t\t\tawait Promise.all(creatingTagPromises);\n\n\t\t\t\t\tconst tagIds = workflowTags.reduce((accu: string[], imported: ITag) => {\n\t\t\t\t\t\tconst tag = allTags.find((tag) => tag.name === imported.name);\n\t\t\t\t\t\tif (tag) {\n\t\t\t\t\t\t\taccu.push(tag.id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn accu;\n\t\t\t\t\t}, []);\n\n\t\t\t\t\tthis.workflowsStore.addWorkflowTagIds(tagIds);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('nodeView.showError.importWorkflowData.title'),\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tonDragOver(event: DragEvent) {\n\t\t\tevent.preventDefault();\n\t\t},\n\n\t\tonDrop(event: DragEvent) {\n\t\t\tif (!event.dataTransfer) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nodeTypeNames = event.dataTransfer.getData('nodeTypeName').split(',');\n\n\t\t\tif (nodeTypeNames) {\n\t\t\t\tconst mousePosition = this.getMousePositionWithinNodeView(event);\n\n\t\t\t\tconst nodesToAdd = nodeTypeNames.map((nodeTypeName: string, index: number) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnodeTypeName,\n\t\t\t\t\t\tposition: [\n\t\t\t\t\t\t\t// If adding more than one node, offset the X position\n\t\t\t\t\t\t\tmousePosition[0] -\n\t\t\t\t\t\t\t\tNodeViewUtils.NODE_SIZE / 2 +\n\t\t\t\t\t\t\t\tNodeViewUtils.NODE_SIZE * index * 2 +\n\t\t\t\t\t\t\t\tNodeViewUtils.GRID_SIZE,\n\t\t\t\t\t\t\tmousePosition[1] - NodeViewUtils.NODE_SIZE / 2,\n\t\t\t\t\t\t] as XYPosition,\n\t\t\t\t\t\tdragAndDrop: true,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tthis.onAddNode(nodesToAdd, true);\n\t\t\t\tthis.createNodeActive = false;\n\t\t\t}\n\t\t},\n\n\t\tnodeDeselectedByName(nodeName: string) {\n\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName);\n\t\t\tif (node) {\n\t\t\t\tthis.nodeDeselected(node);\n\t\t\t}\n\t\t},\n\n\t\tnodeSelectedByName(nodeName: string, setActive = false, deselectAllOthers?: boolean) {\n\t\t\tif (deselectAllOthers === true) {\n\t\t\t\tthis.deselectAllNodes();\n\t\t\t}\n\n\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName);\n\t\t\tif (node) {\n\t\t\t\tthis.nodeSelected(node);\n\t\t\t\tthis.uiStore.lastSelectedNode = node.name;\n\t\t\t\tthis.uiStore.lastSelectedNodeOutputIndex = null;\n\t\t\t\tthis.canvasStore.lastSelectedConnection = null;\n\t\t\t\tthis.canvasStore.newNodeInsertPosition = null;\n\n\t\t\t\tif (setActive) {\n\t\t\t\t\tthis.ndvStore.activeNodeName = node.name;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshowMaxNodeTypeError(nodeTypeData: INodeTypeDescription) {\n\t\t\tconst maxNodes = nodeTypeData.maxNodes;\n\t\t\tthis.$showMessage({\n\t\t\t\ttitle: this.$locale.baseText('nodeView.showMessage.showMaxNodeTypeError.title'),\n\t\t\t\tmessage: this.$locale.baseText('nodeView.showMessage.showMaxNodeTypeError.message', {\n\t\t\t\t\tadjustToNumber: maxNodes,\n\t\t\t\t\tinterpolate: { nodeTypeDataDisplayName: nodeTypeData.displayName },\n\t\t\t\t}),\n\t\t\t\ttype: 'error',\n\t\t\t\tduration: 0,\n\t\t\t});\n\t\t},\n\n\t\tasync getNewNodeWithDefaultCredential(nodeTypeData: INodeTypeDescription) {\n\t\t\tlet nodeVersion = nodeTypeData.defaultVersion;\n\n\t\t\tif (nodeVersion === undefined) {\n\t\t\t\tnodeVersion = Array.isArray(nodeTypeData.version)\n\t\t\t\t\t? nodeTypeData.version.slice(-1)[0]\n\t\t\t\t\t: nodeTypeData.version;\n\t\t\t}\n\n\t\t\tconst newNodeData: INodeUi = {\n\t\t\t\tid: uuid(),\n\t\t\t\tname: nodeTypeData.defaults.name as string,\n\t\t\t\ttype: nodeTypeData.name,\n\t\t\t\ttypeVersion: nodeVersion,\n\t\t\t\tposition: [0, 0],\n\t\t\t\tparameters: {},\n\t\t\t};\n\n\t\t\tconst credentialPerType =\n\t\t\t\tnodeTypeData.credentials &&\n\t\t\t\tnodeTypeData.credentials\n\t\t\t\t\t.map((type) => this.credentialsStore.getUsableCredentialByType(type.name))\n\t\t\t\t\t.flat();\n\n\t\t\tif (credentialPerType && credentialPerType.length === 1) {\n\t\t\t\tconst defaultCredential = credentialPerType[0];\n\n\t\t\t\tconst selectedCredentials = this.credentialsStore.getCredentialById(defaultCredential.id);\n\t\t\t\tconst selected = { id: selectedCredentials.id, name: selectedCredentials.name };\n\t\t\t\tconst credentials = {\n\t\t\t\t\t[defaultCredential.type]: selected,\n\t\t\t\t};\n\n\t\t\t\tawait this.loadNodesProperties(\n\t\t\t\t\t[newNodeData].map((node) => ({ name: node.type, version: node.typeVersion })),\n\t\t\t\t);\n\t\t\t\tconst nodeType = this.nodeTypesStore.getNodeType(newNodeData.type, newNodeData.typeVersion);\n\t\t\t\tconst nodeParameters = NodeHelpers.getNodeParameters(\n\t\t\t\t\tnodeType?.properties || [],\n\t\t\t\t\t{},\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse,\n\t\t\t\t\tnewNodeData,\n\t\t\t\t);\n\n\t\t\t\tif (nodeTypeData.credentials) {\n\t\t\t\t\tconst authentication = nodeTypeData.credentials.find(\n\t\t\t\t\t\t(type) => type.name === defaultCredential.type,\n\t\t\t\t\t);\n\t\t\t\t\tif (authentication?.displayOptions?.hide) {\n\t\t\t\t\t\treturn newNodeData;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst authDisplayOptions = authentication?.displayOptions?.show;\n\t\t\t\t\tif (!authDisplayOptions) {\n\t\t\t\t\t\tnewNodeData.credentials = credentials;\n\t\t\t\t\t\treturn newNodeData;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tObject.keys(authDisplayOptions).length === 1 &&\n\t\t\t\t\t\tauthDisplayOptions['authentication']\n\t\t\t\t\t) {\n\t\t\t\t\t\t// ignore complex case when there's multiple dependencies\n\t\t\t\t\t\tnewNodeData.credentials = credentials;\n\n\t\t\t\t\t\tlet parameters: { [key: string]: string } = {};\n\t\t\t\t\t\tfor (const displayOption of Object.keys(authDisplayOptions)) {\n\t\t\t\t\t\t\tif (nodeParameters && !nodeParameters[displayOption]) {\n\t\t\t\t\t\t\t\tparameters = {};\n\t\t\t\t\t\t\t\tnewNodeData.credentials = undefined;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst optionValue = authDisplayOptions[displayOption]?.[0];\n\t\t\t\t\t\t\tif (optionValue && typeof optionValue === 'string') {\n\t\t\t\t\t\t\t\tparameters[displayOption] = optionValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnewNodeData.parameters = {\n\t\t\t\t\t\t\t\t...newNodeData.parameters,\n\t\t\t\t\t\t\t\t...parameters,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn newNodeData;\n\t\t},\n\n\t\tasync injectNode(\n\t\t\tnodeTypeName: string,\n\t\t\toptions: AddNodeOptions = {},\n\t\t\tshowDetail = true,\n\t\t\ttrackHistory = false,\n\t\t\tisAutoAdd = false,\n\t\t) {\n\t\t\tconst nodeTypeData: INodeTypeDescription | null =\n\t\t\t\tthis.nodeTypesStore.getNodeType(nodeTypeName);\n\n\t\t\tif (nodeTypeData === null) {\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('nodeView.showMessage.addNodeButton.title'),\n\t\t\t\t\tmessage: this.$locale.baseText('nodeView.showMessage.addNodeButton.message', {\n\t\t\t\t\t\tinterpolate: { nodeTypeName },\n\t\t\t\t\t}),\n\t\t\t\t\ttype: 'error',\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tnodeTypeData.maxNodes !== undefined &&\n\t\t\t\tthis.getNodeTypeCount(nodeTypeName) >= nodeTypeData.maxNodes\n\t\t\t) {\n\t\t\t\tthis.showMaxNodeTypeError(nodeTypeData);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newNodeData = await this.getNewNodeWithDefaultCredential(nodeTypeData);\n\n\t\t\t// when pulling new connection from node or injecting into a connection\n\t\t\tconst lastSelectedNode = this.lastSelectedNode;\n\n\t\t\tif (options.position) {\n\t\t\t\tnewNodeData.position = NodeViewUtils.getNewNodePosition(\n\t\t\t\t\tthis.canvasStore.getNodesWithPlaceholderNode(),\n\t\t\t\t\toptions.position,\n\t\t\t\t);\n\t\t\t} else if (lastSelectedNode) {\n\t\t\t\tconst lastSelectedConnection = this.canvasStore.lastSelectedConnection;\n\t\t\t\tif (lastSelectedConnection) {\n\t\t\t\t\t// set when injecting into a connection\n\t\t\t\t\tconst [diffX] = NodeViewUtils.getConnectorLengths(lastSelectedConnection);\n\t\t\t\t\tif (diffX <= NodeViewUtils.MAX_X_TO_PUSH_DOWNSTREAM_NODES) {\n\t\t\t\t\t\tthis.pushDownstreamNodes(\n\t\t\t\t\t\t\tlastSelectedNode.name,\n\t\t\t\t\t\t\tNodeViewUtils.PUSH_NODES_OFFSET,\n\t\t\t\t\t\t\ttrackHistory,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// set when pulling connections\n\t\t\t\tif (this.canvasStore.newNodeInsertPosition) {\n\t\t\t\t\tnewNodeData.position = NodeViewUtils.getNewNodePosition(this.nodes, [\n\t\t\t\t\t\tthis.canvasStore.newNodeInsertPosition[0] + NodeViewUtils.GRID_SIZE,\n\t\t\t\t\t\tthis.canvasStore.newNodeInsertPosition[1] - NodeViewUtils.NODE_SIZE / 2,\n\t\t\t\t\t]);\n\t\t\t\t\tthis.canvasStore.newNodeInsertPosition = null;\n\t\t\t\t} else {\n\t\t\t\t\tlet yOffset = 0;\n\n\t\t\t\t\tif (lastSelectedConnection) {\n\t\t\t\t\t\tconst sourceNodeType = this.nodeTypesStore.getNodeType(\n\t\t\t\t\t\t\tlastSelectedNode.type,\n\t\t\t\t\t\t\tlastSelectedNode.typeVersion,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst offsets = [\n\t\t\t\t\t\t\t[-100, 100],\n\t\t\t\t\t\t\t[-140, 0, 140],\n\t\t\t\t\t\t\t[-240, -100, 100, 240],\n\t\t\t\t\t\t];\n\t\t\t\t\t\tif (sourceNodeType && sourceNodeType.outputs.length > 1) {\n\t\t\t\t\t\t\tconst offset = offsets[sourceNodeType.outputs.length - 2];\n\t\t\t\t\t\t\tconst sourceOutputIndex = lastSelectedConnection.__meta\n\t\t\t\t\t\t\t\t? lastSelectedConnection.__meta.sourceOutputIndex\n\t\t\t\t\t\t\t\t: 0;\n\t\t\t\t\t\t\tyOffset = offset[sourceOutputIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// If a node is active then add the new node directly after the current one\n\t\t\t\t\tnewNodeData.position = NodeViewUtils.getNewNodePosition(\n\t\t\t\t\t\tthis.nodes,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tlastSelectedNode.position[0] + NodeViewUtils.PUSH_NODES_OFFSET,\n\t\t\t\t\t\t\tlastSelectedNode.position[1] + yOffset,\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[100, 0],\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If added node is a trigger and it's the first one added to the canvas\n\t\t\t\t// we place it at canvasAddButtonPosition to replace the canvas add button\n\t\t\t\tconst position =\n\t\t\t\t\tthis.nodeTypesStore.isTriggerNode(nodeTypeName) && !this.containsTrigger\n\t\t\t\t\t\t? this.canvasStore.canvasAddButtonPosition\n\t\t\t\t\t\t: // If no node is active find a free spot\n\t\t\t\t\t\t  (this.lastClickPosition as XYPosition);\n\n\t\t\t\tnewNodeData.position = NodeViewUtils.getNewNodePosition(this.nodes, position);\n\t\t\t}\n\n\t\t\tconst localizedName = this.localizeNodeName(newNodeData.name, newNodeData.type);\n\n\t\t\tnewNodeData.name = this.uniqueNodeName(localizedName);\n\n\t\t\tif (nodeTypeData.webhooks && nodeTypeData.webhooks.length) {\n\t\t\t\tnewNodeData.webhookId = uuid();\n\t\t\t}\n\n\t\t\tawait this.addNodes([newNodeData], undefined, trackHistory);\n\t\t\tthis.workflowsStore.setNodePristine(newNodeData.name, true);\n\n\t\t\tthis.uiStore.stateIsDirty = true;\n\n\t\t\tif (nodeTypeName === STICKY_NODE_TYPE) {\n\t\t\t\tthis.$telemetry.trackNodesPanel('nodeView.addSticky', {\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.$externalHooks().run('nodeView.addNodeButton', { nodeTypeName });\n\t\t\t\tuseSegment().trackAddedTrigger(nodeTypeName);\n\t\t\t\tconst trackProperties: ITelemetryTrackProperties = {\n\t\t\t\t\tnode_type: nodeTypeName,\n\t\t\t\t\tis_auto_add: isAutoAdd,\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\tdrag_and_drop: options.dragAndDrop,\n\t\t\t\t};\n\n\t\t\t\tif (lastSelectedNode) {\n\t\t\t\t\ttrackProperties.input_node_type = lastSelectedNode.type;\n\t\t\t\t}\n\n\t\t\t\tthis.$telemetry.trackNodesPanel('nodeView.addNodeButton', trackProperties);\n\t\t\t}\n\n\t\t\t// Automatically deselect all nodes and select the current one and also active\n\t\t\t// current node. But only if it's added manually by the user (not by undo/redo mechanism)\n\t\t\tif (trackHistory) {\n\t\t\t\tthis.deselectAllNodes();\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.nodeSelectedByName(\n\t\t\t\t\t\tnewNodeData.name,\n\t\t\t\t\t\tshowDetail && nodeTypeName !== STICKY_NODE_TYPE,\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn newNodeData;\n\t\t},\n\t\tgetConnection(\n\t\t\tsourceNodeName: string,\n\t\t\tsourceNodeOutputIndex: number,\n\t\t\ttargetNodeName: string,\n\t\t\ttargetNodeOuputIndex: number,\n\t\t): IConnection | undefined {\n\t\t\tconst nodeConnections = (\n\t\t\t\tthis.workflowsStore.outgoingConnectionsByNodeName(sourceNodeName) as INodeConnections\n\t\t\t).main;\n\t\t\tif (nodeConnections) {\n\t\t\t\tconst connections: IConnection[] | null = nodeConnections[sourceNodeOutputIndex];\n\n\t\t\t\tif (connections) {\n\t\t\t\t\treturn connections.find(\n\t\t\t\t\t\t(connection: IConnection) =>\n\t\t\t\t\t\t\tconnection.node === targetNodeName && connection.index === targetNodeOuputIndex,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t},\n\t\tconnectTwoNodes(\n\t\t\tsourceNodeName: string,\n\t\t\tsourceNodeOutputIndex: number,\n\t\t\ttargetNodeName: string,\n\t\t\ttargetNodeOuputIndex: number,\n\t\t) {\n\t\t\tthis.uiStore.stateIsDirty = true;\n\n\t\t\tif (\n\t\t\t\tthis.getConnection(\n\t\t\t\t\tsourceNodeName,\n\t\t\t\t\tsourceNodeOutputIndex,\n\t\t\t\t\ttargetNodeName,\n\t\t\t\t\ttargetNodeOuputIndex,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst connectionData = [\n\t\t\t\t{\n\t\t\t\t\tnode: sourceNodeName,\n\t\t\t\t\ttype: 'main',\n\t\t\t\t\tindex: sourceNodeOutputIndex,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tnode: targetNodeName,\n\t\t\t\t\ttype: 'main',\n\t\t\t\t\tindex: targetNodeOuputIndex,\n\t\t\t\t},\n\t\t\t] as [IConnection, IConnection];\n\n\t\t\tthis.__addConnection(connectionData);\n\t\t},\n\t\tasync addNode(\n\t\t\tnodeTypeName: string,\n\t\t\toptions: AddNodeOptions = {},\n\t\t\tshowDetail = true,\n\t\t\ttrackHistory = false,\n\t\t\tisAutoAdd = false,\n\t\t) {\n\t\t\tif (!this.editAllowedCheck()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst lastSelectedConnection = this.canvasStore.lastSelectedConnection;\n\t\t\tconst lastSelectedNode = this.lastSelectedNode;\n\t\t\tconst lastSelectedNodeOutputIndex = this.uiStore.lastSelectedNodeOutputIndex;\n\n\t\t\tthis.historyStore.startRecordingUndo();\n\n\t\t\tconst newNodeData = await this.injectNode(\n\t\t\t\tnodeTypeName,\n\t\t\t\toptions,\n\t\t\t\tshowDetail,\n\t\t\t\ttrackHistory,\n\t\t\t\tisAutoAdd,\n\t\t\t);\n\t\t\tif (!newNodeData) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst outputIndex = lastSelectedNodeOutputIndex || 0;\n\n\t\t\t// If a node is last selected then connect between the active and its child ones\n\t\t\tif (lastSelectedNode) {\n\t\t\t\tawait Vue.nextTick();\n\n\t\t\t\tif (lastSelectedConnection && lastSelectedConnection.__meta) {\n\t\t\t\t\tthis.__deleteJSPlumbConnection(lastSelectedConnection, trackHistory);\n\n\t\t\t\t\tconst targetNodeName = lastSelectedConnection.__meta.targetNodeName;\n\t\t\t\t\tconst targetOutputIndex = lastSelectedConnection.__meta.targetOutputIndex;\n\t\t\t\t\tthis.connectTwoNodes(newNodeData.name, 0, targetNodeName, targetOutputIndex);\n\t\t\t\t}\n\n\t\t\t\t// Connect active node to the newly created one\n\t\t\t\tthis.connectTwoNodes(lastSelectedNode.name, outputIndex, newNodeData.name, 0);\n\t\t\t}\n\t\t\tthis.historyStore.stopRecordingUndo();\n\t\t},\n\t\tinsertNodeAfterSelected(info: {\n\t\t\tsourceId: string;\n\t\t\tindex: number;\n\t\t\teventSource: NodeCreatorOpenSource;\n\t\t\tconnection?: Connection;\n\t\t}) {\n\t\t\t// Get the node and set it as active that new nodes\n\t\t\t// which get created get automatically connected\n\t\t\t// to it.\n\t\t\tconst sourceNode = this.workflowsStore.getNodeById(info.sourceId);\n\t\t\tif (!sourceNode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.uiStore.lastSelectedNode = sourceNode.name;\n\t\t\tthis.uiStore.lastSelectedNodeOutputIndex = info.index;\n\t\t\tthis.canvasStore.newNodeInsertPosition = null;\n\n\t\t\tif (info.connection) {\n\t\t\t\tthis.canvasStore.lastSelectedConnection = info.connection;\n\t\t\t}\n\n\t\t\tthis.onToggleNodeCreator({\n\t\t\t\tsource: info.eventSource,\n\t\t\t\tcreateNodeActive: true,\n\t\t\t});\n\t\t},\n\t\tonEventConnectionAbort(connection: Connection) {\n\t\t\ttry {\n\t\t\t\tif (this.dropPrevented) {\n\t\t\t\t\tthis.dropPrevented = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.pullConnActiveNodeName) {\n\t\t\t\t\tconst sourceNode = this.workflowsStore.getNodeById(connection.parameters.nodeId);\n\t\t\t\t\tif (sourceNode) {\n\t\t\t\t\t\tconst sourceNodeName = sourceNode.name;\n\t\t\t\t\t\tconst outputIndex = connection.parameters.index;\n\n\t\t\t\t\t\tthis.connectTwoNodes(sourceNodeName, outputIndex, this.pullConnActiveNodeName, 0);\n\t\t\t\t\t\tthis.pullConnActiveNodeName = null;\n\t\t\t\t\t\tthis.dropPrevented = true;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.insertNodeAfterSelected({\n\t\t\t\t\tsourceId: connection.parameters.nodeId,\n\t\t\t\t\tindex: connection.parameters.index,\n\t\t\t\t\teventSource: NODE_CREATOR_OPEN_SOURCES.NODE_CONNECTION_DROP,\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e); // eslint-disable-line no-console\n\t\t\t}\n\t\t},\n\t\tonInterceptBeforeDrop(info: BeforeDropParams) {\n\t\t\ttry {\n\t\t\t\tconst sourceInfo = info.connection.endpoints[0].parameters;\n\t\t\t\tconst targetInfo = info.dropEndpoint.parameters;\n\n\t\t\t\tconst sourceNodeName = this.workflowsStore.getNodeById(sourceInfo.nodeId)?.name || '';\n\t\t\t\tconst targetNodeName = this.workflowsStore.getNodeById(targetInfo.nodeId)?.name || '';\n\n\t\t\t\t// check for duplicates\n\t\t\t\tif (\n\t\t\t\t\tthis.getConnection(sourceNodeName, sourceInfo.index, targetNodeName, targetInfo.index)\n\t\t\t\t) {\n\t\t\t\t\tthis.dropPrevented = true;\n\t\t\t\t\tthis.pullConnActiveNodeName = null;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e); // eslint-disable-line no-console\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tonEventConnection(info: ConnectionEstablishedParams) {\n\t\t\ttry {\n\t\t\t\tconst sourceInfo = info.sourceEndpoint.parameters;\n\t\t\t\tconst targetInfo = info.targetEndpoint.parameters;\n\n\t\t\t\tconst sourceNodeName = this.workflowsStore.getNodeById(sourceInfo.nodeId)?.name;\n\t\t\t\tconst targetNodeName = this.workflowsStore.getNodeById(targetInfo.nodeId)?.name;\n\n\t\t\t\tif (sourceNodeName && targetNodeName) {\n\t\t\t\t\tinfo.connection.__meta = {\n\t\t\t\t\t\tsourceNodeName,\n\t\t\t\t\t\tsourceOutputIndex: sourceInfo.index,\n\t\t\t\t\t\ttargetNodeName,\n\t\t\t\t\t\ttargetOutputIndex: targetInfo.index,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tNodeViewUtils.resetConnection(info.connection);\n\t\t\t\tNodeViewUtils.moveBackInputLabelPosition(info.targetEndpoint);\n\n\t\t\t\tconst connectionData: [IConnection, IConnection] = [\n\t\t\t\t\t{\n\t\t\t\t\t\tnode: sourceNodeName,\n\t\t\t\t\t\ttype: sourceInfo.type,\n\t\t\t\t\t\tindex: sourceInfo.index,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tnode: targetNodeName,\n\t\t\t\t\t\ttype: targetInfo.type,\n\t\t\t\t\t\tindex: targetInfo.index,\n\t\t\t\t\t},\n\t\t\t\t];\n\n\t\t\t\tthis.dropPrevented = true;\n\t\t\t\tthis.workflowsStore.addConnection({ connection: connectionData });\n\t\t\t\tthis.uiStore.stateIsDirty = true;\n\t\t\t\tif (!this.suspendRecordingDetachedConnections) {\n\t\t\t\t\tthis.historyStore.pushCommandToUndo(new AddConnectionCommand(connectionData));\n\t\t\t\t}\n\t\t\t\tif (!this.isReadOnly) {\n\t\t\t\t\tNodeViewUtils.addConnectionActionsOverlay(\n\t\t\t\t\t\tinfo.connection,\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.activeConnection = null;\n\t\t\t\t\t\t\tthis.__deleteJSPlumbConnection(info.connection);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tthis.insertNodeAfterSelected({\n\t\t\t\t\t\t\t\tsourceId: info.sourceEndpoint.parameters.nodeId,\n\t\t\t\t\t\t\t\tindex: sourceInfo.index,\n\t\t\t\t\t\t\t\tconnection: info.connection,\n\t\t\t\t\t\t\t\teventSource: NODE_CREATOR_OPEN_SOURCES.NODE_CONNECTION_ACTION,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tNodeViewUtils.addConnectionTestData(\n\t\t\t\t\t\t\tinfo.source,\n\t\t\t\t\t\t\tinfo.target,\n\t\t\t\t\t\t\t'canvas' in info.connection.connector\n\t\t\t\t\t\t\t\t? (info.connection.connector.canvas as HTMLElement)\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e); // eslint-disable-line no-console\n\t\t\t}\n\t\t},\n\t\tonDragMove() {\n\t\t\tthis.instance?.connections.forEach((connection) => {\n\t\t\t\tNodeViewUtils.showOrHideItemsLabel(connection);\n\t\t\t\tNodeViewUtils.showOrHideMidpointArrow(connection);\n\n\t\t\t\tObject.values(connection.overlays).forEach((overlay) => {\n\t\t\t\t\tif (!overlay.canvas) return;\n\t\t\t\t\tthis.instance?.repaint(overlay.canvas);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tonConnectionMouseOver(connection: Connection) {\n\t\t\ttry {\n\t\t\t\tif (this.exitTimer !== undefined) {\n\t\t\t\t\tclearTimeout(this.exitTimer);\n\t\t\t\t\tthis.exitTimer = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tthis.isReadOnly ||\n\t\t\t\t\tthis.enterTimer ||\n\t\t\t\t\t!connection ||\n\t\t\t\t\tconnection === this.activeConnection\n\t\t\t\t)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (this.activeConnection) NodeViewUtils.hideConnectionActions(this.activeConnection);\n\n\t\t\t\tthis.enterTimer = setTimeout(() => {\n\t\t\t\t\tthis.enterTimer = undefined;\n\t\t\t\t\tif (connection) {\n\t\t\t\t\t\tNodeViewUtils.showConnectionActions(connection);\n\t\t\t\t\t\tthis.activeConnection = connection;\n\t\t\t\t\t}\n\t\t\t\t}, 150);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e); // eslint-disable-line no-console\n\t\t\t}\n\t\t},\n\t\tonConnectionMouseOut(connection: Connection) {\n\t\t\ttry {\n\t\t\t\tif (this.exitTimer) return;\n\n\t\t\t\tif (this.enterTimer) {\n\t\t\t\t\tclearTimeout(this.enterTimer);\n\t\t\t\t\tthis.enterTimer = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (this.isReadOnly || !connection || this.activeConnection?.id !== connection.id) return;\n\n\t\t\t\tthis.exitTimer = setTimeout(() => {\n\t\t\t\t\tthis.exitTimer = undefined;\n\n\t\t\t\t\tif (connection && this.activeConnection === connection) {\n\t\t\t\t\t\tNodeViewUtils.hideConnectionActions(this.activeConnection);\n\t\t\t\t\t\tthis.activeConnection = null;\n\t\t\t\t\t}\n\t\t\t\t}, 500);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e); // eslint-disable-line no-console\n\t\t\t}\n\t\t},\n\t\tonConnectionMoved(info: ConnectionMovedParams) {\n\t\t\ttry {\n\t\t\t\t// When a connection gets moved from one node to another it for some reason\n\t\t\t\t// calls the \"connection\" event but not the \"connectionDetached\" one. So we listen\n\t\t\t\t// additionally to the \"connectionMoved\" event and then only delete the existing connection.\n\n\t\t\t\tNodeViewUtils.resetInputLabelPosition(info.connection);\n\n\t\t\t\tconst sourceInfo = info.connection.parameters;\n\t\t\t\tconst targetInfo = info.originalEndpoint.parameters;\n\n\t\t\t\tconst connectionInfo = [\n\t\t\t\t\t{\n\t\t\t\t\t\tnode: this.workflowsStore.getNodeById(sourceInfo.nodeId)?.name || '',\n\t\t\t\t\t\ttype: sourceInfo.type,\n\t\t\t\t\t\tindex: sourceInfo.index,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tnode: this.workflowsStore.getNodeById(targetInfo.nodeId)?.name || '',\n\t\t\t\t\t\ttype: targetInfo.type,\n\t\t\t\t\t\tindex: targetInfo.index,\n\t\t\t\t\t},\n\t\t\t\t] as [IConnection, IConnection];\n\n\t\t\t\tthis.__removeConnection(connectionInfo, false);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e); // eslint-disable-line no-console\n\t\t\t}\n\t\t},\n\t\tonEndpointMouseOver(endpoint: Endpoint, mouse) {\n\t\t\t// This event seems bugged. It gets called constantly even when the mouse is not over the endpoint\n\t\t\t// if the endpoint has a connection attached to it. So we need to check if the mouse is actually over\n\t\t\t// the endpoint.\n\t\t\tif (!endpoint.isTarget || mouse.target !== endpoint.endpoint.canvas) return;\n\t\t\tthis.instance.setHover(endpoint, true);\n\t\t},\n\t\tonEndpointMouseOut(endpoint: Endpoint) {\n\t\t\tif (!endpoint.isTarget) return;\n\t\t\tthis.instance.setHover(endpoint, false);\n\t\t},\n\t\tasync onConnectionDetached(info: ConnectionDetachedParams) {\n\t\t\ttry {\n\t\t\t\tconst connectionInfo: [IConnection, IConnection] | null = getConnectionInfo(info);\n\t\t\t\tNodeViewUtils.resetInputLabelPosition(info.targetEndpoint);\n\t\t\t\tinfo.connection.removeOverlays();\n\t\t\t\tthis.__removeConnectionByConnectionInfo(info, false, false);\n\n\t\t\t\tif (this.pullConnActiveNodeName) {\n\t\t\t\t\t// establish new connection when dragging connection from one node to another\n\t\t\t\t\tthis.historyStore.startRecordingUndo();\n\t\t\t\t\tconst sourceNode = this.workflowsStore.getNodeById(info.connection.parameters.nodeId);\n\t\t\t\t\tconst sourceNodeName = sourceNode.name;\n\t\t\t\t\tconst outputIndex = info.connection.parameters.index;\n\n\t\t\t\t\tif (connectionInfo) {\n\t\t\t\t\t\tthis.historyStore.pushCommandToUndo(new RemoveConnectionCommand(connectionInfo));\n\t\t\t\t\t}\n\t\t\t\t\tthis.connectTwoNodes(sourceNodeName, outputIndex, this.pullConnActiveNodeName, 0);\n\t\t\t\t\tthis.pullConnActiveNodeName = null;\n\t\t\t\t\tawait this.$nextTick();\n\t\t\t\t\tthis.historyStore.stopRecordingUndo();\n\t\t\t\t} else if (\n\t\t\t\t\t!this.historyStore.bulkInProgress &&\n\t\t\t\t\t!this.suspendRecordingDetachedConnections &&\n\t\t\t\t\tconnectionInfo\n\t\t\t\t) {\n\t\t\t\t\t// Ff connection being detached by user, save this in history\n\t\t\t\t\t// but skip if it's detached as a side effect of bulk undo/redo or node rename process\n\t\t\t\t\tconst removeCommand = new RemoveConnectionCommand(connectionInfo, this);\n\t\t\t\t\tthis.historyStore.pushCommandToUndo(removeCommand);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e); // eslint-disable-line no-console\n\t\t\t}\n\t\t},\n\t\tonConnectionDrag(connection: Connection) {\n\t\t\t// The overlays are visible by default so we need to hide the midpoint arrow\n\t\t\t// manually\n\t\t\tconnection.overlays['midpoint-arrow']?.setVisible(false);\n\t\t\ttry {\n\t\t\t\tthis.pullConnActiveNodeName = null;\n\t\t\t\tthis.pullConnActive = true;\n\t\t\t\tthis.canvasStore.newNodeInsertPosition = null;\n\t\t\t\tNodeViewUtils.resetConnection(connection);\n\n\t\t\t\tconst nodes = [...document.querySelectorAll('.node-wrapper')];\n\n\t\t\t\tconst onMouseMove = (e: MouseEvent | TouchEvent) => {\n\t\t\t\t\tif (!connection) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst element = document.querySelector('.jtk-endpoint.jtk-drag-hover');\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tconst endpoint = element.jtk.endpoint;\n\t\t\t\t\t\tNodeViewUtils.showDropConnectionState(connection, endpoint);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst inputMargin = 24;\n\t\t\t\t\tconst intersecting = nodes.find((element: Element) => {\n\t\t\t\t\t\tconst { top, left, right, bottom } = element.getBoundingClientRect();\n\t\t\t\t\t\tconst [x, y] = NodeViewUtils.getMousePosition(e);\n\t\t\t\t\t\tif (top <= y && bottom >= y && left - inputMargin <= x && right >= x) {\n\t\t\t\t\t\t\tconst nodeName = (element as HTMLElement).dataset['name'] as string;\n\t\t\t\t\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName) as INodeUi | null;\n\t\t\t\t\t\t\tif (node) {\n\t\t\t\t\t\t\t\tconst nodeType = this.nodeTypesStore.getNodeType(node.type, node.typeVersion);\n\t\t\t\t\t\t\t\tif (nodeType && nodeType.inputs && nodeType.inputs.length === 1) {\n\t\t\t\t\t\t\t\t\tthis.pullConnActiveNodeName = node.name;\n\t\t\t\t\t\t\t\t\tconst endpointUUID = this.getInputEndpointUUID(nodeName, 0);\n\t\t\t\t\t\t\t\t\tif (endpointUUID) {\n\t\t\t\t\t\t\t\t\t\tconst endpoint = this.instance?.getEndpoint(endpointUUID);\n\n\t\t\t\t\t\t\t\t\t\tNodeViewUtils.showDropConnectionState(connection, endpoint);\n\n\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!intersecting) {\n\t\t\t\t\t\tNodeViewUtils.showPullConnectionState(connection);\n\t\t\t\t\t\tthis.pullConnActiveNodeName = null;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst onMouseUp = (e: MouseEvent | TouchEvent) => {\n\t\t\t\t\tthis.pullConnActive = false;\n\t\t\t\t\tthis.canvasStore.newNodeInsertPosition = this.getMousePositionWithinNodeView(e);\n\t\t\t\t\tNodeViewUtils.resetConnectionAfterPull(connection);\n\t\t\t\t\twindow.removeEventListener('mousemove', onMouseMove);\n\t\t\t\t\twindow.removeEventListener('mouseup', onMouseUp);\n\t\t\t\t};\n\n\t\t\t\twindow.addEventListener('mousemove', onMouseMove);\n\t\t\t\twindow.addEventListener('touchmove', onMouseMove);\n\t\t\t\twindow.addEventListener('mouseup', onMouseUp);\n\t\t\t\twindow.addEventListener('touchend', onMouseMove);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e); // eslint-disable-line no-console\n\t\t\t}\n\t\t},\n\t\tonConnectionDragAbortDetached(connection: Connection) {\n\t\t\tObject.values(this.instance?.endpointsByElement)\n\t\t\t\t.flatMap((endpoints) => Object.values(endpoints))\n\t\t\t\t.filter((endpoint) => endpoint.endpoint.type === 'N8nPlus')\n\t\t\t\t.forEach((endpoint) => setTimeout(() => endpoint.instance.revalidate(endpoint.element), 0));\n\t\t},\n\t\tonPlusEndpointClick(endpoint: Endpoint) {\n\t\t\tif (endpoint && endpoint.__meta) {\n\t\t\t\tthis.insertNodeAfterSelected({\n\t\t\t\t\tsourceId: endpoint.__meta.nodeId,\n\t\t\t\t\tindex: endpoint.__meta.index,\n\t\t\t\t\teventSource: NODE_CREATOR_OPEN_SOURCES.PLUS_ENDPOINT,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tbindCanvasEvents() {\n\t\t\tthis.instance.bind(EVENT_CONNECTION_ABORT, this.onEventConnectionAbort);\n\n\t\t\tthis.instance.bind(INTERCEPT_BEFORE_DROP, this.onInterceptBeforeDrop);\n\n\t\t\tthis.instance.bind(EVENT_CONNECTION, this.onEventConnection);\n\n\t\t\tthis.instance.bind(EVENT_DRAG_MOVE, this.onDragMove);\n\t\t\tthis.instance.bind(EVENT_CONNECTION_MOUSEOVER, this.onConnectionMouseOver);\n\t\t\tthis.instance.bind(EVENT_CONNECTION_MOUSEOUT, this.onConnectionMouseOut);\n\n\t\t\tthis.instance.bind(EVENT_CONNECTION_MOVED, this.onConnectionMoved);\n\t\t\tthis.instance.bind(EVENT_ENDPOINT_MOUSEOVER, this.onEndpointMouseOver);\n\t\t\tthis.instance.bind(EVENT_ENDPOINT_MOUSEOUT, this.onEndpointMouseOut);\n\t\t\tthis.instance.bind(EVENT_CONNECTION_DETACHED, this.onConnectionDetached);\n\t\t\tthis.instance.bind(EVENT_CONNECTION_DRAG, this.onConnectionDrag);\n\t\t\tthis.instance.bind(\n\t\t\t\t[EVENT_CONNECTION_DRAG, EVENT_CONNECTION_ABORT, EVENT_CONNECTION_DETACHED],\n\t\t\t\tthis.onConnectionDragAbortDetached,\n\t\t\t);\n\t\t\tthis.instance.bind(EVENT_PLUS_ENDPOINT_CLICK, this.onPlusEndpointClick);\n\t\t},\n\t\tunbindCanvasEvents() {\n\t\t\tthis.instance.unbind(EVENT_CONNECTION_ABORT, this.onEventConnectionAbort);\n\n\t\t\tthis.instance.unbind(INTERCEPT_BEFORE_DROP, this.onInterceptBeforeDrop);\n\n\t\t\tthis.instance.unbind(EVENT_CONNECTION, this.onEventConnection);\n\n\t\t\tthis.instance.unbind(EVENT_DRAG_MOVE, this.onDragMove);\n\t\t\tthis.instance.unbind(EVENT_CONNECTION_MOUSEOVER, this.onConnectionMouseOver);\n\t\t\tthis.instance.unbind(EVENT_CONNECTION_MOUSEOUT, this.onConnectionMouseOut);\n\n\t\t\tthis.instance.unbind(EVENT_CONNECTION_MOVED, this.onConnectionMoved);\n\t\t\tthis.instance.unbind(EVENT_ENDPOINT_MOUSEOVER, this.onEndpointMouseOver);\n\t\t\tthis.instance.unbind(EVENT_ENDPOINT_MOUSEOUT, this.onEndpointMouseOut);\n\t\t\tthis.instance.unbind(EVENT_CONNECTION_DETACHED, this.onConnectionDetached);\n\t\t\tthis.instance.unbind(EVENT_CONNECTION_DRAG, this.onConnectionDrag);\n\n\t\t\tthis.instance.unbind(EVENT_CONNECTION_DRAG, this.onConnectionDragAbortDetached);\n\t\t\tthis.instance.unbind(EVENT_CONNECTION_ABORT, this.onConnectionDragAbortDetached);\n\t\t\tthis.instance.unbind(EVENT_CONNECTION_DETACHED, this.onConnectionDragAbortDetached);\n\t\t\tthis.instance.unbind(EVENT_PLUS_ENDPOINT_CLICK, this.onPlusEndpointClick);\n\n\t\t\t// Get all the endpoints and unbind the events\n\t\t\tconst elements = this.instance.getManagedElements();\n\t\t\tfor (const element of Object.values(elements)) {\n\t\t\t\tconst endpoints = element.endpoints;\n\t\t\t\tfor (const endpoint of endpoints || []) {\n\t\t\t\t\tconst endpointInstance = endpoint?.endpoint;\n\t\t\t\t\tif (endpointInstance && endpointInstance.type === N8nPlusEndpointType) {\n\t\t\t\t\t\t(endpointInstance as N8nPlusEndpoint).unbindEvents();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonBeforeUnload(e) {\n\t\t\tif (this.isDemo || window.preventNodeViewBeforeUnload) {\n\t\t\t\treturn;\n\t\t\t} else if (this.uiStore.stateIsDirty) {\n\t\t\t\tconst confirmationMessage = this.$locale.baseText(\n\t\t\t\t\t'nodeView.itLooksLikeYouHaveBeenEditingSomething',\n\t\t\t\t);\n\t\t\t\t(e || window.event).returnValue = confirmationMessage; //Gecko + IE\n\t\t\t\treturn confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\n\t\t\t} else {\n\t\t\t\tthis.startLoading(this.$locale.baseText('nodeView.redirecting'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\tasync newWorkflow(): Promise<void> {\n\t\t\tthis.startLoading();\n\t\t\tthis.resetWorkspace();\n\t\t\tthis.workflowData = await this.workflowsStore.getNewWorkflowData();\n\t\t\tthis.workflowsStore.currentWorkflowExecutions = [];\n\t\t\tthis.workflowsStore.activeWorkflowExecution = null;\n\n\t\t\tthis.uiStore.stateIsDirty = false;\n\t\t\tthis.canvasStore.setZoomLevel(1, [0, 0]);\n\t\t\tawait this.tryToAddWelcomeSticky();\n\t\t\tthis.uiStore.nodeViewInitialized = true;\n\t\t\tthis.historyStore.reset();\n\t\t\tthis.workflowsStore.activeWorkflowExecution = null;\n\t\t\tthis.stopLoading();\n\t\t},\n\t\tasync tryToAddWelcomeSticky(): Promise<void> {\n\t\t\tconst newWorkflow = this.workflowData;\n\t\t\tthis.canvasStore.zoomToFit();\n\t\t},\n\t\tasync initView(): Promise<void> {\n\t\t\tif (this.$route.params.action === 'workflowSave') {\n\t\t\t\t// In case the workflow got saved we do not have to run init\n\t\t\t\t// as only the route changed but all the needed data is already loaded\n\t\t\t\tthis.uiStore.stateIsDirty = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.blankRedirect) {\n\t\t\t\tthis.blankRedirect = false;\n\t\t\t} else if (this.$route.name === VIEWS.TEMPLATE_IMPORT) {\n\t\t\t\tconst templateId = this.$route.params.id;\n\t\t\t\tawait this.openWorkflowTemplate(templateId);\n\t\t\t} else {\n\t\t\t\tconst result = this.uiStore.stateIsDirty;\n\t\t\t\tif (result) {\n\t\t\t\t\tconst confirmModal = await this.confirmModal(\n\t\t\t\t\t\tthis.$locale.baseText('generic.unsavedWork.confirmMessage.message'),\n\t\t\t\t\t\tthis.$locale.baseText('generic.unsavedWork.confirmMessage.headline'),\n\t\t\t\t\t\t'warning',\n\t\t\t\t\t\tthis.$locale.baseText('generic.unsavedWork.confirmMessage.confirmButtonText'),\n\t\t\t\t\t\tthis.$locale.baseText('generic.unsavedWork.confirmMessage.cancelButtonText'),\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t\tif (confirmModal === MODAL_CONFIRMED) {\n\t\t\t\t\t\tconst saved = await this.saveCurrentWorkflow();\n\t\t\t\t\t\tif (saved) await this.settingsStore.fetchPromptsData();\n\t\t\t\t\t} else if (confirmModal === MODAL_CLOSE) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Load a workflow\n\t\t\t\tlet workflowId = null as string | null;\n\t\t\t\tif (this.$route.params.name) {\n\t\t\t\t\tworkflowId = this.$route.params.name;\n\t\t\t\t}\n\t\t\t\tif (workflowId !== null) {\n\t\t\t\t\tlet workflow: IWorkflowDb | undefined = undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tworkflow = await this.workflowsStore.fetchWorkflow(workflowId);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.$showError(error, this.$locale.baseText('openWorkflow.workflowNotFoundError'));\n\n\t\t\t\t\t\tvoid this.$router.push({\n\t\t\t\t\t\t\tname: VIEWS.NEW_WORKFLOW,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (workflow) {\n\t\t\t\t\t\tthis.titleSet(workflow.name, 'IDLE');\n\t\t\t\t\t\t// Open existing workflow\n\t\t\t\t\t\tawait this.openWorkflow(workflow);\n\t\t\t\t\t}\n\t\t\t\t} else if (this.$route.meta?.nodeView === true) {\n\t\t\t\t\t// Create new workflow\n\t\t\t\t\tawait this.newWorkflow();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.historyStore.reset();\n\t\t\tthis.uiStore.nodeViewInitialized = true;\n\t\t\tdocument.addEventListener('keydown', this.keyDown);\n\t\t\tdocument.addEventListener('keyup', this.keyUp);\n\n\t\t\twindow.addEventListener('beforeunload', this.onBeforeUnload);\n\t\t},\n\t\tgetOutputEndpointUUID(nodeName: string, index: number): string | null {\n\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName);\n\t\t\tif (!node) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn NodeViewUtils.getOutputEndpointUUID(node.id, index);\n\t\t},\n\t\tgetInputEndpointUUID(nodeName: string, index: number) {\n\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName);\n\t\t\tif (!node) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn NodeViewUtils.getInputEndpointUUID(node.id, index);\n\t\t},\n\t\t__addConnection(connection: [IConnection, IConnection]) {\n\t\t\tconst outputUuid = this.getOutputEndpointUUID(connection[0].node, connection[0].index);\n\t\t\tconst inputUuid = this.getInputEndpointUUID(connection[1].node, connection[1].index);\n\t\t\tif (!outputUuid || !inputUuid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst uuid: [string, string] = [outputUuid, inputUuid];\n\t\t\t// Create connections in DOM\n\t\t\tthis.instance?.connect({\n\t\t\t\tuuids: uuid,\n\t\t\t\tdetachable: !this.isReadOnly,\n\t\t\t});\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.addPinDataConnections(this.workflowsStore.pinData);\n\t\t\t});\n\t\t},\n\t\t__removeConnection(connection: [IConnection, IConnection], removeVisualConnection = false) {\n\t\t\tif (removeVisualConnection) {\n\t\t\t\tconst sourceNode = this.workflowsStore.getNodeByName(connection[0].node);\n\t\t\t\tconst targetNode = this.workflowsStore.getNodeByName(connection[1].node);\n\n\t\t\t\tif (!sourceNode || !targetNode) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst connections = this.instance?.getConnections({\n\t\t\t\t\tsource: sourceNode.id,\n\t\t\t\t\ttarget: targetNode.id,\n\t\t\t\t});\n\n\t\t\t\tconnections.forEach((connectionInstance: Connection) => {\n\t\t\t\t\tif (connectionInstance.__meta) {\n\t\t\t\t\t\t// Only delete connections from specific indexes (if it can be determined by meta)\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tconnectionInstance.__meta.sourceOutputIndex === connection[0].index &&\n\t\t\t\t\t\t\tconnectionInstance.__meta.targetOutputIndex === connection[1].index\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.__deleteJSPlumbConnection(connectionInstance);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.__deleteJSPlumbConnection(connectionInstance);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.workflowsStore.removeConnection({ connection });\n\t\t},\n\t\t__deleteJSPlumbConnection(connection: Connection, trackHistory = false) {\n\t\t\t// Make sure to remove the overlay else after the second move\n\t\t\t// it visibly stays behind free floating without a connection.\n\t\t\tconnection.removeOverlays();\n\n\t\t\tthis.pullConnActiveNodeName = null; // prevent new connections when connectionDetached is triggered\n\t\t\tthis.instance?.deleteConnection(connection); // on delete, triggers connectionDetached event which applies mutation to store\n\t\t\tif (trackHistory && connection.__meta) {\n\t\t\t\tconst connectionData: [IConnection, IConnection] = [\n\t\t\t\t\t{\n\t\t\t\t\t\tindex: connection.__meta?.sourceOutputIndex,\n\t\t\t\t\t\tnode: connection.__meta.sourceNodeName,\n\t\t\t\t\t\ttype: 'main',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tindex: connection.__meta?.targetOutputIndex,\n\t\t\t\t\t\tnode: connection.__meta.targetNodeName,\n\t\t\t\t\t\ttype: 'main',\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t\tconst removeCommand = new RemoveConnectionCommand(connectionData, this);\n\t\t\t\tthis.historyStore.pushCommandToUndo(removeCommand);\n\t\t\t}\n\t\t},\n\t\t__removeConnectionByConnectionInfo(info, removeVisualConnection = false, trackHistory = false) {\n\t\t\tconst connectionInfo: [IConnection, IConnection] | null = getConnectionInfo(info);\n\n\t\t\tif (connectionInfo) {\n\t\t\t\tif (removeVisualConnection) {\n\t\t\t\t\tthis.__deleteJSPlumbConnection(info.connection, trackHistory);\n\t\t\t\t} else if (trackHistory) {\n\t\t\t\t\tthis.historyStore.pushCommandToUndo(new RemoveConnectionCommand(connectionInfo));\n\t\t\t\t}\n\t\t\t\tthis.workflowsStore.removeConnection({ connection: connectionInfo });\n\t\t\t}\n\t\t},\n\t\tasync duplicateNode(nodeName: string) {\n\t\t\tif (!this.editAllowedCheck()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName);\n\n\t\t\tif (node) {\n\t\t\t\tconst nodeTypeData = this.nodeTypesStore.getNodeType(node.type, node.typeVersion);\n\n\t\t\t\tif (\n\t\t\t\t\tnodeTypeData &&\n\t\t\t\t\tnodeTypeData.maxNodes !== undefined &&\n\t\t\t\t\tthis.getNodeTypeCount(node.type) >= nodeTypeData.maxNodes\n\t\t\t\t) {\n\t\t\t\t\tthis.showMaxNodeTypeError(nodeTypeData);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Deep copy the data so that data on lower levels of the node-properties do\n\t\t\t\t// not share objects\n\t\t\t\tconst newNodeData = deepCopy(this.getNodeDataToSave(node));\n\t\t\t\tnewNodeData.id = uuid();\n\n\t\t\t\tconst localizedName = this.localizeNodeName(newNodeData.name, newNodeData.type);\n\n\t\t\t\tnewNodeData.name = this.uniqueNodeName(localizedName);\n\n\t\t\t\tnewNodeData.position = NodeViewUtils.getNewNodePosition(\n\t\t\t\t\tthis.nodes,\n\t\t\t\t\t[node.position[0], node.position[1] + 140],\n\t\t\t\t\t[0, 140],\n\t\t\t\t);\n\n\t\t\t\tif (newNodeData.webhookId) {\n\t\t\t\t\t// Make sure that the node gets a new unique webhook-ID\n\t\t\t\t\tnewNodeData.webhookId = uuid();\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tnewNodeData.credentials &&\n\t\t\t\t\tthis.settingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.Sharing)\n\t\t\t\t) {\n\t\t\t\t\tconst usedCredentials = this.workflowsStore.usedCredentials;\n\t\t\t\t\tnewNodeData.credentials = Object.fromEntries(\n\t\t\t\t\t\tObject.entries(newNodeData.credentials).filter(([_, credential]) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\tcredential.id &&\n\t\t\t\t\t\t\t\t(!usedCredentials[credential.id] ||\n\t\t\t\t\t\t\t\t\tusedCredentials[credential.id]?.currentUserHasAccess)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tawait this.addNodes([newNodeData], [], true);\n\n\t\t\t\tconst pinData = this.workflowsStore.pinDataByNodeName(nodeName);\n\t\t\t\tif (pinData) {\n\t\t\t\t\tthis.workflowsStore.pinData({\n\t\t\t\t\t\tnode: newNodeData,\n\t\t\t\t\t\tdata: pinData,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.uiStore.stateIsDirty = true;\n\n\t\t\t\t// Automatically deselect all nodes and select the current one and also active\n\t\t\t\t// current node\n\t\t\t\tthis.deselectAllNodes();\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.nodeSelectedByName(newNodeData.name, false);\n\t\t\t\t});\n\n\t\t\t\tthis.$telemetry.track('User duplicated node', {\n\t\t\t\t\tnode_type: node.type,\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tgetJSPlumbConnection(\n\t\t\tsourceNodeName: string,\n\t\t\tsourceOutputIndex: number,\n\t\t\ttargetNodeName: string,\n\t\t\ttargetInputIndex: number,\n\t\t): Connection | undefined {\n\t\t\tconst sourceNode = this.workflowsStore.getNodeByName(sourceNodeName);\n\t\t\tconst targetNode = this.workflowsStore.getNodeByName(targetNodeName);\n\t\t\tif (!sourceNode || !targetNode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst sourceId = sourceNode.id;\n\t\t\tconst targetId = targetNode.id;\n\n\t\t\tconst sourceEndpoint = NodeViewUtils.getOutputEndpointUUID(sourceId, sourceOutputIndex);\n\t\t\tconst targetEndpoint = NodeViewUtils.getInputEndpointUUID(targetId, targetInputIndex);\n\n\t\t\t// @ts-ignore\n\t\t\tconst connections = this.instance?.getConnections({\n\t\t\t\tsource: sourceId,\n\t\t\t\ttarget: targetId,\n\t\t\t}) as Connection[];\n\n\t\t\treturn connections.find((connection: Connection) => {\n\t\t\t\tconst uuids = connection.getUuids();\n\t\t\t\treturn uuids[0] === sourceEndpoint && uuids[1] === targetEndpoint;\n\t\t\t});\n\t\t},\n\t\tgetJSPlumbEndpoints(nodeName: string): Endpoint[] {\n\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName);\n\t\t\tconst nodeEl = this.instance.getManagedElement(node?.id);\n\n\t\t\tconst endpoints = this.instance?.getEndpoints(nodeEl);\n\t\t\treturn endpoints;\n\t\t},\n\t\tgetPlusEndpoint(nodeName: string, outputIndex: number): Endpoint | undefined {\n\t\t\tconst endpoints = this.getJSPlumbEndpoints(nodeName);\n\t\t\treturn endpoints.find(\n\t\t\t\t(endpoint: Endpoint) =>\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tendpoint.endpoint.type === 'N8nPlus' && endpoint?.__meta?.index === outputIndex,\n\t\t\t);\n\t\t},\n\t\tgetIncomingOutgoingConnections(nodeName: string): {\n\t\t\tincoming: Connection[];\n\t\t\toutgoing: Connection[];\n\t\t} {\n\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName);\n\n\t\t\tif (node) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst outgoing = this.instance?.getConnections({\n\t\t\t\t\tsource: node.id,\n\t\t\t\t});\n\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst incoming = this.instance?.getConnections({\n\t\t\t\t\ttarget: node.id,\n\t\t\t\t}) as Connection[];\n\n\t\t\t\treturn {\n\t\t\t\t\tincoming,\n\t\t\t\t\toutgoing,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn { incoming: [], outgoing: [] };\n\t\t},\n\t\tonNodeMoved(node: INodeUi) {\n\t\t\tconst { incoming, outgoing } = this.getIncomingOutgoingConnections(node.name);\n\n\t\t\t[...incoming, ...outgoing].forEach((connection: Connection) => {\n\t\t\t\tNodeViewUtils.showOrHideMidpointArrow(connection);\n\t\t\t\tNodeViewUtils.showOrHideItemsLabel(connection);\n\t\t\t});\n\t\t},\n\t\tonNodeRun({\n\t\t\tname,\n\t\t\tdata,\n\t\t\twaiting,\n\t\t}: {\n\t\t\tname: string;\n\t\t\tdata: ITaskData[] | null;\n\t\t\twaiting: boolean;\n\t\t}) {\n\t\t\tconst pinData = this.workflowsStore.getPinData;\n\n\t\t\tif (pinData && pinData[name]) return;\n\n\t\t\tconst sourceNodeName = name;\n\t\t\tconst sourceNode = this.workflowsStore.getNodeByName(sourceNodeName);\n\t\t\tconst sourceId = sourceNode !== null ? sourceNode.id : '';\n\n\t\t\tif (data === null || data.length === 0 || waiting) {\n\t\t\t\tconst outgoing = this.instance?.getConnections({\n\t\t\t\t\tsource: sourceId,\n\t\t\t\t}) as Connection[];\n\n\t\t\t\toutgoing.forEach((connection: Connection) => {\n\t\t\t\t\tNodeViewUtils.resetConnection(connection);\n\t\t\t\t});\n\t\t\t\tconst endpoints = this.getJSPlumbEndpoints(sourceNodeName);\n\t\t\t\tendpoints.forEach((endpoint: Endpoint) => {\n\t\t\t\t\tif (endpoint.endpoint.type === 'N8nPlus') {\n\t\t\t\t\t\t(endpoint.endpoint as N8nPlusEndpoint).clearSuccessOutput();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nodeConnections =\n\t\t\t\tthis.workflowsStore.outgoingConnectionsByNodeName(sourceNodeName).main;\n\t\t\tconst outputMap = NodeViewUtils.getOutputSummary(data, nodeConnections || []);\n\n\t\t\tObject.keys(outputMap).forEach((sourceOutputIndex: string) => {\n\t\t\t\tObject.keys(outputMap[sourceOutputIndex]).forEach((targetNodeName: string) => {\n\t\t\t\t\tObject.keys(outputMap[sourceOutputIndex][targetNodeName]).forEach(\n\t\t\t\t\t\t(targetInputIndex: string) => {\n\t\t\t\t\t\t\tif (targetNodeName) {\n\t\t\t\t\t\t\t\tconst connection = this.getJSPlumbConnection(\n\t\t\t\t\t\t\t\t\tsourceNodeName,\n\t\t\t\t\t\t\t\t\tparseInt(sourceOutputIndex, 10),\n\t\t\t\t\t\t\t\t\ttargetNodeName,\n\t\t\t\t\t\t\t\t\tparseInt(targetInputIndex, 10),\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (connection) {\n\t\t\t\t\t\t\t\t\tconst output = outputMap[sourceOutputIndex][targetNodeName][targetInputIndex];\n\n\t\t\t\t\t\t\t\t\tif (output.isArtificialRecoveredEventItem) {\n\t\t\t\t\t\t\t\t\t\tNodeViewUtils.recoveredConnection(connection);\n\t\t\t\t\t\t\t\t\t} else if ((!output || !output.total) && !output.isArtificialRecoveredEventItem) {\n\t\t\t\t\t\t\t\t\t\tNodeViewUtils.resetConnection(connection);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tNodeViewUtils.addConnectionOutputSuccess(connection, output);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst endpoint = this.getPlusEndpoint(\n\t\t\t\t\t\t\t\tsourceNodeName,\n\t\t\t\t\t\t\t\tparseInt(sourceOutputIndex, 10),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (endpoint && endpoint.endpoint) {\n\t\t\t\t\t\t\t\tconst output = outputMap[sourceOutputIndex][NODE_OUTPUT_DEFAULT_KEY][0];\n\n\t\t\t\t\t\t\t\tif (output && output.total > 0) {\n\t\t\t\t\t\t\t\t\t(endpoint.endpoint as N8nPlusEndpoint).setSuccessOutput(\n\t\t\t\t\t\t\t\t\t\tNodeViewUtils.getRunItemsLabel(output),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t(endpoint.endpoint as N8nPlusEndpoint).clearSuccessOutput();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tremoveNode(nodeName: string, trackHistory = false, trackBulk = true) {\n\t\t\tif (!this.editAllowedCheck()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName);\n\t\t\tif (!node) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (trackHistory && trackBulk) {\n\t\t\t\tthis.historyStore.startRecordingUndo();\n\t\t\t}\n\n\t\t\t// \"requiredNodeTypes\" are also defined in cli/commands/run.ts\n\t\t\tconst requiredNodeTypes: string[] = [];\n\n\t\t\tif (requiredNodeTypes.includes(node.type)) {\n\t\t\t\t// The node is of the required type so check first\n\t\t\t\t// if any node of that type would be left when the\n\t\t\t\t// current one would get deleted.\n\t\t\t\tlet deleteAllowed = false;\n\t\t\t\tfor (const checkNode of this.nodes) {\n\t\t\t\t\tif (checkNode.name === node.name) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (requiredNodeTypes.includes(checkNode.type)) {\n\t\t\t\t\t\tdeleteAllowed = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!deleteAllowed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (node.type === STICKY_NODE_TYPE) {\n\t\t\t\tthis.$telemetry.track('User deleted workflow note', {\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t\tis_welcome_note: node.name === QUICKSTART_NOTE_NAME,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.$externalHooks().run('node.deleteNode', { node });\n\t\t\t\tthis.$telemetry.track('User deleted node', {\n\t\t\t\t\tnode_type: node.type,\n\t\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet waitForNewConnection = false;\n\t\t\t// connect nodes before/after deleted node\n\t\t\tconst nodeType = this.nodeTypesStore.getNodeType(node.type, node.typeVersion);\n\t\t\tif (nodeType && nodeType.outputs.length === 1 && nodeType.inputs.length === 1) {\n\t\t\t\tconst { incoming, outgoing } = this.getIncomingOutgoingConnections(node.name);\n\t\t\t\tif (incoming.length === 1 && outgoing.length === 1) {\n\t\t\t\t\tconst conn1 = incoming[0];\n\t\t\t\t\tconst conn2 = outgoing[0];\n\t\t\t\t\tif (conn1.__meta && conn2.__meta) {\n\t\t\t\t\t\twaitForNewConnection = true;\n\t\t\t\t\t\tconst sourceNodeName = conn1.__meta.sourceNodeName;\n\t\t\t\t\t\tconst sourceNodeOutputIndex = conn1.__meta.sourceOutputIndex;\n\t\t\t\t\t\tconst targetNodeName = conn2.__meta.targetNodeName;\n\t\t\t\t\t\tconst targetNodeOuputIndex = conn2.__meta.targetOutputIndex;\n\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tthis.connectTwoNodes(\n\t\t\t\t\t\t\t\tsourceNodeName,\n\t\t\t\t\t\t\t\tsourceNodeOutputIndex,\n\t\t\t\t\t\t\t\ttargetNodeName,\n\t\t\t\t\t\t\t\ttargetNodeOuputIndex,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (waitForNewConnection) {\n\t\t\t\t\t\t\t\tthis.instance?.setSuspendDrawing(false, true);\n\t\t\t\t\t\t\t\twaitForNewConnection = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 100); // just to make it clear to users that this is a new connection\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetTimeout(() => {\n\t\t\t\t// Suspend drawing\n\t\t\t\tthis.instance?.setSuspendDrawing(true);\n\t\t\t\t(this.instance?.endpointsByElement[node.id] || [])\n\t\t\t\t\t.flat()\n\t\t\t\t\t.forEach((endpoint) => this.instance?.deleteEndpoint(endpoint));\n\n\t\t\t\t// Remove the connections in data\n\t\t\t\tthis.workflowsStore.removeAllNodeConnection(node);\n\t\t\t\tthis.workflowsStore.removeNode(node);\n\t\t\t\tthis.workflowsStore.clearNodeExecutionData(node.name);\n\n\t\t\t\tif (!waitForNewConnection) {\n\t\t\t\t\t// Now it can draw again\n\t\t\t\t\tthis.instance?.setSuspendDrawing(false, true);\n\t\t\t\t}\n\n\t\t\t\t// Remove node from selected index if found in it\n\t\t\t\tthis.uiStore.removeNodeFromSelection(node);\n\t\t\t\tif (trackHistory) {\n\t\t\t\t\tthis.historyStore.pushCommandToUndo(new RemoveNodeCommand(node));\n\t\t\t\t}\n\t\t\t}, 0); // allow other events to finish like drag stop\n\t\t\tif (trackHistory && trackBulk) {\n\t\t\t\tconst recordingTimeout = waitForNewConnection ? 100 : 0;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.historyStore.stopRecordingUndo();\n\t\t\t\t}, recordingTimeout);\n\t\t\t}\n\t\t},\n\t\tvalueChanged(parameterData: IUpdateInformation) {\n\t\t\tif (parameterData.name === 'name' && parameterData.oldValue) {\n\t\t\t\t// The name changed so we have to take care that\n\t\t\t\t// the connections get changed.\n\t\t\t\tvoid this.renameNode(parameterData.oldValue as string, parameterData.value as string);\n\t\t\t}\n\t\t},\n\t\tasync renameNodePrompt(currentName: string) {\n\t\t\ttry {\n\t\t\t\tconst promptResponsePromise = this.$prompt(\n\t\t\t\t\tthis.$locale.baseText('nodeView.prompt.newName') + ':',\n\t\t\t\t\tthis.$locale.baseText('nodeView.prompt.renameNode') + `: ${currentName}`,\n\t\t\t\t\t{\n\t\t\t\t\t\tcustomClass: 'rename-prompt',\n\t\t\t\t\t\tconfirmButtonText: this.$locale.baseText('nodeView.prompt.rename'),\n\t\t\t\t\t\tcancelButtonText: this.$locale.baseText('nodeView.prompt.cancel'),\n\t\t\t\t\t\tinputErrorMessage: this.$locale.baseText('nodeView.prompt.invalidName'),\n\t\t\t\t\t\tinputValue: currentName,\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\t// Wait till it had time to display\n\t\t\t\tawait Vue.nextTick();\n\n\t\t\t\t// Get the input and select the text in it\n\t\t\t\tconst nameInput = document.querySelector('.rename-prompt .el-input__inner') as\n\t\t\t\t\t| HTMLInputElement\n\t\t\t\t\t| undefined;\n\t\t\t\tif (nameInput) {\n\t\t\t\t\tnameInput.focus();\n\t\t\t\t\tnameInput.select();\n\t\t\t\t}\n\n\t\t\t\tconst promptResponse = (await promptResponsePromise) as MessageBoxInputData;\n\n\t\t\t\tawait this.renameNode(currentName, promptResponse.value, true);\n\t\t\t} catch (e) {}\n\t\t},\n\t\tasync renameNode(currentName: string, newName: string, trackHistory = false) {\n\t\t\tif (currentName === newName) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.suspendRecordingDetachedConnections = true;\n\t\t\tif (trackHistory) {\n\t\t\t\tthis.historyStore.startRecordingUndo();\n\t\t\t}\n\n\t\t\tconst activeNodeName = this.activeNode && this.activeNode.name;\n\t\t\tconst isActive = activeNodeName === currentName;\n\t\t\tif (isActive) {\n\t\t\t\tthis.renamingActive = true;\n\t\t\t}\n\n\t\t\tnewName = this.uniqueNodeName(newName);\n\n\t\t\t// Rename the node and update the connections\n\t\t\tconst workflow = this.getCurrentWorkflow(true);\n\t\t\tworkflow.renameNode(currentName, newName);\n\n\t\t\tif (trackHistory) {\n\t\t\t\tthis.historyStore.pushCommandToUndo(new RenameNodeCommand(currentName, newName));\n\t\t\t}\n\n\t\t\t// Update also last selected node and execution data\n\t\t\tthis.workflowsStore.renameNodeSelectedAndExecution({ old: currentName, new: newName });\n\n\t\t\t// Reset all nodes and connections to load the new ones\n\t\t\tthis.deleteEveryEndpoint();\n\n\t\t\tthis.workflowsStore.removeAllConnections({ setStateDirty: false });\n\t\t\tthis.workflowsStore.removeAllNodes({ removePinData: false, setStateDirty: true });\n\n\t\t\t// Wait a tick that the old nodes had time to get removed\n\t\t\tawait Vue.nextTick();\n\n\t\t\t// Add the new updated nodes\n\t\t\tawait this.addNodes(Object.values(workflow.nodes), workflow.connectionsBySourceNode, false);\n\n\t\t\t// Make sure that the node is selected again\n\t\t\tthis.deselectAllNodes();\n\t\t\tthis.nodeSelectedByName(newName);\n\n\t\t\tif (isActive) {\n\t\t\t\tthis.ndvStore.activeNodeName = newName;\n\t\t\t\tthis.renamingActive = false;\n\t\t\t}\n\n\t\t\tif (trackHistory) {\n\t\t\t\tthis.historyStore.stopRecordingUndo();\n\t\t\t}\n\t\t\tthis.suspendRecordingDetachedConnections = false;\n\t\t},\n\t\tdeleteEveryEndpoint() {\n\t\t\t// Check as it does not exist on first load\n\t\t\tif (this.instance) {\n\t\t\t\tthis.instance?.reset();\n\t\t\t\tObject.values(this.instance?.endpointsByElement)\n\t\t\t\t\t.flatMap((endpoint) => endpoint)\n\t\t\t\t\t.forEach((endpoint) => endpoint.destroy());\n\n\t\t\t\tthis.instance.deleteEveryConnection({ fireEvent: true });\n\t\t\t}\n\t\t},\n\t\tmatchCredentials(node: INodeUi) {\n\t\t\tif (!node.credentials) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tObject.entries(node.credentials).forEach(\n\t\t\t\t([nodeCredentialType, nodeCredentials]: [string, INodeCredentialsDetails]) => {\n\t\t\t\t\tconst credentialOptions = this.credentialsStore.getCredentialsByType(nodeCredentialType);\n\n\t\t\t\t\t// Check if workflows applies old credentials style\n\t\t\t\t\tif (typeof nodeCredentials === 'string') {\n\t\t\t\t\t\tnodeCredentials = {\n\t\t\t\t\t\t\tid: null,\n\t\t\t\t\t\t\tname: nodeCredentials,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.credentialsUpdated = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nodeCredentials.id) {\n\t\t\t\t\t\t// Check whether the id is matching with a credential\n\t\t\t\t\t\tconst credentialsId = nodeCredentials.id.toString(); // due to a fixed bug in the migration UpdateWorkflowCredentials (just sqlite) we have to cast to string and check later if it has been a number\n\t\t\t\t\t\tconst credentialsForId = credentialOptions.find(\n\t\t\t\t\t\t\t(optionData: ICredentialsResponse) => optionData.id === credentialsId,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (credentialsForId) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tcredentialsForId.name !== nodeCredentials.name ||\n\t\t\t\t\t\t\t\ttypeof nodeCredentials.id === 'number'\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tnode.credentials![nodeCredentialType] = {\n\t\t\t\t\t\t\t\t\tid: credentialsForId.id,\n\t\t\t\t\t\t\t\t\tname: credentialsForId.name,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis.credentialsUpdated = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// No match for id found or old credentials type used\n\t\t\t\t\tnode.credentials![nodeCredentialType] = nodeCredentials;\n\n\t\t\t\t\t// check if only one option with the name would exist\n\t\t\t\t\tconst credentialsForName = credentialOptions.filter(\n\t\t\t\t\t\t(optionData: ICredentialsResponse) => optionData.name === nodeCredentials.name,\n\t\t\t\t\t);\n\n\t\t\t\t\t// only one option exists for the name, take it\n\t\t\t\t\tif (credentialsForName.length === 1) {\n\t\t\t\t\t\tnode.credentials![nodeCredentialType].id = credentialsForName[0].id;\n\t\t\t\t\t\tthis.credentialsUpdated = true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t},\n\t\tasync addNodes(nodes: INodeUi[], connections?: IConnections, trackHistory = false) {\n\t\t\tif (!nodes || !nodes.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Before proceeding we must check if all nodes contain the `properties` attribute.\n\t\t\t// Nodes are loaded without this information so we must make sure that all nodes\n\t\t\t// being added have this information.\n\t\t\tawait this.loadNodesProperties(\n\t\t\t\tnodes.map((node) => ({ name: node.type, version: node.typeVersion })),\n\t\t\t);\n\n\t\t\t// Add the node to the node-list\n\t\t\tlet nodeType: INodeTypeDescription | null;\n\t\t\tlet foundNodeIssues: INodeIssues | null;\n\t\t\tnodes.forEach((node) => {\n\t\t\t\tif (!node.id) {\n\t\t\t\t\tnode.id = uuid();\n\t\t\t\t}\n\n\t\t\t\tnodeType = this.nodeTypesStore.getNodeType(node.type, node.typeVersion);\n\n\t\t\t\t// Make sure that some properties always exist\n\t\t\t\tif (!node.hasOwnProperty('disabled')) {\n\t\t\t\t\tnode.disabled = false;\n\t\t\t\t}\n\n\t\t\t\tif (!node.hasOwnProperty('parameters')) {\n\t\t\t\t\tnode.parameters = {};\n\t\t\t\t}\n\n\t\t\t\t// Load the defaul parameter values because only values which differ\n\t\t\t\t// from the defaults get saved\n\t\t\t\tif (nodeType !== null) {\n\t\t\t\t\tlet nodeParameters = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnodeParameters = NodeHelpers.getNodeParameters(\n\t\t\t\t\t\t\tnodeType.properties,\n\t\t\t\t\t\t\tnode.parameters,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\tthis.$locale.baseText('nodeView.thereWasAProblemLoadingTheNodeParametersOfNode') +\n\t\t\t\t\t\t\t\t`: \"${node.name}\"`,\n\t\t\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\t\t\tconsole.error(e); // eslint-disable-line no-console\n\t\t\t\t\t}\n\t\t\t\t\tnode.parameters = nodeParameters !== null ? nodeParameters : {};\n\n\t\t\t\t\t// if it's a webhook and the path is empty set the UUID as the default path\n\t\t\t\t\tif (node.type === WEBHOOK_NODE_TYPE && node.parameters.path === '') {\n\t\t\t\t\t\tnode.parameters.path = node.webhookId as string;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// check and match credentials, apply new format if old is used\n\t\t\t\tthis.matchCredentials(node);\n\n\t\t\t\tfoundNodeIssues = this.getNodeIssues(nodeType, node);\n\n\t\t\t\tif (foundNodeIssues !== null) {\n\t\t\t\t\tnode.issues = foundNodeIssues;\n\t\t\t\t}\n\n\t\t\t\tthis.workflowsStore.addNode(node);\n\t\t\t\tif (trackHistory) {\n\t\t\t\t\tthis.historyStore.pushCommandToUndo(new AddNodeCommand(node));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Wait for the node to be rendered\n\t\t\tawait Vue.nextTick();\n\n\t\t\t// Suspend drawing\n\t\t\tthis.instance?.setSuspendDrawing(true);\n\n\t\t\t// Load the connections\n\t\t\tif (connections !== undefined) {\n\t\t\t\tlet connectionData;\n\t\t\t\tfor (const sourceNode of Object.keys(connections)) {\n\t\t\t\t\tfor (const type of Object.keys(connections[sourceNode])) {\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tlet sourceIndex = 0;\n\t\t\t\t\t\t\tsourceIndex < connections[sourceNode][type].length;\n\t\t\t\t\t\t\tsourceIndex++\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst outwardConnections = connections[sourceNode][type][sourceIndex];\n\t\t\t\t\t\t\tif (!outwardConnections) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toutwardConnections.forEach((targetData) => {\n\t\t\t\t\t\t\t\tconnectionData = [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode: sourceNode,\n\t\t\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\t\t\tindex: sourceIndex,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode: targetData.node,\n\t\t\t\t\t\t\t\t\t\ttype: targetData.type,\n\t\t\t\t\t\t\t\t\t\tindex: targetData.index,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t] as [IConnection, IConnection];\n\n\t\t\t\t\t\t\t\tthis.__addConnection(connectionData);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Now it can draw again\n\t\t\tthis.instance?.setSuspendDrawing(false, true);\n\t\t},\n\t\tasync addNodesToWorkflow(data: IWorkflowDataUpdate): Promise<IWorkflowDataUpdate> {\n\t\t\t// Because nodes with the same name maybe already exist, it could\n\t\t\t// be needed that they have to be renamed. Also could it be possible\n\t\t\t// that nodes are not allowd to be created because they have a create\n\t\t\t// limit set. So we would then link the new nodes with the already existing ones.\n\t\t\t// In this object all that nodes get saved in the format:\n\t\t\t//   old-name -> new-name\n\t\t\tconst nodeNameTable: {\n\t\t\t\t[key: string]: string;\n\t\t\t} = {};\n\t\t\tconst newNodeNames: string[] = [];\n\n\t\t\tif (!data.nodes) {\n\t\t\t\t// No nodes to add\n\t\t\t\tthrow new Error(this.$locale.baseText('nodeView.noNodesGivenToAdd'));\n\t\t\t}\n\n\t\t\t// Get how many of the nodes of the types which have\n\t\t\t// a max limit set already exist\n\t\t\tconst nodeTypesCount = this.getNodeTypesMaxCount();\n\n\t\t\tlet oldName: string;\n\t\t\tlet newName: string;\n\t\t\tconst createNodes: INode[] = [];\n\n\t\t\tawait this.loadNodesProperties(\n\t\t\t\tdata.nodes.map((node) => ({ name: node.type, version: node.typeVersion })),\n\t\t\t);\n\n\t\t\tdata.nodes.forEach((node) => {\n\t\t\t\tif (nodeTypesCount[node.type] !== undefined) {\n\t\t\t\t\tif (nodeTypesCount[node.type].exist >= nodeTypesCount[node.type].max) {\n\t\t\t\t\t\t// Node is not allowed to be created so\n\t\t\t\t\t\t// do not add it to the create list but\n\t\t\t\t\t\t// add the name of the existing node\n\t\t\t\t\t\t// that this one gets linked up instead.\n\t\t\t\t\t\tnodeNameTable[node.name] = nodeTypesCount[node.type].nodeNames[0];\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Node can be created but increment the\n\t\t\t\t\t\t// counter in case multiple ones are\n\t\t\t\t\t\t// supposed to be created\n\t\t\t\t\t\tnodeTypesCount[node.type].exist += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toldName = node.name;\n\n\t\t\t\tconst localized = this.localizeNodeName(node.name, node.type);\n\n\t\t\t\tnewName = this.uniqueNodeName(localized, newNodeNames);\n\n\t\t\t\tnewNodeNames.push(newName);\n\t\t\t\tnodeNameTable[oldName] = newName;\n\n\t\t\t\tcreateNodes.push(node);\n\t\t\t});\n\n\t\t\t// Get only the connections of the nodes that get created\n\t\t\tconst newConnections: IConnections = {};\n\t\t\tconst currentConnections = data.connections!;\n\t\t\tconst createNodeNames = createNodes.map((node) => node.name);\n\t\t\tlet sourceNode, type, sourceIndex, connectionIndex, connectionData;\n\t\t\tfor (sourceNode of Object.keys(currentConnections)) {\n\t\t\t\tif (!createNodeNames.includes(sourceNode)) {\n\t\t\t\t\t// Node does not get created so skip output connections\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst connection: INodeConnections = {};\n\n\t\t\t\tfor (type of Object.keys(currentConnections[sourceNode])) {\n\t\t\t\t\tconnection[type] = [];\n\t\t\t\t\tfor (\n\t\t\t\t\t\tsourceIndex = 0;\n\t\t\t\t\t\tsourceIndex < currentConnections[sourceNode][type].length;\n\t\t\t\t\t\tsourceIndex++\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst nodeSourceConnections = [];\n\t\t\t\t\t\tif (currentConnections[sourceNode][type][sourceIndex]) {\n\t\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\t\tconnectionIndex = 0;\n\t\t\t\t\t\t\t\tconnectionIndex < currentConnections[sourceNode][type][sourceIndex].length;\n\t\t\t\t\t\t\t\tconnectionIndex++\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconnectionData = currentConnections[sourceNode][type][sourceIndex][connectionIndex];\n\t\t\t\t\t\t\t\tif (!createNodeNames.includes(connectionData.node)) {\n\t\t\t\t\t\t\t\t\t// Node does not get created so skip input connection\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnodeSourceConnections.push(connectionData);\n\t\t\t\t\t\t\t\t// Add connection\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconnection[type].push(nodeSourceConnections);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnewConnections[sourceNode] = connection;\n\t\t\t}\n\n\t\t\t// Create a workflow with the new nodes and connections that we can use\n\t\t\t// the rename method\n\t\t\tconst tempWorkflow: Workflow = this.getWorkflow(createNodes, newConnections);\n\n\t\t\t// Rename all the nodes of which the name changed\n\t\t\tfor (oldName in nodeNameTable) {\n\t\t\t\tif (oldName === nodeNameTable[oldName]) {\n\t\t\t\t\t// Name did not change so skip\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ttempWorkflow.renameNode(oldName, nodeNameTable[oldName]);\n\t\t\t}\n\n\t\t\t// Add the nodes with the changed node names, expressions and connections\n\t\t\tthis.historyStore.startRecordingUndo();\n\t\t\tawait this.addNodes(\n\t\t\t\tObject.values(tempWorkflow.nodes),\n\t\t\t\ttempWorkflow.connectionsBySourceNode,\n\t\t\t\ttrue,\n\t\t\t);\n\n\t\t\tthis.historyStore.stopRecordingUndo();\n\n\t\t\tthis.uiStore.stateIsDirty = true;\n\n\t\t\treturn {\n\t\t\t\tnodes: Object.values(tempWorkflow.nodes),\n\t\t\t\tconnections: tempWorkflow.connectionsBySourceNode,\n\t\t\t};\n\t\t},\n\t\tasync getSelectedNodesToSave(): Promise<IWorkflowData> {\n\t\t\tconst data: IWorkflowData = {\n\t\t\t\tnodes: [],\n\t\t\t\tconnections: {},\n\t\t\t};\n\n\t\t\t// Get data of all the selected noes\n\t\t\tlet nodeData;\n\t\t\tconst exportNodeNames: string[] = [];\n\n\t\t\tfor (const node of this.uiStore.getSelectedNodes) {\n\t\t\t\tnodeData = this.getNodeDataToSave(node);\n\t\t\t\texportNodeNames.push(node.name);\n\n\t\t\t\tdata.nodes.push(nodeData);\n\t\t\t}\n\n\t\t\t// Get only connections of exported nodes and ignore all other ones\n\t\t\tlet connectionToKeep,\n\t\t\t\tconnections: INodeConnections,\n\t\t\t\ttype: string,\n\t\t\t\tconnectionIndex: number,\n\t\t\t\tsourceIndex: number,\n\t\t\t\tconnectionData: IConnection,\n\t\t\t\ttypeConnections: INodeConnections;\n\n\t\t\tdata.nodes.forEach((node) => {\n\t\t\t\tconnections = this.workflowsStore.outgoingConnectionsByNodeName(node.name);\n\t\t\t\tif (Object.keys(connections).length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Keep only the connection to node which get also exported\n\t\t\t\ttypeConnections = {};\n\t\t\t\tfor (type of Object.keys(connections)) {\n\t\t\t\t\tfor (sourceIndex = 0; sourceIndex < connections[type].length; sourceIndex++) {\n\t\t\t\t\t\tconnectionToKeep = [];\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tconnectionIndex = 0;\n\t\t\t\t\t\t\tconnectionIndex < connections[type][sourceIndex].length;\n\t\t\t\t\t\t\tconnectionIndex++\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconnectionData = connections[type][sourceIndex][connectionIndex];\n\t\t\t\t\t\t\tif (exportNodeNames.indexOf(connectionData.node) !== -1) {\n\t\t\t\t\t\t\t\tconnectionToKeep.push(connectionData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (connectionToKeep.length) {\n\t\t\t\t\t\t\tif (!typeConnections.hasOwnProperty(type)) {\n\t\t\t\t\t\t\t\ttypeConnections[type] = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttypeConnections[type][sourceIndex] = connectionToKeep;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (Object.keys(typeConnections).length) {\n\t\t\t\t\tdata.connections[node.name] = typeConnections;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn data;\n\t\t},\n\t\tresetWorkspace() {\n\t\t\tthis.workflowsStore.resetWorkflow();\n\n\t\t\tthis.onToggleNodeCreator({ createNodeActive: false });\n\t\t\tthis.nodeCreatorStore.setShowScrim(false);\n\n\t\t\t// Reset nodes\n\t\t\tthis.deleteEveryEndpoint();\n\n\t\t\tif (this.executionWaitingForWebhook) {\n\t\t\t\t// Make sure that if there is a waiting test-webhook that\n\t\t\t\t// it gets removed\n\t\t\t\tthis.restApi()\n\t\t\t\t\t.removeTestWebhook(this.workflowsStore.workflowId)\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t// Ignore all errors\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tthis.workflowsStore.removeAllConnections({ setStateDirty: false });\n\t\t\tthis.workflowsStore.removeAllNodes({ setStateDirty: false, removePinData: true });\n\n\t\t\t// Reset workflow execution data\n\t\t\tthis.workflowsStore.setWorkflowExecutionData(null);\n\t\t\tthis.workflowsStore.resetAllNodesIssues();\n\n\t\t\tthis.workflowsStore.setActive(false);\n\t\t\tthis.workflowsStore.setWorkflowId(PLACEHOLDER_EMPTY_WORKFLOW_ID);\n\t\t\tthis.workflowsStore.setWorkflowName({ newName: '', setStateDirty: false });\n\t\t\tthis.workflowsStore.setWorkflowSettings({});\n\t\t\tthis.workflowsStore.setWorkflowTagIds([]);\n\n\t\t\tthis.workflowsStore.activeExecutionId = null;\n\t\t\tthis.workflowsStore.executingNode = null;\n\t\t\tthis.workflowsStore.executionWaitingForWebhook = false;\n\t\t\tthis.uiStore.removeActiveAction('workflowRunning');\n\n\t\t\tthis.uiStore.resetSelectedNodes();\n\t\t\tthis.uiStore.nodeViewOffsetPosition = [0, 0];\n\n\t\t\tthis.credentialsUpdated = false;\n\t\t},\n\t\tasync loadActiveWorkflows(): Promise<void> {\n\t\t\tawait this.workflowsStore.fetchActiveWorkflows();\n\t\t},\n\t\tasync loadNodeTypes(): Promise<void> {\n\t\t\tawait this.nodeTypesStore.getNodeTypes();\n\t\t},\n\t\tasync loadCredentialTypes(): Promise<void> {\n\t\t\tawait this.credentialsStore.fetchCredentialTypes(true);\n\t\t},\n\t\tasync loadCredentials(): Promise<void> {\n\t\t\tawait this.credentialsStore.fetchAllCredentials();\n\t\t},\n\t\tasync loadVariables(): Promise<void> {\n\t\t\tawait this.environmentsStore.fetchAllVariables();\n\t\t},\n\t\tasync loadNodesProperties(nodeInfos: INodeTypeNameVersion[]): Promise<void> {\n\t\t\tconst allNodes: INodeTypeDescription[] = this.nodeTypesStore.allNodeTypes;\n\n\t\t\tconst nodesToBeFetched: INodeTypeNameVersion[] = [];\n\t\t\tallNodes.forEach((node) => {\n\t\t\t\tconst nodeVersions = Array.isArray(node.version) ? node.version : [node.version];\n\t\t\t\tif (\n\t\t\t\t\t!!nodeInfos.find((n) => n.name === node.name && nodeVersions.includes(n.version)) &&\n\t\t\t\t\t!node.hasOwnProperty('properties')\n\t\t\t\t) {\n\t\t\t\t\tnodesToBeFetched.push({\n\t\t\t\t\t\tname: node.name,\n\t\t\t\t\t\tversion: Array.isArray(node.version) ? node.version.slice(-1)[0] : node.version,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (nodesToBeFetched.length > 0) {\n\t\t\t\t// Only call API if node information is actually missing\n\t\t\t\tthis.startLoading();\n\t\t\t\tawait this.nodeTypesStore.getNodesInformation(nodesToBeFetched);\n\t\t\t\tthis.stopLoading();\n\t\t\t}\n\t\t},\n\t\tasync onPostMessageReceived(message: MessageEvent) {\n\t\t\ttry {\n\t\t\t\tconst json = JSON.parse(message.data);\n\t\t\t\tif (json && json.command === 'openWorkflow') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.importWorkflowExact(json);\n\t\t\t\t\t\tthis.isExecutionPreview = false;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (window.top) {\n\t\t\t\t\t\t\twindow.top.postMessage(\n\t\t\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\t\t\tcommand: 'error',\n\t\t\t\t\t\t\t\t\tmessage: this.$locale.baseText('openWorkflow.workflowImportError'),\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\t\ttitle: this.$locale.baseText('openWorkflow.workflowImportError'),\n\t\t\t\t\t\t\tmessage: (e as Error).message,\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else if (json && json.command === 'openExecution') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// If this NodeView is used in preview mode (in iframe) it will not have access to the main app store\n\t\t\t\t\t\t// so everything it needs has to be sent using post messages and passed down to child components\n\t\t\t\t\t\tthis.isProductionExecutionPreview = json.executionMode !== 'manual';\n\n\t\t\t\t\t\tawait this.openExecution(json.executionId);\n\t\t\t\t\t\tthis.isExecutionPreview = true;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (window.top) {\n\t\t\t\t\t\t\twindow.top.postMessage(\n\t\t\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\t\t\tcommand: 'error',\n\t\t\t\t\t\t\t\t\tmessage: this.$locale.baseText('nodeView.showError.openExecution.title'),\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\t\ttitle: this.$locale.baseText('nodeView.showError.openExecution.title'),\n\t\t\t\t\t\t\tmessage: (e as Error).message,\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t},\n\t\tasync onImportWorkflowDataEvent(data: IDataObject) {\n\t\t\tawait this.importWorkflowData(data.data as IWorkflowDataUpdate, 'file');\n\t\t},\n\t\tasync onImportWorkflowUrlEvent(data: IDataObject) {\n\t\t\tconst workflowData = await this.getWorkflowDataFromUrl(data.url as string);\n\t\t\tif (workflowData !== undefined) {\n\t\t\t\tawait this.importWorkflowData(workflowData, 'url');\n\t\t\t}\n\t\t},\n\t\taddPinDataConnections(pinData: IPinData) {\n\t\t\tObject.keys(pinData).forEach((nodeName) => {\n\t\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName);\n\t\t\t\tif (!node) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst connections = this.instance?.getConnections({\n\t\t\t\t\tsource: node.id,\n\t\t\t\t}) as Connection[];\n\n\t\t\t\tconnections.forEach((connection) => {\n\t\t\t\t\tNodeViewUtils.addConnectionOutputSuccess(connection, {\n\t\t\t\t\t\ttotal: pinData[nodeName].length,\n\t\t\t\t\t\titerations: 0,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tremovePinDataConnections(pinData: IPinData) {\n\t\t\tObject.keys(pinData).forEach((nodeName) => {\n\t\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName);\n\t\t\t\tif (!node) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst connections = this.instance?.getConnections({\n\t\t\t\t\tsource: node.id,\n\t\t\t\t}) as Connection[];\n\n\t\t\t\tthis.instance.setSuspendDrawing(true);\n\t\t\t\tconnections.forEach(NodeViewUtils.resetConnection);\n\t\t\t\tthis.instance.setSuspendDrawing(false, true);\n\t\t\t});\n\t\t},\n\t\tonToggleNodeCreator({\n\t\t\tsource,\n\t\t\tcreateNodeActive,\n\t\t}: {\n\t\t\tsource?: NodeCreatorOpenSource;\n\t\t\tcreateNodeActive: boolean;\n\t\t}) {\n\t\t\tif (createNodeActive === this.createNodeActive) return;\n\n\t\t\t// Default to the trigger tab in node creator if there's no trigger node yet\n\t\t\tthis.nodeCreatorStore.setSelectedView(\n\t\t\t\tthis.containsTrigger ? REGULAR_NODE_CREATOR_VIEW : TRIGGER_NODE_CREATOR_VIEW,\n\t\t\t);\n\n\t\t\tthis.createNodeActive = createNodeActive;\n\n\t\t\tconst mode =\n\t\t\t\tthis.nodeCreatorStore.selectedView === TRIGGER_NODE_CREATOR_VIEW ? 'trigger' : 'regular';\n\n\t\t\tif (createNodeActive === true) this.nodeCreatorStore.setOpenSource(source);\n\t\t\tthis.$externalHooks().run('nodeView.createNodeActiveChanged', {\n\t\t\t\tsource,\n\t\t\t\tmode,\n\t\t\t\tcreateNodeActive,\n\t\t\t});\n\t\t\tthis.$telemetry.trackNodesPanel('nodeView.createNodeActiveChanged', {\n\t\t\t\tsource,\n\t\t\t\tmode,\n\t\t\t\tcreateNodeActive,\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t});\n\t\t},\n\t\tonAddNode(\n\t\t\tnodeTypes: Array<{ nodeTypeName: string; position: XYPosition }>,\n\t\t\tdragAndDrop: boolean,\n\t\t) {\n\t\t\tnodeTypes.forEach(({ nodeTypeName, position }, index) => {\n\t\t\t\tconst isManualTrigger = nodeTypeName === MANUAL_TRIGGER_NODE_TYPE;\n\t\t\t\tconst openNDV = !isManualTrigger && (nodeTypes.length === 1 || index > 0);\n\t\t\t\tvoid this.addNode(\n\t\t\t\t\tnodeTypeName,\n\t\t\t\t\t{ position, dragAndDrop },\n\t\t\t\t\topenNDV,\n\t\t\t\t\ttrue,\n\t\t\t\t\tnodeTypes.length > 1 && index < 1,\n\t\t\t\t);\n\t\t\t\tif (index === 0) return;\n\t\t\t\t// If there's more than one node, we want to connect them\n\t\t\t\t// this has to be done in mutation subscriber to make sure both nodes already\n\t\t\t\t// exist\n\t\t\t\tconst actionWatcher = this.workflowsStore.$onAction(({ name, after, args }) => {\n\t\t\t\t\tif (name === 'addNode' && args[0].type === nodeTypeName) {\n\t\t\t\t\t\tafter(() => {\n\t\t\t\t\t\t\tconst lastAddedNode = this.nodes[this.nodes.length - 1];\n\t\t\t\t\t\t\tconst previouslyAddedNode = this.nodes[this.nodes.length - 2];\n\n\t\t\t\t\t\t\tthis.$nextTick(() =>\n\t\t\t\t\t\t\t\tthis.connectTwoNodes(previouslyAddedNode.name, 0, lastAddedNode.name, 0),\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Position the added node to the right side of the previously added one\n\t\t\t\t\t\t\tlastAddedNode.position = [\n\t\t\t\t\t\t\t\tpreviouslyAddedNode.position[0] +\n\t\t\t\t\t\t\t\t\tNodeViewUtils.NODE_SIZE * 2 +\n\t\t\t\t\t\t\t\t\tNodeViewUtils.GRID_SIZE,\n\t\t\t\t\t\t\t\tpreviouslyAddedNode.position[1],\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\tactionWatcher();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tasync saveCurrentWorkflowExternal(callback: () => void) {\n\t\t\tawait this.saveCurrentWorkflow();\n\t\t\tcallback?.();\n\t\t},\n\t\tsetSuspendRecordingDetachedConnections(suspend: boolean) {\n\t\t\tthis.suspendRecordingDetachedConnections = suspend;\n\t\t},\n\t\tonMoveNode({ nodeName, position }: { nodeName: string; position: XYPosition }): void {\n\t\t\tthis.workflowsStore.updateNodeProperties({ name: nodeName, properties: { position } });\n\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName);\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (node) {\n\t\t\t\t\tthis.instance?.repaintEverything();\n\t\t\t\t\tthis.onNodeMoved(node);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t},\n\t\tonRevertAddNode({ node }: { node: INodeUi }): void {\n\t\t\tthis.removeNode(node.name, false);\n\t\t},\n\t\tasync onRevertRemoveNode({ node }: { node: INodeUi }): Promise<void> {\n\t\t\tconst prevNode = this.workflowsStore.workflow.nodes.find((n) => n.id === node.id);\n\t\t\tif (prevNode) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// For some reason, returning node to canvas with old id\n\t\t\t// makes it's endpoint to render at wrong position\n\t\t\tnode.id = uuid();\n\t\t\tawait this.addNodes([node]);\n\t\t},\n\t\tonRevertAddConnection({ connection }: { connection: [IConnection, IConnection] }) {\n\t\t\tthis.suspendRecordingDetachedConnections = true;\n\t\t\tthis.__removeConnection(connection, true);\n\t\t\tthis.suspendRecordingDetachedConnections = false;\n\t\t},\n\t\tasync onRevertRemoveConnection({ connection }: { connection: [IConnection, IConnection] }) {\n\t\t\tthis.suspendRecordingDetachedConnections = true;\n\t\t\tthis.__addConnection(connection);\n\t\t\tthis.suspendRecordingDetachedConnections = false;\n\t\t},\n\t\tasync onRevertNameChange({ currentName, newName }: { currentName: string; newName: string }) {\n\t\t\tawait this.renameNode(newName, currentName);\n\t\t},\n\t\tonRevertEnableToggle({ nodeName, isDisabled }: { nodeName: string; isDisabled: boolean }) {\n\t\t\tconst node = this.workflowsStore.getNodeByName(nodeName);\n\t\t\tif (node) {\n\t\t\t\tthis.disableNodes([node]);\n\t\t\t}\n\t\t},\n\t},\n\tasync mounted() {\n\t\tthis.resetWorkspace();\n\t\tthis.canvasStore.initInstance(this.$refs.nodeView as HTMLElement);\n\t\tthis.titleReset();\n\t\twindow.addEventListener('message', this.onPostMessageReceived);\n\n\t\tthis.startLoading();\n\t\tconst loadPromises = [\n\t\t\tthis.loadActiveWorkflows(),\n\t\t\tthis.loadCredentials(),\n\t\t\tthis.loadCredentialTypes(),\n\t\t\tthis.loadVariables(),\n\t\t];\n\n\t\tif (this.nodeTypesStore.allNodeTypes.length === 0) {\n\t\t\tloadPromises.push(this.loadNodeTypes());\n\t\t}\n\n\t\ttry {\n\t\t\tawait Promise.all(loadPromises);\n\t\t} catch (error) {\n\t\t\tthis.$showError(\n\t\t\t\terror,\n\t\t\t\tthis.$locale.baseText('nodeView.showError.mounted1.title'),\n\t\t\t\tthis.$locale.baseText('nodeView.showError.mounted1.message') + ':',\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tready(async () => {\n\t\t\ttry {\n\t\t\t\ttry {\n\t\t\t\t\tthis.bindCanvasEvents();\n\t\t\t\t} catch {} // This will break if mounted after jsplumb has been initiated from executions preview, so continue if it breaks\n\t\t\t\tawait this.initView();\n\t\t\t\tif (window.parent) {\n\t\t\t\t\twindow.parent.postMessage(\n\t\t\t\t\t\tJSON.stringify({ command: 'n8nReady', version: this.rootStore.versionCli }),\n\t\t\t\t\t\t'*',\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('nodeView.showError.mounted2.title'),\n\t\t\t\t\tthis.$locale.baseText('nodeView.showError.mounted2.message') + ':',\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.stopLoading();\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tvoid this.usersStore.showPersonalizationSurvey();\n\t\t\t\tthis.addPinDataConnections(this.workflowsStore.getPinData || ({} as IPinData));\n\t\t\t}, 0);\n\t\t});\n\n\t\t// TODO: This currently breaks since front-end hooks are still not updated to work with pinia store\n\t\tthis.$externalHooks()\n\t\t\t.run('nodeView.mount')\n\t\t\t.catch((e) => {});\n\n\t\tif (\n\t\t\tthis.currentUser?.personalizationAnswers !== null &&\n\t\t\tthis.settingsStore.onboardingCallPromptEnabled &&\n\t\t\tthis.currentUser &&\n\t\t\tgetAccountAge(this.currentUser) <= ONBOARDING_PROMPT_TIMEBOX\n\t\t) {\n\t\t\tconst onboardingResponse = await this.uiStore.getNextOnboardingPrompt();\n\t\t\tconst promptTimeout =\n\t\t\t\tonboardingResponse.toast_sequence_number === 1 ? FIRST_ONBOARDING_PROMPT_TIMEOUT : 1000;\n\n\t\t\tif (onboardingResponse.title && onboardingResponse.description) {\n\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\tthis.$showToast({\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\ttitle: onboardingResponse.title,\n\t\t\t\t\t\tmessage: onboardingResponse.description,\n\t\t\t\t\t\tduration: 0,\n\t\t\t\t\t\tcustomClass: 'clickable',\n\t\t\t\t\t\tcloseOnClick: true,\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tthis.$telemetry.track('user clicked onboarding toast', {\n\t\t\t\t\t\t\t\tseq_num: onboardingResponse.toast_sequence_number,\n\t\t\t\t\t\t\t\ttitle: onboardingResponse.title,\n\t\t\t\t\t\t\t\tdescription: onboardingResponse.description,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.uiStore.openModal(ONBOARDING_CALL_SIGNUP_MODAL_KEY);\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}, promptTimeout);\n\t\t\t}\n\t\t}\n\t},\n\tactivated() {\n\t\tconst openSideMenu = this.uiStore.addFirstStepOnLoad;\n\t\tif (openSideMenu) {\n\t\t\tthis.showTriggerCreator(NODE_CREATOR_OPEN_SOURCES.TRIGGER_PLACEHOLDER_BUTTON);\n\t\t}\n\t\tthis.uiStore.addFirstStepOnLoad = false;\n\t\tthis.bindCanvasEvents();\n\t\tdocument.addEventListener('keydown', this.keyDown);\n\t\tdocument.addEventListener('keyup', this.keyUp);\n\t\twindow.addEventListener('message', this.onPostMessageReceived);\n\n\t\tthis.$root.$on('newWorkflow', this.newWorkflow);\n\t\tthis.$root.$on('importWorkflowData', this.onImportWorkflowDataEvent);\n\t\tthis.$root.$on('importWorkflowUrl', this.onImportWorkflowUrlEvent);\n\t\thistoryBus.on('nodeMove', this.onMoveNode);\n\t\thistoryBus.on('revertAddNode', this.onRevertAddNode);\n\t\thistoryBus.on('revertRemoveNode', this.onRevertRemoveNode);\n\t\thistoryBus.on('revertAddConnection', this.onRevertAddConnection);\n\t\thistoryBus.on('revertRemoveConnection', this.onRevertRemoveConnection);\n\t\thistoryBus.on('revertRenameNode', this.onRevertNameChange);\n\t\thistoryBus.on('enableNodeToggle', this.onRevertEnableToggle);\n\n\t\tdataPinningEventBus.on('pin-data', this.addPinDataConnections);\n\t\tdataPinningEventBus.on('unpin-data', this.removePinDataConnections);\n\t\tnodeViewEventBus.on('saveWorkflow', this.saveCurrentWorkflowExternal);\n\n\t\tthis.canvasStore.isDemo = this.isDemo;\n\t},\n\tdeactivated() {\n\t\tthis.unbindCanvasEvents();\n\t\tdocument.removeEventListener('keydown', this.keyDown);\n\t\tdocument.removeEventListener('keyup', this.keyUp);\n\t\twindow.removeEventListener('message', this.onPostMessageReceived);\n\t\twindow.removeEventListener('beforeunload', this.onBeforeUnload);\n\n\t\tthis.$root.$off('newWorkflow', this.newWorkflow);\n\t\tthis.$root.$off('importWorkflowData', this.onImportWorkflowDataEvent);\n\t\tthis.$root.$off('importWorkflowUrl', this.onImportWorkflowUrlEvent);\n\t\thistoryBus.off('nodeMove', this.onMoveNode);\n\t\thistoryBus.off('revertAddNode', this.onRevertAddNode);\n\t\thistoryBus.off('revertRemoveNode', this.onRevertRemoveNode);\n\t\thistoryBus.off('revertAddConnection', this.onRevertAddConnection);\n\t\thistoryBus.off('revertRemoveConnection', this.onRevertRemoveConnection);\n\t\thistoryBus.off('revertRenameNode', this.onRevertNameChange);\n\t\thistoryBus.off('enableNodeToggle', this.onRevertEnableToggle);\n\n\t\tdataPinningEventBus.off('pin-data', this.addPinDataConnections);\n\t\tdataPinningEventBus.off('unpin-data', this.removePinDataConnections);\n\t\tnodeViewEventBus.off('saveWorkflow', this.saveCurrentWorkflowExternal);\n\t},\n\tdestroyed() {\n\t\tthis.resetWorkspace();\n\t\tthis.instance.unbind();\n\t\tthis.instance.destroy();\n\t\tthis.uiStore.stateIsDirty = false;\n\t\twindow.removeEventListener('message', this.onPostMessageReceived);\n\t\tthis.$root.$off('newWorkflow', this.newWorkflow);\n\t\tthis.$root.$off('importWorkflowData', this.onImportWorkflowDataEvent);\n\t\tthis.$root.$off('importWorkflowUrl', this.onImportWorkflowUrlEvent);\n\t\tthis.workflowsStore.setWorkflowId(PLACEHOLDER_EMPTY_WORKFLOW_ID);\n\t},\n});\n</script>\n\n<style scoped lang=\"scss\">\n.node-view-root {\n\tposition: relative;\n\tflex: 1;\n\toverflow: hidden;\n\tbackground-color: var(--color-canvas-background);\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n}\n\n.node-view-wrapper {\n\tposition: fixed;\n}\n\n.node-view {\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n\ttransform-origin: 0 0;\n\tz-index: -1;\n}\n\n.node-view-background {\n\tbackground-color: var(--color-canvas-background);\n\tposition: absolute;\n\twidth: 10000px;\n\theight: 10000px;\n\tz-index: -2;\n}\n\n.move-active {\n\tcursor: grab;\n\tcursor: -moz-grab;\n\tcursor: -webkit-grab;\n\ttouch-action: none;\n}\n\n.move-in-process {\n\tcursor: grabbing;\n\tcursor: -moz-grabbing;\n\tcursor: -webkit-grabbing;\n\ttouch-action: none;\n}\n\n.workflow-execute-wrapper {\n\tposition: absolute;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tbottom: 110px;\n\twidth: auto;\n\n\t@media (max-width: $breakpoint-2xs) {\n\t\tbottom: 150px;\n\t}\n\n\tbutton {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tmargin-left: 0.625rem;\n\n\t\t&:first-child {\n\t\t\tmargin: 0;\n\t\t}\n\t}\n}\n\n/* Makes sure that when selected with mouse it does not select text */\n.do-not-select *,\n.jtk-drag-select * {\n\t-webkit-touch-callout: none;\n\t-webkit-user-select: none;\n\t-khtml-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n}\n</style>\n\n<style lang=\"scss\">\n.drop-add-node-label {\n\tcolor: var(--color-text-dark);\n\tfont-weight: 600;\n\tfont-size: 0.8em;\n\ttext-align: center;\n\tbackground-color: #ffffff55;\n}\n\n.connection-actions {\n\t&:hover {\n\t\tdisplay: block !important;\n\t}\n\n\t> button {\n\t\tcolor: var(--color-foreground-xdark);\n\t\tborder: 2px solid var(--color-foreground-xdark);\n\t\tbackground-color: var(--color-background-xlight);\n\t\tborder-radius: var(--border-radius-base);\n\t\theight: var(--spacing-l);\n\t\twidth: var(--spacing-l);\n\t\tcursor: pointer;\n\n\t\tdisplay: inline-flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\n\t\tposition: absolute;\n\t\ttop: -12px;\n\n\t\t&.add {\n\t\t\tright: 4px;\n\t\t}\n\n\t\t&.delete {\n\t\t\tleft: 4px;\n\t\t}\n\n\t\tsvg {\n\t\t\tpointer-events: none;\n\t\t\tfont-size: var(--font-size-2xs);\n\t\t}\n\n\t\t&:hover {\n\t\t\tborder-color: var(--color-primary);\n\t\t\tcolor: var(--color-primary);\n\t\t}\n\t}\n}\n</style>\n\n<style module lang=\"scss\">\n.content {\n\tposition: relative;\n\tdisplay: flex;\n\toverflow: auto;\n\theight: 100%;\n\twidth: 100%;\n}\n\n.shake {\n\tanimation: 1s 200ms shake;\n}\n\n@keyframes shake {\n\t10%,\n\t90% {\n\t\ttransform: translate3d(-1px, 0, 0);\n\t}\n\n\t20%,\n\t80% {\n\t\ttransform: translate3d(2px, 0, 0);\n\t}\n\n\t30%,\n\t50%,\n\t70% {\n\t\ttransform: translate3d(-4px, 0, 0);\n\t}\n\n\t40%,\n\t60% {\n\t\ttransform: translate3d(4px, 0, 0);\n\t}\n}\n</style>\n","<template>\n\t<div\n\t\t:class=\"{\n\t\t\t['execution-card']: true,\n\t\t\t[$style.executionCard]: true,\n\t\t\t[$style.active]: isActive,\n\t\t\t[$style[executionUIDetails.name]]: true,\n\t\t\t[$style.highlight]: highlight,\n\t\t\t[$style.showGap]: showGap,\n\t\t}\"\n\t>\n\t\t<router-link\n\t\t\t:class=\"$style.executionLink\"\n\t\t\t:to=\"{\n\t\t\t\tname: VIEWS.EXECUTION_PREVIEW,\n\t\t\t\tparams: { workflowId: currentWorkflow, executionId: execution.id },\n\t\t\t}\"\n\t\t\t:data-test-execution-status=\"executionUIDetails.name\"\n\t\t>\n\t\t\t<div :class=\"$style.description\">\n\t\t\t\t<n8n-text color=\"text-dark\" :bold=\"true\" size=\"medium\" data-test-id=\"execution-time\">\n\t\t\t\t\t{{ executionUIDetails.startTime }}\n\t\t\t\t</n8n-text>\n\t\t\t\t<div :class=\"$style.executionStatus\">\n\t\t\t\t\t<n8n-spinner\n\t\t\t\t\t\tv-if=\"executionUIDetails.name === 'running'\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t:class=\"[$style.spinner, 'mr-4xs']\"\n\t\t\t\t\t/>\n\t\t\t\t\t<n8n-text :class=\"$style.statusLabel\" size=\"small\">{{\n\t\t\t\t\t\texecutionUIDetails.label\n\t\t\t\t\t}}</n8n-text>\n\t\t\t\t\t<n8n-text\n\t\t\t\t\t\tv-if=\"executionUIDetails.name === 'running'\"\n\t\t\t\t\t\t:color=\"isActive ? 'text-dark' : 'text-base'\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $locale.baseText('executionDetails.runningTimeRunning') }}\n\t\t\t\t\t\t<execution-time :start-time=\"execution.startedAt\" />\n\t\t\t\t\t</n8n-text>\n\t\t\t\t\t<n8n-text\n\t\t\t\t\t\tv-else-if=\"executionUIDetails.runningTime !== ''\"\n\t\t\t\t\t\t:color=\"isActive ? 'text-dark' : 'text-base'\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t$locale.baseText('executionDetails.runningTimeFinished', {\n\t\t\t\t\t\t\t\tinterpolate: { time: executionUIDetails?.runningTime },\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}\n\t\t\t\t\t</n8n-text>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"execution.mode === 'retry'\">\n\t\t\t\t\t<n8n-text :color=\"isActive ? 'text-dark' : 'text-base'\" size=\"small\">\n\t\t\t\t\t\t{{ $locale.baseText('executionDetails.retry') }} #{{ execution.retryOf }}\n\t\t\t\t\t</n8n-text>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.icons\">\n\t\t\t\t<n8n-action-dropdown\n\t\t\t\t\tv-if=\"executionUIDetails.name === 'error'\"\n\t\t\t\t\t:class=\"[$style.icon, $style.retry]\"\n\t\t\t\t\t:items=\"retryExecutionActions\"\n\t\t\t\t\tactivatorIcon=\"redo\"\n\t\t\t\t\tdata-test-id=\"retry-execution-button\"\n\t\t\t\t\t@select=\"onRetryMenuItemSelect\"\n\t\t\t\t/>\n\t\t\t\t<n8n-tooltip v-if=\"execution.mode === 'manual'\" placement=\"top\">\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t<span>{{ $locale.baseText('executionsList.test') }}</span>\n\t\t\t\t\t</template>\n\t\t\t\t\t<font-awesome-icon\n\t\t\t\t\t\tv-if=\"execution.mode === 'manual'\"\n\t\t\t\t\t\t:class=\"[$style.icon, $style.manual]\"\n\t\t\t\t\t\ticon=\"flask\"\n\t\t\t\t\t/>\n\t\t\t\t</n8n-tooltip>\n\t\t\t</div>\n\t\t</router-link>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport type { IExecutionsSummary } from '@/Interface';\nimport mixins from 'vue-typed-mixins';\nimport type { IExecutionUIData } from '@/mixins/executionsHelpers';\nimport { executionHelpers } from '@/mixins/executionsHelpers';\nimport { VIEWS } from '@/constants';\nimport { showMessage } from '@/mixins/showMessage';\nimport ExecutionTime from '@/components/ExecutionTime.vue';\n\nexport default mixins(executionHelpers, showMessage).extend({\n\tname: 'execution-card',\n\tcomponents: {\n\t\tExecutionTime,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tVIEWS,\n\t\t};\n\t},\n\tprops: {\n\t\texecution: {\n\t\t\ttype: Object as () => IExecutionsSummary,\n\t\t\trequired: true,\n\t\t},\n\t\thighlight: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tshowGap: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tcomputed: {\n\t\tretryExecutionActions(): object[] {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: 'current-workflow',\n\t\t\t\t\tlabel: this.$locale.baseText('executionsList.retryWithCurrentlySavedWorkflow'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'original-workflow',\n\t\t\t\t\tlabel: this.$locale.baseText('executionsList.retryWithOriginalWorkflow'),\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t\texecutionUIDetails(): IExecutionUIData {\n\t\t\treturn this.getExecutionUIDetails(this.execution);\n\t\t},\n\t\tisActive(): boolean {\n\t\t\treturn this.execution.id === this.$route.params.executionId;\n\t\t},\n\t},\n\tmethods: {\n\t\tonRetryMenuItemSelect(action: string): void {\n\t\t\tthis.$emit('retryExecution', { execution: this.execution, command: action });\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.executionCard {\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding-right: var(--spacing-m);\n\n\t&.active {\n\t\tborder-left: var(--spacing-4xs) var(--border-style-base) transparent !important;\n\n\t\t.executionStatus {\n\t\t\tcolor: var(--color-text-dark) !important;\n\t\t}\n\t}\n\n\t&:hover,\n\t&.active {\n\t\t.executionLink {\n\t\t\tbackground-color: var(--color-foreground-light);\n\t\t}\n\t}\n\n\t&.running {\n\t\t.spinner {\n\t\t\tposition: relative;\n\t\t\ttop: 1px;\n\t\t}\n\t\t&,\n\t\t& .executionLink {\n\t\t\tborder-left: var(--spacing-4xs) var(--border-style-base) hsl(var(--color-warning-h), 94%, 80%);\n\t\t}\n\t\t.statusLabel,\n\t\t.spinner {\n\t\t\tcolor: var(--color-warning);\n\t\t}\n\t}\n\n\t&.success {\n\t\t&,\n\t\t& .executionLink {\n\t\t\tborder-left: var(--spacing-4xs) var(--border-style-base) hsl(var(--color-success-h), 60%, 70%);\n\t\t}\n\t}\n\n\t&.waiting {\n\t\t&,\n\t\t& .executionLink {\n\t\t\tborder-left: var(--spacing-4xs) var(--border-style-base)\n\t\t\t\thsl(var(--color-secondary-h), 94%, 80%);\n\t\t}\n\t\t.statusLabel {\n\t\t\tcolor: var(--color-secondary);\n\t\t}\n\t}\n\n\t&.error {\n\t\t&,\n\t\t& .executionLink {\n\t\t\tborder-left: var(--spacing-4xs) var(--border-style-base) hsl(var(--color-danger-h), 94%, 80%);\n\t\t}\n\t\t.statusLabel {\n\t\t\tcolor: var(--color-danger);\n\t\t}\n\t}\n\n\t&.unknown {\n\t\t&,\n\t\t& .executionLink {\n\t\t\tborder-left: var(--spacing-4xs) var(--border-style-base) var(--color-text-light);\n\t\t}\n\t}\n}\n\n.executionLink {\n\tdisplay: flex;\n\twidth: 100%;\n\talign-items: center;\n\tjustify-content: space-between;\n\tcolor: var(--color-text-base);\n\tfont-size: var(--font-size-xs);\n\tpadding: var(--spacing-xs);\n\tpadding-right: var(--spacing-s);\n\tposition: relative;\n\tleft: calc(\n\t\t-1 * var(--spacing-4xs)\n\t); // Hide link border under card border so it's not visible when not hovered\n\n\t&:active {\n\t\t.icon,\n\t\t.statusLabel {\n\t\t\tcolor: var(--color-text-base);\n\t\t}\n\t}\n}\n\n.icons {\n\tdisplay: flex;\n\talign-items: baseline;\n}\n\n.icon {\n\tfont-size: var(--font-size-s);\n\n\t&.retry {\n\t\tsvg {\n\t\t\tcolor: var(--color-primary);\n\t\t}\n\t}\n\n\t&.manual {\n\t\tposition: relative;\n\t\ttop: 1px;\n\t}\n\n\t& + & {\n\t\tmargin-left: var(--spacing-2xs);\n\t}\n}\n.showGap {\n\tmargin-bottom: var(--spacing-2xs);\n\t.executionLink {\n\t\tborder-bottom: 1px solid var(--color-foreground-dark);\n\t}\n}\n</style>\n","<template>\n\t<n8n-info-accordion\n\t\t:class=\"[$style.accordion, 'mt-2xl']\"\n\t\t:title=\"$locale.baseText('executionsLandingPage.emptyState.accordion.title')\"\n\t\t:items=\"accordionItems\"\n\t\t:initiallyExpanded=\"shouldExpandAccordion\"\n\t\t:headerIcon=\"accordionIcon\"\n\t\t@click=\"onAccordionClick\"\n\t\t@tooltipClick=\"onItemTooltipClick\"\n\t>\n\t\t<template #customContent>\n\t\t\t<footer class=\"mt-2xs\">\n\t\t\t\t{{ $locale.baseText('executionsLandingPage.emptyState.accordion.footer') }}\n\t\t\t\t<n8n-tooltip :disabled=\"!isNewWorkflow\">\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<n8n-link @click.prevent=\"onSaveWorkflowClick\">{{\n\t\t\t\t\t\t\t\t$locale.baseText('executionsLandingPage.emptyState.accordion.footer.tooltipLink')\n\t\t\t\t\t\t\t}}</n8n-link>\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t$locale.baseText('executionsLandingPage.emptyState.accordion.footer.tooltipText')\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t\t<n8n-link\n\t\t\t\t\t\t@click.prevent=\"openWorkflowSettings\"\n\t\t\t\t\t\t:class=\"{ [$style.disabled]: isNewWorkflow }\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $locale.baseText('executionsLandingPage.emptyState.accordion.footer.settingsLink') }}\n\t\t\t\t\t</n8n-link>\n\t\t\t\t</n8n-tooltip>\n\t\t\t</footer>\n\t\t</template>\n\t</n8n-info-accordion>\n</template>\n\n<script lang=\"ts\">\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { mapStores } from 'pinia';\nimport { PLACEHOLDER_EMPTY_WORKFLOW_ID, WORKFLOW_SETTINGS_MODAL_KEY } from '@/constants';\nimport type { IWorkflowSettings } from 'n8n-workflow';\nimport { deepCopy } from 'n8n-workflow';\nimport mixins from 'vue-typed-mixins';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\n\ninterface IWorkflowSaveSettings {\n\tsaveFailedExecutions: boolean;\n\tsaveSuccessfulExecutions: boolean;\n\tsaveTestExecutions: boolean;\n}\n\nexport default mixins(workflowHelpers).extend({\n\tname: 'executions-info-accordion',\n\tprops: {\n\t\tinitiallyExpanded: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tdefaultValues: {\n\t\t\t\tsaveFailedExecutions: 'all',\n\t\t\t\tsaveSuccessfulExecutions: 'all',\n\t\t\t\tsaveManualExecutions: false,\n\t\t\t},\n\t\t\tworkflowSaveSettings: {\n\t\t\t\tsaveFailedExecutions: false,\n\t\t\t\tsaveSuccessfulExecutions: false,\n\t\t\t\tsaveTestExecutions: false,\n\t\t\t} as IWorkflowSaveSettings,\n\t\t};\n\t},\n\tmounted() {\n\t\tthis.defaultValues.saveFailedExecutions = this.settingsStore.saveDataErrorExecution;\n\t\tthis.defaultValues.saveSuccessfulExecutions = this.settingsStore.saveDataSuccessExecution;\n\t\tthis.defaultValues.saveManualExecutions = this.settingsStore.saveManualExecutions;\n\t\tthis.updateSettings(this.workflowSettings);\n\t},\n\twatch: {\n\t\tworkflowSettings(newSettings: IWorkflowSettings) {\n\t\t\tthis.updateSettings(newSettings);\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useRootStore, useSettingsStore, useUIStore, useWorkflowsStore),\n\t\taccordionItems(): Object[] {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: 'productionExecutions',\n\t\t\t\t\tlabel: this.$locale.baseText(\n\t\t\t\t\t\t'executionsLandingPage.emptyState.accordion.productionExecutions',\n\t\t\t\t\t),\n\t\t\t\t\ticon: this.productionExecutionsIcon.icon,\n\t\t\t\t\ticonColor: this.productionExecutionsIcon.color,\n\t\t\t\t\ttooltip:\n\t\t\t\t\t\tthis.productionExecutionsStatus === 'unknown'\n\t\t\t\t\t\t\t? this.$locale.baseText(\n\t\t\t\t\t\t\t\t\t'executionsLandingPage.emptyState.accordion.productionExecutionsWarningTooltip',\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: null,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'manualExecutions',\n\t\t\t\t\tlabel: this.$locale.baseText('executionsLandingPage.emptyState.accordion.testExecutions'),\n\t\t\t\t\ticon: this.workflowSaveSettings.saveTestExecutions ? 'check' : 'times',\n\t\t\t\t\ticonColor: this.workflowSaveSettings.saveTestExecutions ? 'success' : 'danger',\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t\tshouldExpandAccordion(): boolean {\n\t\t\tif (this.initiallyExpanded === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t!this.workflowSaveSettings.saveFailedExecutions ||\n\t\t\t\t!this.workflowSaveSettings.saveSuccessfulExecutions ||\n\t\t\t\t!this.workflowSaveSettings.saveTestExecutions\n\t\t\t);\n\t\t},\n\t\tproductionExecutionsIcon(): { icon: string; color: string } {\n\t\t\tif (this.productionExecutionsStatus === 'saving') {\n\t\t\t\treturn { icon: 'check', color: 'success' };\n\t\t\t} else if (this.productionExecutionsStatus === 'not-saving') {\n\t\t\t\treturn { icon: 'times', color: 'danger' };\n\t\t\t}\n\t\t\treturn { icon: 'exclamation-triangle', color: 'warning' };\n\t\t},\n\t\tproductionExecutionsStatus(): string {\n\t\t\tif (\n\t\t\t\tthis.workflowSaveSettings.saveSuccessfulExecutions ===\n\t\t\t\tthis.workflowSaveSettings.saveFailedExecutions\n\t\t\t) {\n\t\t\t\tif (this.workflowSaveSettings.saveSuccessfulExecutions) {\n\t\t\t\t\treturn 'saving';\n\t\t\t\t}\n\t\t\t\treturn 'not-saving';\n\t\t\t} else {\n\t\t\t\treturn 'unknown';\n\t\t\t}\n\t\t},\n\t\tworkflowSettings(): IWorkflowSettings {\n\t\t\tconst workflowSettings = deepCopy(this.workflowsStore.workflowSettings);\n\t\t\treturn workflowSettings;\n\t\t},\n\t\taccordionIcon(): { icon: string; color: string } | null {\n\t\t\tif (\n\t\t\t\t!this.workflowSaveSettings.saveTestExecutions ||\n\t\t\t\tthis.productionExecutionsStatus !== 'saving'\n\t\t\t) {\n\t\t\t\treturn { icon: 'exclamation-triangle', color: 'warning' };\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tcurrentWorkflowId(): string {\n\t\t\treturn this.workflowsStore.workflowId;\n\t\t},\n\t\tisNewWorkflow(): boolean {\n\t\t\treturn (\n\t\t\t\t!this.currentWorkflowId ||\n\t\t\t\tthis.currentWorkflowId === PLACEHOLDER_EMPTY_WORKFLOW_ID ||\n\t\t\t\tthis.currentWorkflowId === 'new'\n\t\t\t);\n\t\t},\n\t\tworkflowName(): string {\n\t\t\treturn this.workflowsStore.workflowName;\n\t\t},\n\t\tcurrentWorkflowTagIds(): string[] {\n\t\t\treturn this.workflowsStore.workflowTags;\n\t\t},\n\t},\n\tmethods: {\n\t\tupdateSettings(workflowSettings: IWorkflowSettings): void {\n\t\t\tthis.workflowSaveSettings.saveFailedExecutions =\n\t\t\t\tworkflowSettings.saveDataErrorExecution === undefined\n\t\t\t\t\t? this.defaultValues.saveFailedExecutions === 'all'\n\t\t\t\t\t: workflowSettings.saveDataErrorExecution === 'all';\n\t\t\tthis.workflowSaveSettings.saveSuccessfulExecutions =\n\t\t\t\tworkflowSettings.saveDataSuccessExecution === undefined\n\t\t\t\t\t? this.defaultValues.saveSuccessfulExecutions === 'all'\n\t\t\t\t\t: workflowSettings.saveDataSuccessExecution === 'all';\n\t\t\tthis.workflowSaveSettings.saveTestExecutions =\n\t\t\t\tworkflowSettings.saveManualExecutions === undefined\n\t\t\t\t\t? this.defaultValues.saveManualExecutions\n\t\t\t\t\t: (workflowSettings.saveManualExecutions as boolean);\n\t\t},\n\t\tonAccordionClick(event: MouseEvent): void {\n\t\t\tif (event.target instanceof HTMLAnchorElement) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.uiStore.openModal(WORKFLOW_SETTINGS_MODAL_KEY);\n\t\t\t}\n\t\t},\n\t\tonItemTooltipClick(item: string, event: MouseEvent): void {\n\t\t\tif (item === 'productionExecutions' && event.target instanceof HTMLAnchorElement) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.uiStore.openModal(WORKFLOW_SETTINGS_MODAL_KEY);\n\t\t\t}\n\t\t},\n\t\topenWorkflowSettings(event: MouseEvent): void {\n\t\t\tthis.uiStore.openModal(WORKFLOW_SETTINGS_MODAL_KEY);\n\t\t},\n\t\tasync onSaveWorkflowClick(event: MouseEvent): void {\n\t\t\tlet currentId = undefined;\n\t\t\tif (this.currentWorkflowId !== PLACEHOLDER_EMPTY_WORKFLOW_ID) {\n\t\t\t\tcurrentId = this.currentWorkflowId;\n\t\t\t} else if (this.$route.params.name && this.$route.params.name !== 'new') {\n\t\t\t\tcurrentId = this.$route.params.name;\n\t\t\t}\n\t\t\tconst saved = await this.saveCurrentWorkflow({\n\t\t\t\tid: currentId,\n\t\t\t\tname: this.workflowName,\n\t\t\t\ttags: this.currentWorkflowTagIds,\n\t\t\t});\n\t\t\tif (saved) await this.settingsStore.fetchPromptsData();\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.accordion {\n\tbackground: none;\n\twidth: 320px;\n\n\t// Accordion header\n\t& > div:nth-child(1) {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tpadding: var(--spacing-xs);\n\t\twidth: 100%;\n\t\tuser-select: none;\n\t\tcolor: var(--color-text-base) !important;\n\t}\n\n\t// Accordion description\n\t& > div:nth-child(2) {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: 100%;\n\t\tpadding: 0 var(--spacing-l) var(--spacing-s) !important;\n\n\t\tspan {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\n\tfooter {\n\t\ttext-align: left;\n\t\twidth: 100%;\n\t\tfont-size: var(--font-size-2xs);\n\t}\n\n\t.disabled a {\n\t\tcolor: currentColor;\n\t\tcursor: not-allowed;\n\t\topacity: 0.5;\n\t\ttext-decoration: none;\n\t}\n}\n</style>\n","<template>\n\t<div\n\t\t:class=\"['executions-sidebar', $style.container]\"\n\t\tref=\"container\"\n\t\tdata-test-id=\"executions-sidebar\"\n\t>\n\t\t<div :class=\"$style.heading\">\n\t\t\t<n8n-heading tag=\"h2\" size=\"medium\" color=\"text-dark\">\n\t\t\t\t{{ $locale.baseText('generic.executions') }}\n\t\t\t</n8n-heading>\n\t\t</div>\n\t\t<div :class=\"$style.controls\">\n\t\t\t<el-checkbox\n\t\t\t\tv-model=\"autoRefresh\"\n\t\t\t\t@change=\"onAutoRefreshToggle\"\n\t\t\t\tdata-test-id=\"auto-refresh-checkbox\"\n\t\t\t>\n\t\t\t\t{{ $locale.baseText('executionsList.autoRefresh') }}\n\t\t\t</el-checkbox>\n\t\t\t<execution-filter popover-placement=\"left-start\" @filterChanged=\"onFilterChanged\" />\n\t\t</div>\n\t\t<div\n\t\t\t:class=\"$style.executionList\"\n\t\t\tref=\"executionList\"\n\t\t\tdata-test-id=\"current-executions-list\"\n\t\t\t@scroll=\"loadMore(20)\"\n\t\t>\n\t\t\t<div v-if=\"loading\" class=\"mr-l\">\n\t\t\t\t<n8n-loading variant=\"rect\" />\n\t\t\t</div>\n\t\t\t<div v-if=\"!loading && executions.length === 0\" :class=\"$style.noResultsContainer\">\n\t\t\t\t<n8n-text color=\"text-base\" size=\"medium\" align=\"center\">\n\t\t\t\t\t{{ $locale.baseText('executionsLandingPage.noResults') }}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t\t<execution-card\n\t\t\t\tv-else-if=\"temporaryExecution\"\n\t\t\t\t:execution=\"temporaryExecution\"\n\t\t\t\t:ref=\"`execution-${temporaryExecution.id}`\"\n\t\t\t\t:data-test-id=\"`execution-details-${temporaryExecution.id}`\"\n\t\t\t\t:showGap=\"true\"\n\t\t\t\t@refresh=\"onRefresh\"\n\t\t\t\t@retryExecution=\"onRetryExecution\"\n\t\t\t/>\n\t\t\t<execution-card\n\t\t\t\tv-for=\"execution in executions\"\n\t\t\t\t:key=\"execution.id\"\n\t\t\t\t:execution=\"execution\"\n\t\t\t\t:ref=\"`execution-${execution.id}`\"\n\t\t\t\t:data-test-id=\"`execution-details-${execution.id}`\"\n\t\t\t\t@refresh=\"onRefresh\"\n\t\t\t\t@retryExecution=\"onRetryExecution\"\n\t\t\t/>\n\t\t\t<div v-if=\"loadingMore\" class=\"mr-m\">\n\t\t\t\t<n8n-loading variant=\"p\" :rows=\"1\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div :class=\"$style.infoAccordion\">\n\t\t\t<executions-info-accordion :initiallyExpanded=\"false\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport ExecutionCard from '@/components/ExecutionsView/ExecutionCard.vue';\nimport ExecutionsInfoAccordion from '@/components/ExecutionsView/ExecutionsInfoAccordion.vue';\nimport ExecutionFilter from '@/components/ExecutionFilter.vue';\nimport { VIEWS } from '@/constants';\nimport type { IExecutionsSummary } from 'n8n-workflow';\nimport type { Route } from 'vue-router';\nimport { defineComponent } from 'vue';\nimport type { PropType } from 'vue';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport type { ExecutionFilterType } from '@/Interface';\n\ntype ExecutionCardRef = InstanceType<typeof ExecutionCard>;\n\nexport default defineComponent({\n\tname: 'executions-sidebar',\n\tcomponents: {\n\t\tExecutionCard,\n\t\tExecutionsInfoAccordion,\n\t\tExecutionFilter,\n\t},\n\tprops: {\n\t\texecutions: {\n\t\t\ttype: Array as PropType<IExecutionsSummary[]>,\n\t\t\trequired: true,\n\t\t},\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\tloadingMore: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\ttemporaryExecution: {\n\t\t\ttype: Object as PropType<IExecutionsSummary>,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tVIEWS,\n\t\t\tfilter: {} as ExecutionFilterType,\n\t\t\tautoRefresh: false,\n\t\t\tautoRefreshInterval: undefined as undefined | NodeJS.Timer,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore, useWorkflowsStore),\n\t},\n\twatch: {\n\t\t$route(to: Route, from: Route) {\n\t\t\tif (from.name === VIEWS.EXECUTION_PREVIEW && to.name === VIEWS.EXECUTION_HOME) {\n\t\t\t\t// Skip parent route when navigating through executions with back button\n\t\t\t\tthis.$router.go(-1);\n\t\t\t}\n\t\t},\n\t\t'workflowsStore.activeWorkflowExecution'() {\n\t\t\tthis.checkListSize();\n\t\t\tthis.scrollToActiveCard();\n\t\t},\n\t},\n\tmounted() {\n\t\tthis.autoRefresh = this.uiStore.executionSidebarAutoRefresh === true;\n\t\tif (this.autoRefresh) {\n\t\t\tthis.autoRefreshInterval = setInterval(() => this.onRefresh(), 4000);\n\t\t}\n\t\t// On larger screens, we need to load more then first page of executions\n\t\t// for the scroll bar to appear and infinite scrolling is enabled\n\t\tthis.checkListSize();\n\t\tthis.scrollToActiveCard();\n\t},\n\tbeforeDestroy() {\n\t\tif (this.autoRefreshInterval) {\n\t\t\tclearInterval(this.autoRefreshInterval);\n\t\t\tthis.autoRefreshInterval = undefined;\n\t\t}\n\t},\n\tmethods: {\n\t\tloadMore(limit = 20): void {\n\t\t\tif (!this.loading) {\n\t\t\t\tconst executionsListRef = this.$refs.executionList as HTMLElement | undefined;\n\t\t\t\tif (executionsListRef) {\n\t\t\t\t\tconst diff =\n\t\t\t\t\t\texecutionsListRef.offsetHeight -\n\t\t\t\t\t\t(executionsListRef.scrollHeight - executionsListRef.scrollTop);\n\t\t\t\t\tif (diff > -10 && diff < 10) {\n\t\t\t\t\t\tthis.$emit('loadMore', limit);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonRetryExecution(payload: Object) {\n\t\t\tthis.$emit('retryExecution', payload);\n\t\t},\n\t\tonRefresh(): void {\n\t\t\tthis.$emit('refresh');\n\t\t},\n\t\tonFilterChanged(filter: ExecutionFilterType) {\n\t\t\tthis.$emit('filterUpdated', filter);\n\t\t},\n\t\treloadExecutions(): void {\n\t\t\tthis.$emit('reloadExecutions');\n\t\t},\n\t\tonAutoRefreshToggle(): void {\n\t\t\tthis.uiStore.executionSidebarAutoRefresh = this.autoRefresh;\n\t\t\tif (this.autoRefreshInterval) {\n\t\t\t\t// Clear any previously existing intervals (if any - there shouldn't)\n\t\t\t\tclearInterval(this.autoRefreshInterval);\n\t\t\t\tthis.autoRefreshInterval = undefined;\n\t\t\t}\n\t\t\tif (this.autoRefresh) {\n\t\t\t\tthis.autoRefreshInterval = setInterval(() => this.onRefresh(), 4 * 1000); // refresh data every 4 secs\n\t\t\t}\n\t\t},\n\t\tcheckListSize(): void {\n\t\t\tconst sidebarContainerRef = this.$refs.container as HTMLElement | undefined;\n\t\t\tconst currentExecutionCardRefs = this.$refs[\n\t\t\t\t`execution-${this.workflowsStore.activeWorkflowExecution?.id}`\n\t\t\t] as ExecutionCardRef[] | undefined;\n\n\t\t\t// Find out how many execution card can fit into list\n\t\t\t// and load more if needed\n\t\t\tif (sidebarContainerRef && currentExecutionCardRefs?.length) {\n\t\t\t\tconst cardElement = currentExecutionCardRefs[0].$el as HTMLElement;\n\t\t\t\tconst listCapacity = Math.ceil(sidebarContainerRef.clientHeight / cardElement.clientHeight);\n\n\t\t\t\tif (listCapacity > this.executions.length) {\n\t\t\t\t\tthis.$emit('loadMore', listCapacity - this.executions.length);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tscrollToActiveCard(): void {\n\t\t\tconst executionsListRef = this.$refs.executionList as HTMLElement | undefined;\n\t\t\tconst currentExecutionCardRefs = this.$refs[\n\t\t\t\t`execution-${this.workflowsStore.activeWorkflowExecution?.id}`\n\t\t\t] as ExecutionCardRef[] | undefined;\n\n\t\t\tif (\n\t\t\t\texecutionsListRef &&\n\t\t\t\tcurrentExecutionCardRefs?.length &&\n\t\t\t\tthis.workflowsStore.activeWorkflowExecution\n\t\t\t) {\n\t\t\t\tconst cardElement = currentExecutionCardRefs[0].$el as HTMLElement;\n\t\t\t\tconst cardRect = cardElement.getBoundingClientRect();\n\t\t\t\tconst LIST_HEADER_OFFSET = 200;\n\t\t\t\tif (cardRect.top > executionsListRef.offsetHeight) {\n\t\t\t\t\texecutionsListRef.scrollTo({ top: cardRect.top - LIST_HEADER_OFFSET });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.container {\n\tflex: 310px 0 0;\n\tbackground-color: var(--color-background-xlight);\n\tborder-right: var(--border-base);\n\tpadding: var(--spacing-l) 0 var(--spacing-l) var(--spacing-l);\n\tz-index: 1;\n\toverflow: hidden;\n}\n\n.heading {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: baseline;\n\tpadding-right: var(--spacing-l);\n}\n\n.controls {\n\tpadding: var(--spacing-s) 0 var(--spacing-xs);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tpadding-right: var(--spacing-m);\n\n\tbutton {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n}\n\n.executionList {\n\theight: calc(100% - 10.5em);\n\toverflow: auto;\n\tmargin-bottom: var(--spacing-m);\n\tbackground-color: var(--color-background-xlight) !important;\n\n\t// Scrolling fader\n\t&::before {\n\t\tposition: absolute;\n\t\tdisplay: block;\n\t\twidth: 270px;\n\t\theight: 6px;\n\t\tbackground: linear-gradient(to bottom, rgba(251, 251, 251, 1) 0%, rgba(251, 251, 251, 0) 100%);\n\t\tz-index: 999;\n\t}\n\n\t// Lower first execution card so fader is not visible when not scrolled\n\t& > div:first-child {\n\t\tmargin-top: 3px;\n\t}\n}\n\n.infoAccordion {\n\tposition: absolute;\n\tbottom: 0;\n\tmargin-left: calc(-1 * var(--spacing-l));\n\tborder-top: var(--border-base);\n\n\t& > div {\n\t\twidth: 309px;\n\t\tbackground-color: var(--color-background-light);\n\t\tmargin-top: 0 !important;\n\t}\n}\n\n.noResultsContainer {\n\twidth: 100%;\n\tmargin-top: var(--spacing-2xl);\n\ttext-align: center;\n}\n</style>\n\n<style lang=\"scss\" scoped>\n:deep(.el-skeleton__item) {\n\theight: 60px;\n\tborder-radius: 0;\n}\n</style>\n","<template>\n\t<div :class=\"$style.container\">\n\t\t<executions-sidebar\n\t\t\t:executions=\"executions\"\n\t\t\t:loading=\"loading && !executions.length\"\n\t\t\t:loadingMore=\"loadingMore\"\n\t\t\t:temporaryExecution=\"temporaryExecution\"\n\t\t\t@reloadExecutions=\"setExecutions\"\n\t\t\t@filterUpdated=\"onFilterUpdated\"\n\t\t\t@loadMore=\"onLoadMore\"\n\t\t\t@retryExecution=\"onRetryExecution\"\n\t\t\t@refresh=\"loadAutoRefresh\"\n\t\t/>\n\t\t<div :class=\"$style.content\" v-if=\"!hidePreview\">\n\t\t\t<router-view\n\t\t\t\tname=\"executionPreview\"\n\t\t\t\t@deleteCurrentExecution=\"onDeleteCurrentExecution\"\n\t\t\t\t@retryExecution=\"onRetryExecution\"\n\t\t\t\t@stopExecution=\"onStopExecution\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport ExecutionsSidebar from '@/components/ExecutionsView/ExecutionsSidebar.vue';\nimport {\n\tMAIN_HEADER_TABS,\n\tMODAL_CANCEL,\n\tMODAL_CONFIRMED,\n\tPLACEHOLDER_EMPTY_WORKFLOW_ID,\n\tVIEWS,\n\tWEBHOOK_NODE_TYPE,\n} from '@/constants';\nimport type {\n\tExecutionFilterType,\n\tIExecutionsListResponse,\n\tINodeUi,\n\tITag,\n\tIWorkflowDb,\n} from '@/Interface';\nimport type {\n\tIExecutionsSummary,\n\tIConnection,\n\tIConnections,\n\tIDataObject,\n\tINodeTypeDescription,\n\tINodeTypeNameVersion,\n} from 'n8n-workflow';\nimport { NodeHelpers } from 'n8n-workflow';\nimport mixins from 'vue-typed-mixins';\nimport { showMessage } from '@/mixins/showMessage';\nimport { v4 as uuid } from 'uuid';\nimport type { Route } from 'vue-router';\nimport { executionHelpers } from '@/mixins/executionsHelpers';\nimport { range as _range } from 'lodash-es';\nimport { debounceHelper } from '@/mixins/debounce';\nimport { getNodeViewTab, NO_NETWORK_ERROR_CODE } from '@/utils';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport { mapStores } from 'pinia';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport { useTagsStore } from '@/stores/tags.store';\nimport { executionFilterToQueryFilter } from '@/utils/executionUtils';\n\n// Number of execution pages that are fetched before temporary execution card is shown\nconst MAX_LOADING_ATTEMPTS = 5;\n// Number of executions fetched on each page\nconst LOAD_MORE_PAGE_SIZE = 100;\n\nexport default mixins(showMessage, executionHelpers, debounceHelper, workflowHelpers).extend({\n\tname: 'executions-list',\n\tcomponents: {\n\t\tExecutionsSidebar,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloading: false,\n\t\t\tloadingMore: false,\n\t\t\tfilter: {} as ExecutionFilterType,\n\t\t\ttemporaryExecution: null as IExecutionsSummary | null,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useTagsStore, useNodeTypesStore, useSettingsStore, useUIStore, useWorkflowsStore),\n\t\thidePreview(): boolean {\n\t\t\tconst activeNotPresent =\n\t\t\t\tthis.filterApplied &&\n\t\t\t\t!(this.executions as IExecutionsSummary[]).find((ex) => ex.id === this.activeExecution?.id);\n\t\t\treturn this.loading || !this.executions.length || activeNotPresent;\n\t\t},\n\t\tfilterApplied(): boolean {\n\t\t\treturn this.filter.status !== 'all';\n\t\t},\n\t\tworkflowDataNotLoaded(): boolean {\n\t\t\treturn (\n\t\t\t\tthis.workflowsStore.workflowId === PLACEHOLDER_EMPTY_WORKFLOW_ID &&\n\t\t\t\tthis.workflowsStore.workflowName === ''\n\t\t\t);\n\t\t},\n\t\tloadedFinishedExecutionsCount(): number {\n\t\t\treturn this.workflowsStore.getAllLoadedFinishedExecutions.length;\n\t\t},\n\t\ttotalFinishedExecutionsCount(): number {\n\t\t\treturn this.workflowsStore.getTotalFinishedExecutionsCount;\n\t\t},\n\t\trequestFilter(): IDataObject {\n\t\t\treturn executionFilterToQueryFilter({\n\t\t\t\t...this.filter,\n\t\t\t\tworkflowId: this.currentWorkflow,\n\t\t\t});\n\t\t},\n\t},\n\twatch: {\n\t\t$route(to: Route, from: Route) {\n\t\t\tconst workflowChanged = from.params.name !== to.params.name;\n\t\t\tvoid this.initView(workflowChanged);\n\n\t\t\tif (to.params.executionId) {\n\t\t\t\tconst execution = this.workflowsStore.getExecutionDataById(to.params.executionId);\n\t\t\t\tif (execution) {\n\t\t\t\t\tthis.workflowsStore.activeWorkflowExecution = execution;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n\tasync beforeRouteLeave(to, from, next) {\n\t\tif (getNodeViewTab(to) === MAIN_HEADER_TABS.WORKFLOW) {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\t\tif (this.uiStore.stateIsDirty) {\n\t\t\tconst confirmModal = await this.confirmModal(\n\t\t\t\tthis.$locale.baseText('generic.unsavedWork.confirmMessage.message'),\n\t\t\t\tthis.$locale.baseText('generic.unsavedWork.confirmMessage.headline'),\n\t\t\t\t'warning',\n\t\t\t\tthis.$locale.baseText('generic.unsavedWork.confirmMessage.confirmButtonText'),\n\t\t\t\tthis.$locale.baseText('generic.unsavedWork.confirmMessage.cancelButtonText'),\n\t\t\t\ttrue,\n\t\t\t);\n\n\t\t\tif (confirmModal === MODAL_CONFIRMED) {\n\t\t\t\tconst saved = await this.saveCurrentWorkflow({}, false);\n\t\t\t\tif (saved) {\n\t\t\t\t\tawait this.settingsStore.fetchPromptsData();\n\t\t\t\t}\n\t\t\t\tthis.uiStore.stateIsDirty = false;\n\t\t\t\tnext();\n\t\t\t} else if (confirmModal === MODAL_CANCEL) {\n\t\t\t\tthis.uiStore.stateIsDirty = false;\n\t\t\t\tnext();\n\t\t\t}\n\t\t} else {\n\t\t\tnext();\n\t\t}\n\t},\n\tasync mounted() {\n\t\tthis.loading = true;\n\t\tconst workflowUpdated = this.$route.params.name !== this.workflowsStore.workflowId;\n\t\tconst onNewWorkflow =\n\t\t\tthis.$route.params.name === 'new' &&\n\t\t\tthis.workflowsStore.workflowId === PLACEHOLDER_EMPTY_WORKFLOW_ID;\n\t\tconst shouldUpdate = workflowUpdated && !onNewWorkflow;\n\t\tawait this.initView(shouldUpdate);\n\t\tif (!shouldUpdate) {\n\t\t\tif (this.workflowsStore.currentWorkflowExecutions.length > 0) {\n\t\t\t\tconst workflowExecutions = await this.loadExecutions();\n\t\t\t\tthis.workflowsStore.addToCurrentExecutions(workflowExecutions);\n\t\t\t\tawait this.setActiveExecution();\n\t\t\t} else {\n\t\t\t\tawait this.setExecutions();\n\t\t\t}\n\t\t}\n\t\tthis.loading = false;\n\t},\n\tmethods: {\n\t\tasync initView(loadWorkflow: boolean): Promise<void> {\n\t\t\tif (loadWorkflow) {\n\t\t\t\tif (this.nodeTypesStore.allNodeTypes.length === 0) {\n\t\t\t\t\tawait this.nodeTypesStore.getNodeTypes();\n\t\t\t\t}\n\t\t\t\tawait this.openWorkflow(this.$route.params.name);\n\t\t\t\tthis.uiStore.nodeViewInitialized = false;\n\t\t\t\tif (this.workflowsStore.currentWorkflowExecutions.length === 0) {\n\t\t\t\t\tawait this.setExecutions();\n\t\t\t\t}\n\t\t\t\tif (this.activeExecution) {\n\t\t\t\t\tthis.$router\n\t\t\t\t\t\t.push({\n\t\t\t\t\t\t\tname: VIEWS.EXECUTION_PREVIEW,\n\t\t\t\t\t\t\tparams: { name: this.currentWorkflow, executionId: this.activeExecution.id },\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(() => {});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync onLoadMore(): Promise<void> {\n\t\t\tif (!this.loadingMore) {\n\t\t\t\tawait this.callDebounced('loadMore', { debounceTime: 1000 });\n\t\t\t}\n\t\t},\n\t\tasync loadMore(limit = 20): Promise<void> {\n\t\t\tif (\n\t\t\t\tthis.filter.status === 'running' ||\n\t\t\t\tthis.loadedFinishedExecutionsCount >= this.totalFinishedExecutionsCount\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.loadingMore = true;\n\n\t\t\tlet lastId: string | undefined;\n\t\t\tif (this.executions.length !== 0) {\n\t\t\t\tconst lastItem = this.executions.slice(-1)[0];\n\t\t\t\tlastId = lastItem.id;\n\t\t\t}\n\n\t\t\tlet data: IExecutionsListResponse;\n\t\t\ttry {\n\t\t\t\tdata = await this.workflowsStore.getPastExecutions(this.requestFilter, limit, lastId);\n\t\t\t} catch (error) {\n\t\t\t\tthis.loadingMore = false;\n\t\t\t\tthis.$showError(error, this.$locale.baseText('executionsList.showError.loadMore.title'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata.results = data.results.map((execution) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn { ...execution, mode: execution.mode };\n\t\t\t});\n\t\t\tconst currentExecutions = [...this.executions];\n\t\t\tfor (const newExecution of data.results) {\n\t\t\t\tif (currentExecutions.find((ex) => ex.id === newExecution.id) === undefined) {\n\t\t\t\t\tcurrentExecutions.push(newExecution);\n\t\t\t\t}\n\t\t\t\t// If we loaded temp execution, put it into it's place and remove from top of the list\n\t\t\t\tif (newExecution.id === this.temporaryExecution?.id) {\n\t\t\t\t\tthis.temporaryExecution = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.workflowsStore.currentWorkflowExecutions = currentExecutions;\n\t\t\tthis.loadingMore = false;\n\t\t},\n\t\tasync onDeleteCurrentExecution(): Promise<void> {\n\t\t\tthis.loading = true;\n\t\t\ttry {\n\t\t\t\tconst executionIndex = this.executions.findIndex(\n\t\t\t\t\t(execution: IExecutionsSummary) => execution.id === this.$route.params.executionId,\n\t\t\t\t);\n\t\t\t\tconst nextExecution =\n\t\t\t\t\tthis.executions[executionIndex + 1] ||\n\t\t\t\t\tthis.executions[executionIndex - 1] ||\n\t\t\t\t\tthis.executions[0];\n\n\t\t\t\tawait this.workflowsStore.deleteExecutions({ ids: [this.$route.params.executionId] });\n\t\t\t\tif (this.temporaryExecution?.id === this.$route.params.executionId) {\n\t\t\t\t\tthis.temporaryExecution = null;\n\t\t\t\t}\n\t\t\t\tif (this.executions.length > 0) {\n\t\t\t\t\tawait this.$router\n\t\t\t\t\t\t.push({\n\t\t\t\t\t\t\tname: VIEWS.EXECUTION_PREVIEW,\n\t\t\t\t\t\t\tparams: { name: this.currentWorkflow, executionId: nextExecution.id },\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(() => {});\n\t\t\t\t\tthis.workflowsStore.activeWorkflowExecution = nextExecution;\n\t\t\t\t} else {\n\t\t\t\t\t// If there are no executions left, show empty state and clear active execution from the store\n\t\t\t\t\tthis.workflowsStore.activeWorkflowExecution = null;\n\t\t\t\t\tawait this.$router.push({\n\t\t\t\t\t\tname: VIEWS.EXECUTION_HOME,\n\t\t\t\t\t\tparams: { name: this.currentWorkflow },\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tawait this.setExecutions();\n\t\t\t} catch (error) {\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('executionsList.showError.handleDeleteSelected.title'),\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.loading = false;\n\n\t\t\tthis.$showMessage({\n\t\t\t\ttitle: this.$locale.baseText('executionsList.showMessage.handleDeleteSelected.title'),\n\t\t\t\ttype: 'success',\n\t\t\t});\n\t\t},\n\t\tasync onStopExecution(): Promise<void> {\n\t\t\tconst activeExecutionId = this.$route.params.executionId;\n\n\t\t\ttry {\n\t\t\t\tawait this.workflowsStore.stopCurrentExecution(activeExecutionId);\n\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('executionsList.showMessage.stopExecution.title'),\n\t\t\t\t\tmessage: this.$locale.baseText('executionsList.showMessage.stopExecution.message', {\n\t\t\t\t\t\tinterpolate: { activeExecutionId },\n\t\t\t\t\t}),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\n\t\t\t\tawait this.loadAutoRefresh();\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('executionsList.showError.stopExecution.title'),\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tasync onFilterUpdated(filter: ExecutionFilterType): void {\n\t\t\tthis.filter = filter;\n\t\t\tawait this.setExecutions();\n\t\t},\n\t\tasync setExecutions(): Promise<void> {\n\t\t\tthis.workflowsStore.currentWorkflowExecutions = await this.loadExecutions();\n\t\t\tawait this.setActiveExecution();\n\t\t},\n\t\tasync loadAutoRefresh(): Promise<void> {\n\t\t\t// Most of the auto-refresh logic is taken from the `ExecutionsList` component\n\t\t\tconst fetchedExecutions: IExecutionsSummary[] = await this.loadExecutions();\n\t\t\tlet existingExecutions: IExecutionsSummary[] = [...this.executions];\n\t\t\tconst alreadyPresentExecutionIds = existingExecutions.map((exec) => parseInt(exec.id, 10));\n\t\t\tlet lastId = 0;\n\t\t\tconst gaps = [] as number[];\n\t\t\tlet updatedActiveExecution = null;\n\n\t\t\tfor (let i = fetchedExecutions.length - 1; i >= 0; i--) {\n\t\t\t\tconst currentItem = fetchedExecutions[i];\n\t\t\t\tconst currentId = parseInt(currentItem.id, 10);\n\t\t\t\tif (lastId !== 0 && !isNaN(currentId)) {\n\t\t\t\t\tif (currentId - lastId > 1) {\n\t\t\t\t\t\tconst range = _range(lastId + 1, currentId);\n\t\t\t\t\t\tgaps.push(...range);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlastId = parseInt(currentItem.id, 10) || 0;\n\n\t\t\t\tconst executionIndex = alreadyPresentExecutionIds.indexOf(currentId);\n\t\t\t\tif (executionIndex !== -1) {\n\t\t\t\t\tconst existingExecution = existingExecutions.find((ex) => ex.id === currentItem.id);\n\t\t\t\t\tconst existingStillRunning =\n\t\t\t\t\t\t(existingExecution && existingExecution.finished === false) ||\n\t\t\t\t\t\texistingExecution?.stoppedAt === undefined;\n\t\t\t\t\tconst currentFinished =\n\t\t\t\t\t\tcurrentItem.finished === true || currentItem.stoppedAt !== undefined;\n\n\t\t\t\t\tif (existingStillRunning && currentFinished) {\n\t\t\t\t\t\texistingExecutions[executionIndex] = currentItem;\n\t\t\t\t\t\tif (currentItem.id === this.activeExecution?.id) {\n\t\t\t\t\t\t\tupdatedActiveExecution = currentItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet j;\n\t\t\t\tfor (j = existingExecutions.length - 1; j >= 0; j--) {\n\t\t\t\t\tif (currentId < parseInt(existingExecutions[j].id, 10)) {\n\t\t\t\t\t\texistingExecutions.splice(j + 1, 0, currentItem);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (j === -1) {\n\t\t\t\t\texistingExecutions.unshift(currentItem);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\texistingExecutions = existingExecutions.filter(\n\t\t\t\t(execution) =>\n\t\t\t\t\t!gaps.includes(parseInt(execution.id, 10)) && lastId >= parseInt(execution.id, 10),\n\t\t\t);\n\t\t\tthis.workflowsStore.currentWorkflowExecutions = existingExecutions;\n\t\t\tif (updatedActiveExecution !== null) {\n\t\t\t\tthis.workflowsStore.activeWorkflowExecution = updatedActiveExecution;\n\t\t\t} else {\n\t\t\t\tconst activeInList = existingExecutions.some((ex) => ex.id === this.activeExecution?.id);\n\t\t\t\tif (!activeInList && this.executions.length > 0 && !this.temporaryExecution) {\n\t\t\t\t\tthis.$router\n\t\t\t\t\t\t.push({\n\t\t\t\t\t\t\tname: VIEWS.EXECUTION_PREVIEW,\n\t\t\t\t\t\t\tparams: { name: this.currentWorkflow, executionId: this.executions[0].id },\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(() => {});\n\t\t\t\t} else if (this.executions.length === 0) {\n\t\t\t\t\tthis.$router.push({ name: VIEWS.EXECUTION_HOME }).catch(() => {});\n\t\t\t\t\tthis.workflowsStore.activeWorkflowExecution = null;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync loadExecutions(): Promise<IExecutionsSummary[]> {\n\t\t\tif (!this.currentWorkflow) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\ttry {\n\t\t\t\treturn await this.workflowsStore.loadCurrentWorkflowExecutions(this.requestFilter);\n\t\t\t} catch (error) {\n\t\t\t\tif (error.errorCode === NO_NETWORK_ERROR_CODE) {\n\t\t\t\t\tthis.$showMessage(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: this.$locale.baseText('executionsList.showError.refreshData.title'),\n\t\t\t\t\t\t\tmessage: error.message,\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tduration: 3500,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.$showError(\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tthis.$locale.baseText('executionsList.showError.refreshData.title'),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\t\tasync setActiveExecution(): Promise<void> {\n\t\t\tconst activeExecutionId = this.$route.params.executionId;\n\t\t\tif (activeExecutionId) {\n\t\t\t\tconst execution = this.workflowsStore.getExecutionDataById(activeExecutionId);\n\t\t\t\tif (execution) {\n\t\t\t\t\tthis.workflowsStore.activeWorkflowExecution = execution;\n\t\t\t\t} else {\n\t\t\t\t\tawait this.tryToFindExecution(activeExecutionId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there is no execution in the route, select the first one\n\t\t\tif (\n\t\t\t\tthis.workflowsStore.activeWorkflowExecution === null &&\n\t\t\t\tthis.executions.length > 0 &&\n\t\t\t\t!this.temporaryExecution\n\t\t\t) {\n\t\t\t\tthis.workflowsStore.activeWorkflowExecution = this.executions[0];\n\t\t\t\tthis.$router\n\t\t\t\t\t.push({\n\t\t\t\t\t\tname: VIEWS.EXECUTION_PREVIEW,\n\t\t\t\t\t\tparams: { name: this.currentWorkflow, executionId: this.executions[0].id },\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {});\n\t\t\t}\n\t\t},\n\t\tasync tryToFindExecution(executionId: string, attemptCount = 0): Promise<void> {\n\t\t\t// First check if executions exists in the DB at all\n\t\t\tif (attemptCount === 0) {\n\t\t\t\tconst existingExecution = await this.workflowsStore.fetchExecutionDataById(executionId);\n\t\t\t\tif (!existingExecution) {\n\t\t\t\t\tthis.workflowsStore.activeWorkflowExecution = null;\n\t\t\t\t\tthis.$showError(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\tthis.$locale.baseText('executionView.notFound.message', {\n\t\t\t\t\t\t\t\tinterpolate: { executionId },\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tthis.$locale.baseText('nodeView.showError.openExecution.title'),\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tthis.temporaryExecution = existingExecution as IExecutionsSummary;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// stop if the execution wasn't found in the first 1000 lookups\n\t\t\tif (attemptCount >= MAX_LOADING_ATTEMPTS) {\n\t\t\t\tif (this.temporaryExecution) {\n\t\t\t\t\tthis.workflowsStore.activeWorkflowExecution = this.temporaryExecution;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.workflowsStore.activeWorkflowExecution = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Fetch next batch of executions\n\t\t\tawait this.loadMore(LOAD_MORE_PAGE_SIZE);\n\t\t\tconst execution = this.workflowsStore.getExecutionDataById(executionId);\n\t\t\tif (!execution) {\n\t\t\t\t// If it's not there load next until found\n\t\t\t\tawait this.$nextTick();\n\t\t\t\t// But skip fetching execution data since we at this point know it exists\n\t\t\t\tawait this.tryToFindExecution(executionId, attemptCount + 1);\n\t\t\t} else {\n\t\t\t\t// When found set execution as active\n\t\t\t\tthis.workflowsStore.activeWorkflowExecution = execution;\n\t\t\t\tthis.temporaryExecution = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\tasync openWorkflow(workflowId: string): Promise<void> {\n\t\t\tawait this.loadActiveWorkflows();\n\n\t\t\tlet data: IWorkflowDb | undefined;\n\t\t\ttry {\n\t\t\t\tdata = await this.workflowsStore.fetchWorkflow(workflowId);\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('nodeView.showError.openWorkflow.title'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (data === undefined) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\tthis.$locale.baseText('nodeView.workflowWithIdCouldNotBeFound', {\n\t\t\t\t\t\tinterpolate: { workflowId },\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t\tawait this.addNodes(data.nodes, data.connections);\n\n\t\t\tthis.workflowsStore.setActive(data.active || false);\n\t\t\tthis.workflowsStore.setWorkflowId(workflowId);\n\t\t\tthis.workflowsStore.setWorkflowName({ newName: data.name, setStateDirty: false });\n\t\t\tthis.workflowsStore.setWorkflowSettings(data.settings || {});\n\t\t\tthis.workflowsStore.setWorkflowPinData(data.pinData || {});\n\t\t\tconst tags = (data.tags || []) as ITag[];\n\t\t\tconst tagIds = tags.map((tag) => tag.id);\n\t\t\tthis.workflowsStore.setWorkflowTagIds(tagIds || []);\n\t\t\tthis.workflowsStore.setWorkflowVersionId(data.versionId);\n\n\t\t\tthis.tagsStore.upsertTags(tags);\n\n\t\t\tthis.$externalHooks().run('workflow.open', { workflowId, workflowName: data.name });\n\t\t\tthis.uiStore.stateIsDirty = false;\n\t\t},\n\t\tasync addNodes(nodes: INodeUi[], connections?: IConnections) {\n\t\t\tif (!nodes || !nodes.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.loadNodesProperties(\n\t\t\t\tnodes.map((node) => ({ name: node.type, version: node.typeVersion })),\n\t\t\t);\n\n\t\t\tlet nodeType: INodeTypeDescription | null;\n\t\t\tnodes.forEach((node) => {\n\t\t\t\tif (!node.id) {\n\t\t\t\t\tnode.id = uuid();\n\t\t\t\t}\n\n\t\t\t\tnodeType = this.nodeTypesStore.getNodeType(node.type, node.typeVersion);\n\n\t\t\t\t// Make sure that some properties always exist\n\t\t\t\tif (!node.hasOwnProperty('disabled')) {\n\t\t\t\t\tnode.disabled = false;\n\t\t\t\t}\n\n\t\t\t\tif (!node.hasOwnProperty('parameters')) {\n\t\t\t\t\tnode.parameters = {};\n\t\t\t\t}\n\n\t\t\t\t// Load the defaul parameter values because only values which differ\n\t\t\t\t// from the defaults get saved\n\t\t\t\tif (nodeType !== null) {\n\t\t\t\t\tlet nodeParameters = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnodeParameters = NodeHelpers.getNodeParameters(\n\t\t\t\t\t\t\tnodeType.properties,\n\t\t\t\t\t\t\tnode.parameters,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\tthis.$locale.baseText('nodeView.thereWasAProblemLoadingTheNodeParametersOfNode') +\n\t\t\t\t\t\t\t\t`: \"${node.name}\"`,\n\t\t\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\t\t\tconsole.error(e); // eslint-disable-line no-console\n\t\t\t\t\t}\n\t\t\t\t\tnode.parameters = nodeParameters !== null ? nodeParameters : {};\n\n\t\t\t\t\t// if it's a webhook and the path is empty set the UUID as the default path\n\t\t\t\t\tif (node.type === WEBHOOK_NODE_TYPE && node.parameters.path === '') {\n\t\t\t\t\t\tnode.parameters.path = node.webhookId as string;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.workflowsStore.addNode(node);\n\t\t\t});\n\n\t\t\t// Load the connections\n\t\t\tif (connections !== undefined) {\n\t\t\t\tlet connectionData;\n\t\t\t\tfor (const sourceNode of Object.keys(connections)) {\n\t\t\t\t\tfor (const type of Object.keys(connections[sourceNode])) {\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tlet sourceIndex = 0;\n\t\t\t\t\t\t\tsourceIndex < connections[sourceNode][type].length;\n\t\t\t\t\t\t\tsourceIndex++\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst outwardConnections = connections[sourceNode][type][sourceIndex];\n\t\t\t\t\t\t\tif (!outwardConnections) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toutwardConnections.forEach((targetData) => {\n\t\t\t\t\t\t\t\tconnectionData = [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode: sourceNode,\n\t\t\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\t\t\tindex: sourceIndex,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tnode: targetData.node,\n\t\t\t\t\t\t\t\t\t\ttype: targetData.type,\n\t\t\t\t\t\t\t\t\t\tindex: targetData.index,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t] as [IConnection, IConnection];\n\n\t\t\t\t\t\t\t\tthis.workflowsStore.addConnection({\n\t\t\t\t\t\t\t\t\tconnection: connectionData,\n\t\t\t\t\t\t\t\t\tsetStateDirty: false,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync loadNodesProperties(nodeInfos: INodeTypeNameVersion[]): Promise<void> {\n\t\t\tconst allNodes: INodeTypeDescription[] = this.nodeTypesStore.allNodeTypes;\n\n\t\t\tconst nodesToBeFetched: INodeTypeNameVersion[] = [];\n\t\t\tallNodes.forEach((node) => {\n\t\t\t\tconst nodeVersions = Array.isArray(node.version) ? node.version : [node.version];\n\t\t\t\tif (\n\t\t\t\t\t!!nodeInfos.find((n) => n.name === node.name && nodeVersions.includes(n.version)) &&\n\t\t\t\t\t!node.hasOwnProperty('properties')\n\t\t\t\t) {\n\t\t\t\t\tnodesToBeFetched.push({\n\t\t\t\t\t\tname: node.name,\n\t\t\t\t\t\tversion: Array.isArray(node.version) ? node.version.slice(-1)[0] : node.version,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (nodesToBeFetched.length > 0) {\n\t\t\t\t// Only call API if node information is actually missing\n\t\t\t\tawait this.nodeTypesStore.getNodesInformation(nodesToBeFetched);\n\t\t\t}\n\t\t},\n\t\tasync loadActiveWorkflows(): Promise<void> {\n\t\t\tawait this.workflowsStore.fetchActiveWorkflows();\n\t\t},\n\t\tasync onRetryExecution(payload: { execution: IExecutionsSummary; command: string }) {\n\t\t\tconst loadWorkflow = payload.command === 'current-workflow';\n\n\t\t\tthis.$showMessage({\n\t\t\t\ttitle: this.$locale.baseText('executionDetails.runningMessage'),\n\t\t\t\ttype: 'info',\n\t\t\t\tduration: 2000,\n\t\t\t});\n\t\t\tawait this.retryExecution(payload.execution, loadWorkflow);\n\t\t\tawait this.loadAutoRefresh();\n\n\t\t\tthis.$telemetry.track('User clicked retry execution button', {\n\t\t\t\tworkflow_id: this.workflowsStore.workflowId,\n\t\t\t\texecution_id: payload.execution.id,\n\t\t\t\tretry_type: loadWorkflow ? 'current' : 'original',\n\t\t\t});\n\t\t},\n\t\tasync retryExecution(execution: IExecutionsSummary, loadWorkflow?: boolean) {\n\t\t\ttry {\n\t\t\t\tconst retrySuccessful = await this.workflowsStore.retryExecution(\n\t\t\t\t\texecution.id,\n\t\t\t\t\tloadWorkflow,\n\t\t\t\t);\n\n\t\t\t\tif (retrySuccessful === true) {\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: this.$locale.baseText('executionsList.showMessage.retrySuccessfulTrue.title'),\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.$showMessage({\n\t\t\t\t\t\ttitle: this.$locale.baseText('executionsList.showMessage.retrySuccessfulFalse.title'),\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('executionsList.showError.retryExecution.title'),\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.container {\n\tdisplay: flex;\n\theight: 100%;\n\twidth: 100%;\n}\n\n.content {\n\tflex: 1;\n}\n</style>\n","<template>\n\t<div :class=\"['workflow-executions-container', $style.container]\">\n\t\t<div v-if=\"executionCount === 0\" :class=\"[$style.messageContainer, $style.noExecutionsMessage]\">\n\t\t\t<div v-if=\"!containsTrigger\">\n\t\t\t\t<n8n-heading tag=\"h2\" size=\"xlarge\" color=\"text-dark\" class=\"mb-2xs\">\n\t\t\t\t\t{{ $locale.baseText('executionsLandingPage.emptyState.noTrigger.heading') }}\n\t\t\t\t</n8n-heading>\n\t\t\t\t<n8n-text size=\"medium\">\n\t\t\t\t\t{{ $locale.baseText('executionsLandingPage.emptyState.message') }}\n\t\t\t\t</n8n-text>\n\t\t\t\t<n8n-button class=\"mt-l\" type=\"tertiary\" size=\"large\" @click=\"onSetupFirstStep\">\n\t\t\t\t\t{{ $locale.baseText('executionsLandingPage.emptyState.noTrigger.buttonText') }}\n\t\t\t\t</n8n-button>\n\t\t\t</div>\n\t\t\t<div v-else>\n\t\t\t\t<n8n-heading tag=\"h2\" size=\"xlarge\" color=\"text-dark\" class=\"mb-2xs\">\n\t\t\t\t\t{{ $locale.baseText('executionsLandingPage.emptyState.heading') }}\n\t\t\t\t</n8n-heading>\n\t\t\t\t<executions-info-accordion />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { PLACEHOLDER_EMPTY_WORKFLOW_ID, VIEWS } from '@/constants';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { mapStores } from 'pinia';\nimport { defineComponent } from 'vue';\nimport ExecutionsInfoAccordion from './ExecutionsInfoAccordion.vue';\n\nexport default defineComponent({\n\tname: 'executions-landing-page',\n\tcomponents: {\n\t\tExecutionsInfoAccordion,\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore, useWorkflowsStore),\n\t\texecutionCount(): number {\n\t\t\treturn this.workflowsStore.currentWorkflowExecutions.length;\n\t\t},\n\t\tcontainsTrigger(): boolean {\n\t\t\treturn this.workflowsStore.workflowTriggerNodes.length > 0;\n\t\t},\n\t},\n\tmethods: {\n\t\tonSetupFirstStep(event: MouseEvent): void {\n\t\t\tthis.uiStore.addFirstStepOnLoad = true;\n\t\t\tconst workflowRoute = this.getWorkflowRoute();\n\t\t\tvoid this.$router.push(workflowRoute);\n\t\t},\n\t\tgetWorkflowRoute(): { name: string; params: {} } {\n\t\t\tconst workflowId = this.workflowsStore.workflowId || this.$route.params.name;\n\t\t\tif (workflowId === PLACEHOLDER_EMPTY_WORKFLOW_ID) {\n\t\t\t\treturn { name: VIEWS.NEW_WORKFLOW, params: {} };\n\t\t\t} else {\n\t\t\t\treturn { name: VIEWS.WORKFLOW, params: { name: workflowId } };\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.container {\n\twidth: 100%;\n\theight: 100%;\n\tflex: 1;\n\tbackground-color: var(--color-background-light);\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n}\n\n.messageContainer {\n\tmargin-top: var(--spacing-4xl);\n\tcolor: var(--color-text-base);\n\n\tdiv {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\ttext-align: center;\n\t}\n}\n\n.icon {\n\tfont-size: 24px;\n\tcolor: var(--color-foreground-dark);\n}\n</style>\n","<template>\n\t<div :class=\"$style.container\">\n\t\t<div v-if=\"loaderType === 'image' && !showPreview\" :class=\"$style.imageLoader\">\n\t\t\t<n8n-loading :loading=\"!showPreview\" :rows=\"1\" variant=\"image\" />\n\t\t</div>\n\t\t<div v-else-if=\"loaderType === 'spinner' && !showPreview\" :class=\"$style.spinner\">\n\t\t\t<n8n-spinner type=\"dots\" />\n\t\t</div>\n\t\t<iframe\n\t\t\t:class=\"{\n\t\t\t\t[$style.workflow]: !this.nodeViewDetailsOpened,\n\t\t\t\t[$style.executionPreview]: mode === 'execution',\n\t\t\t\t[$style.openNDV]: this.nodeViewDetailsOpened,\n\t\t\t\t[$style.show]: this.showPreview,\n\t\t\t}\"\n\t\t\tref=\"preview_iframe\"\n\t\t\t:src=\"`${rootStore.baseUrl}workflows/demo`\"\n\t\t\t@mouseenter=\"onMouseEnter\"\n\t\t\t@mouseleave=\"onMouseLeave\"\n\t\t></iframe>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\nimport { showMessage } from '@/mixins/showMessage';\nimport type { IWorkflowDb } from '../Interface';\nimport { mapStores } from 'pinia';\nimport { useRootStore } from '@/stores/n8nRoot.store';\n\nexport default mixins(showMessage).extend({\n\tname: 'WorkflowPreview',\n\tprops: {\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tmode: {\n\t\t\ttype: String,\n\t\t\tdefault: 'workflow',\n\t\t\tvalidator: (value: string): boolean => ['workflow', 'execution'].includes(value),\n\t\t},\n\t\tworkflow: {\n\t\t\ttype: Object as () => IWorkflowDb,\n\t\t\trequired: false,\n\t\t},\n\t\texecutionId: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t},\n\t\texecutionMode: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t},\n\t\tloaderType: {\n\t\t\ttype: String,\n\t\t\tdefault: 'image',\n\t\t\tvalidator: (value: string): boolean => ['image', 'spinner'].includes(value),\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tnodeViewDetailsOpened: false,\n\t\t\tready: false,\n\t\t\tinsideIframe: false,\n\t\t\tscrollX: 0,\n\t\t\tscrollY: 0,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useRootStore),\n\t\tshowPreview(): boolean {\n\t\t\treturn (\n\t\t\t\t!this.loading &&\n\t\t\t\t((this.mode === 'workflow' && !!this.workflow) ||\n\t\t\t\t\t(this.mode === 'execution' && !!this.executionId)) &&\n\t\t\t\tthis.ready\n\t\t\t);\n\t\t},\n\t},\n\tmethods: {\n\t\tonMouseEnter() {\n\t\t\tthis.insideIframe = true;\n\t\t\tthis.scrollX = window.scrollX;\n\t\t\tthis.scrollY = window.scrollY;\n\t\t},\n\t\tonMouseLeave() {\n\t\t\tthis.insideIframe = false;\n\t\t},\n\t\tloadWorkflow() {\n\t\t\ttry {\n\t\t\t\tif (!this.workflow) {\n\t\t\t\t\tthrow new Error(this.$locale.baseText('workflowPreview.showError.missingWorkflow'));\n\t\t\t\t}\n\t\t\t\tif (!this.workflow.nodes || !Array.isArray(this.workflow.nodes)) {\n\t\t\t\t\tthrow new Error(this.$locale.baseText('workflowPreview.showError.arrayEmpty'));\n\t\t\t\t}\n\n\t\t\t\tconst iframeRef = this.$refs.preview_iframe as HTMLIFrameElement | undefined;\n\t\t\t\tif (iframeRef?.contentWindow) {\n\t\t\t\t\tiframeRef.contentWindow.postMessage(\n\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\tcommand: 'openWorkflow',\n\t\t\t\t\t\t\tworkflow: this.workflow,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t'*',\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('workflowPreview.showError.previewError.title'),\n\t\t\t\t\tthis.$locale.baseText('workflowPreview.showError.previewError.message'),\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tloadExecution() {\n\t\t\ttry {\n\t\t\t\tif (!this.executionId) {\n\t\t\t\t\tthrow new Error(this.$locale.baseText('workflowPreview.showError.missingExecution'));\n\t\t\t\t}\n\t\t\t\tconst iframeRef = this.$refs.preview_iframe as HTMLIFrameElement | undefined;\n\t\t\t\tif (iframeRef?.contentWindow) {\n\t\t\t\t\tiframeRef.contentWindow.postMessage(\n\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\tcommand: 'openExecution',\n\t\t\t\t\t\t\texecutionId: this.executionId,\n\t\t\t\t\t\t\texecutionMode: this.executionMode || '',\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t'*',\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\terror,\n\t\t\t\t\tthis.$locale.baseText('workflowPreview.showError.previewError.title'),\n\t\t\t\t\tthis.$locale.baseText('workflowPreview.executionMode.showError.previewError.message'),\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\treceiveMessage({ data }: MessageEvent) {\n\t\t\ttry {\n\t\t\t\tconst json = JSON.parse(data);\n\t\t\t\tif (json.command === 'n8nReady') {\n\t\t\t\t\tthis.ready = true;\n\t\t\t\t} else if (json.command === 'openNDV') {\n\t\t\t\t\tthis.nodeViewDetailsOpened = true;\n\t\t\t\t} else if (json.command === 'closeNDV') {\n\t\t\t\t\tthis.nodeViewDetailsOpened = false;\n\t\t\t\t} else if (json.command === 'error') {\n\t\t\t\t\tthis.$emit('close');\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t},\n\t\tonDocumentScroll() {\n\t\t\tif (this.insideIframe) {\n\t\t\t\twindow.scrollTo(this.scrollX, this.scrollY);\n\t\t\t}\n\t\t},\n\t},\n\twatch: {\n\t\tshowPreview(show) {\n\t\t\tif (show) {\n\t\t\t\tif (this.mode === 'workflow') {\n\t\t\t\t\tthis.loadWorkflow();\n\t\t\t\t} else if (this.mode === 'execution') {\n\t\t\t\t\tthis.loadExecution();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\texecutionId(value) {\n\t\t\tif (this.mode === 'execution' && this.executionId) {\n\t\t\t\tthis.loadExecution();\n\t\t\t}\n\t\t},\n\t},\n\tmounted() {\n\t\twindow.addEventListener('message', this.receiveMessage);\n\t\tdocument.addEventListener('scroll', this.onDocumentScroll);\n\t},\n\tbeforeDestroy() {\n\t\twindow.removeEventListener('message', this.receiveMessage);\n\t\tdocument.removeEventListener('scroll', this.onDocumentScroll);\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n}\n\n.workflow {\n\t// firefox bug requires loading iframe as such\n\tvisibility: hidden;\n\theight: 0;\n\twidth: 0;\n}\n\n.show {\n\tvisibility: visible;\n\theight: 100%;\n\twidth: 100%;\n}\n\n.openNDV {\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\theight: 100%;\n\twidth: 100%;\n\tz-index: 9999999;\n}\n\n.spinner {\n\tcolor: var(--color-primary);\n\tposition: absolute;\n\ttop: 50% !important;\n\t-ms-transform: translateY(-50%);\n\ttransform: translateY(-50%);\n}\n\n.imageLoader {\n\twidth: 100%;\n}\n\n.executionPreview {\n\theight: 100%;\n}\n</style>\n","<template>\n\t<div v-if=\"executionUIDetails?.name === 'running'\" :class=\"$style.runningInfo\">\n\t\t<div :class=\"$style.spinner\">\n\t\t\t<n8n-spinner type=\"ring\" />\n\t\t</div>\n\t\t<n8n-text :class=\"$style.runningMessage\" color=\"text-light\">\n\t\t\t{{ $locale.baseText('executionDetails.runningMessage') }}\n\t\t</n8n-text>\n\t\t<n8n-button class=\"mt-l\" type=\"tertiary\" size=\"medium\" @click=\"handleStopClick\">\n\t\t\t{{ $locale.baseText('executionsList.stopExecution') }}\n\t\t</n8n-button>\n\t</div>\n\t<div v-else :class=\"$style.previewContainer\">\n\t\t<div\n\t\t\t:class=\"{ [$style.executionDetails]: true, [$style.sidebarCollapsed]: sidebarCollapsed }\"\n\t\t\tv-if=\"activeExecution\"\n\t\t\t:data-test-id=\"`execution-preview-details-${executionId}`\"\n\t\t>\n\t\t\t<div>\n\t\t\t\t<n8n-text size=\"large\" color=\"text-base\" :bold=\"true\" data-test-id=\"execution-time\">{{\n\t\t\t\t\texecutionUIDetails?.startTime\n\t\t\t\t}}</n8n-text\n\t\t\t\t><br />\n\t\t\t\t<n8n-spinner\n\t\t\t\t\tv-if=\"executionUIDetails?.name === 'running'\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t:class=\"[$style.spinner, 'mr-4xs']\"\n\t\t\t\t/>\n\t\t\t\t<n8n-text\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t:class=\"[$style.status, $style[executionUIDetails.name]]\"\n\t\t\t\t\tdata-test-id=\"execution-preview-label\"\n\t\t\t\t>\n\t\t\t\t\t{{ executionUIDetails.label }}\n\t\t\t\t</n8n-text>\n\t\t\t\t<n8n-text v-if=\"executionUIDetails.name === 'running'\" color=\"text-base\" size=\"medium\">\n\t\t\t\t\t{{\n\t\t\t\t\t\t$locale.baseText('executionDetails.runningTimeRunning', {\n\t\t\t\t\t\t\tinterpolate: { time: executionUIDetails?.runningTime },\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\t| ID#{{ activeExecution.id }}\n\t\t\t\t</n8n-text>\n\t\t\t\t<n8n-text\n\t\t\t\t\tv-else-if=\"executionUIDetails.name !== 'waiting'\"\n\t\t\t\t\tcolor=\"text-base\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tdata-test-id=\"execution-preview-id\"\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\t$locale.baseText('executionDetails.runningTimeFinished', {\n\t\t\t\t\t\t\tinterpolate: { time: executionUIDetails?.runningTime ?? 'unknown' },\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\t| ID#{{ activeExecution.id }}\n\t\t\t\t</n8n-text>\n\t\t\t\t<n8n-text\n\t\t\t\t\tv-else-if=\"executionUIDetails?.name === 'waiting'\"\n\t\t\t\t\tcolor=\"text-base\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t>\n\t\t\t\t\t| ID#{{ activeExecution.id }}\n\t\t\t\t</n8n-text>\n\t\t\t\t<br /><n8n-text v-if=\"activeExecution.mode === 'retry'\" color=\"text-base\" size=\"medium\">\n\t\t\t\t\t{{ $locale.baseText('executionDetails.retry') }}\n\t\t\t\t\t<router-link\n\t\t\t\t\t\t:class=\"$style.executionLink\"\n\t\t\t\t\t\t:to=\"{\n\t\t\t\t\t\t\tname: VIEWS.EXECUTION_PREVIEW,\n\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\tworkflowId: activeExecution.workflowId,\n\t\t\t\t\t\t\t\texecutionId: activeExecution.retryOf,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t#{{ activeExecution.retryOf }}\n\t\t\t\t\t</router-link>\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<el-dropdown\n\t\t\t\t\tv-if=\"executionUIDetails?.name === 'error'\"\n\t\t\t\t\ttrigger=\"click\"\n\t\t\t\t\tclass=\"mr-xs\"\n\t\t\t\t\t@command=\"handleRetryClick\"\n\t\t\t\t\tref=\"retryDropdown\"\n\t\t\t\t>\n\t\t\t\t\t<span class=\"retry-button\">\n\t\t\t\t\t\t<n8n-icon-button\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t\t:title=\"$locale.baseText('executionsList.retryExecution')\"\n\t\t\t\t\t\t\ticon=\"redo\"\n\t\t\t\t\t\t\tdata-test-id=\"execution-preview-retry-button\"\n\t\t\t\t\t\t\t@blur=\"onRetryButtonBlur\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t\t<template #dropdown>\n\t\t\t\t\t\t<el-dropdown-menu>\n\t\t\t\t\t\t\t<el-dropdown-item command=\"current-workflow\">\n\t\t\t\t\t\t\t\t{{ $locale.baseText('executionsList.retryWithCurrentlySavedWorkflow') }}\n\t\t\t\t\t\t\t</el-dropdown-item>\n\t\t\t\t\t\t\t<el-dropdown-item command=\"original-workflow\">\n\t\t\t\t\t\t\t\t{{ $locale.baseText('executionsList.retryWithOriginalWorkflow') }}\n\t\t\t\t\t\t\t</el-dropdown-item>\n\t\t\t\t\t\t</el-dropdown-menu>\n\t\t\t\t\t</template>\n\t\t\t\t</el-dropdown>\n\t\t\t\t<n8n-icon-button\n\t\t\t\t\t:title=\"$locale.baseText('executionDetails.deleteExecution')\"\n\t\t\t\t\ticon=\"trash\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\tdata-test-id=\"execution-preview-delete-button\"\n\t\t\t\t\t@click=\"onDeleteExecution\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t\t<workflow-preview\n\t\t\tmode=\"execution\"\n\t\t\tloaderType=\"spinner\"\n\t\t\t:executionId=\"executionId\"\n\t\t\t:executionMode=\"executionMode\"\n\t\t/>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\nimport { showMessage } from '@/mixins/showMessage';\nimport WorkflowPreview from '@/components/WorkflowPreview.vue';\nimport type { IExecutionUIData } from '@/mixins/executionsHelpers';\nimport { executionHelpers } from '@/mixins/executionsHelpers';\nimport { VIEWS } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { Dropdown as ElDropdown } from 'element-ui';\n\ntype RetryDropdownRef = InstanceType<typeof ElDropdown> & { hide: () => void };\n\nexport default mixins(showMessage, executionHelpers).extend({\n\tname: 'execution-preview',\n\tcomponents: {\n\t\tElDropdown,\n\t\tWorkflowPreview,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tVIEWS,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore),\n\t\texecutionUIDetails(): IExecutionUIData | null {\n\t\t\treturn this.activeExecution ? this.getExecutionUIDetails(this.activeExecution) : null;\n\t\t},\n\t\tsidebarCollapsed(): boolean {\n\t\t\treturn this.uiStore.sidebarMenuCollapsed;\n\t\t},\n\t\texecutionMode(): string {\n\t\t\treturn this.activeExecution?.mode || '';\n\t\t},\n\t},\n\tmethods: {\n\t\tasync onDeleteExecution(): Promise<void> {\n\t\t\tconst deleteConfirmed = await this.confirmMessage(\n\t\t\t\tthis.$locale.baseText('executionDetails.confirmMessage.message'),\n\t\t\t\tthis.$locale.baseText('executionDetails.confirmMessage.headline'),\n\t\t\t\t'warning',\n\t\t\t\tthis.$locale.baseText('executionDetails.confirmMessage.confirmButtonText'),\n\t\t\t\t'',\n\t\t\t);\n\t\t\tif (!deleteConfirmed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.$emit('deleteCurrentExecution');\n\t\t},\n\t\thandleRetryClick(command: string): void {\n\t\t\tthis.$emit('retryExecution', { execution: this.activeExecution, command });\n\t\t},\n\t\thandleStopClick(): void {\n\t\t\tthis.$emit('stopExecution');\n\t\t},\n\t\tonRetryButtonBlur(event: FocusEvent): void {\n\t\t\t// Hide dropdown when clicking outside of current document\n\t\t\tconst retryDropdownRef = this.$refs.retryDropdown as RetryDropdownRef | undefined;\n\t\t\tif (retryDropdownRef && event.relatedTarget === null) {\n\t\t\t\tretryDropdownRef.hide();\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style module lang=\"scss\">\n.previewContainer {\n\theight: calc(100% - $header-height);\n\toverflow: hidden;\n}\n\n.executionDetails {\n\tposition: absolute;\n\tpadding: var(--spacing-m);\n\tpadding-right: var(--spacing-xl);\n\twidth: calc(100% - 510px);\n\tdisplay: flex;\n\tjustify-content: space-between;\n\ttransition: all 150ms ease-in-out;\n\tpointer-events: none;\n\n\t& * {\n\t\tpointer-events: all;\n\t}\n\n\t&.sidebarCollapsed {\n\t\twidth: calc(100% - 375px);\n\t}\n}\n\n.spinner {\n\tdiv div {\n\t\twidth: 30px;\n\t\theight: 30px;\n\t\tborder-width: 2px;\n\t}\n}\n\n.running,\n.spinner {\n\tcolor: var(--color-warning);\n}\n.waiting {\n\tcolor: var(--color-secondary);\n}\n.success {\n\tcolor: var(--color-success);\n}\n.error {\n\tcolor: var(--color-danger);\n}\n\n.runningInfo {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tmargin-top: var(--spacing-4xl);\n}\n\n.runningMessage {\n\twidth: 200px;\n\tmargin-top: var(--spacing-l);\n\ttext-align: center;\n}\n</style>\n","<template>\n\t<div :class=\"$style.container\">\n\t\t<n8n-menu :items=\"sidebarMenuItems\" @select=\"handleSelect\">\n\t\t\t<template #header>\n\t\t\t\t<div :class=\"$style.returnButton\" @click=\"$emit('return')\" data-test-id=\"settings-back\">\n\t\t\t\t\t<i class=\"mr-xs\">\n\t\t\t\t\t\t<font-awesome-icon icon=\"arrow-left\" />\n\t\t\t\t\t</i>\n\t\t\t\t\t<n8n-heading size=\"large\" :bold=\"true\">{{ $locale.baseText('settings') }}</n8n-heading>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template #menuSuffix>\n\t\t\t\t<div :class=\"$style.versionContainer\">\n\t\t\t\t\t<n8n-link @click=\"onVersionClick\" size=\"small\">\n\t\t\t\t\t\t{{ $locale.baseText('settings.version') }} {{ rootStore.versionCli }}\n\t\t\t\t\t</n8n-link>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</n8n-menu>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\nimport { ABOUT_MODAL_KEY, VERSIONS_MODAL_KEY, VIEWS } from '@/constants';\nimport { userHelpers } from '@/mixins/userHelpers';\nimport type { IFakeDoor } from '@/Interface';\nimport type { IMenuItem } from 'n8n-design-system';\nimport type { BaseTextKey } from '@/plugins/i18n';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\n\nexport default mixins(userHelpers).extend({\n\tname: 'SettingsSidebar',\n\tcomputed: {\n\t\t...mapStores(useRootStore, useSettingsStore, useUIStore),\n\t\tsettingsFakeDoorFeatures(): IFakeDoor[] {\n\t\t\treturn this.uiStore.getFakeDoorByLocation('settings');\n\t\t},\n\t\tsidebarMenuItems(): IMenuItem[] {\n\t\t\tconst menuItems: IMenuItem[] = [\n\t\t\t\t{\n\t\t\t\t\tid: 'settings-usage-and-plan',\n\t\t\t\t\ticon: 'chart-bar',\n\t\t\t\t\tlabel: this.$locale.baseText('settings.usageAndPlan.title'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\tavailable: this.canAccessUsageAndPlan(),\n\t\t\t\t\tactivateOnRouteNames: [VIEWS.USAGE],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'settings-personal',\n\t\t\t\t\ticon: 'user-circle',\n\t\t\t\t\tlabel: this.$locale.baseText('settings.personal'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\tavailable: this.canAccessPersonalSettings(),\n\t\t\t\t\tactivateOnRouteNames: [VIEWS.PERSONAL_SETTINGS],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'settings-users',\n\t\t\t\t\ticon: 'user-friends',\n\t\t\t\t\tlabel: this.$locale.baseText('settings.users'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\tavailable: this.canAccessUsersSettings(),\n\t\t\t\t\tactivateOnRouteNames: [VIEWS.USERS_SETTINGS],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'settings-api',\n\t\t\t\t\ticon: 'plug',\n\t\t\t\t\tlabel: this.$locale.baseText('settings.n8napi'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\tavailable: this.canAccessApiSettings(),\n\t\t\t\t\tactivateOnRouteNames: [VIEWS.API_SETTINGS],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'settings-version-control',\n\t\t\t\t\ticon: 'code-branch',\n\t\t\t\t\tlabel: this.$locale.baseText('settings.versionControl.title'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\tavailable: this.canAccessVersionControl(),\n\t\t\t\t\tactivateOnRouteNames: [VIEWS.VERSION_CONTROL],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'settings-sso',\n\t\t\t\t\ticon: 'user-lock',\n\t\t\t\t\tlabel: this.$locale.baseText('settings.sso'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\tavailable: this.canAccessSso(),\n\t\t\t\t\tactivateOnRouteNames: [VIEWS.SSO_SETTINGS],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'settings-ldap',\n\t\t\t\t\ticon: 'network-wired',\n\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap'),\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\tavailable: this.canAccessLdapSettings(),\n\t\t\t\t\tactivateOnRouteNames: [VIEWS.LDAP_SETTINGS],\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tfor (const item of this.settingsFakeDoorFeatures) {\n\t\t\t\tif (item.uiLocations.includes('settings')) {\n\t\t\t\t\tmenuItems.push({\n\t\t\t\t\t\tid: item.id,\n\t\t\t\t\t\ticon: item.icon || 'question',\n\t\t\t\t\t\tlabel: this.$locale.baseText(item.featureName as BaseTextKey),\n\t\t\t\t\t\tposition: 'top',\n\t\t\t\t\t\tavailable: true,\n\t\t\t\t\t\tactivateOnRoutePaths: [`/settings/coming-soon/${item.id}`],\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmenuItems.push({\n\t\t\t\tid: 'settings-log-streaming',\n\t\t\t\ticon: 'sign-in-alt',\n\t\t\t\tlabel: this.$locale.baseText('settings.log-streaming'),\n\t\t\t\tposition: 'top',\n\t\t\t\tavailable: this.canAccessLogStreamingSettings(),\n\t\t\t\tactivateOnRouteNames: [VIEWS.LOG_STREAMING_SETTINGS],\n\t\t\t});\n\n\t\t\tmenuItems.push({\n\t\t\t\tid: 'settings-community-nodes',\n\t\t\t\ticon: 'cube',\n\t\t\t\tlabel: this.$locale.baseText('settings.communityNodes'),\n\t\t\t\tposition: 'top',\n\t\t\t\tavailable: this.canAccessCommunityNodes(),\n\t\t\t\tactivateOnRouteNames: [VIEWS.COMMUNITY_NODES],\n\t\t\t});\n\n\t\t\treturn menuItems;\n\t\t},\n\t},\n\tmethods: {\n\t\tcanAccessPersonalSettings(): boolean {\n\t\t\treturn this.canUserAccessRouteByName(VIEWS.PERSONAL_SETTINGS);\n\t\t},\n\t\tcanAccessUsersSettings(): boolean {\n\t\t\treturn this.canUserAccessRouteByName(VIEWS.USERS_SETTINGS);\n\t\t},\n\t\tcanAccessCommunityNodes(): boolean {\n\t\t\treturn this.canUserAccessRouteByName(VIEWS.COMMUNITY_NODES);\n\t\t},\n\t\tcanAccessApiSettings(): boolean {\n\t\t\treturn this.canUserAccessRouteByName(VIEWS.API_SETTINGS);\n\t\t},\n\t\tcanAccessLdapSettings(): boolean {\n\t\t\treturn this.canUserAccessRouteByName(VIEWS.LDAP_SETTINGS);\n\t\t},\n\t\tcanAccessLogStreamingSettings(): boolean {\n\t\t\treturn this.canUserAccessRouteByName(VIEWS.LOG_STREAMING_SETTINGS);\n\t\t},\n\t\tcanAccessUsageAndPlan(): boolean {\n\t\t\treturn this.canUserAccessRouteByName(VIEWS.USAGE);\n\t\t},\n\t\tcanAccessVersionControl(): boolean {\n\t\t\treturn this.canUserAccessRouteByName(VIEWS.VERSION_CONTROL);\n\t\t},\n\t\tcanAccessSso(): boolean {\n\t\t\treturn this.canUserAccessRouteByName(VIEWS.SSO_SETTINGS);\n\t\t},\n\t\tonVersionClick() {\n\t\t\tthis.uiStore.openModal(ABOUT_MODAL_KEY);\n\t\t},\n\t\topenUpdatesPanel() {\n\t\t\tthis.uiStore.openModal(VERSIONS_MODAL_KEY);\n\t\t},\n\t\tasync handleSelect(key: string) {\n\t\t\tswitch (key) {\n\t\t\t\tcase 'settings-personal':\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.PERSONAL_SETTINGS) {\n\t\t\t\t\t\tawait this.$router.push({ name: VIEWS.PERSONAL_SETTINGS });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'settings-users':\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.USERS_SETTINGS) {\n\t\t\t\t\t\tawait this.$router.push({ name: VIEWS.USERS_SETTINGS });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'settings-api':\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.API_SETTINGS) {\n\t\t\t\t\t\tawait this.$router.push({ name: VIEWS.API_SETTINGS });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'settings-ldap':\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.LDAP_SETTINGS) {\n\t\t\t\t\t\tvoid this.$router.push({ name: VIEWS.LDAP_SETTINGS });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'settings-log-streaming':\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.LOG_STREAMING_SETTINGS) {\n\t\t\t\t\t\tvoid this.$router.push({ name: VIEWS.LOG_STREAMING_SETTINGS });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'users': // Fakedoor feature added via hooks when user management is disabled on cloud\n\t\t\t\tcase 'environments':\n\t\t\t\tcase 'logging':\n\t\t\t\t\tthis.$router.push({ name: VIEWS.FAKE_DOOR, params: { featureId: key } }).catch(() => {});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'settings-community-nodes':\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.COMMUNITY_NODES) {\n\t\t\t\t\t\tawait this.$router.push({ name: VIEWS.COMMUNITY_NODES });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'settings-usage-and-plan':\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.USAGE) {\n\t\t\t\t\t\tvoid this.$router.push({ name: VIEWS.USAGE });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'settings-sso':\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.SSO_SETTINGS) {\n\t\t\t\t\t\tvoid this.$router.push({ name: VIEWS.SSO_SETTINGS });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'settings-version-control':\n\t\t\t\t\tif (this.$router.currentRoute.name !== VIEWS.VERSION_CONTROL) {\n\t\t\t\t\t\tvoid this.$router.push({ name: VIEWS.VERSION_CONTROL });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\tmin-width: $sidebar-expanded-width;\n\theight: 100vh;\n\tbackground-color: var(--color-background-xlight);\n\tborder-right: var(--border-base);\n\tposition: relative;\n\toverflow: auto;\n}\n\n.returnButton {\n\tpadding: var(--spacing-s) var(--spacing-l);\n\tcursor: pointer;\n\t&:hover {\n\t\tcolor: var(--color-primary);\n\t}\n}\n\n@media screen and (max-height: 420px) {\n\t.updatesSubmenu,\n\t.versionContainer {\n\t\tdisplay: none;\n\t}\n}\n</style>\n","<template>\n\t<div :class=\"$style.container\">\n\t\t<SettingsSidebar @return=\"onReturn\" />\n\t\t<div :class=\"$style.contentContainer\">\n\t\t\t<div :class=\"$style.content\">\n\t\t\t\t<!--\n\t\t\t\t\tBecause we're using nested routes the props are going to be bind to the top level route\n\t\t\t\t\tso we need to pass them down to the child component\n\t\t\t\t-->\n\t\t\t\t<router-view name=\"settingsView\" v-bind=\"$attrs\" />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport type { Route } from 'vue-router';\n\nimport { VIEWS } from '@/constants';\nimport SettingsSidebar from '@/components/SettingsSidebar.vue';\n\nconst SettingsView = defineComponent({\n\tname: 'SettingsView',\n\tcomponents: {\n\t\tSettingsSidebar,\n\t},\n\tbeforeRouteEnter(to, from, next) {\n\t\tnext((vm) => {\n\t\t\t(vm as unknown as InstanceType<typeof SettingsView>).previousRoute = from;\n\t\t});\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tpreviousRoute: null as Route | null,\n\t\t};\n\t},\n\tmethods: {\n\t\tonReturn() {\n\t\t\tvoid this.$router.push(\n\t\t\t\tthis.previousRoute ? this.previousRoute.path : { name: VIEWS.HOMEPAGE },\n\t\t\t);\n\t\t},\n\t},\n});\n\nexport default SettingsView;\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\theight: 100%;\n\twidth: 100%;\n\tdisplay: flex;\n\toverflow: hidden;\n}\n\n.contentContainer {\n\tcomposes: container;\n\tjustify-content: center;\n\tpadding-top: 70.5px;\n\theight: 100%;\n\toverflow: auto;\n\tbackground-color: var(--color-background-light);\n}\n\n.content {\n\theight: 100%;\n\twidth: 100%;\n\tmax-width: 800px;\n\tpadding: 0 var(--spacing-2xl);\n}\n</style>\n","<template>\n\t<div v-if=\"!isLDAPFeatureEnabled\">\n\t\t<div :class=\"[$style.header, 'mb-2xl']\">\n\t\t\t<n8n-heading size=\"2xlarge\">\n\t\t\t\t{{ $locale.baseText('settings.ldap') }}\n\t\t\t</n8n-heading>\n\t\t</div>\n\n\t\t<n8n-info-tip type=\"note\" theme=\"info-light\" tooltipPlacement=\"right\" class=\"mb-l\">\n\t\t\t{{ $locale.baseText('settings.ldap.note') }}\n\t\t</n8n-info-tip>\n\t\t<n8n-action-box\n\t\t\t:description=\"$locale.baseText('settings.ldap.disabled.description')\"\n\t\t\t:buttonText=\"$locale.baseText('settings.ldap.disabled.buttonText')\"\n\t\t\t@click=\"goToUpgrade\"\n\t\t>\n\t\t\t<template #heading>\n\t\t\t\t<span>{{ $locale.baseText('settings.ldap.disabled.title') }}</span>\n\t\t\t</template>\n\t\t</n8n-action-box>\n\t</div>\n\t<div v-else>\n\t\t<div :class=\"$style.container\">\n\t\t\t<div :class=\"$style.header\">\n\t\t\t\t<n8n-heading size=\"2xlarge\">\n\t\t\t\t\t{{ $locale.baseText('settings.ldap') }}\n\t\t\t\t</n8n-heading>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.docsInfoTip\">\n\t\t\t\t<n8n-info-tip theme=\"info\" type=\"note\">\n\t\t\t\t\t<template>\n\t\t\t\t\t\t<span v-html=\"$locale.baseText('settings.ldap.infoTip')\"></span>\n\t\t\t\t\t</template>\n\t\t\t\t</n8n-info-tip>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.settingsForm\">\n\t\t\t\t<n8n-form-inputs\n\t\t\t\t\tv-if=\"formInputs\"\n\t\t\t\t\tref=\"ldapConfigForm\"\n\t\t\t\t\t:inputs=\"formInputs\"\n\t\t\t\t\t:eventBus=\"formBus\"\n\t\t\t\t\t:columnView=\"true\"\n\t\t\t\t\tverticalSpacing=\"l\"\n\t\t\t\t\t@input=\"onInput\"\n\t\t\t\t\t@ready=\"onReadyToSubmit\"\n\t\t\t\t\t@submit=\"onSubmit\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<n8n-button\n\t\t\t\t\tv-if=\"loginEnabled\"\n\t\t\t\t\t:label=\"\n\t\t\t\t\t\tloadingTestConnection\n\t\t\t\t\t\t\t? $locale.baseText('settings.ldap.testingConnection')\n\t\t\t\t\t\t\t: $locale.baseText('settings.ldap.testConnection')\n\t\t\t\t\t\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tclass=\"mr-s\"\n\t\t\t\t\t:disabled=\"hasAnyChanges || !readyToSubmit\"\n\t\t\t\t\t:loading=\"loadingTestConnection\"\n\t\t\t\t\t@click=\"onTestConnectionClick\"\n\t\t\t\t/>\n\t\t\t\t<n8n-button\n\t\t\t\t\t:label=\"$locale.baseText('settings.ldap.save')\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t:disabled=\"!hasAnyChanges || !readyToSubmit\"\n\t\t\t\t\t@click=\"onSaveClick\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-if=\"loginEnabled\">\n\t\t\t<n8n-heading tag=\"h1\" class=\"mb-xl mt-3xl\" size=\"medium\">{{\n\t\t\t\t$locale.baseText('settings.ldap.section.synchronization.title')\n\t\t\t}}</n8n-heading>\n\t\t\t<div :class=\"$style.syncTable\">\n\t\t\t\t<el-table\n\t\t\t\t\tv-loading=\"loadingTable\"\n\t\t\t\t\t:border=\"true\"\n\t\t\t\t\t:stripe=\"true\"\n\t\t\t\t\t:data=\"dataTable\"\n\t\t\t\t\t:cell-style=\"cellClassStyle\"\n\t\t\t\t\tstyle=\"width: 100%\"\n\t\t\t\t\theight=\"250\"\n\t\t\t\t\t:key=\"tableKey\"\n\t\t\t\t>\n\t\t\t\t\t<el-table-column\n\t\t\t\t\t\tprop=\"status\"\n\t\t\t\t\t\t:label=\"$locale.baseText('settings.ldap.synchronizationTable.column.status')\"\n\t\t\t\t\t>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column\n\t\t\t\t\t\tprop=\"endedAt\"\n\t\t\t\t\t\t:label=\"$locale.baseText('settings.ldap.synchronizationTable.column.endedAt')\"\n\t\t\t\t\t>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column\n\t\t\t\t\t\tprop=\"runMode\"\n\t\t\t\t\t\t:label=\"$locale.baseText('settings.ldap.synchronizationTable.column.runMode')\"\n\t\t\t\t\t>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column\n\t\t\t\t\t\tprop=\"runTime\"\n\t\t\t\t\t\t:label=\"$locale.baseText('settings.ldap.synchronizationTable.column.runTime')\"\n\t\t\t\t\t>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column\n\t\t\t\t\t\tprop=\"details\"\n\t\t\t\t\t\t:label=\"$locale.baseText('settings.ldap.synchronizationTable.column.details')\"\n\t\t\t\t\t>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<template #empty>{{\n\t\t\t\t\t\t$locale.baseText('settings.ldap.synchronizationTable.empty.message')\n\t\t\t\t\t}}</template>\n\t\t\t\t\t<template #append>\n\t\t\t\t\t\t<infinite-loading\n\t\t\t\t\t\t\t@infinite=\"getLdapSynchronizations\"\n\t\t\t\t\t\t\tforce-use-infinite-wrapper=\".el-table__body-wrapper\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</infinite-loading>\n\t\t\t\t\t</template>\n\t\t\t\t</el-table>\n\t\t\t</div>\n\t\t\t<div class=\"pb-3xl\">\n\t\t\t\t<n8n-button\n\t\t\t\t\t:label=\"$locale.baseText('settings.ldap.dryRun')\"\n\t\t\t\t\ttype=\"secondary\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tclass=\"mr-s\"\n\t\t\t\t\t:disabled=\"hasAnyChanges || !readyToSubmit\"\n\t\t\t\t\t:loading=\"loadingDryRun\"\n\t\t\t\t\t@click=\"onDryRunClick\"\n\t\t\t\t/>\n\t\t\t\t<n8n-button\n\t\t\t\t\t:label=\"$locale.baseText('settings.ldap.synchronizeNow')\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t:disabled=\"hasAnyChanges || !readyToSubmit\"\n\t\t\t\t\t:loading=\"loadingLiveRun\"\n\t\t\t\t\t@click=\"onLiveRunClick\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { convertToDisplayDate } from '@/utils';\nimport { showMessage } from '@/mixins/showMessage';\nimport type {\n\tILdapConfig,\n\tILdapSyncData,\n\tILdapSyncTable,\n\tIFormInput,\n\tIFormInputs,\n\tIUser,\n} from '@/Interface';\nimport mixins from 'vue-typed-mixins';\n\nimport humanizeDuration from 'humanize-duration';\nimport type { rowCallbackParams, cellCallbackParams } from 'element-ui/types/table';\nimport { capitalizeFirstLetter } from '@/utils';\nimport InfiniteLoading from 'vue-infinite-loading';\nimport { mapStores } from 'pinia';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUIStore } from '@/stores';\nimport { createEventBus } from '@/event-bus';\nimport type { N8nFormInputs } from 'n8n-design-system';\n\ntype N8nFormInputsRef = InstanceType<typeof N8nFormInputs>;\n\ntype tableRow = {\n\tstatus: string;\n\tstartAt: string;\n\tendedAt: string;\n\terror: string;\n\trunMode: string;\n};\n\ntype rowType = rowCallbackParams & tableRow;\n\ntype cellType = cellCallbackParams & { property: keyof tableRow };\n\nexport default mixins(showMessage).extend({\n\tname: 'SettingsLdapView',\n\tcomponents: {\n\t\tInfiniteLoading,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tdataTable: [] as ILdapSyncTable[],\n\t\t\ttableKey: 0,\n\t\t\tadConfig: {} as ILdapConfig,\n\t\t\tloadingTestConnection: false,\n\t\t\tloadingDryRun: false,\n\t\t\tloadingLiveRun: false,\n\t\t\tloadingTable: false,\n\t\t\thasAnyChanges: false,\n\t\t\tformInputs: null as null | IFormInputs,\n\t\t\tformBus: createEventBus(),\n\t\t\treadyToSubmit: false,\n\t\t\tpage: 0,\n\t\t\tloginEnabled: false,\n\t\t\tsyncEnabled: false,\n\t\t};\n\t},\n\tasync mounted() {\n\t\tif (!this.isLDAPFeatureEnabled) return;\n\t\tawait this.getLdapConfig();\n\t},\n\tcomputed: {\n\t\t...mapStores(useUsersStore, useSettingsStore, useUIStore),\n\t\tcurrentUser(): null | IUser {\n\t\t\treturn this.usersStore.currentUser;\n\t\t},\n\t\tisLDAPFeatureEnabled(): boolean {\n\t\t\treturn this.settingsStore.settings.enterprise.ldap === true;\n\t\t},\n\t},\n\tmethods: {\n\t\tgoToUpgrade() {\n\t\t\tthis.uiStore.goToUpgrade('ldap', 'upgrade-ldap');\n\t\t},\n\t\tcellClassStyle({ row, column }: { row: rowType; column: cellType }) {\n\t\t\tif (column.property === 'status') {\n\t\t\t\tif (row.status === 'Success') {\n\t\t\t\t\treturn { color: 'green' };\n\t\t\t\t} else if (row.status === 'Error') {\n\t\t\t\t\treturn { color: 'red' };\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (column.property === 'runMode') {\n\t\t\t\tif (row.runMode === 'Dry') {\n\t\t\t\t\treturn { color: 'orange' };\n\t\t\t\t} else if (row.runMode === 'Live') {\n\t\t\t\t\treturn { color: 'blue' };\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {};\n\t\t},\n\t\tonInput(input: { name: string; value: string | number | boolean }) {\n\t\t\tif (input.name === 'loginEnabled' && typeof input.value === 'boolean') {\n\t\t\t\tthis.loginEnabled = input.value;\n\t\t\t}\n\t\t\tif (input.name === 'synchronizationEnabled' && typeof input.value === 'boolean') {\n\t\t\t\tthis.syncEnabled = input.value;\n\t\t\t}\n\t\t\tthis.hasAnyChanges = true;\n\t\t},\n\t\tonReadyToSubmit(ready: boolean) {\n\t\t\tthis.readyToSubmit = ready;\n\t\t},\n\t\tsyncDataMapper(sync: ILdapSyncData): ILdapSyncTable {\n\t\t\tconst startedAt = new Date(sync.startedAt);\n\t\t\tconst endedAt = new Date(sync.endedAt);\n\t\t\tconst runTimeInMinutes = endedAt.getTime() - startedAt.getTime();\n\t\t\treturn {\n\t\t\t\trunTime: humanizeDuration(runTimeInMinutes),\n\t\t\t\trunMode: capitalizeFirstLetter(sync.runMode),\n\t\t\t\tstatus: capitalizeFirstLetter(sync.status),\n\t\t\t\tendedAt: convertToDisplayDate(endedAt.getTime()),\n\t\t\t\tdetails: this.$locale.baseText('settings.ldap.usersScanned', {\n\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\tscanned: sync.scanned.toString(),\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t};\n\t\t},\n\t\tasync onSubmit(): Promise<void> {\n\t\t\t// We want to save all form values (incl. the hidden onces), so we are using\n\t\t\t// `values` data prop of the `FormInputs` child component since they are all preserved there\n\t\t\tconst formInputsRef = this.$refs.ldapConfigForm as N8nFormInputsRef | undefined;\n\t\t\tif (!this.hasAnyChanges || !formInputsRef) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newConfiguration: ILdapConfig = {\n\t\t\t\tloginEnabled: formInputsRef.values.loginEnabled,\n\t\t\t\tloginLabel: formInputsRef.values.loginLabel,\n\t\t\t\tconnectionUrl: formInputsRef.values.serverAddress,\n\t\t\t\tallowUnauthorizedCerts: formInputsRef.values.allowUnauthorizedCerts,\n\t\t\t\tconnectionPort: +formInputsRef.values.port,\n\t\t\t\tconnectionSecurity: formInputsRef.values.connectionSecurity,\n\t\t\t\tbaseDn: formInputsRef.values.baseDn,\n\t\t\t\tbindingAdminDn:\n\t\t\t\t\tformInputsRef.values.bindingType === 'admin' ? formInputsRef.values.adminDn : '',\n\t\t\t\tbindingAdminPassword:\n\t\t\t\t\tformInputsRef.values.bindingType === 'admin' ? formInputsRef.values.adminPassword : '',\n\t\t\t\temailAttribute: formInputsRef.values.email,\n\t\t\t\tfirstNameAttribute: formInputsRef.values.firstName,\n\t\t\t\tlastNameAttribute: formInputsRef.values.lastName,\n\t\t\t\tloginIdAttribute: formInputsRef.values.loginId,\n\t\t\t\tldapIdAttribute: formInputsRef.values.ldapId,\n\t\t\t\tuserFilter: formInputsRef.values.userFilter,\n\t\t\t\tsynchronizationEnabled: formInputsRef.values.synchronizationEnabled,\n\t\t\t\tsynchronizationInterval: +formInputsRef.values.synchronizationInterval,\n\t\t\t\tsearchPageSize: +formInputsRef.values.pageSize,\n\t\t\t\tsearchTimeout: +formInputsRef.values.searchTimeout,\n\t\t\t};\n\n\t\t\tlet saveForm = true;\n\n\t\t\ttry {\n\t\t\t\tif (this.adConfig.loginEnabled === true && newConfiguration.loginEnabled === false) {\n\t\t\t\t\tsaveForm = await this.confirmMessage(\n\t\t\t\t\t\tthis.$locale.baseText('settings.ldap.confirmMessage.beforeSaveForm.message'),\n\t\t\t\t\t\tthis.$locale.baseText('settings.ldap.confirmMessage.beforeSaveForm.headline'),\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tthis.$locale.baseText('settings.ldap.confirmMessage.beforeSaveForm.cancelButtonText'),\n\t\t\t\t\t\tthis.$locale.baseText('settings.ldap.confirmMessage.beforeSaveForm.confirmButtonText'),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (!saveForm) {\n\t\t\t\t\tthis.hasAnyChanges = true;\n\t\t\t\t}\n\n\t\t\t\tthis.adConfig = await this.settingsStore.updateLdapConfig(newConfiguration);\n\t\t\t\tthis.$showToast({\n\t\t\t\t\ttitle: this.$locale.baseText('settings.ldap.updateConfiguration'),\n\t\t\t\t\tmessage: '',\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('settings.ldap.configurationError'));\n\t\t\t} finally {\n\t\t\t\tif (saveForm) {\n\t\t\t\t\tthis.hasAnyChanges = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonSaveClick() {\n\t\t\tthis.formBus.emit('submit');\n\t\t},\n\t\tasync onTestConnectionClick() {\n\t\t\tthis.loadingTestConnection = true;\n\t\t\ttry {\n\t\t\t\tawait this.settingsStore.testLdapConnection();\n\t\t\t\tthis.$showToast({\n\t\t\t\t\ttitle: this.$locale.baseText('settings.ldap.connectionTest'),\n\t\t\t\t\tmessage: this.$locale.baseText('settings.ldap.toast.connection.success'),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showToast({\n\t\t\t\t\ttitle: this.$locale.baseText('settings.ldap.connectionTestError'),\n\t\t\t\t\tmessage: error.message,\n\t\t\t\t\ttype: 'error',\n\t\t\t\t});\n\t\t\t} finally {\n\t\t\t\tthis.loadingTestConnection = false;\n\t\t\t}\n\t\t},\n\t\tasync onDryRunClick() {\n\t\t\tthis.loadingDryRun = true;\n\t\t\ttry {\n\t\t\t\tawait this.settingsStore.runLdapSync({ type: 'dry' });\n\t\t\t\tthis.$showToast({\n\t\t\t\t\ttitle: this.$locale.baseText('settings.ldap.runSync.title'),\n\t\t\t\t\tmessage: this.$locale.baseText('settings.ldap.toast.sync.success'),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('settings.ldap.synchronizationError'));\n\t\t\t} finally {\n\t\t\t\tthis.loadingDryRun = false;\n\t\t\t\tawait this.reloadLdapSynchronizations();\n\t\t\t}\n\t\t},\n\t\tasync onLiveRunClick() {\n\t\t\tthis.loadingLiveRun = true;\n\t\t\ttry {\n\t\t\t\tawait this.settingsStore.runLdapSync({ type: 'live' });\n\t\t\t\tthis.$showToast({\n\t\t\t\t\ttitle: this.$locale.baseText('settings.ldap.runSync.title'),\n\t\t\t\t\tmessage: this.$locale.baseText('settings.ldap.toast.sync.success'),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('settings.ldap.synchronizationError'));\n\t\t\t} finally {\n\t\t\t\tthis.loadingLiveRun = false;\n\t\t\t\tawait this.reloadLdapSynchronizations();\n\t\t\t}\n\t\t},\n\t\tasync getLdapConfig() {\n\t\t\ttry {\n\t\t\t\tthis.adConfig = await this.settingsStore.getLdapConfig();\n\t\t\t\tthis.loginEnabled = this.adConfig.loginEnabled;\n\t\t\t\tthis.syncEnabled = this.adConfig.synchronizationEnabled;\n\t\t\t\tconst whenLoginEnabled: IFormInput['shouldDisplay'] = (values) =>\n\t\t\t\t\tvalues['loginEnabled'] === true;\n\t\t\t\tconst whenSyncAndLoginEnabled: IFormInput['shouldDisplay'] = (values) =>\n\t\t\t\t\tvalues['synchronizationEnabled'] === true && values['loginEnabled'] === true;\n\t\t\t\tconst whenAdminBindingAndLoginEnabled: IFormInput['shouldDisplay'] = (values) =>\n\t\t\t\t\tvalues['bindingType'] === 'admin' && values['loginEnabled'] === true;\n\t\t\t\tthis.formInputs = [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'loginEnabled',\n\t\t\t\t\t\tinitialValue: this.adConfig.loginEnabled,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\ttype: 'toggle',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.loginEnabled.label'),\n\t\t\t\t\t\t\ttooltipText: this.$locale.baseText('settings.ldap.form.loginEnabled.tooltip'),\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'loginLabel',\n\t\t\t\t\t\tinitialValue: this.adConfig.loginLabel,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.loginLabel.label'),\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tplaceholder: this.$locale.baseText('settings.ldap.form.loginLabel.placeholder'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.loginLabel.infoText'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'serverAddress',\n\t\t\t\t\t\tinitialValue: this.adConfig.connectionUrl,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.serverAddress.label'),\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t\t\tplaceholder: this.$locale.baseText('settings.ldap.form.serverAddress.placeholder'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.serverAddress.infoText'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'port',\n\t\t\t\t\t\tinitialValue: this.adConfig.connectionPort,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.port.label'),\n\t\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.port.infoText'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'connectionSecurity',\n\t\t\t\t\t\tinitialValue: this.adConfig.connectionSecurity,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.connectionSecurity.label'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.connectionSecurity.infoText'),\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'None',\n\t\t\t\t\t\t\t\t\tvalue: 'none',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'TLS',\n\t\t\t\t\t\t\t\t\tvalue: 'tls',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'STARTTLS',\n\t\t\t\t\t\t\t\t\tvalue: 'startTls',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'allowUnauthorizedCerts',\n\t\t\t\t\t\tinitialValue: this.adConfig.allowUnauthorizedCerts,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\ttype: 'toggle',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.allowUnauthorizedCerts.label'),\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay(values): boolean {\n\t\t\t\t\t\t\treturn values['connectionSecurity'] !== 'none' && values['loginEnabled'] === true;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'baseDn',\n\t\t\t\t\t\tinitialValue: this.adConfig.baseDn,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.baseDn.label'),\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t\t\tplaceholder: this.$locale.baseText('settings.ldap.form.baseDn.placeholder'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.baseDn.infoText'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'bindingType',\n\t\t\t\t\t\tinitialValue: 'admin',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.bindingType.label'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.bindingType.infoText'),\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: 'admin',\n\t\t\t\t\t\t\t\t\tlabel: 'Admin',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: 'anonymous',\n\t\t\t\t\t\t\t\t\tlabel: 'Anonymous',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'adminDn',\n\t\t\t\t\t\tinitialValue: this.adConfig.bindingAdminDn,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.adminDn.label'),\n\t\t\t\t\t\t\tplaceholder: this.$locale.baseText('settings.ldap.form.adminDn.placeholder'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.adminDn.infoText'),\n\t\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenAdminBindingAndLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'adminPassword',\n\t\t\t\t\t\tinitialValue: this.adConfig.bindingAdminPassword,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.adminPassword.label'),\n\t\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.adminPassword.infoText'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenAdminBindingAndLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'userFilter',\n\t\t\t\t\t\tinitialValue: this.adConfig.userFilter,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.userFilter.label'),\n\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t\t\tplaceholder: this.$locale.baseText('settings.ldap.form.userFilter.placeholder'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.userFilter.infoText'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'attributeMappingInfo',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.attributeMappingInfo.label'),\n\t\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\t\tlabelSize: 'large',\n\t\t\t\t\t\t\tlabelAlignment: 'left',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'ldapId',\n\t\t\t\t\t\tinitialValue: this.adConfig.ldapIdAttribute,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.ldapId.label'),\n\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t\t\tplaceholder: this.$locale.baseText('settings.ldap.form.ldapId.placeholder'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.ldapId.infoText'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'loginId',\n\t\t\t\t\t\tinitialValue: this.adConfig.loginIdAttribute,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.loginId.label'),\n\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\tautocomplete: 'email',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t\t\tplaceholder: this.$locale.baseText('settings.ldap.form.loginId.placeholder'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.loginId.infoText'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'email',\n\t\t\t\t\t\tinitialValue: this.adConfig.emailAttribute,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.email.label'),\n\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\tautocomplete: 'email',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t\t\tplaceholder: this.$locale.baseText('settings.ldap.form.email.placeholder'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.email.infoText'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'firstName',\n\t\t\t\t\t\tinitialValue: this.adConfig.firstNameAttribute,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.firstName.label'),\n\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\tautocomplete: 'email',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t\t\tplaceholder: this.$locale.baseText('settings.ldap.form.firstName.placeholder'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.firstName.infoText'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'lastName',\n\t\t\t\t\t\tinitialValue: this.adConfig.lastNameAttribute,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.lastName.label'),\n\t\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\t\tautocomplete: 'email',\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t\t\tplaceholder: this.$locale.baseText('settings.ldap.form.lastName.placeholder'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.lastName.infoText'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'synchronizationEnabled',\n\t\t\t\t\t\tinitialValue: this.adConfig.synchronizationEnabled,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\ttype: 'toggle',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.synchronizationEnabled.label'),\n\t\t\t\t\t\t\ttooltipText: this.$locale.baseText(\n\t\t\t\t\t\t\t\t'settings.ldap.form.synchronizationEnabled.tooltip',\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'synchronizationInterval',\n\t\t\t\t\t\tinitialValue: this.adConfig.synchronizationInterval,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.synchronizationInterval.label'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText(\n\t\t\t\t\t\t\t\t'settings.ldap.form.synchronizationInterval.infoText',\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenSyncAndLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'pageSize',\n\t\t\t\t\t\tinitialValue: this.adConfig.searchPageSize,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.pageSize.label'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.pageSize.infoText'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenSyncAndLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'searchTimeout',\n\t\t\t\t\t\tinitialValue: this.adConfig.searchTimeout,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\tlabel: this.$locale.baseText('settings.ldap.form.searchTimeout.label'),\n\t\t\t\t\t\t\tinfoText: this.$locale.baseText('settings.ldap.form.searchTimeout.infoText'),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshouldDisplay: whenSyncAndLoginEnabled,\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('settings.ldap.configurationError'));\n\t\t\t}\n\t\t},\n\t\tasync getLdapSynchronizations(state: any) {\n\t\t\ttry {\n\t\t\t\tthis.loadingTable = true;\n\t\t\t\tconst data = await this.settingsStore.getLdapSynchronizations({\n\t\t\t\t\tpage: this.page,\n\t\t\t\t});\n\n\t\t\t\tif (data.length !== 0) {\n\t\t\t\t\tthis.dataTable.push(...data.map(this.syncDataMapper));\n\t\t\t\t\tthis.page += 1;\n\t\t\t\t\tstate.loaded();\n\t\t\t\t} else {\n\t\t\t\t\tstate.complete();\n\t\t\t\t}\n\t\t\t\tthis.loadingTable = false;\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('settings.ldap.synchronizationError'));\n\t\t\t}\n\t\t},\n\t\tasync reloadLdapSynchronizations() {\n\t\t\ttry {\n\t\t\t\tthis.page = 0;\n\t\t\t\tthis.tableKey += 1;\n\t\t\t\tthis.dataTable = [];\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('settings.ldap.synchronizationError'));\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\t> * {\n\t\tmargin-bottom: var(--spacing-2xl);\n\t}\n}\n\n.syncTable {\n\tmargin-bottom: var(--spacing-2xl);\n}\n\n.header {\n\tdisplay: flex;\n\talign-items: center;\n\twhite-space: nowrap;\n\n\t*:first-child {\n\t\tflex-grow: 1;\n\t}\n}\n\n.enableFeatureContainer {\n\tmargin-bottom: var(--spacing-1xl);\n}\n\n.enableFeatureContainer > span {\n\tfont-size: var(--font-size-s);\n\tfont-weight: var(--font-weight-bold);\n\tpadding: 0;\n}\n\n.enableFeatureContainer {\n\t> * {\n\t\tpadding: 0.5em;\n\t}\n}\n\n.sectionHeader {\n\tmargin-bottom: var(--spacing-s);\n}\n\n.settingsForm {\n\t:global(.form-text) {\n\t\tmargin-top: var(--spacing-xl);\n\t}\n}\n\n.docsInfoTip {\n\t&,\n\t& > div {\n\t\tmargin-bottom: var(--spacing-xl);\n\t}\n}\n</style>\n","<template>\n\t<div :class=\"$style.container\" data-test-id=\"personal-settings-container\">\n\t\t<div :class=\"$style.header\">\n\t\t\t<n8n-heading size=\"2xlarge\">{{\n\t\t\t\t$locale.baseText('settings.personal.personalSettings')\n\t\t\t}}</n8n-heading>\n\t\t\t<div class=\"ph-no-capture\" :class=\"$style.user\">\n\t\t\t\t<span :class=\"$style.username\" data-test-id=\"current-user-name\">\n\t\t\t\t\t<n8n-text color=\"text-light\">{{ currentUser.fullName }}</n8n-text>\n\t\t\t\t</span>\n\t\t\t\t<n8n-avatar\n\t\t\t\t\t:firstName=\"currentUser.firstName\"\n\t\t\t\t\t:lastName=\"currentUser.lastName\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t\t<div>\n\t\t\t<div :class=\"$style.sectionHeader\">\n\t\t\t\t<n8n-heading size=\"large\">{{\n\t\t\t\t\t$locale.baseText('settings.personal.basicInformation')\n\t\t\t\t}}</n8n-heading>\n\t\t\t</div>\n\t\t\t<div data-test-id=\"personal-data-form\">\n\t\t\t\t<n8n-form-inputs\n\t\t\t\t\tv-if=\"formInputs\"\n\t\t\t\t\t:inputs=\"formInputs\"\n\t\t\t\t\t:eventBus=\"formBus\"\n\t\t\t\t\t@input=\"onInput\"\n\t\t\t\t\t@ready=\"onReadyToSubmit\"\n\t\t\t\t\t@submit=\"onSubmit\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-if=\"!signInWithLdap && !signInWithSaml\">\n\t\t\t<div :class=\"$style.sectionHeader\">\n\t\t\t\t<n8n-heading size=\"large\">{{ $locale.baseText('settings.personal.security') }}</n8n-heading>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<n8n-input-label :label=\"$locale.baseText('auth.password')\">\n\t\t\t\t\t<n8n-link @click=\"openPasswordModal\" data-test-id=\"change-password-link\">{{\n\t\t\t\t\t\t$locale.baseText('auth.changePassword')\n\t\t\t\t\t}}</n8n-link>\n\t\t\t\t</n8n-input-label>\n\t\t\t</div>\n\t\t</div>\n\t\t<div>\n\t\t\t<n8n-button\n\t\t\t\tfloat=\"right\"\n\t\t\t\t:label=\"$locale.baseText('settings.personal.save')\"\n\t\t\t\tsize=\"large\"\n\t\t\t\t:disabled=\"!hasAnyChanges || !readyToSubmit\"\n\t\t\t\tdata-test-id=\"save-settings-button\"\n\t\t\t\t@click=\"onSaveClick\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { showMessage } from '@/mixins/showMessage';\nimport { CHANGE_PASSWORD_MODAL_KEY } from '@/constants';\nimport type { IFormInputs, IUser } from '@/Interface';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { mapStores } from 'pinia';\nimport mixins from 'vue-typed-mixins';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins(showMessage).extend({\n\tname: 'SettingsPersonalView',\n\tdata() {\n\t\treturn {\n\t\t\thasAnyChanges: false,\n\t\t\tformInputs: null as null | IFormInputs,\n\t\t\tformBus: createEventBus(),\n\t\t\treadyToSubmit: false,\n\t\t};\n\t},\n\tmounted() {\n\t\tthis.formInputs = [\n\t\t\t{\n\t\t\t\tname: 'firstName',\n\t\t\t\tinitialValue: this.currentUser?.firstName,\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: this.$locale.baseText('auth.firstName'),\n\t\t\t\t\tmaxlength: 32,\n\t\t\t\t\trequired: true,\n\t\t\t\t\tautocomplete: 'given-name',\n\t\t\t\t\tcapitalize: true,\n\t\t\t\t\tdisabled: this.isLDAPFeatureEnabled && this.signInWithLdap,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'lastName',\n\t\t\t\tinitialValue: this.currentUser?.lastName,\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: this.$locale.baseText('auth.lastName'),\n\t\t\t\t\tmaxlength: 32,\n\t\t\t\t\trequired: true,\n\t\t\t\t\tautocomplete: 'family-name',\n\t\t\t\t\tcapitalize: true,\n\t\t\t\t\tdisabled: this.isLDAPFeatureEnabled && this.signInWithLdap,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'email',\n\t\t\t\tinitialValue: this.currentUser?.email,\n\t\t\t\tproperties: {\n\t\t\t\t\tlabel: this.$locale.baseText('auth.email'),\n\t\t\t\t\ttype: 'email',\n\t\t\t\t\trequired: true,\n\t\t\t\t\tvalidationRules: [{ name: 'VALID_EMAIL' }],\n\t\t\t\t\tautocomplete: 'email',\n\t\t\t\t\tcapitalize: true,\n\t\t\t\t\tdisabled: (this.isLDAPFeatureEnabled && this.signInWithLdap) || this.signInWithSaml,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore, useUsersStore, useSettingsStore),\n\t\tcurrentUser(): IUser | null {\n\t\t\treturn this.usersStore.currentUser;\n\t\t},\n\t\tsignInWithLdap(): boolean {\n\t\t\treturn this.currentUser?.signInType === 'ldap';\n\t\t},\n\t\tisLDAPFeatureEnabled(): boolean {\n\t\t\treturn this.settingsStore.settings.enterprise.ldap === true;\n\t\t},\n\t\tsignInWithSaml(): boolean {\n\t\t\treturn (\n\t\t\t\tthis.settingsStore.isSamlLoginEnabled && this.settingsStore.isDefaultAuthenticationSaml\n\t\t\t);\n\t\t},\n\t},\n\tmethods: {\n\t\tonInput() {\n\t\t\tthis.hasAnyChanges = true;\n\t\t},\n\t\tonReadyToSubmit(ready: boolean) {\n\t\t\tthis.readyToSubmit = ready;\n\t\t},\n\t\tasync onSubmit(form: { firstName: string; lastName: string; email: string }) {\n\t\t\tif (!this.hasAnyChanges || !this.usersStore.currentUserId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait this.usersStore.updateUser({\n\t\t\t\t\tid: this.usersStore.currentUserId,\n\t\t\t\t\tfirstName: form.firstName,\n\t\t\t\t\tlastName: form.lastName,\n\t\t\t\t\temail: form.email,\n\t\t\t\t});\n\t\t\t\tthis.$showToast({\n\t\t\t\t\ttitle: this.$locale.baseText('settings.personal.personalSettingsUpdated'),\n\t\t\t\t\tmessage: '',\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t\tthis.hasAnyChanges = false;\n\t\t\t} catch (e) {\n\t\t\t\tthis.$showError(e, this.$locale.baseText('settings.personal.personalSettingsUpdatedError'));\n\t\t\t}\n\t\t},\n\t\tonSaveClick() {\n\t\t\tthis.formBus.emit('submit');\n\t\t},\n\t\topenPasswordModal() {\n\t\t\tthis.uiStore.openModal(CHANGE_PASSWORD_MODAL_KEY);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\t> * {\n\t\tmargin-bottom: var(--spacing-2xl);\n\t}\n\tpadding-bottom: 100px;\n}\n\n.header {\n\tdisplay: flex;\n\talign-items: center;\n\twhite-space: nowrap;\n\n\t*:first-child {\n\t\tflex-grow: 1;\n\t}\n}\n\n.user {\n\tdisplay: flex;\n\talign-items: center;\n\n\t@media (max-width: $breakpoint-2xs) {\n\t\tdisplay: none;\n\t}\n}\n\n.username {\n\tmargin-right: var(--spacing-s);\n\ttext-align: right;\n\n\t@media (max-width: $breakpoint-sm) {\n\t\tmax-width: 100px;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n}\n\n.sectionHeader {\n\tmargin-bottom: var(--spacing-s);\n}\n</style>\n","<template>\n\t<fragment></fragment>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\n\nimport { showMessage } from '@/mixins/showMessage';\nimport type { ElMessageComponent } from 'element-ui/types/message';\nimport { sanitizeHtml } from '@/utils';\n\nexport default mixins(showMessage).extend({\n\tname: 'PageAlert',\n\tprops: {\n\t\tmessage: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tpopupClass: {\n\t\t\ttype: String,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\talert: null as null | ElMessageComponent,\n\t\t};\n\t},\n\tmounted() {\n\t\tthis.alert = this.$showAlert({\n\t\t\tmessage: sanitizeHtml(this.message),\n\t\t\ttype: 'warning',\n\t\t\tduration: 0,\n\t\t\tshowClose: true,\n\t\t\tdangerouslyUseHTMLString: true,\n\t\t\t// @ts-ignore\n\t\t\tcustomClass: this.popupClass || '',\n\t\t});\n\t},\n\tbeforeDestroy() {\n\t\tif (this.alert) {\n\t\t\tthis.alert.close();\n\t\t}\n\t},\n});\n</script>\n","<template>\n\t<div :class=\"$style.container\">\n\t\t<div>\n\t\t\t<n8n-heading size=\"2xlarge\">{{ $locale.baseText('settings.users') }}</n8n-heading>\n\t\t\t<div :class=\"$style.buttonContainer\" v-if=\"!usersStore.showUMSetupWarning\">\n\t\t\t\t<n8n-tooltip :disabled=\"!ssoStore.isSamlLoginEnabled\">\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t<span> {{ $locale.baseText('settings.users.invite.tooltip') }} </span>\n\t\t\t\t\t</template>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\t:disabled=\"ssoStore.isSamlLoginEnabled\"\n\t\t\t\t\t\t\t:label=\"$locale.baseText('settings.users.invite')\"\n\t\t\t\t\t\t\t@click=\"onInvite\"\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tdata-test-id=\"settings-users-invite-button\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</n8n-tooltip>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-if=\"!settingsStore.isUserManagementEnabled\" :class=\"$style.setupInfoContainer\">\n\t\t\t<n8n-action-box\n\t\t\t\t:heading=\"\n\t\t\t\t\t$locale.baseText(uiStore.contextBasedTranslationKeys.users.settings.unavailable.title)\n\t\t\t\t\"\n\t\t\t\t:description=\"\n\t\t\t\t\t$locale.baseText(\n\t\t\t\t\t\tuiStore.contextBasedTranslationKeys.users.settings.unavailable.description,\n\t\t\t\t\t)\n\t\t\t\t\"\n\t\t\t\t:buttonText=\"\n\t\t\t\t\t$locale.baseText(uiStore.contextBasedTranslationKeys.users.settings.unavailable.button)\n\t\t\t\t\"\n\t\t\t\t@click=\"goToUpgrade\"\n\t\t\t/>\n\t\t</div>\n\t\t<div v-else-if=\"usersStore.showUMSetupWarning\" :class=\"$style.setupInfoContainer\">\n\t\t\t<n8n-action-box\n\t\t\t\t:heading=\"$locale.baseText('settings.users.setupToInviteUsers')\"\n\t\t\t\t:buttonText=\"$locale.baseText('settings.users.setupMyAccount')\"\n\t\t\t\t:description=\"`${\n\t\t\t\t\tisSharingEnabled ? '' : $locale.baseText('settings.users.setupToInviteUsersInfo')\n\t\t\t\t}`\"\n\t\t\t\t@click=\"redirectToSetup\"\n\t\t\t/>\n\t\t</div>\n\t\t<div :class=\"$style.usersContainer\" v-else>\n\t\t\t<n8n-users-list\n\t\t\t\t:actions=\"usersListActions\"\n\t\t\t\t:users=\"usersStore.allUsers\"\n\t\t\t\t:currentUserId=\"usersStore.currentUserId\"\n\t\t\t\t@delete=\"onDelete\"\n\t\t\t\t@reinvite=\"onReinvite\"\n\t\t\t\t@copyInviteLink=\"onCopyInviteLink\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { EnterpriseEditionFeature, INVITE_USER_MODAL_KEY, VIEWS } from '@/constants';\n\nimport PageAlert from '../components/PageAlert.vue';\nimport type { IUser, IUserListAction } from '@/Interface';\nimport mixins from 'vue-typed-mixins';\nimport { showMessage } from '@/mixins/showMessage';\nimport { copyPaste } from '@/mixins/copyPaste';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useUsageStore } from '@/stores/usage.store';\nimport { useSSOStore } from '@/stores/sso.store';\n\nexport default mixins(showMessage, copyPaste).extend({\n\tname: 'SettingsUsersView',\n\tcomponents: {\n\t\tPageAlert,\n\t},\n\tasync mounted() {\n\t\tif (!this.usersStore.showUMSetupWarning) {\n\t\t\tawait this.usersStore.fetchUsers();\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapStores(useSettingsStore, useUIStore, useUsersStore, useUsageStore, useSSOStore),\n\t\tisSharingEnabled() {\n\t\t\treturn this.settingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.Sharing);\n\t\t},\n\t\tusersListActions(): IUserListAction[] {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('settings.users.actions.copyInviteLink'),\n\t\t\t\t\tvalue: 'copyInviteLink',\n\t\t\t\t\tguard: (user) => !user.firstName && !!user.inviteAcceptUrl,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('settings.users.actions.reinvite'),\n\t\t\t\t\tvalue: 'reinvite',\n\t\t\t\t\tguard: (user) => !user.firstName && this.settingsStore.isSmtpSetup,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('settings.users.actions.delete'),\n\t\t\t\t\tvalue: 'delete',\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t},\n\tmethods: {\n\t\tredirectToSetup() {\n\t\t\tvoid this.$router.push({ name: VIEWS.SETUP });\n\t\t},\n\t\tonInvite() {\n\t\t\tthis.uiStore.openModal(INVITE_USER_MODAL_KEY);\n\t\t},\n\t\tasync onDelete(userId: string) {\n\t\t\tconst user = this.usersStore.getUserById(userId) as IUser | null;\n\t\t\tif (user) {\n\t\t\t\tthis.uiStore.openDeleteUserModal(userId);\n\t\t\t}\n\t\t},\n\t\tasync onReinvite(userId: string) {\n\t\t\tconst user = this.usersStore.getUserById(userId) as IUser | null;\n\t\t\tif (user) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.usersStore.reinviteUser({ id: user.id });\n\n\t\t\t\t\tthis.$showToast({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\ttitle: this.$locale.baseText('settings.users.inviteResent'),\n\t\t\t\t\t\tmessage: this.$locale.baseText('settings.users.emailSentTo', {\n\t\t\t\t\t\t\tinterpolate: { email: user.email || '' },\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.$showError(e, this.$locale.baseText('settings.users.userReinviteError'));\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync onCopyInviteLink(userId: string) {\n\t\t\tconst user = this.usersStore.getUserById(userId) as IUser | null;\n\t\t\tif (user?.inviteAcceptUrl) {\n\t\t\t\tthis.copyToClipboard(user.inviteAcceptUrl);\n\n\t\t\t\tthis.$showToast({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\ttitle: this.$locale.baseText('settings.users.inviteUrlCreated'),\n\t\t\t\t\tmessage: this.$locale.baseText('settings.users.inviteUrlCreated.message'),\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tgoToUpgrade() {\n\t\t\tthis.uiStore.goToUpgrade('users', 'upgrade-users');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\theight: 100%;\n\tpadding-right: var(--spacing-2xs);\n\n\t> * {\n\t\tmargin-bottom: var(--spacing-2xl);\n\t}\n}\n\n.usersContainer {\n\t> * {\n\t\tmargin-bottom: var(--spacing-2xs);\n\t}\n}\n\n.buttonContainer {\n\tdisplay: inline-block;\n\tfloat: right;\n\tmargin-bottom: var(--spacing-l);\n}\n\n.setupInfoContainer {\n\tmax-width: 728px;\n}\n\n.alert {\n\tleft: calc(50% + 100px);\n}\n</style>\n","<template>\n\t<div :class=\"$style.cardContainer\">\n\t\t<div v-if=\"loading\" :class=\"$style.cardSkeleton\">\n\t\t\t<n8n-loading :class=\"$style.loader\" variant=\"p\" :rows=\"1\" />\n\t\t\t<n8n-loading :class=\"$style.loader\" variant=\"p\" :rows=\"1\" />\n\t\t</div>\n\t\t<div v-else :class=\"$style.packageCard\">\n\t\t\t<div :class=\"$style.cardInfoContainer\">\n\t\t\t\t<div :class=\"$style.cardTitle\">\n\t\t\t\t\t<n8n-text :bold=\"true\" size=\"large\">{{ communityPackage.packageName }}</n8n-text>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"$style.cardSubtitle\">\n\t\t\t\t\t<n8n-text :bold=\"true\" size=\"small\" color=\"text-light\">\n\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t$locale.baseText('settings.communityNodes.packageNodes.label', {\n\t\t\t\t\t\t\t\tadjustToNumber: communityPackage.installedNodes.length,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}:&nbsp;\n\t\t\t\t\t</n8n-text>\n\t\t\t\t\t<n8n-text size=\"small\" color=\"text-light\">\n\t\t\t\t\t\t<span v-for=\"(node, index) in communityPackage.installedNodes\" :key=\"node.name\">\n\t\t\t\t\t\t\t{{ node.name\n\t\t\t\t\t\t\t}}<span v-if=\"index != communityPackage.installedNodes.length - 1\">,</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</n8n-text>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.cardControlsContainer\">\n\t\t\t\t<n8n-text :bold=\"true\" size=\"large\" color=\"text-light\">\n\t\t\t\t\tv{{ communityPackage.installedVersion }}\n\t\t\t\t</n8n-text>\n\t\t\t\t<n8n-tooltip v-if=\"communityPackage.failedLoading === true\" placement=\"top\">\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{{ $locale.baseText('settings.communityNodes.failedToLoad.tooltip') }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t\t<n8n-icon icon=\"exclamation-triangle\" color=\"danger\" size=\"large\" />\n\t\t\t\t</n8n-tooltip>\n\t\t\t\t<n8n-tooltip v-else-if=\"communityPackage.updateAvailable\" placement=\"top\">\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{{ $locale.baseText('settings.communityNodes.updateAvailable.tooltip') }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t\t<n8n-button type=\"outline\" label=\"Update\" @click=\"onUpdateClick\" />\n\t\t\t\t</n8n-tooltip>\n\t\t\t\t<n8n-tooltip v-else placement=\"top\">\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{{ $locale.baseText('settings.communityNodes.upToDate.tooltip') }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t\t<n8n-icon icon=\"check-circle\" color=\"text-light\" size=\"large\" />\n\t\t\t\t</n8n-tooltip>\n\t\t\t\t<div :class=\"$style.cardActions\">\n\t\t\t\t\t<n8n-action-toggle :actions=\"packageActions\" @action=\"onAction\"></n8n-action-toggle>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { useUIStore } from '@/stores/ui.store';\nimport type { PublicInstalledPackage } from 'n8n-workflow';\nimport { mapStores } from 'pinia';\nimport mixins from 'vue-typed-mixins';\nimport { NPM_PACKAGE_DOCS_BASE_URL, COMMUNITY_PACKAGE_MANAGE_ACTIONS } from '../constants';\nimport { showMessage } from '@/mixins/showMessage';\n\nexport default mixins(showMessage).extend({\n\tname: 'CommunityPackageCard',\n\tprops: {\n\t\tcommunityPackage: {\n\t\t\ttype: Object as () => PublicInstalledPackage,\n\t\t},\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tpackageActions: [\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('settings.communityNodes.viewDocsAction.label'),\n\t\t\t\t\tvalue: COMMUNITY_PACKAGE_MANAGE_ACTIONS.VIEW_DOCS,\n\t\t\t\t\ttype: 'external-link',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('settings.communityNodes.uninstallAction.label'),\n\t\t\t\t\tvalue: COMMUNITY_PACKAGE_MANAGE_ACTIONS.UNINSTALL,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore),\n\t},\n\tmethods: {\n\t\tasync onAction(value: string) {\n\t\t\tswitch (value) {\n\t\t\t\tcase COMMUNITY_PACKAGE_MANAGE_ACTIONS.VIEW_DOCS:\n\t\t\t\t\tthis.$telemetry.track('user clicked to browse the cnr package documentation', {\n\t\t\t\t\t\tpackage_name: this.communityPackage.packageName,\n\t\t\t\t\t\tpackage_version: this.communityPackage.installedVersion,\n\t\t\t\t\t});\n\t\t\t\t\twindow.open(`${NPM_PACKAGE_DOCS_BASE_URL}${this.communityPackage.packageName}`, '_blank');\n\t\t\t\t\tbreak;\n\t\t\t\tcase COMMUNITY_PACKAGE_MANAGE_ACTIONS.UNINSTALL:\n\t\t\t\t\tthis.uiStore.openCommunityPackageUninstallConfirmModal(this.communityPackage.packageName);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\tonUpdateClick() {\n\t\t\tthis.uiStore.openCommunityPackageUpdateConfirmModal(this.communityPackage.packageName);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.cardContainer {\n\tdisplay: flex;\n\tpadding: var(--spacing-s);\n\tborder: var(--border-width-base) var(--border-style-base) var(--color-info-tint-1);\n\tborder-radius: var(--border-radius-large);\n\tbackground-color: var(--color-background-xlight);\n}\n\n.packageCard,\n.cardSkeleton {\n\tdisplay: flex;\n\tflex-basis: 100%;\n\tjustify-content: space-between;\n}\n\n.packageCard {\n\talign-items: center;\n}\n\n.cardSkeleton {\n\tflex-direction: column;\n}\n\n.loader {\n\twidth: 50%;\n\ttransform: scaleY(-1);\n\n\t&:last-child {\n\t\twidth: 70%;\n\n\t\tdiv {\n\t\t\tmargin: 0;\n\t\t}\n\t}\n}\n\n.cardInfoContainer {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n}\n\n.cardTitle {\n\tflex-basis: 100%;\n\n\tspan {\n\t\tline-height: 1;\n\t}\n}\n\n.cardSubtitle {\n\tmargin-top: 2px;\n\tpadding-right: var(--spacing-m);\n}\n\n.cardControlsContainer {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: var(--spacing-3xs);\n}\n\n.cardActions {\n\tpadding-left: var(--spacing-3xs);\n}\n</style>\n","<template>\n\t<div :class=\"$style.container\">\n\t\t<div :class=\"$style.headingContainer\">\n\t\t\t<n8n-heading size=\"2xlarge\">{{ $locale.baseText('settings.communityNodes') }}</n8n-heading>\n\t\t\t<n8n-button\n\t\t\t\tv-if=\"\n\t\t\t\t\t!settingsStore.isQueueModeEnabled &&\n\t\t\t\t\tcommunityNodesStore.getInstalledPackages.length > 0 &&\n\t\t\t\t\t!loading\n\t\t\t\t\"\n\t\t\t\t:label=\"$locale.baseText('settings.communityNodes.installModal.installButton.label')\"\n\t\t\t\tsize=\"large\"\n\t\t\t\t@click=\"openInstallModal\"\n\t\t\t/>\n\t\t</div>\n\t\t<div v-if=\"settingsStore.isQueueModeEnabled\" :class=\"$style.actionBoxContainer\">\n\t\t\t<n8n-action-box\n\t\t\t\t:heading=\"$locale.baseText('settings.communityNodes.empty.title')\"\n\t\t\t\t:description=\"getEmptyStateDescription\"\n\t\t\t\t:calloutText=\"actionBoxConfig.calloutText\"\n\t\t\t\t:calloutTheme=\"actionBoxConfig.calloutTheme\"\n\t\t\t/>\n\t\t</div>\n\t\t<div :class=\"$style.cardsContainer\" v-else-if=\"loading\">\n\t\t\t<community-package-card\n\t\t\t\tv-for=\"n in 2\"\n\t\t\t\t:key=\"'index-' + n\"\n\t\t\t\t:loading=\"true\"\n\t\t\t></community-package-card>\n\t\t</div>\n\t\t<div\n\t\t\tv-else-if=\"communityNodesStore.getInstalledPackages.length === 0\"\n\t\t\t:class=\"$style.actionBoxContainer\"\n\t\t>\n\t\t\t<n8n-action-box\n\t\t\t\t:heading=\"$locale.baseText('settings.communityNodes.empty.title')\"\n\t\t\t\t:description=\"getEmptyStateDescription\"\n\t\t\t\t:buttonText=\"getEmptyStateButtonText\"\n\t\t\t\t:calloutText=\"actionBoxConfig.calloutText\"\n\t\t\t\t:calloutTheme=\"actionBoxConfig.calloutTheme\"\n\t\t\t\t@click=\"onClickEmptyStateButton\"\n\t\t\t/>\n\t\t</div>\n\t\t<div :class=\"$style.cardsContainer\" v-else>\n\t\t\t<community-package-card\n\t\t\t\tv-for=\"communityPackage in communityNodesStore.getInstalledPackages\"\n\t\t\t\t:key=\"communityPackage.packageName\"\n\t\t\t\t:communityPackage=\"communityPackage\"\n\t\t\t></community-package-card>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport {\n\tCOMMUNITY_PACKAGE_INSTALL_MODAL_KEY,\n\tCOMMUNITY_NODES_INSTALLATION_DOCS_URL,\n\tCOMMUNITY_NODES_NPM_INSTALLATION_URL,\n} from '@/constants';\nimport CommunityPackageCard from '@/components/CommunityPackageCard.vue';\nimport { showMessage } from '@/mixins/showMessage';\nimport { pushConnection } from '@/mixins/pushConnection';\nimport mixins from 'vue-typed-mixins';\nimport type { PublicInstalledPackage } from 'n8n-workflow';\n\nimport { useCommunityNodesStore } from '@/stores/communityNodes.store';\nimport { useUIStore } from '@/stores/ui.store';\nimport { mapStores } from 'pinia';\nimport { useSettingsStore } from '@/stores/settings.store';\n\nconst PACKAGE_COUNT_THRESHOLD = 31;\n\nexport default mixins(showMessage, pushConnection).extend({\n\tname: 'SettingsCommunityNodesView',\n\tcomponents: {\n\t\tCommunityPackageCard,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloading: false,\n\t\t};\n\t},\n\tasync mounted() {\n\t\t// The push connection is needed here to receive `reloadNodeType` and `removeNodeType` events when community nodes are installed, updated, or removed.\n\t\tthis.pushConnect();\n\n\t\ttry {\n\t\t\tthis.$data.loading = true;\n\t\t\tawait this.communityNodesStore.fetchInstalledPackages();\n\n\t\t\tconst installedPackages: PublicInstalledPackage[] =\n\t\t\t\tthis.communityNodesStore.getInstalledPackages;\n\t\t\tconst packagesToUpdate: PublicInstalledPackage[] = installedPackages.filter(\n\t\t\t\t(p) => p.updateAvailable,\n\t\t\t);\n\t\t\tthis.$telemetry.track('user viewed cnr settings page', {\n\t\t\t\tnum_of_packages_installed: installedPackages.length,\n\t\t\t\tinstalled_packages: installedPackages.map((p) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpackage_name: p.packageName,\n\t\t\t\t\t\tpackage_version: p.installedVersion,\n\t\t\t\t\t\tpackage_nodes: p.installedNodes.map((node) => `${node.name}-v${node.latestVersion}`),\n\t\t\t\t\t\tis_update_available: p.updateAvailable !== undefined,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\tpackages_to_update: packagesToUpdate.map((p) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpackage_name: p.packageName,\n\t\t\t\t\t\tpackage_version_current: p.installedVersion,\n\t\t\t\t\t\tpackage_version_available: p.updateAvailable,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\tnumber_of_updates_available: packagesToUpdate.length,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthis.$showError(\n\t\t\t\terror,\n\t\t\t\tthis.$locale.baseText('settings.communityNodes.fetchError.title'),\n\t\t\t\tthis.$locale.baseText('settings.communityNodes.fetchError.message'),\n\t\t\t);\n\t\t} finally {\n\t\t\tthis.$data.loading = false;\n\t\t}\n\t\ttry {\n\t\t\tawait this.communityNodesStore.fetchAvailableCommunityPackageCount();\n\t\t} finally {\n\t\t\tthis.$data.loading = false;\n\t\t}\n\t},\n\tbeforeDestroy() {\n\t\tthis.pushDisconnect();\n\t},\n\tcomputed: {\n\t\t...mapStores(useCommunityNodesStore, useSettingsStore, useUIStore),\n\t\tgetEmptyStateDescription(): string {\n\t\t\tconst packageCount = this.communityNodesStore.availablePackageCount;\n\n\t\t\tif (this.settingsStore.isDesktopDeployment) {\n\t\t\t\treturn this.$locale.baseText('contextual.communityNodes.unavailable.description.desktop');\n\t\t\t}\n\n\t\t\treturn packageCount < PACKAGE_COUNT_THRESHOLD\n\t\t\t\t? this.$locale.baseText('settings.communityNodes.empty.description.no-packages', {\n\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\tdocURL: COMMUNITY_NODES_INSTALLATION_DOCS_URL,\n\t\t\t\t\t\t},\n\t\t\t\t  })\n\t\t\t\t: this.$locale.baseText('settings.communityNodes.empty.description', {\n\t\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\t\tdocURL: COMMUNITY_NODES_INSTALLATION_DOCS_URL,\n\t\t\t\t\t\t\tcount: (Math.floor(packageCount / 10) * 10).toString(),\n\t\t\t\t\t\t},\n\t\t\t\t  });\n\t\t},\n\t\tgetEmptyStateButtonText(): string {\n\t\t\tif (this.settingsStore.isDesktopDeployment) {\n\t\t\t\treturn this.$locale.baseText('contextual.communityNodes.unavailable.button.desktop');\n\t\t\t}\n\n\t\t\treturn this.shouldShowInstallButton\n\t\t\t\t? this.$locale.baseText('settings.communityNodes.empty.installPackageLabel')\n\t\t\t\t: '';\n\t\t},\n\t\tshouldShowInstallButton(): boolean {\n\t\t\treturn this.settingsStore.isDesktopDeployment || this.settingsStore.isNpmAvailable;\n\t\t},\n\t\tactionBoxConfig(): {\n\t\t\tcalloutText: string;\n\t\t\tcalloutTheme: 'warning' | string;\n\t\t\thideButton: boolean;\n\t\t} {\n\t\t\tif (!this.settingsStore.isNpmAvailable) {\n\t\t\t\treturn {\n\t\t\t\t\tcalloutText: this.$locale.baseText('settings.communityNodes.npmUnavailable.warning', {\n\t\t\t\t\t\tinterpolate: { npmUrl: COMMUNITY_NODES_NPM_INSTALLATION_URL },\n\t\t\t\t\t}),\n\t\t\t\t\tcalloutTheme: 'warning',\n\t\t\t\t\thideButton: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.settingsStore.isQueueModeEnabled) {\n\t\t\t\treturn {\n\t\t\t\t\tcalloutText: this.$locale.baseText('settings.communityNodes.queueMode.warning', {\n\t\t\t\t\t\tinterpolate: { docURL: COMMUNITY_NODES_INSTALLATION_DOCS_URL },\n\t\t\t\t\t}),\n\t\t\t\t\tcalloutTheme: 'warning',\n\t\t\t\t\thideButton: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tcalloutText: '',\n\t\t\t\tcalloutTheme: '',\n\t\t\t\thideButton: false,\n\t\t\t};\n\t\t},\n\t},\n\tmethods: {\n\t\tonClickEmptyStateButton(): void {\n\t\t\tif (this.settingsStore.isDesktopDeployment) {\n\t\t\t\treturn this.goToUpgrade();\n\t\t\t}\n\n\t\t\tthis.openInstallModal();\n\t\t},\n\t\tgoToUpgrade(): void {\n\t\t\tconst linkUrl = `${this.$locale.baseText(\n\t\t\t\t'contextual.upgradeLinkUrl.desktop',\n\t\t\t)}&utm_campaign=upgrade-community-nodes&selfHosted=true`;\n\n\t\t\twindow.open(linkUrl, '_blank');\n\t\t},\n\t\topenInstallModal(): void {\n\t\t\tconst telemetryPayload = {\n\t\t\t\tis_empty_state: this.communityNodesStore.getInstalledPackages.length === 0,\n\t\t\t};\n\t\t\tthis.$telemetry.track('user clicked cnr install button', telemetryPayload);\n\n\t\t\tvoid this.$externalHooks().run(\n\t\t\t\t'settingsCommunityNodesView.openInstallModal',\n\t\t\t\ttelemetryPayload,\n\t\t\t);\n\t\t\tthis.uiStore.openModal(COMMUNITY_PACKAGE_INSTALL_MODAL_KEY);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\theight: 100%;\n\tpadding-right: var(--spacing-2xs);\n\t> * {\n\t\tmargin-bottom: var(--spacing-2xl);\n\t}\n}\n\n.headingContainer {\n\tdisplay: flex;\n\tjustify-content: space-between;\n}\n\n.loadingContainer {\n\tdisplay: flex;\n\tgap: var(--spacing-xs);\n}\n\n.actionBoxContainer {\n\ttext-align: center;\n}\n\n.cardsContainer {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: var(--spacing-2xs);\n}\n</style>\n","<template>\n\t<div :class=\"$style.container\">\n\t\t<div :class=\"$style.header\">\n\t\t\t<n8n-heading size=\"2xlarge\">\n\t\t\t\t{{ $locale.baseText('settings.api') }}\n\t\t\t\t<span :style=\"{ fontSize: 'var(--font-size-s)', color: 'var(--color-text-light)' }\">\n\t\t\t\t\t({{ $locale.baseText('beta') }})\n\t\t\t\t</span>\n\t\t\t</n8n-heading>\n\t\t</div>\n\n\t\t<div v-if=\"apiKey\">\n\t\t\t<p class=\"mb-s\">\n\t\t\t\t<n8n-info-tip :bold=\"false\">\n\t\t\t\t\t<i18n path=\"settings.api.view.info\" tag=\"span\">\n\t\t\t\t\t\t<template #apiAction>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://docs.n8n.io/api\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\tv-text=\"$locale.baseText('settings.api.view.info.api')\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<template #webhookAction>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://docs.n8n.io/integrations/core-nodes/n8n-nodes-base.webhook/\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\tv-text=\"$locale.baseText('settings.api.view.info.webhook')\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</i18n>\n\t\t\t\t</n8n-info-tip>\n\t\t\t</p>\n\t\t\t<n8n-card class=\"mb-4xs\" :class=\"$style.card\">\n\t\t\t\t<span :class=\"$style.delete\">\n\t\t\t\t\t<n8n-link @click=\"showDeleteModal\" :bold=\"true\">\n\t\t\t\t\t\t{{ $locale.baseText('generic.delete') }}\n\t\t\t\t\t</n8n-link>\n\t\t\t\t</span>\n\t\t\t\t<div class=\"ph-no-capture\">\n\t\t\t\t\t<CopyInput\n\t\t\t\t\t\t:label=\"$locale.baseText('settings.api.view.myKey')\"\n\t\t\t\t\t\t:value=\"apiKey\"\n\t\t\t\t\t\t:copy-button-text=\"$locale.baseText('generic.clickToCopy')\"\n\t\t\t\t\t\t:toast-title=\"$locale.baseText('settings.api.view.copy.toast')\"\n\t\t\t\t\t\t@copy=\"onCopy\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</n8n-card>\n\t\t\t<div :class=\"$style.hint\">\n\t\t\t\t<n8n-text size=\"small\">\n\t\t\t\t\t{{\n\t\t\t\t\t\t$locale.baseText(`settings.api.view.${swaggerUIEnabled ? 'tryapi' : 'more-details'}`)\n\t\t\t\t\t}}\n\t\t\t\t</n8n-text>\n\t\t\t\t<n8n-link :to=\"apiDocsURL\" :newWindow=\"true\" size=\"small\">\n\t\t\t\t\t{{\n\t\t\t\t\t\t$locale.baseText(\n\t\t\t\t\t\t\t`settings.api.view.${swaggerUIEnabled ? 'apiPlayground' : 'external-docs'}`,\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</n8n-link>\n\t\t\t</div>\n\t\t</div>\n\t\t<n8n-action-box\n\t\t\tv-else-if=\"mounted\"\n\t\t\t:buttonText=\"\n\t\t\t\t$locale.baseText(\n\t\t\t\t\tloading ? 'settings.api.create.button.loading' : 'settings.api.create.button',\n\t\t\t\t)\n\t\t\t\"\n\t\t\t:description=\"$locale.baseText('settings.api.create.description')\"\n\t\t\t@click=\"createApiKey\"\n\t\t/>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { showMessage } from '@/mixins/showMessage';\nimport type { IUser } from '@/Interface';\nimport mixins from 'vue-typed-mixins';\n\nimport CopyInput from '@/components/CopyInput.vue';\nimport { mapStores } from 'pinia';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useRootStore } from '@/stores/n8nRoot.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { DOCS_DOMAIN } from '@/constants';\n\nexport default mixins(showMessage).extend({\n\tname: 'SettingsApiView',\n\tcomponents: {\n\t\tCopyInput,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloading: false,\n\t\t\tmounted: false,\n\t\t\tapiKey: '',\n\t\t\tswaggerUIEnabled: false,\n\t\t\tapiDocsURL: '',\n\t\t};\n\t},\n\tmounted() {\n\t\tvoid this.getApiKey();\n\t\tconst baseUrl = this.rootStore.baseUrl;\n\t\tconst apiPath = this.settingsStore.publicApiPath;\n\t\tconst latestVersion = this.settingsStore.publicApiLatestVersion;\n\t\tthis.swaggerUIEnabled = this.settingsStore.isSwaggerUIEnabled;\n\t\tthis.apiDocsURL = this.swaggerUIEnabled\n\t\t\t? `${baseUrl}${apiPath}/v${latestVersion}/docs`\n\t\t\t: `https://${DOCS_DOMAIN}/api/api-reference/`;\n\t},\n\tcomputed: {\n\t\t...mapStores(useRootStore, useSettingsStore, useUsersStore),\n\t\tcurrentUser(): IUser | null {\n\t\t\treturn this.usersStore.currentUser;\n\t\t},\n\t},\n\tmethods: {\n\t\tasync showDeleteModal() {\n\t\t\tconst confirmed = await this.confirmMessage(\n\t\t\t\tthis.$locale.baseText('settings.api.delete.description'),\n\t\t\t\tthis.$locale.baseText('settings.api.delete.title'),\n\t\t\t\tnull,\n\t\t\t\tthis.$locale.baseText('settings.api.delete.button'),\n\t\t\t\tthis.$locale.baseText('generic.cancel'),\n\t\t\t);\n\t\t\tif (confirmed) {\n\t\t\t\tawait this.deleteApiKey();\n\t\t\t}\n\t\t},\n\t\tasync getApiKey() {\n\t\t\ttry {\n\t\t\t\tthis.apiKey = (await this.settingsStore.getApiKey()) || '';\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('settings.api.view.error'));\n\t\t\t} finally {\n\t\t\t\tthis.mounted = true;\n\t\t\t}\n\t\t},\n\t\tasync createApiKey() {\n\t\t\tthis.loading = true;\n\n\t\t\ttry {\n\t\t\t\tthis.apiKey = (await this.settingsStore.createApiKey()) || '';\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('settings.api.create.error'));\n\t\t\t} finally {\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.$telemetry.track('User clicked create API key button');\n\t\t\t}\n\t\t},\n\t\tasync deleteApiKey() {\n\t\t\ttry {\n\t\t\t\tawait this.settingsStore.deleteApiKey();\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('settings.api.delete.toast'),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t\tthis.apiKey = '';\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('settings.api.delete.error'));\n\t\t\t} finally {\n\t\t\t\tthis.$telemetry.track('User clicked delete API key button');\n\t\t\t}\n\t\t},\n\t\tonCopy() {\n\t\t\tthis.$telemetry.track('User clicked copy API key button');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\t> * {\n\t\tmargin-bottom: var(--spacing-2xl);\n\t}\n}\n\n.header {\n\tdisplay: flex;\n\talign-items: center;\n\twhite-space: nowrap;\n\n\t*:first-child {\n\t\tflex-grow: 1;\n\t}\n}\n\n.card {\n\tposition: relative;\n}\n\n.delete {\n\tposition: absolute;\n\tdisplay: inline-block;\n\ttop: var(--spacing-s);\n\tright: var(--spacing-s);\n}\n\n.hint {\n\tcolor: var(--color-text-light);\n}\n</style>\n","<template>\n\t<div :class=\"[$style.wrapper, !this.uiStore.sidebarMenuCollapsed && $style.expandedSidebar]\">\n\t\t<div :class=\"$style.container\">\n\t\t\t<aside :class=\"$style.aside\" v-if=\"$slots.aside\">\n\t\t\t\t<slot name=\"aside\" />\n\t\t\t</aside>\n\t\t\t<main :class=\"$style.content\">\n\t\t\t\t<slot />\n\t\t\t</main>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { useUIStore } from '@/stores/ui.store';\nimport { mapStores } from 'pinia';\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tname: 'PageViewLayout',\n\tdata() {\n\t\treturn {\n\t\t\tloading: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore),\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.wrapper {\n\tdisplay: flex;\n\theight: 100%;\n\twidth: 100%;\n\tmax-width: 1280px;\n\tjustify-content: center;\n\tbox-sizing: border-box;\n\tbackground: var(--color-gray-light);\n\tpadding: var(--spacing-l) var(--spacing-l) 0;\n\t@media (min-width: 1200px) {\n\t\tpadding: var(--spacing-2xl) var(--spacing-2xl) 0;\n\t}\n}\n\n.container {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: row;\n\theight: 100%;\n\twidth: 100%;\n}\n\n.aside {\n\tdisplay: flex;\n\tflex-shrink: 0;\n\tflex-direction: column;\n\theight: 100%;\n\twidth: 160px;\n\tmargin-right: var(--spacing-l);\n\n\t@media (min-width: 1200px) {\n\t\tmargin-right: var(--spacing-2xl);\n\t}\n}\n\n.content {\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1 1 100%;\n\theight: 100%;\n}\n\n@media (max-width: 500px) {\n\t.container {\n\t\tflex-direction: column;\n\t}\n\t.aside {\n\t\theight: auto;\n\t\tmargin: 0;\n\t}\n}\n</style>\n","<template>\n\t<n8n-card :class=\"$style.cardLink\" data-test-id=\"destination-card\" @click=\"onClick\">\n\t\t<template #header>\n\t\t\t<div>\n\t\t\t\t<n8n-heading tag=\"h2\" bold class=\"ph-no-capture\" :class=\"$style.cardHeading\">\n\t\t\t\t\t{{ destination.label }}\n\t\t\t\t</n8n-heading>\n\t\t\t\t<div :class=\"$style.cardDescription\">\n\t\t\t\t\t<n8n-text color=\"text-light\" size=\"small\">\n\t\t\t\t\t\t<span>{{ $locale.baseText(typeLabelName) }}</span>\n\t\t\t\t\t</n8n-text>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #append>\n\t\t\t<div :class=\"$style.cardActions\">\n\t\t\t\t<div :class=\"$style.activeStatusText\" data-test-id=\"destination-activator-status\">\n\t\t\t\t\t<n8n-text v-if=\"nodeParameters.enabled\" :color=\"'success'\" size=\"small\" bold>\n\t\t\t\t\t\t{{ $locale.baseText('workflowActivator.active') }}\n\t\t\t\t\t</n8n-text>\n\t\t\t\t\t<n8n-text v-else color=\"text-base\" size=\"small\" bold>\n\t\t\t\t\t\t{{ $locale.baseText('workflowActivator.inactive') }}\n\t\t\t\t\t</n8n-text>\n\t\t\t\t</div>\n\n\t\t\t\t<el-switch\n\t\t\t\t\tclass=\"mr-s\"\n\t\t\t\t\t:disabled=\"!isInstanceOwner\"\n\t\t\t\t\t:value=\"nodeParameters.enabled\"\n\t\t\t\t\t@change=\"onEnabledSwitched($event, destination.id)\"\n\t\t\t\t\t:title=\"\n\t\t\t\t\t\tnodeParameters.enabled\n\t\t\t\t\t\t\t? $locale.baseText('workflowActivator.deactivateWorkflow')\n\t\t\t\t\t\t\t: $locale.baseText('workflowActivator.activateWorkflow')\n\t\t\t\t\t\"\n\t\t\t\t\tactive-color=\"#13ce66\"\n\t\t\t\t\tinactive-color=\"#8899AA\"\n\t\t\t\t\telement-loading-spinner=\"el-icon-loading\"\n\t\t\t\t\tdata-test-id=\"workflow-activate-switch\"\n\t\t\t\t>\n\t\t\t\t</el-switch>\n\n\t\t\t\t<n8n-action-toggle :actions=\"actions\" theme=\"dark\" @action=\"onAction\" />\n\t\t\t</div>\n\t\t</template>\n\t</n8n-card>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\nimport { EnterpriseEditionFeature } from '@/constants';\nimport { showMessage } from '@/mixins/showMessage';\nimport { useLogStreamingStore } from '@/stores/logStreaming.store';\nimport type { PropType } from 'vue';\nimport { mapStores } from 'pinia';\nimport type { MessageEventBusDestinationOptions } from 'n8n-workflow';\nimport { deepCopy, defaultMessageEventBusDestinationOptions } from 'n8n-workflow';\nimport type { BaseTextKey } from '@/plugins/i18n';\nimport type { EventBus } from '@/event-bus';\n\nexport const DESTINATION_LIST_ITEM_ACTIONS = {\n\tOPEN: 'open',\n\tDELETE: 'delete',\n};\n\nexport default mixins(showMessage).extend({\n\tdata() {\n\t\treturn {\n\t\t\tEnterpriseEditionFeature,\n\t\t\tnodeParameters: {} as MessageEventBusDestinationOptions,\n\t\t};\n\t},\n\tcomponents: {},\n\tprops: {\n\t\teventBus: {\n\t\t\ttype: Object as PropType<EventBus>,\n\t\t},\n\t\tdestination: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t\tdefault: deepCopy(\n\t\t\t\tdefaultMessageEventBusDestinationOptions,\n\t\t\t) as MessageEventBusDestinationOptions,\n\t\t},\n\t\tisInstanceOwner: Boolean,\n\t},\n\tmounted() {\n\t\tthis.nodeParameters = Object.assign(\n\t\t\tdeepCopy(defaultMessageEventBusDestinationOptions),\n\t\t\tthis.destination,\n\t\t);\n\t\tthis.eventBus?.on('destinationWasSaved', this.onDestinationWasSaved);\n\t},\n\tdestroyed() {\n\t\tthis.eventBus?.off('destinationWasSaved', this.onDestinationWasSaved);\n\t},\n\tcomputed: {\n\t\t...mapStores(useLogStreamingStore),\n\t\tactions(): Array<{ label: string; value: string }> {\n\t\t\tconst actions = [\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('workflows.item.open'),\n\t\t\t\t\tvalue: DESTINATION_LIST_ITEM_ACTIONS.OPEN,\n\t\t\t\t},\n\t\t\t];\n\t\t\tif (this.isInstanceOwner) {\n\t\t\t\tactions.push({\n\t\t\t\t\tlabel: this.$locale.baseText('workflows.item.delete'),\n\t\t\t\t\tvalue: DESTINATION_LIST_ITEM_ACTIONS.DELETE,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn actions;\n\t\t},\n\t\ttypeLabelName(): BaseTextKey {\n\t\t\treturn `settings.log-streaming.${this.destination.__type}` as BaseTextKey;\n\t\t},\n\t},\n\tmethods: {\n\t\tonDestinationWasSaved() {\n\t\t\tconst updatedDestination = this.logStreamingStore.getDestination(this.destination.id);\n\t\t\tif (updatedDestination) {\n\t\t\t\tthis.nodeParameters = Object.assign(\n\t\t\t\t\tdeepCopy(defaultMessageEventBusDestinationOptions),\n\t\t\t\t\tthis.destination,\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tasync onClick(event?: PointerEvent) {\n\t\t\tif (\n\t\t\t\tevent &&\n\t\t\t\tevent.target &&\n\t\t\t\t'className' in event.target &&\n\t\t\t\tevent.target['className'] === 'el-switch__core'\n\t\t\t) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t} else {\n\t\t\t\tthis.$emit('edit', this.destination.id);\n\t\t\t}\n\t\t},\n\t\tonEnabledSwitched(state: boolean, destinationId: string) {\n\t\t\tthis.nodeParameters.enabled = state;\n\t\t\tvoid this.saveDestination();\n\t\t},\n\t\tasync saveDestination() {\n\t\t\tawait this.logStreamingStore.saveDestination(this.nodeParameters);\n\t\t},\n\t\tasync onAction(action: string) {\n\t\t\tif (action === DESTINATION_LIST_ITEM_ACTIONS.OPEN) {\n\t\t\t\tthis.$emit('edit', this.destination.id);\n\t\t\t} else if (action === DESTINATION_LIST_ITEM_ACTIONS.DELETE) {\n\t\t\t\tconst deleteConfirmed = await this.confirmMessage(\n\t\t\t\t\tthis.$locale.baseText('settings.log-streaming.destinationDelete.message', {\n\t\t\t\t\t\tinterpolate: { destinationName: this.destination.label },\n\t\t\t\t\t}),\n\t\t\t\t\tthis.$locale.baseText('settings.log-streaming.destinationDelete.headline'),\n\t\t\t\t\t'warning',\n\t\t\t\t\tthis.$locale.baseText('settings.log-streaming.destinationDelete.confirmButtonText'),\n\t\t\t\t\tthis.$locale.baseText('settings.log-streaming.destinationDelete.cancelButtonText'),\n\t\t\t\t);\n\n\t\t\t\tif (deleteConfirmed === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.$emit('remove', this.destination.id);\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.cardLink {\n\ttransition: box-shadow 0.3s ease;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tbox-shadow: 0 2px 8px rgba(#441c17, 0.1);\n\t}\n}\n\n.activeStatusText {\n\twidth: 64px; // Required to avoid jumping when changing active state\n\tpadding-right: var(--spacing-2xs);\n\tbox-sizing: border-box;\n\tdisplay: inline-block;\n\ttext-align: right;\n}\n\n.cardHeading {\n\tfont-size: var(--font-size-s);\n\tword-break: break-word;\n}\n\n.cardDescription {\n\tmin-height: 19px;\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.cardActions {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n}\n</style>\n","<template>\n\t<div>\n\t\t<div :class=\"$style.header\">\n\t\t\t<div class=\"mb-2xl\">\n\t\t\t\t<n8n-heading size=\"2xlarge\">\n\t\t\t\t\t{{ $locale.baseText(`settings.log-streaming.heading`) }}\n\t\t\t\t</n8n-heading>\n\t\t\t\t<template v-if=\"environment !== 'production'\">\n\t\t\t\t\t<strong class=\"ml-m\">Disable License ({{ environment }})&nbsp;</strong>\n\t\t\t\t\t<el-switch v-model=\"disableLicense\" size=\"large\" data-test-id=\"disable-license-toggle\" />\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t</div>\n\t\t<template v-if=\"isLicensed\">\n\t\t\t<div class=\"mb-l\">\n\t\t\t\t<n8n-info-tip theme=\"info\" type=\"note\">\n\t\t\t\t\t<template>\n\t\t\t\t\t\t<span v-html=\"$locale.baseText('settings.log-streaming.infoText')\"></span>\n\t\t\t\t\t</template>\n\t\t\t\t</n8n-info-tip>\n\t\t\t</div>\n\t\t\t<template v-if=\"storeHasItems()\">\n\t\t\t\t<el-row\n\t\t\t\t\t:gutter=\"10\"\n\t\t\t\t\tv-for=\"item in sortedItemKeysByLabel\"\n\t\t\t\t\t:key=\"item.key\"\n\t\t\t\t\t:class=\"$style.destinationItem\"\n\t\t\t\t>\n\t\t\t\t\t<el-col v-if=\"logStreamingStore.items[item.key]?.destination\">\n\t\t\t\t\t\t<event-destination-card\n\t\t\t\t\t\t\t:destination=\"logStreamingStore.items[item.key]?.destination\"\n\t\t\t\t\t\t\t:eventBus=\"eventBus\"\n\t\t\t\t\t\t\t:isInstanceOwner=\"isInstanceOwner\"\n\t\t\t\t\t\t\t@remove=\"onRemove(logStreamingStore.items[item.key]?.destination?.id)\"\n\t\t\t\t\t\t\t@edit=\"onEdit(logStreamingStore.items[item.key]?.destination?.id)\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</el-col>\n\t\t\t\t</el-row>\n\t\t\t\t<div class=\"mt-m text-right\">\n\t\t\t\t\t<n8n-button v-if=\"isInstanceOwner\" size=\"large\" @click=\"addDestination\">\n\t\t\t\t\t\t{{ $locale.baseText(`settings.log-streaming.add`) }}\n\t\t\t\t\t</n8n-button>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template v-else>\n\t\t\t\t<div data-test-id=\"action-box-licensed\">\n\t\t\t\t\t<n8n-action-box\n\t\t\t\t\t\t:buttonText=\"$locale.baseText(`settings.log-streaming.add`)\"\n\t\t\t\t\t\t@click=\"addDestination\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #heading>\n\t\t\t\t\t\t\t<span v-html=\"$locale.baseText(`settings.log-streaming.addFirstTitle`)\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</n8n-action-box>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</template>\n\t\t<template v-else>\n\t\t\t<div v-if=\"$locale.baseText('settings.log-streaming.infoText')\" class=\"mb-l\">\n\t\t\t\t<n8n-info-tip theme=\"info\" type=\"note\">\n\t\t\t\t\t<template>\n\t\t\t\t\t\t<span v-html=\"$locale.baseText('settings.log-streaming.infoText')\"></span>\n\t\t\t\t\t</template>\n\t\t\t\t</n8n-info-tip>\n\t\t\t</div>\n\t\t\t<div data-test-id=\"action-box-unlicensed\">\n\t\t\t\t<n8n-action-box\n\t\t\t\t\t:description=\"$locale.baseText('settings.log-streaming.actionBox.description')\"\n\t\t\t\t\t:buttonText=\"$locale.baseText('settings.log-streaming.actionBox.button')\"\n\t\t\t\t\t@click=\"goToUpgrade\"\n\t\t\t\t>\n\t\t\t\t\t<template #heading>\n\t\t\t\t\t\t<span v-html=\"$locale.baseText('settings.log-streaming.actionBox.title')\" />\n\t\t\t\t\t</template>\n\t\t\t\t</n8n-action-box>\n\t\t\t</div>\n\t\t</template>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { v4 as uuid } from 'uuid';\nimport { mapStores } from 'pinia';\nimport mixins from 'vue-typed-mixins';\nimport { useWorkflowsStore } from '../stores/workflows.store';\nimport { useUsersStore } from '../stores/users.store';\nimport { useCredentialsStore } from '../stores/credentials.store';\nimport { useLogStreamingStore } from '../stores/logStreaming.store';\nimport { useSettingsStore } from '../stores/settings.store';\nimport { useUIStore } from '../stores/ui.store';\nimport { LOG_STREAM_MODAL_KEY, EnterpriseEditionFeature } from '../constants';\nimport type { MessageEventBusDestinationOptions } from 'n8n-workflow';\nimport { deepCopy, defaultMessageEventBusDestinationOptions } from 'n8n-workflow';\nimport PageViewLayout from '@/components/layouts/PageViewLayout.vue';\nimport EventDestinationCard from '@/components/SettingsLogStreaming/EventDestinationCard.ee.vue';\nimport { createEventBus } from '@/event-bus';\n\nexport default mixins().extend({\n\tname: 'SettingsLogStreamingView',\n\tprops: {},\n\tcomponents: {\n\t\tPageViewLayout,\n\t\tEventDestinationCard,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\teventBus: createEventBus(),\n\t\t\tdestinations: Array<MessageEventBusDestinationOptions>,\n\t\t\tdisableLicense: false,\n\t\t\tallDestinations: [] as MessageEventBusDestinationOptions[],\n\t\t\tisInstanceOwner: false,\n\t\t};\n\t},\n\tasync mounted() {\n\t\tif (!this.isLicensed) return;\n\n\t\tthis.isInstanceOwner = this.usersStore.currentUser?.globalRole?.name === 'owner';\n\t\t// Prepare credentialsStore so modals can pick up credentials\n\t\tawait this.credentialsStore.fetchCredentialTypes(false);\n\t\tawait this.credentialsStore.fetchAllCredentials();\n\t\tthis.uiStore.nodeViewInitialized = false;\n\n\t\t// fetch Destination data from the backend\n\t\tawait this.getDestinationDataFromBackend();\n\n\t\t// since we are not really integrated into the hooks, we listen to the store and refresh the destinations\n\t\tthis.logStreamingStore.$onAction(({ name, after }) => {\n\t\t\tif (name === 'removeDestination' || name === 'updateDestination') {\n\t\t\t\tafter(async () => {\n\t\t\t\t\tthis.$forceUpdate();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t// refresh when a modal closes\n\t\tthis.eventBus.on('destinationWasSaved', this.onDestinationWasSaved);\n\t\t// listen to remove emission\n\t\tthis.eventBus.on('remove', this.onRemove);\n\t\t// listen to modal closing and remove nodes from store\n\t\tthis.eventBus.on('closing', this.onBusClosing);\n\t},\n\tdestroyed() {\n\t\tthis.eventBus.off('destinationWasSaved', this.onDestinationWasSaved);\n\t\tthis.eventBus.off('remove', this.onRemove);\n\t\tthis.eventBus.off('closing', this.onBusClosing);\n\t},\n\tcomputed: {\n\t\t...mapStores(\n\t\t\tuseSettingsStore,\n\t\t\tuseLogStreamingStore,\n\t\t\tuseWorkflowsStore,\n\t\t\tuseUIStore,\n\t\t\tuseUsersStore,\n\t\t\tuseCredentialsStore,\n\t\t),\n\t\tsortedItemKeysByLabel() {\n\t\t\tconst sortedKeys: Array<{ label: string; key: string }> = [];\n\t\t\tfor (const [key, value] of Object.entries(this.logStreamingStore.items)) {\n\t\t\t\tsortedKeys.push({ key, label: value.destination?.label ?? 'Destination' });\n\t\t\t}\n\t\t\treturn sortedKeys.sort((a, b) => a.label.localeCompare(b.label));\n\t\t},\n\t\tenvironment() {\n\t\t\treturn process.env.NODE_ENV;\n\t\t},\n\t\tisLicensed(): boolean {\n\t\t\tif (this.disableLicense === true) return false;\n\t\t\treturn this.settingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.LogStreaming);\n\t\t},\n\t},\n\tmethods: {\n\t\tonDestinationWasSaved() {\n\t\t\tthis.$forceUpdate();\n\t\t},\n\t\tonBusClosing() {\n\t\t\tthis.workflowsStore.removeAllNodes({ setStateDirty: false, removePinData: true });\n\t\t\tthis.uiStore.stateIsDirty = false;\n\t\t},\n\t\tasync getDestinationDataFromBackend(): Promise<void> {\n\t\t\tthis.logStreamingStore.clearEventNames();\n\t\t\tthis.logStreamingStore.clearDestinationItemTrees();\n\t\t\tthis.allDestinations = [];\n\t\t\tconst eventNamesData = await this.logStreamingStore.fetchEventNames();\n\t\t\tif (eventNamesData) {\n\t\t\t\tfor (const eventName of eventNamesData) {\n\t\t\t\t\tthis.logStreamingStore.addEventName(eventName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst destinationData: MessageEventBusDestinationOptions[] =\n\t\t\t\tawait this.logStreamingStore.fetchDestinations();\n\t\t\tif (destinationData) {\n\t\t\t\tfor (const destination of destinationData) {\n\t\t\t\t\tthis.logStreamingStore.addDestination(destination);\n\t\t\t\t\tthis.allDestinations.push(destination);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.$forceUpdate();\n\t\t},\n\t\tgoToUpgrade() {\n\t\t\tthis.uiStore.goToUpgrade('log-streaming', 'upgrade-log-streaming');\n\t\t},\n\t\tstoreHasItems(): boolean {\n\t\t\treturn this.logStreamingStore.items && Object.keys(this.logStreamingStore.items).length > 0;\n\t\t},\n\t\tasync addDestination() {\n\t\t\tconst newDestination = deepCopy(defaultMessageEventBusDestinationOptions);\n\t\t\tnewDestination.id = uuid();\n\t\t\tthis.logStreamingStore.addDestination(newDestination);\n\t\t\tthis.uiStore.openModalWithData({\n\t\t\t\tname: LOG_STREAM_MODAL_KEY,\n\t\t\t\tdata: {\n\t\t\t\t\tdestination: newDestination,\n\t\t\t\t\tisNew: true,\n\t\t\t\t\teventBus: this.eventBus,\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\tasync onRemove(destinationId?: string) {\n\t\t\tif (!destinationId) return;\n\t\t\tawait this.logStreamingStore.deleteDestination(destinationId);\n\t\t\tconst foundNode = this.workflowsStore.getNodeByName(destinationId);\n\t\t\tif (foundNode) {\n\t\t\t\tthis.workflowsStore.removeNode(foundNode);\n\t\t\t}\n\t\t},\n\t\tasync onEdit(destinationId?: string) {\n\t\t\tif (!destinationId) return;\n\t\t\tconst editDestination = this.logStreamingStore.getDestination(destinationId);\n\t\t\tif (editDestination) {\n\t\t\t\tthis.uiStore.openModalWithData({\n\t\t\t\t\tname: LOG_STREAM_MODAL_KEY,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tdestination: editDestination,\n\t\t\t\t\t\tisNew: false,\n\t\t\t\t\t\teventBus: this.eventBus,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.header {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-start;\n\twhite-space: nowrap;\n\n\t*:first-child {\n\t\tflex-grow: 1;\n\t}\n}\n\n.destinationItem {\n\tmargin-bottom: 0.5em;\n}\n</style>\n","<template>\n\t<feature-coming-soon :featureId=\"featureId\" showTitle />\n</template>\n\n<script lang=\"ts\">\nimport type { IFakeDoor } from '@/Interface';\nimport { defineComponent } from 'vue';\nimport FeatureComingSoon from '@/components/FeatureComingSoon.vue';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\n\nexport default defineComponent({\n\tname: 'SettingsFakeDoorView',\n\tcomponents: {\n\t\tFeatureComingSoon,\n\t},\n\tprops: {\n\t\tfeatureId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore),\n\t\tfeatureInfo(): IFakeDoor | undefined {\n\t\t\treturn this.uiStore.getFakeDoorById(this.featureId);\n\t\t},\n\t},\n\tmethods: {\n\t\topenLinkPage() {\n\t\t\tif (this.featureInfo) {\n\t\t\t\twindow.open(this.featureInfo.linkURL, '_blank');\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.header {\n\tdisplay: flex;\n\talign-items: center;\n\twhite-space: nowrap;\n\n\t*:first-child {\n\t\tflex-grow: 1;\n\t}\n}\n</style>\n","<template>\n\t<AuthView\n\t\t:form=\"FORM_CONFIG\"\n\t\t:formLoading=\"loading\"\n\t\tdata-test-id=\"setup-form\"\n\t\t@submit=\"onSubmit\"\n\t\t@secondaryClick=\"showSkipConfirmation\"\n\t/>\n</template>\n\n<script lang=\"ts\">\nimport AuthView from './AuthView.vue';\nimport { showMessage } from '@/mixins/showMessage';\n\nimport mixins from 'vue-typed-mixins';\nimport type { IFormBoxConfig } from '@/Interface';\nimport { VIEWS } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useCredentialsStore } from '@/stores/credentials.store';\n\nexport default mixins(showMessage).extend({\n\tname: 'SetupView',\n\tcomponents: {\n\t\tAuthView,\n\t},\n\tasync mounted() {\n\t\tconst { credentials, workflows } = await this.usersStore.preOwnerSetup();\n\t\tthis.credentialsCount = credentials;\n\t\tthis.workflowsCount = workflows;\n\t},\n\tdata() {\n\t\tconst FORM_CONFIG: IFormBoxConfig = {\n\t\t\ttitle: this.$locale.baseText('auth.setup.setupOwner'),\n\t\t\tbuttonText: this.$locale.baseText('auth.setup.next'),\n\t\t\tsecondaryButtonText: this.$locale.baseText('auth.setup.skipSetupTemporarily'),\n\t\t\tinputs: [\n\t\t\t\t{\n\t\t\t\t\tname: 'email',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.email'),\n\t\t\t\t\t\ttype: 'email',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalidationRules: [{ name: 'VALID_EMAIL' }],\n\t\t\t\t\t\tautocomplete: 'email',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'firstName',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.firstName'),\n\t\t\t\t\t\tmaxlength: 32,\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tautocomplete: 'given-name',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'lastName',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.lastName'),\n\t\t\t\t\t\tmaxlength: 32,\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tautocomplete: 'family-name',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'password',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.password'),\n\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalidationRules: [{ name: 'DEFAULT_PASSWORD_RULES' }],\n\t\t\t\t\t\tinfoText: this.$locale.baseText('auth.defaultPasswordRequirements'),\n\t\t\t\t\t\tautocomplete: 'new-password',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'agree',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.agreement.label'),\n\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn {\n\t\t\tFORM_CONFIG,\n\t\t\tloading: false,\n\t\t\tworkflowsCount: 0,\n\t\t\tcredentialsCount: 0,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useCredentialsStore, useSettingsStore, useUIStore, useUsersStore),\n\t},\n\tmethods: {\n\t\tasync confirmSetupOrGoBack(): Promise<boolean> {\n\t\t\tif (this.workflowsCount === 0 && this.credentialsCount === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst workflows =\n\t\t\t\tthis.workflowsCount > 0\n\t\t\t\t\t? this.$locale.baseText('auth.setup.setupConfirmation.existingWorkflows', {\n\t\t\t\t\t\t\tadjustToNumber: this.workflowsCount,\n\t\t\t\t\t  })\n\t\t\t\t\t: '';\n\n\t\t\tconst credentials =\n\t\t\t\tthis.credentialsCount > 0\n\t\t\t\t\t? this.$locale.baseText('auth.setup.setupConfirmation.credentials', {\n\t\t\t\t\t\t\tadjustToNumber: this.credentialsCount,\n\t\t\t\t\t  })\n\t\t\t\t\t: '';\n\n\t\t\tconst entities =\n\t\t\t\tworkflows && credentials\n\t\t\t\t\t? this.$locale.baseText('auth.setup.setupConfirmation.concatEntities', {\n\t\t\t\t\t\t\tinterpolate: { workflows, credentials },\n\t\t\t\t\t  })\n\t\t\t\t\t: workflows || credentials;\n\t\t\treturn this.confirmMessage(\n\t\t\t\tthis.$locale.baseText('auth.setup.confirmOwnerSetupMessage', {\n\t\t\t\t\tinterpolate: {\n\t\t\t\t\t\tentities,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\tthis.$locale.baseText('auth.setup.confirmOwnerSetup'),\n\t\t\t\tnull,\n\t\t\t\tthis.$locale.baseText('auth.setup.createAccount'),\n\t\t\t\tthis.$locale.baseText('auth.setup.goBack'),\n\t\t\t);\n\t\t},\n\t\tasync onSubmit(values: { [key: string]: string | boolean }) {\n\t\t\ttry {\n\t\t\t\tconst confirmSetup = await this.confirmSetupOrGoBack();\n\t\t\t\tif (!confirmSetup) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst forceRedirectedHere = this.settingsStore.showSetupPage;\n\t\t\t\tthis.loading = true;\n\t\t\t\tawait this.usersStore.createOwner(\n\t\t\t\t\tvalues as { firstName: string; lastName: string; email: string; password: string },\n\t\t\t\t);\n\n\t\t\t\tif (values.agree === true) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.uiStore.submitContactEmail(values.email.toString(), values.agree);\n\t\t\t\t\t} catch {}\n\t\t\t\t}\n\n\t\t\t\tif (forceRedirectedHere) {\n\t\t\t\t\tawait this.$router.push({ name: VIEWS.NEW_WORKFLOW });\n\t\t\t\t} else {\n\t\t\t\t\tawait this.$router.push({ name: VIEWS.USERS_SETTINGS });\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('auth.setup.settingUpOwnerError'));\n\t\t\t}\n\t\t\tthis.loading = false;\n\t\t},\n\t\tasync showSkipConfirmation() {\n\t\t\tconst skip = await this.confirmMessage(\n\t\t\t\tthis.$locale.baseText('auth.setup.ownerAccountBenefits'),\n\t\t\t\tthis.$locale.baseText('auth.setup.skipOwnerSetupQuestion'),\n\t\t\t\tnull,\n\t\t\t\tthis.$locale.baseText('auth.setup.skipSetup'),\n\t\t\t\tthis.$locale.baseText('auth.setup.goBack'),\n\t\t\t);\n\t\t\tif (skip) {\n\t\t\t\tthis.onSkip();\n\t\t\t}\n\t\t},\n\t\tonSkip() {\n\t\t\tvoid this.usersStore.skipOwnerSetup();\n\t\t\tvoid this.$router.push({\n\t\t\t\tname: VIEWS.NEW_WORKFLOW,\n\t\t\t});\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<AuthView\n\t\t:form=\"FORM_CONFIG\"\n\t\t:formLoading=\"loading\"\n\t\t:with-sso=\"true\"\n\t\tdata-test-id=\"signin-form\"\n\t\t@submit=\"onSubmit\"\n\t/>\n</template>\n\n<script lang=\"ts\">\nimport AuthView from './AuthView.vue';\nimport { showMessage } from '@/mixins/showMessage';\n\nimport mixins from 'vue-typed-mixins';\nimport type { IFormBoxConfig } from '@/Interface';\nimport { VIEWS } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useSettingsStore } from '@/stores/settings.store';\n\nexport default mixins(showMessage).extend({\n\tname: 'SigninView',\n\tcomponents: {\n\t\tAuthView,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tFORM_CONFIG: {} as IFormBoxConfig,\n\t\t\tloading: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUsersStore, useSettingsStore),\n\t},\n\tmounted() {\n\t\tlet emailLabel = this.$locale.baseText('auth.email');\n\t\tconst ldapLoginLabel = this.settingsStore.ldapLoginLabel;\n\t\tconst isLdapLoginEnabled = this.settingsStore.isLdapLoginEnabled;\n\t\tif (isLdapLoginEnabled && ldapLoginLabel) {\n\t\t\temailLabel = ldapLoginLabel;\n\t\t}\n\t\tthis.FORM_CONFIG = {\n\t\t\ttitle: this.$locale.baseText('auth.signin'),\n\t\t\tbuttonText: this.$locale.baseText('auth.signin'),\n\t\t\tredirectText: this.$locale.baseText('forgotPassword'),\n\t\t\tinputs: [\n\t\t\t\t{\n\t\t\t\t\tname: 'email',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: emailLabel,\n\t\t\t\t\t\ttype: 'email',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t...(!isLdapLoginEnabled && { validationRules: [{ name: 'VALID_EMAIL' }] }),\n\t\t\t\t\t\tshowRequiredAsterisk: false,\n\t\t\t\t\t\tvalidateOnBlur: false,\n\t\t\t\t\t\tautocomplete: 'email',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'password',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.password'),\n\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tshowRequiredAsterisk: false,\n\t\t\t\t\t\tvalidateOnBlur: false,\n\t\t\t\t\t\tautocomplete: 'current-password',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\tif (!this.settingsStore.isDesktopDeployment || this.settingsStore.isUserManagementEnabled) {\n\t\t\tthis.FORM_CONFIG.redirectLink = '/forgot-password';\n\t\t}\n\t},\n\tmethods: {\n\t\tasync onSubmit(values: { [key: string]: string }) {\n\t\t\ttry {\n\t\t\t\tthis.loading = true;\n\t\t\t\tawait this.usersStore.loginWithCreds(values as { email: string; password: string });\n\t\t\t\tthis.clearAllStickyNotifications();\n\t\t\t\tthis.loading = false;\n\n\t\t\t\tif (typeof this.$route.query.redirect === 'string') {\n\t\t\t\t\tconst redirect = decodeURIComponent(this.$route.query.redirect);\n\t\t\t\t\tif (redirect.startsWith('/')) {\n\t\t\t\t\t\t// protect against phishing\n\t\t\t\t\t\tvoid this.$router.push(redirect);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tawait this.$router.push({ name: VIEWS.HOMEPAGE });\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('auth.signin.error'));\n\t\t\t\tthis.loading = false;\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<AuthView\n\t\t:form=\"FORM_CONFIG\"\n\t\t:formLoading=\"loading\"\n\t\t:subtitle=\"inviteMessage\"\n\t\t@submit=\"onSubmit\"\n\t/>\n</template>\n\n<script lang=\"ts\">\nimport AuthView from './AuthView.vue';\nimport { showMessage } from '@/mixins/showMessage';\n\nimport mixins from 'vue-typed-mixins';\nimport type { IFormBoxConfig } from '@/Interface';\nimport { VIEWS } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useUsersStore } from '@/stores/users.store';\n\nexport default mixins(showMessage).extend({\n\tname: 'SignupView',\n\tcomponents: {\n\t\tAuthView,\n\t},\n\tdata() {\n\t\tconst FORM_CONFIG: IFormBoxConfig = {\n\t\t\ttitle: this.$locale.baseText('auth.signup.setupYourAccount'),\n\t\t\tbuttonText: this.$locale.baseText('auth.signup.finishAccountSetup'),\n\t\t\tinputs: [\n\t\t\t\t{\n\t\t\t\t\tname: 'firstName',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.firstName'),\n\t\t\t\t\t\tmaxlength: 32,\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tautocomplete: 'given-name',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'lastName',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.lastName'),\n\t\t\t\t\t\tmaxlength: 32,\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tautocomplete: 'family-name',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'password',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.password'),\n\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\tvalidationRules: [{ name: 'DEFAULT_PASSWORD_RULES' }],\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tinfoText: this.$locale.baseText('auth.defaultPasswordRequirements'),\n\t\t\t\t\t\tautocomplete: 'new-password',\n\t\t\t\t\t\tcapitalize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'agree',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlabel: this.$locale.baseText('auth.agreement.label'),\n\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t\treturn {\n\t\t\tFORM_CONFIG,\n\t\t\tloading: false,\n\t\t\tinviter: null as null | { firstName: string; lastName: string },\n\t\t\tinviterId: null as string | null,\n\t\t\tinviteeId: null as string | null,\n\t\t};\n\t},\n\tasync mounted() {\n\t\tconst inviterId =\n\t\t\t!this.$route.query.inviterId || typeof this.$route.query.inviterId !== 'string'\n\t\t\t\t? null\n\t\t\t\t: this.$route.query.inviterId;\n\t\tconst inviteeId =\n\t\t\t!this.$route.query.inviteeId || typeof this.$route.query.inviteeId !== 'string'\n\t\t\t\t? null\n\t\t\t\t: this.$route.query.inviteeId;\n\t\ttry {\n\t\t\tif (!inviterId || !inviteeId) {\n\t\t\t\tthrow new Error(this.$locale.baseText('auth.signup.missingTokenError'));\n\t\t\t}\n\t\t\tthis.inviterId = inviterId;\n\t\t\tthis.inviteeId = inviteeId;\n\n\t\t\tconst invite = await this.usersStore.validateSignupToken({ inviteeId, inviterId });\n\t\t\tthis.inviter = invite.inviter as { firstName: string; lastName: string };\n\t\t} catch (e) {\n\t\t\tthis.$showError(e, this.$locale.baseText('auth.signup.tokenValidationError'));\n\t\t\tvoid this.$router.replace({ name: VIEWS.SIGNIN });\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapStores(useUIStore, useUsersStore),\n\t\tinviteMessage(): null | string {\n\t\t\tif (!this.inviter) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.$locale.baseText('settings.signup.signUpInviterInfo', {\n\t\t\t\tinterpolate: { firstName: this.inviter.firstName, lastName: this.inviter.lastName },\n\t\t\t});\n\t\t},\n\t},\n\tmethods: {\n\t\tasync onSubmit(values: { [key: string]: string | boolean }) {\n\t\t\tif (!this.inviterId || !this.inviteeId) {\n\t\t\t\tthis.$showError(\n\t\t\t\t\tnew Error(this.$locale.baseText('auth.changePassword.tokenValidationError')),\n\t\t\t\t\tthis.$locale.baseText('auth.signup.setupYourAccountError'),\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.loading = true;\n\t\t\t\tawait this.usersStore.signup({\n\t\t\t\t\t...values,\n\t\t\t\t\tinviterId: this.inviterId,\n\t\t\t\t\tinviteeId: this.inviteeId,\n\t\t\t\t} as {\n\t\t\t\t\tinviteeId: string;\n\t\t\t\t\tinviterId: string;\n\t\t\t\t\tfirstName: string;\n\t\t\t\t\tlastName: string;\n\t\t\t\t\tpassword: string;\n\t\t\t\t});\n\n\t\t\t\tif (values.agree === true) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.uiStore.submitContactEmail(values.email.toString(), values.agree);\n\t\t\t\t\t} catch {}\n\t\t\t\t}\n\n\t\t\t\tawait this.$router.push({ name: VIEWS.NEW_WORKFLOW });\n\t\t\t} catch (error) {\n\t\t\t\tthis.$showError(error, this.$locale.baseText('auth.signup.setupYourAccountError'));\n\t\t\t}\n\t\t\tthis.loading = false;\n\t\t},\n\t},\n});\n</script>\n","<template>\n\t<div :class=\"$style.block\">\n\t\t<div :class=\"$style.header\">\n\t\t\t<n8n-heading tag=\"h3\" size=\"small\" color=\"text-base\">{{ title }}</n8n-heading>\n\t\t</div>\n\t\t<div :class=\"$style.content\">\n\t\t\t<slot></slot>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tname: 'TemplateDetailsBlock',\n\tprops: {\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.block {\n\tpadding-bottom: var(--spacing-xl);\n}\n\n.header {\n\tpadding: 0 0 var(--spacing-4xs);\n\tborder-bottom: var(--border-base);\n}\n\n.content {\n\tpadding: var(--spacing-xs) 0 0;\n}\n</style>\n","<template>\n\t<div>\n\t\t<n8n-loading :loading=\"loading\" :rows=\"5\" variant=\"p\" />\n\n\t\t<template-details-block v-if=\"!loading && template.nodes.length > 0\" :title=\"blockTitle\">\n\t\t\t<div :class=\"$style.icons\">\n\t\t\t\t<div\n\t\t\t\t\tv-for=\"node in filterTemplateNodes(template.nodes)\"\n\t\t\t\t\t:key=\"node.name\"\n\t\t\t\t\t:class=\"$style.icon\"\n\t\t\t\t>\n\t\t\t\t\t<NodeIcon\n\t\t\t\t\t\t:nodeType=\"node\"\n\t\t\t\t\t\t:size=\"24\"\n\t\t\t\t\t\t:showTooltip=\"true\"\n\t\t\t\t\t\t@click=\"redirectToSearchPage(node)\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template-details-block>\n\n\t\t<template-details-block\n\t\t\tv-if=\"!loading && template?.categories.length > 0\"\n\t\t\t:title=\"$locale.baseText('template.details.categories')\"\n\t\t>\n\t\t\t<n8n-tags :tags=\"template.categories\" @click=\"redirectToCategory\" />\n\t\t</template-details-block>\n\n\t\t<template-details-block v-if=\"!loading\" :title=\"$locale.baseText('template.details.details')\">\n\t\t\t<div :class=\"$style.text\">\n\t\t\t\t<n8n-text size=\"small\" color=\"text-base\">\n\t\t\t\t\t{{ $locale.baseText('template.details.created') }}\n\t\t\t\t\t<TimeAgo :date=\"template.createdAt\" />\n\t\t\t\t\t<span>{{ $locale.baseText('template.details.by') }}</span>\n\t\t\t\t\t<span v-if=\"template.user\"> {{ template.user.username }}</span>\n\t\t\t\t\t<span v-else> n8n team</span>\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.text\">\n\t\t\t\t<n8n-text v-if=\"template.totalViews !== 0\" size=\"small\" color=\"text-base\">\n\t\t\t\t\t{{ $locale.baseText('template.details.viewed') }}\n\t\t\t\t\t{{ abbreviateNumber(template.totalViews) }}\n\t\t\t\t\t{{ $locale.baseText('template.details.times') }}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t</template-details-block>\n\t</div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport type { PropType } from 'vue';\nimport TemplateDetailsBlock from '@/components/TemplateDetailsBlock.vue';\nimport NodeIcon from '@/components/NodeIcon.vue';\nimport { abbreviateNumber, filterTemplateNodes } from '@/utils';\nimport type { ITemplatesNode, ITemplatesWorkflow, ITemplatesWorkflowFull } from '@/Interface';\nimport { mapStores } from 'pinia';\nimport { useTemplatesStore } from '@/stores/templates.store';\n\nexport default defineComponent({\n\tname: 'TemplateDetails',\n\tprops: {\n\t\tblockTitle: {\n\t\t\ttype: String,\n\t\t},\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\ttemplate: {\n\t\t\ttype: Object as PropType<ITemplatesWorkflow | ITemplatesWorkflowFull>,\n\t\t},\n\t},\n\tcomponents: {\n\t\tNodeIcon,\n\t\tTemplateDetailsBlock,\n\t},\n\tcomputed: {\n\t\t...mapStores(useTemplatesStore),\n\t},\n\tmethods: {\n\t\tabbreviateNumber,\n\t\tfilterTemplateNodes,\n\t\tredirectToCategory(id: string) {\n\t\t\tthis.templatesStore.resetSessionId();\n\t\t\tvoid this.$router.push(`/templates?categories=${id}`);\n\t\t},\n\t\tredirectToSearchPage(node: ITemplatesNode) {\n\t\t\tthis.templatesStore.resetSessionId();\n\t\t\tvoid this.$router.push(`/templates?search=${node.displayName}`);\n\t\t},\n\t},\n});\n</script>\n<style lang=\"scss\" module>\n.icons {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n}\n.icon {\n\tmargin-right: var(--spacing-xs);\n\tmargin-bottom: var(--spacing-xs);\n\tcursor: pointer;\n}\n.text {\n\tpadding-bottom: var(--spacing-xs);\n}\n</style>\n","<template>\n\t<div :class=\"$style.list\">\n\t\t<div v-for=\"node in slicedNodes\" :class=\"[$style.container, $style[size]]\" :key=\"node.name\">\n\t\t\t<NodeIcon :nodeType=\"node\" :size=\"size === 'md' ? 24 : 18\" :showTooltip=\"true\" />\n\t\t</div>\n\t\t<div\n\t\t\t:class=\"[$style.button, size === 'md' ? $style.buttonMd : $style.buttonSm]\"\n\t\t\tv-if=\"filteredCoreNodes.length > limit + 1\"\n\t\t>\n\t\t\t+{{ hiddenNodes }}\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport NodeIcon from '@/components/NodeIcon.vue';\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport type { ITemplatesNode } from '@/Interface';\nimport mixins from 'vue-typed-mixins';\nimport { filterTemplateNodes } from '@/utils';\nexport default mixins(genericHelpers).extend({\n\tname: 'NodeList',\n\tprops: {\n\t\tnodes: {\n\t\t\ttype: Array,\n\t\t},\n\t\tlimit: {\n\t\t\ttype: Number,\n\t\t\tdefault: 4,\n\t\t},\n\t\tsize: {\n\t\t\ttype: String,\n\t\t\tdefault: 'sm',\n\t\t},\n\t},\n\tcomponents: {\n\t\tNodeIcon,\n\t},\n\tcomputed: {\n\t\tfilteredCoreNodes() {\n\t\t\treturn filterTemplateNodes(this.nodes as ITemplatesNode[]);\n\t\t},\n\t\thiddenNodes(): number {\n\t\t\treturn this.filteredCoreNodes.length - this.countNodesToBeSliced(this.filteredCoreNodes);\n\t\t},\n\t\tslicedNodes(): ITemplatesNode[] {\n\t\t\treturn this.filteredCoreNodes.slice(0, this.countNodesToBeSliced(this.filteredCoreNodes));\n\t\t},\n\t},\n\tmethods: {\n\t\tcountNodesToBeSliced(nodes: ITemplatesNode[]): number {\n\t\t\tif (nodes.length > this.limit) {\n\t\t\t\treturn this.limit - 1;\n\t\t\t} else {\n\t\t\t\treturn this.limit;\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.list {\n\tmax-width: 100px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-end;\n\talign-items: center;\n}\n.container {\n\tposition: relative;\n\tdisplay: block;\n}\n.sm {\n\tmargin-left: var(--spacing-2xs);\n}\n.md {\n\tmargin-left: var(--spacing-xs);\n}\n.button {\n\ttop: 0px;\n\tposition: relative;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground: var(--color-background-light);\n\tborder: 1px var(--color-foreground-base) solid;\n\tborder-radius: var(--border-radius-base);\n\tfont-size: 10px;\n\tfont-weight: var(--font-weight-bold);\n\tcolor: var(--color-text-base);\n}\n.buttonSm {\n\tmargin-left: var(--spacing-2xs);\n\twidth: 20px;\n\tmin-width: 20px;\n\theight: 20px;\n}\n.buttonMd {\n\tmargin-left: var(--spacing-xs);\n\twidth: 24px;\n\tmin-width: 24px;\n\theight: 24px;\n}\n</style>\n","<template>\n\t<div\n\t\t:class=\"[\n\t\t\t$style.card,\n\t\t\tlastItem && $style.last,\n\t\t\tfirstItem && $style.first,\n\t\t\t!loading && $style.loaded,\n\t\t]\"\n\t\t@click=\"onCardClick\"\n\t>\n\t\t<div :class=\"$style.loading\" v-if=\"loading\">\n\t\t\t<n8n-loading :rows=\"2\" :shrinkLast=\"false\" :loading=\"loading\" />\n\t\t</div>\n\t\t<div v-else>\n\t\t\t<n8n-heading :bold=\"true\" size=\"small\">{{ workflow.name }}</n8n-heading>\n\t\t\t<div :class=\"$style.content\">\n\t\t\t\t<span v-if=\"workflow.totalViews\">\n\t\t\t\t\t<n8n-text size=\"small\" color=\"text-light\">\n\t\t\t\t\t\t<font-awesome-icon icon=\"eye\" />\n\t\t\t\t\t\t{{ abbreviateNumber(workflow.totalViews) }}\n\t\t\t\t\t</n8n-text>\n\t\t\t\t</span>\n\t\t\t\t<div v-if=\"workflow.totalViews\" :class=\"$style.line\" v-text=\"'|'\" />\n\t\t\t\t<n8n-text size=\"small\" color=\"text-light\">\n\t\t\t\t\t<TimeAgo :date=\"workflow.createdAt\" />\n\t\t\t\t</n8n-text>\n\t\t\t\t<div v-if=\"workflow.user\" :class=\"$style.line\" v-text=\"'|'\" />\n\t\t\t\t<n8n-text v-if=\"workflow.user\" size=\"small\" color=\"text-light\"\n\t\t\t\t\t>By {{ workflow.user.username }}</n8n-text\n\t\t\t\t>\n\t\t\t</div>\n\t\t</div>\n\t\t<div :class=\"[$style.nodesContainer, useWorkflowButton && $style.hideOnHover]\" v-if=\"!loading\">\n\t\t\t<NodeList v-if=\"workflow.nodes\" :nodes=\"workflow.nodes\" :limit=\"nodesToBeShown\" size=\"md\" />\n\t\t</div>\n\t\t<div :class=\"$style.buttonContainer\" v-if=\"useWorkflowButton\">\n\t\t\t<n8n-button\n\t\t\t\tv-if=\"useWorkflowButton\"\n\t\t\t\toutline\n\t\t\t\tlabel=\"Use workflow\"\n\t\t\t\t@click.stop=\"onUseWorkflowClick\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport mixins from 'vue-typed-mixins';\nimport { filterTemplateNodes, abbreviateNumber } from '@/utils';\nimport NodeList from './NodeList.vue';\n\nexport default mixins(genericHelpers).extend({\n\tname: 'TemplateCard',\n\tprops: {\n\t\tlastItem: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tfirstItem: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tworkflow: {\n\t\t\ttype: Object,\n\t\t},\n\t\tuseWorkflowButton: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tcomponents: {\n\t\tNodeList,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tnodesToBeShown: 5,\n\t\t};\n\t},\n\tmethods: {\n\t\tfilterTemplateNodes,\n\t\tabbreviateNumber,\n\t\tcountNodesToBeSliced(nodes: []): number {\n\t\t\tif (nodes.length > this.nodesToBeShown) {\n\t\t\t\treturn this.nodesToBeShown - 1;\n\t\t\t} else {\n\t\t\t\treturn this.nodesToBeShown;\n\t\t\t}\n\t\t},\n\t\tonUseWorkflowClick(e: MouseEvent) {\n\t\t\tthis.$emit('useWorkflow', e);\n\t\t},\n\t\tonCardClick(e: MouseEvent) {\n\t\t\tthis.$emit('click', e);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.nodes {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-content: center;\n\tflex-direction: row;\n}\n\n.icon {\n\tmargin-left: var(--spacing-xs);\n}\n\n.card {\n\tposition: relative;\n\tborder-left: var(--border-base);\n\tborder-right: var(--border-base);\n\tborder-bottom: var(--border-base);\n\tbackground-color: var(--color-background-xlight);\n\n\tdisplay: flex;\n\tpadding: 0 var(--spacing-s) var(--spacing-s) var(--spacing-s);\n\tbackground-color: var(--color-background-xlight);\n\tcursor: pointer;\n\n\t&:hover {\n\t\t.hideOnHover {\n\t\t\tvisibility: hidden;\n\t\t}\n\n\t\t.buttonContainer {\n\t\t\tdisplay: block;\n\t\t}\n\t}\n}\n\n.buttonContainer {\n\tdisplay: none;\n\tposition: absolute;\n\tright: 10px;\n\ttop: 30%;\n}\n\n.loaded {\n\tpadding-top: var(--spacing-s);\n}\n\n.first {\n\tborder-top: var(--border-base);\n\tborder-top-right-radius: var(--border-radius-large);\n\tborder-top-left-radius: var(--border-radius-large);\n}\n\n.last {\n\tborder-bottom-right-radius: var(--border-radius-large);\n\tborder-bottom-left-radius: var(--border-radius-large);\n}\n\n.content {\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.line {\n\tpadding: 0 6px;\n\tcolor: var(--color-foreground-base);\n\tfont-size: var(--font-size-2xs);\n}\n\n.loading {\n\twidth: 100%;\n\tbackground-color: var(--color-background-xlight);\n}\n\n.nodesContainer {\n\tmin-width: 175px;\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\talign-items: center;\n\tflex-grow: 1;\n}\n</style>\n","<template>\n\t<div :class=\"$style.list\" v-if=\"loading || workflows.length\">\n\t\t<div :class=\"$style.header\">\n\t\t\t<n8n-heading :bold=\"true\" size=\"medium\" color=\"text-light\">\n\t\t\t\t{{ $locale.baseText('templates.workflows') }}\n\t\t\t\t<span v-if=\"!loading && totalWorkflows\" v-text=\"`(${totalWorkflows})`\" />\n\t\t\t</n8n-heading>\n\t\t</div>\n\t\t<div :class=\"$style.container\">\n\t\t\t<TemplateCard\n\t\t\t\tv-for=\"(workflow, index) in workflows\"\n\t\t\t\t:key=\"workflow.id\"\n\t\t\t\t:workflow=\"workflow\"\n\t\t\t\t:firstItem=\"index === 0\"\n\t\t\t\t:lastItem=\"index === workflows.length - 1 && !loading\"\n\t\t\t\t:useWorkflowButton=\"useWorkflowButton\"\n\t\t\t\t@click=\"(e) => onCardClick(e, workflow.id)\"\n\t\t\t\t@useWorkflow=\"(e) => onUseWorkflow(e, workflow.id)\"\n\t\t\t/>\n\t\t\t<div v-if=\"infiniteScrollEnabled\" ref=\"loader\" />\n\t\t\t<div v-if=\"loading\">\n\t\t\t\t<TemplateCard\n\t\t\t\t\tv-for=\"n in 4\"\n\t\t\t\t\t:key=\"'index-' + n\"\n\t\t\t\t\t:loading=\"true\"\n\t\t\t\t\t:firstItem=\"workflows.length === 0 && n === 1\"\n\t\t\t\t\t:lastItem=\"n === 4\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport mixins from 'vue-typed-mixins';\nimport TemplateCard from './TemplateCard.vue';\n\nexport default mixins(genericHelpers).extend({\n\tname: 'TemplateList',\n\tprops: {\n\t\tinfiniteScrollEnabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tuseWorkflowButton: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tworkflows: {\n\t\t\ttype: Array,\n\t\t},\n\t\ttotalWorkflows: {\n\t\t\ttype: Number,\n\t\t},\n\t},\n\tmounted() {\n\t\tif (this.infiniteScrollEnabled) {\n\t\t\tconst content = document.getElementById('content');\n\t\t\tif (content) {\n\t\t\t\tcontent.addEventListener('scroll', this.onScroll);\n\t\t\t}\n\t\t}\n\t},\n\tdestroyed() {\n\t\tconst content = document.getElementById('content');\n\t\tif (content) {\n\t\t\tcontent.removeEventListener('scroll', this.onScroll);\n\t\t}\n\t},\n\tcomponents: {\n\t\tTemplateCard,\n\t},\n\tmethods: {\n\t\tonScroll() {\n\t\t\tconst loaderRef = this.$refs.loader as HTMLElement | undefined;\n\t\t\tif (!loaderRef || this.loading) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst rect = loaderRef.getBoundingClientRect();\n\t\t\tconst inView =\n\t\t\t\trect.top >= 0 &&\n\t\t\t\trect.left >= 0 &&\n\t\t\t\trect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n\t\t\t\trect.right <= (window.innerWidth || document.documentElement.clientWidth);\n\n\t\t\tif (inView) {\n\t\t\t\tthis.$emit('loadMore');\n\t\t\t}\n\t\t},\n\t\tonCardClick(event: MouseEvent, id: string) {\n\t\t\tthis.$emit('openTemplate', { event, id });\n\t\t},\n\t\tonUseWorkflow(event: MouseEvent, id: string) {\n\t\t\tthis.$emit('useWorkflow', { event, id });\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.header {\n\tpadding-bottom: var(--spacing-2xs);\n}\n\n.workflowButton {\n\t&:hover {\n\t\t.button {\n\t\t\tdisplay: block;\n\t\t}\n\n\t\t.nodes {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n</style>\n","<template>\n\t<div :class=\"$style.wrapper\" @click=\"navigateTo\">\n\t\t<font-awesome-icon :class=\"$style.icon\" icon=\"arrow-left\" />\n\t\t<div :class=\"$style.text\" v-text=\"$locale.baseText('template.buttons.goBackButton')\" />\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { VIEWS } from '@/constants';\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tname: 'GoBackButton',\n\tdata() {\n\t\treturn {\n\t\t\trouteHasHistory: false,\n\t\t};\n\t},\n\tmethods: {\n\t\tnavigateTo() {\n\t\t\tif (this.routeHasHistory) this.$router.go(-1);\n\t\t\telse void this.$router.push({ name: VIEWS.TEMPLATES });\n\t\t},\n\t},\n\tmounted() {\n\t\twindow.history.state ? (this.routeHasHistory = true) : (this.routeHasHistory = false);\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.wrapper {\n\tdisplay: flex;\n\talign-items: center;\n\tcursor: pointer;\n\n\t&:hover {\n\t\t.icon,\n\t\t.text {\n\t\t\tcolor: var(--color-primary);\n\t\t}\n\t}\n}\n\n.icon {\n\tmargin-right: var(--spacing-2xs);\n\tcolor: var(--color-foreground-dark);\n\tfont-size: var(--font-size-m);\n}\n\n.text {\n\tfont-size: var(--font-size-s);\n\tline-height: var(--font-line-height-loose);\n\tcolor: var(--color-text-base);\n}\n</style>\n","<template>\n\t<div :class=\"$style.template\">\n\t\t<div :class=\"$style.container\">\n\t\t\t<div :class=\"$style.header\">\n\t\t\t\t<div :class=\"$style.goBack\" v-if=\"goBackEnabled\">\n\t\t\t\t\t<GoBackButton />\n\t\t\t\t</div>\n\t\t\t\t<slot name=\"header\"></slot>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<slot name=\"content\"></slot>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport GoBackButton from '@/components/GoBackButton.vue';\n\nexport default defineComponent({\n\tname: 'TemplatesView',\n\tcomponents: {\n\t\tGoBackButton,\n\t},\n\tprops: {\n\t\tgoBackEnabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.template {\n\tdisplay: flex;\n\twidth: 100%;\n\tmax-width: 1280px;\n\tpadding: var(--spacing-l) var(--spacing-l) 0;\n\tjustify-content: center;\n\t@media (min-width: 1200px) {\n\t\tpadding: var(--spacing-2xl) var(--spacing-2xl) 0;\n\t}\n}\n\n.container {\n\twidth: 100%;\n}\n\n.header {\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: var(--spacing-2xl);\n}\n\n.goBack {\n\tmargin-bottom: var(--spacing-2xs);\n}\n</style>\n","<template>\n\t<TemplatesView :goBackEnabled=\"true\">\n\t\t<template #header>\n\t\t\t<div v-if=\"!notFoundError\" :class=\"$style.wrapper\">\n\t\t\t\t<div :class=\"$style.title\">\n\t\t\t\t\t<n8n-heading v-if=\"collection && collection.name\" tag=\"h1\" size=\"2xlarge\">\n\t\t\t\t\t\t{{ collection.name }}\n\t\t\t\t\t</n8n-heading>\n\t\t\t\t\t<n8n-text v-if=\"collection && collection.name\" color=\"text-base\" size=\"small\">\n\t\t\t\t\t\t{{ $locale.baseText('templates.collection') }}\n\t\t\t\t\t</n8n-text>\n\t\t\t\t\t<n8n-loading :loading=\"!collection || !collection.name\" :rows=\"2\" variant=\"h1\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.notFound\" v-else>\n\t\t\t\t<n8n-text color=\"text-base\">{{\n\t\t\t\t\t$locale.baseText('templates.collectionsNotFound')\n\t\t\t\t}}</n8n-text>\n\t\t\t</div>\n\t\t</template>\n\t\t<template v-if=\"!notFoundError\" #content>\n\t\t\t<div :class=\"$style.wrapper\">\n\t\t\t\t<div :class=\"$style.mainContent\">\n\t\t\t\t\t<div :class=\"$style.markdown\" v-if=\"loading || (collection && collection.description)\">\n\t\t\t\t\t\t<n8n-markdown\n\t\t\t\t\t\t\t:content=\"collection && collection.description\"\n\t\t\t\t\t\t\t:images=\"collection && collection.image\"\n\t\t\t\t\t\t\t:loading=\"loading\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<TemplateList\n\t\t\t\t\t\t:infinite-scroll-enabled=\"false\"\n\t\t\t\t\t\t:loading=\"loading\"\n\t\t\t\t\t\t:use-workflow-button=\"true\"\n\t\t\t\t\t\t:workflows=\"loading ? [] : collectionWorkflows\"\n\t\t\t\t\t\t@useWorkflow=\"onUseWorkflow\"\n\t\t\t\t\t\t@openTemplate=\"onOpenTemplate\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"$style.details\">\n\t\t\t\t\t<TemplateDetails\n\t\t\t\t\t\t:block-title=\"$locale.baseText('template.details.appsInTheCollection')\"\n\t\t\t\t\t\t:loading=\"loading\"\n\t\t\t\t\t\t:template=\"collection\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t</TemplatesView>\n</template>\n\n<script lang=\"ts\">\nimport TemplateDetails from '@/components/TemplateDetails.vue';\nimport TemplateList from '@/components/TemplateList.vue';\nimport TemplatesView from './TemplatesView.vue';\n\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport type {\n\tITemplatesCollection,\n\tITemplatesCollectionFull,\n\tITemplatesWorkflow,\n\tITemplatesWorkflowFull,\n} from '@/Interface';\n\nimport mixins from 'vue-typed-mixins';\nimport { setPageTitle } from '@/utils';\nimport { VIEWS } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useTemplatesStore } from '@/stores/templates.store';\n\nexport default mixins(workflowHelpers).extend({\n\tname: 'TemplatesCollectionView',\n\tcomponents: {\n\t\tTemplateDetails,\n\t\tTemplateList,\n\t\tTemplatesView,\n\t},\n\tcomputed: {\n\t\t...mapStores(useTemplatesStore),\n\t\tcollection(): null | ITemplatesCollectionFull {\n\t\t\treturn this.templatesStore.getCollectionById(this.collectionId);\n\t\t},\n\t\tcollectionId(): string {\n\t\t\treturn this.$route.params.id;\n\t\t},\n\t\tcollectionWorkflows(): Array<ITemplatesWorkflow | ITemplatesWorkflowFull | null> | null {\n\t\t\tif (!this.collection) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn this.collection.workflows.map(({ id }) => {\n\t\t\t\treturn this.templatesStore.getTemplateById(id.toString());\n\t\t\t});\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloading: true,\n\t\t\tnotFoundError: false,\n\t\t};\n\t},\n\tmethods: {\n\t\tscrollToTop() {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst contentArea = document.getElementById('content');\n\t\t\t\tif (contentArea) {\n\t\t\t\t\tcontentArea.scrollTo({\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, 50);\n\t\t},\n\t\tonOpenTemplate({ event, id }: { event: MouseEvent; id: string }) {\n\t\t\tthis.navigateTo(event, VIEWS.TEMPLATE, id);\n\t\t},\n\t\tonUseWorkflow({ event, id }: { event: MouseEvent; id: string }) {\n\t\t\tconst telemetryPayload = {\n\t\t\t\ttemplate_id: id,\n\t\t\t\twf_template_repo_session_id: this.workflowsStore.currentSessionId,\n\t\t\t\tsource: 'collection',\n\t\t\t};\n\t\t\tvoid this.$externalHooks().run('templatesCollectionView.onUseWorkflow', telemetryPayload);\n\t\t\tthis.$telemetry.track('User inserted workflow template', telemetryPayload);\n\n\t\t\tthis.navigateTo(event, VIEWS.TEMPLATE_IMPORT, id);\n\t\t},\n\t\tnavigateTo(e: MouseEvent, page: string, id: string) {\n\t\t\tif (e.metaKey || e.ctrlKey) {\n\t\t\t\tconst route = this.$router.resolve({ name: page, params: { id } });\n\t\t\t\twindow.open(route.href, '_blank');\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tvoid this.$router.push({ name: page, params: { id } });\n\t\t\t}\n\t\t},\n\t},\n\twatch: {\n\t\tcollection(collection: ITemplatesCollection) {\n\t\t\tif (collection) {\n\t\t\t\tsetPageTitle(`n8n - Template collection: ${collection.name}`);\n\t\t\t} else {\n\t\t\t\tsetPageTitle('n8n - Templates');\n\t\t\t}\n\t\t},\n\t},\n\tasync mounted() {\n\t\tthis.scrollToTop();\n\n\t\tif (this.collection && (this.collection as ITemplatesCollectionFull).full) {\n\t\t\tthis.loading = false;\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.templatesStore.fetchCollectionById(this.collectionId);\n\t\t} catch (e) {\n\t\t\tthis.notFoundError = true;\n\t\t}\n\t\tthis.loading = false;\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.wrapper {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\n\t@media (max-width: $breakpoint-xs) {\n\t\tdisplay: block;\n\t}\n}\n\n.notFound {\n\tpadding-top: var(--spacing-xl);\n}\n\n.title {\n\twidth: 100%;\n}\n\n.button {\n\tdisplay: block;\n}\n\n.mainContent {\n\tpadding-right: var(--spacing-2xl);\n\tmargin-bottom: var(--spacing-l);\n\twidth: 100%;\n\n\t@media (max-width: $breakpoint-xs) {\n\t\tpadding-right: 0;\n\t}\n}\n\n.markdown {\n\tmargin-bottom: var(--spacing-l);\n}\n\n.details {\n\twidth: 180px;\n}\n</style>\n","<template>\n\t<TemplatesView :goBackEnabled=\"true\">\n\t\t<template #header>\n\t\t\t<div v-if=\"!notFoundError\" :class=\"$style.wrapper\">\n\t\t\t\t<div :class=\"$style.title\">\n\t\t\t\t\t<n8n-heading v-if=\"template && template.name\" tag=\"h1\" size=\"2xlarge\">{{\n\t\t\t\t\t\ttemplate.name\n\t\t\t\t\t}}</n8n-heading>\n\t\t\t\t\t<n8n-text v-if=\"template && template.name\" color=\"text-base\" size=\"small\">\n\t\t\t\t\t\t{{ $locale.baseText('generic.workflow') }}\n\t\t\t\t\t</n8n-text>\n\t\t\t\t\t<n8n-loading :loading=\"!template || !template.name\" :rows=\"2\" variant=\"h1\" />\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"$style.button\">\n\t\t\t\t\t<n8n-button\n\t\t\t\t\t\tv-if=\"template\"\n\t\t\t\t\t\t:label=\"$locale.baseText('template.buttons.useThisWorkflowButton')\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t@click=\"openWorkflow(template.id, $event)\"\n\t\t\t\t\t/>\n\t\t\t\t\t<n8n-loading :loading=\"!template\" :rows=\"1\" variant=\"button\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.notFound\" v-else>\n\t\t\t\t<n8n-text color=\"text-base\">{{ $locale.baseText('templates.workflowsNotFound') }}</n8n-text>\n\t\t\t</div>\n\t\t</template>\n\t\t<template v-if=\"!notFoundError\" #content>\n\t\t\t<div :class=\"$style.image\">\n\t\t\t\t<WorkflowPreview\n\t\t\t\t\tv-if=\"showPreview\"\n\t\t\t\t\t:loading=\"loading\"\n\t\t\t\t\t:workflow=\"template && template.workflow\"\n\t\t\t\t\t@close=\"onHidePreview\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.content\">\n\t\t\t\t<div :class=\"$style.markdown\">\n\t\t\t\t\t<n8n-markdown\n\t\t\t\t\t\t:content=\"template && template.description\"\n\t\t\t\t\t\t:images=\"template && template.image\"\n\t\t\t\t\t\t:loading=\"loading\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"$style.details\">\n\t\t\t\t\t<TemplateDetails\n\t\t\t\t\t\t:block-title=\"$locale.baseText('template.details.appsInTheWorkflow')\"\n\t\t\t\t\t\t:loading=\"loading\"\n\t\t\t\t\t\t:template=\"template\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t</TemplatesView>\n</template>\n\n<script lang=\"ts\">\nimport TemplateDetails from '@/components/TemplateDetails.vue';\nimport TemplatesView from './TemplatesView.vue';\nimport WorkflowPreview from '@/components/WorkflowPreview.vue';\n\nimport type { ITemplatesWorkflow, ITemplatesWorkflowFull } from '@/Interface';\nimport { workflowHelpers } from '@/mixins/workflowHelpers';\nimport mixins from 'vue-typed-mixins';\nimport { setPageTitle } from '@/utils';\nimport { VIEWS } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useTemplatesStore } from '@/stores/templates.store';\n\nexport default mixins(workflowHelpers).extend({\n\tname: 'TemplatesWorkflowView',\n\tcomponents: {\n\t\tTemplateDetails,\n\t\tTemplatesView,\n\t\tWorkflowPreview,\n\t},\n\tcomputed: {\n\t\t...mapStores(useTemplatesStore),\n\t\ttemplate(): ITemplatesWorkflow | ITemplatesWorkflowFull {\n\t\t\treturn this.templatesStore.getTemplateById(this.templateId);\n\t\t},\n\t\ttemplateId() {\n\t\t\treturn this.$route.params.id;\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloading: true,\n\t\t\tshowPreview: true,\n\t\t\tnotFoundError: false,\n\t\t};\n\t},\n\tmethods: {\n\t\topenWorkflow(id: string, e: PointerEvent) {\n\t\t\tconst telemetryPayload = {\n\t\t\t\tsource: 'workflow',\n\t\t\t\ttemplate_id: id,\n\t\t\t\twf_template_repo_session_id: this.templatesStore.currentSessionId,\n\t\t\t};\n\n\t\t\tvoid this.$externalHooks().run('templatesWorkflowView.openWorkflow', telemetryPayload);\n\t\t\tthis.$telemetry.track('User inserted workflow template', telemetryPayload);\n\n\t\t\tif (e.metaKey || e.ctrlKey) {\n\t\t\t\tconst route = this.$router.resolve({ name: VIEWS.TEMPLATE_IMPORT, params: { id } });\n\t\t\t\twindow.open(route.href, '_blank');\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tvoid this.$router.push({ name: VIEWS.TEMPLATE_IMPORT, params: { id } });\n\t\t\t}\n\t\t},\n\t\tonHidePreview() {\n\t\t\tthis.showPreview = false;\n\t\t},\n\t\tscrollToTop() {\n\t\t\tconst contentArea = document.getElementById('content');\n\n\t\t\tif (contentArea) {\n\t\t\t\tcontentArea.scrollTo({\n\t\t\t\t\ttop: 0,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t},\n\twatch: {\n\t\ttemplate(template: ITemplatesWorkflowFull) {\n\t\t\tif (template) {\n\t\t\t\tsetPageTitle(`n8n - Template template: ${template.name}`);\n\t\t\t} else {\n\t\t\t\tsetPageTitle('n8n - Templates');\n\t\t\t}\n\t\t},\n\t},\n\tasync mounted() {\n\t\tthis.scrollToTop();\n\n\t\tif (this.template && (this.template as ITemplatesWorkflowFull).full) {\n\t\t\tthis.loading = false;\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.templatesStore.fetchTemplateById(this.templateId);\n\t\t} catch (e) {\n\t\t\tthis.notFoundError = true;\n\t\t}\n\n\t\tthis.loading = false;\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.wrapper {\n\tdisplay: flex;\n\tjustify-content: space-between;\n}\n\n.notFound {\n\tpadding-top: var(--spacing-xl);\n}\n\n.title {\n\twidth: 75%;\n}\n\n.button {\n\tdisplay: block;\n}\n\n.image {\n\twidth: 100%;\n\theight: 500px;\n\tborder: var(--border-base);\n\tborder-radius: var(--border-radius-large);\n\toverflow: hidden;\n\n\timg {\n\t\twidth: 100%;\n\t}\n}\n\n.content {\n\tpadding: var(--spacing-2xl) 0;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\n\t@media (max-width: $breakpoint-xs) {\n\t\tdisplay: block;\n\t}\n}\n\n.markdown {\n\twidth: calc(100% - 180px);\n\tpadding-right: var(--spacing-2xl);\n\tmargin-bottom: var(--spacing-l);\n\n\t@media (max-width: $breakpoint-xs) {\n\t\twidth: 100%;\n\t}\n}\n\n.details {\n\twidth: 180px;\n}\n</style>\n","<template>\n\t<n8n-card :class=\"$style.card\" v-on=\"$listeners\">\n\t\t<template #header v-if=\"!loading\">\n\t\t\t<span v-text=\"title\" :class=\"$style.title\" />\n\t\t</template>\n\t\t<n8n-loading :loading=\"loading\" :rows=\"3\" variant=\"p\" />\n\t\t<template #footer v-if=\"!loading\">\n\t\t\t<slot name=\"footer\" />\n\t\t</template>\n\t</n8n-card>\n</template>\n\n<script lang=\"ts\">\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport mixins from 'vue-typed-mixins';\n\nexport default mixins(genericHelpers).extend({\n\tname: 'Card',\n\tprops: {\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.card {\n\twidth: 240px !important;\n\theight: 140px;\n\tmargin-right: var(--spacing-2xs);\n\tcursor: pointer;\n\n\t&:last-child {\n\t\tmargin-right: var(--spacing-5xs);\n\t}\n\n\t&:hover {\n\t\tbox-shadow: 0 2px 4px rgba(68, 28, 23, 0.07);\n\t}\n\n\t> div {\n\t\theight: 100%;\n\t}\n}\n\n.title {\n\tdisplay: -webkit-box;\n\t-webkit-line-clamp: 4;\n\t-webkit-box-orient: vertical;\n\tfont-size: var(--font-size-s);\n\tline-height: var(--font-line-height-regular);\n\tfont-weight: var(--font-weight-bold);\n\toverflow: hidden;\n\twhite-space: normal;\n}\n</style>\n","<template>\n\t<Card :loading=\"loading\" :title=\"collection.name\" @click=\"onClick\">\n\t\t<template #footer>\n\t\t\t<n8n-text size=\"small\" color=\"text-light\">\n\t\t\t\t{{ collection.workflows.length }}\n\t\t\t\t{{ $locale.baseText('templates.workflows') }}\n\t\t\t</n8n-text>\n\t\t\t<NodeList :nodes=\"collection.nodes\" :showMore=\"false\" />\n\t\t</template>\n\t</Card>\n</template>\n\n<script lang=\"ts\">\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport Card from '@/components/CollectionWorkflowCard.vue';\nimport mixins from 'vue-typed-mixins';\nimport NodeList from '@/components/NodeList.vue';\n\nexport default mixins(genericHelpers).extend({\n\tname: 'CollectionCard',\n\tprops: {\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tcollection: {\n\t\t\ttype: Object,\n\t\t},\n\t},\n\tcomponents: {\n\t\tCard,\n\t\tNodeList,\n\t},\n\tmethods: {\n\t\tonClick(e: MouseEvent) {\n\t\t\tthis.$emit('click', e);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module></style>\n","<template>\n\t<div :class=\"$style.container\" v-show=\"loading || collections.length\">\n\t\t<agile\n\t\t\tref=\"slider\"\n\t\t\t:dots=\"false\"\n\t\t\t:navButtons=\"false\"\n\t\t\t:infinite=\"false\"\n\t\t\t:slides-to-show=\"4\"\n\t\t\t@after-change=\"updateCarouselScroll\"\n\t\t>\n\t\t\t<Card v-for=\"n in loading ? 4 : 0\" :key=\"`loading-${n}`\" :loading=\"loading\" />\n\t\t\t<CollectionCard\n\t\t\t\tv-for=\"collection in loading ? [] : collections\"\n\t\t\t\t:key=\"collection.id\"\n\t\t\t\t:collection=\"collection\"\n\t\t\t\t@click=\"(e) => onCardClick(e, collection.id)\"\n\t\t\t/>\n\t\t</agile>\n\t\t<button v-show=\"carouselScrollPosition > 0\" :class=\"$style.leftButton\" @click=\"scrollLeft\">\n\t\t\t<font-awesome-icon icon=\"chevron-left\" />\n\t\t</button>\n\t\t<button v-show=\"!scrollEnd\" :class=\"$style.rightButton\" @click=\"scrollRight\">\n\t\t\t<font-awesome-icon icon=\"chevron-right\" />\n\t\t</button>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport type { PropType } from 'vue';\nimport type { ITemplatesCollection } from '@/Interface';\nimport Card from '@/components/CollectionWorkflowCard.vue';\nimport CollectionCard from '@/components/CollectionCard.vue';\nimport VueAgile from 'vue-agile';\n\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport mixins from 'vue-typed-mixins';\n\ntype SliderRef = InstanceType<typeof VueAgile>;\n\nexport default mixins(genericHelpers).extend({\n\tname: 'CollectionsCarousel',\n\tprops: {\n\t\tcollections: {\n\t\t\ttype: Array as PropType<ITemplatesCollection[]>,\n\t\t},\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\twatch: {\n\t\tcollections() {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.updateCarouselScroll();\n\t\t\t}, 0);\n\t\t},\n\t\tloading() {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.updateCarouselScroll();\n\t\t\t}, 0);\n\t\t},\n\t},\n\tcomponents: {\n\t\tCard,\n\t\tCollectionCard,\n\t\tVueAgile,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcarouselScrollPosition: 0,\n\t\t\tcardWidth: 240,\n\t\t\tscrollEnd: false,\n\t\t\tlistElement: null as null | Element,\n\t\t};\n\t},\n\tmethods: {\n\t\tupdateCarouselScroll() {\n\t\t\tif (this.listElement) {\n\t\t\t\tthis.carouselScrollPosition = Number(this.listElement.scrollLeft.toFixed());\n\n\t\t\t\tconst width = this.listElement.clientWidth;\n\t\t\t\tconst scrollWidth = this.listElement.scrollWidth;\n\t\t\t\tconst scrollLeft = this.carouselScrollPosition;\n\t\t\t\tthis.scrollEnd = scrollWidth - width <= scrollLeft + 7;\n\t\t\t}\n\t\t},\n\t\tonCardClick(event: MouseEvent, id: string) {\n\t\t\tthis.$emit('openCollection', { event, id });\n\t\t},\n\t\tscrollLeft() {\n\t\t\tif (this.listElement) {\n\t\t\t\tthis.listElement.scrollBy({ left: -(this.cardWidth * 2), top: 0, behavior: 'smooth' });\n\t\t\t}\n\t\t},\n\t\tscrollRight() {\n\t\t\tif (this.listElement) {\n\t\t\t\tthis.listElement.scrollBy({ left: this.cardWidth * 2, top: 0, behavior: 'smooth' });\n\t\t\t}\n\t\t},\n\t},\n\tmounted() {\n\t\tthis.$nextTick(() => {\n\t\t\tconst sliderRef = this.$refs.slider as SliderRef | undefined;\n\t\t\tif (!sliderRef) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.listElement = sliderRef.$el.querySelector('.agile__list');\n\t\t\tif (this.listElement) {\n\t\t\t\tthis.listElement.addEventListener('scroll', this.updateCarouselScroll);\n\t\t\t}\n\t\t});\n\t},\n\tbeforeDestroy() {\n\t\tconst sliderRef = this.$refs.slider as SliderRef | undefined;\n\t\tif (sliderRef) {\n\t\t\tsliderRef.destroy();\n\t\t}\n\n\t\twindow.removeEventListener('scroll', this.updateCarouselScroll);\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.container {\n\tposition: relative;\n}\n\n.button {\n\twidth: 28px;\n\theight: 37px;\n\tposition: absolute;\n\ttop: 35%;\n\tborder-radius: var(--border-radius-large);\n\tborder: var(--border-base);\n\tbackground-color: #fbfcfe;\n\tcursor: pointer;\n\n\t&:after {\n\t\tcontent: '';\n\t\twidth: 40px;\n\t\theight: 140px;\n\t\ttop: -55px;\n\t\tposition: absolute;\n\t}\n\tsvg {\n\t\tcolor: var(--color-foreground-xdark);\n\t}\n}\n\n.leftButton {\n\tcomposes: button;\n\tleft: -30px;\n\n\t&:after {\n\t\tleft: 27px;\n\t\tbackground: linear-gradient(\n\t\t\t270deg,\n\t\t\thsla(\n\t\t\t\tvar(--color-background-light-h),\n\t\t\t\tvar(--color-background-light-s),\n\t\t\t\tvar(--color-background-light-l),\n\t\t\t\t50%\n\t\t\t),\n\t\t\thsla(\n\t\t\t\tvar(--color-background-light-h),\n\t\t\t\tvar(--color-background-light-s),\n\t\t\t\tvar(--color-background-light-l),\n\t\t\t\t100%\n\t\t\t)\n\t\t);\n\t}\n}\n\n.rightButton {\n\tcomposes: button;\n\tright: -30px;\n\t&:after {\n\t\tright: 27px;\n\t\tbackground: linear-gradient(\n\t\t\t90deg,\n\t\t\thsla(\n\t\t\t\tvar(--color-background-light-h),\n\t\t\t\tvar(--color-background-light-s),\n\t\t\t\tvar(--color-background-light-l),\n\t\t\t\t50%\n\t\t\t),\n\t\t\thsla(\n\t\t\t\tvar(--color-background-light-h),\n\t\t\t\tvar(--color-background-light-s),\n\t\t\t\tvar(--color-background-light-l),\n\t\t\t\t100%\n\t\t\t)\n\t\t);\n\t}\n}\n</style>\n\n<style lang=\"scss\">\n.agile {\n\t&__list {\n\t\twidth: 100%;\n\t\tpadding-bottom: var(--spacing-2xs);\n\t\toverflow-x: auto;\n\t\ttransition: all 1s ease-in-out;\n\t}\n\n\t&__track {\n\t\twidth: 50px;\n\t}\n}\n</style>\n","<template>\n\t<div :class=\"$style.filters\" class=\"template-filters\">\n\t\t<div :class=\"$style.title\" v-text=\"$locale.baseText('templates.categoriesHeading')\" />\n\t\t<div v-if=\"loading\" :class=\"$style.list\">\n\t\t\t<n8n-loading :loading=\"loading\" :rows=\"expandLimit\" />\n\t\t</div>\n\t\t<ul v-if=\"!loading\" :class=\"$style.categories\">\n\t\t\t<li :class=\"$style.item\">\n\t\t\t\t<el-checkbox\n\t\t\t\t\t:label=\"$locale.baseText('templates.allCategories')\"\n\t\t\t\t\t:value=\"allSelected\"\n\t\t\t\t\t@change=\"(value) => resetCategories(value)\"\n\t\t\t\t/>\n\t\t\t</li>\n\t\t\t<li\n\t\t\t\tv-for=\"category in collapsed ? sortedCategories.slice(0, expandLimit) : sortedCategories\"\n\t\t\t\t:key=\"category.id\"\n\t\t\t\t:class=\"$style.item\"\n\t\t\t>\n\t\t\t\t<el-checkbox\n\t\t\t\t\t:label=\"category.name\"\n\t\t\t\t\t:value=\"isSelected(category.id)\"\n\t\t\t\t\t@change=\"(value) => handleCheckboxChanged(value, category)\"\n\t\t\t\t/>\n\t\t\t</li>\n\t\t</ul>\n\t\t<div\n\t\t\t:class=\"$style.button\"\n\t\t\tv-if=\"sortedCategories.length > expandLimit && collapsed && !loading\"\n\t\t\t@click=\"collapseAction\"\n\t\t>\n\t\t\t<n8n-text size=\"small\" color=\"primary\">\n\t\t\t\t+ {{ `${sortedCategories.length - expandLimit} more` }}\n\t\t\t</n8n-text>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport type { ITemplatesCategory } from '@/Interface';\nimport mixins from 'vue-typed-mixins';\n\nexport default mixins(genericHelpers).extend({\n\tname: 'TemplateFilters',\n\tprops: {\n\t\tsortOnPopulate: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tcategories: {\n\t\t\ttype: Array,\n\t\t},\n\t\texpandLimit: {\n\t\t\ttype: Number,\n\t\t\tdefault: 12,\n\t\t},\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tselected: {\n\t\t\ttype: Array,\n\t\t},\n\t},\n\twatch: {\n\t\tcategories: {\n\t\t\thandler(categories: ITemplatesCategory[]) {\n\t\t\t\tif (!this.sortOnPopulate) {\n\t\t\t\t\tthis.sortedCategories = categories;\n\t\t\t\t} else {\n\t\t\t\t\tconst selected = this.selected || [];\n\t\t\t\t\tconst selectedCategories = categories.filter(({ id }) => selected.includes(id));\n\t\t\t\t\tconst notSelectedCategories = categories.filter(({ id }) => !selected.includes(id));\n\t\t\t\t\tthis.sortedCategories = selectedCategories.concat(notSelectedCategories);\n\t\t\t\t}\n\t\t\t},\n\t\t\timmediate: true,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcollapsed: true,\n\t\t\tsortedCategories: [] as ITemplatesCategory[],\n\t\t};\n\t},\n\tcomputed: {\n\t\tallSelected(): boolean {\n\t\t\treturn this.selected.length === 0;\n\t\t},\n\t},\n\tmethods: {\n\t\tcollapseAction() {\n\t\t\tthis.collapsed = false;\n\t\t},\n\t\thandleCheckboxChanged(value: boolean, selectedCategory: ITemplatesCategory) {\n\t\t\tthis.$emit(value ? 'select' : 'clear', selectedCategory.id);\n\t\t},\n\t\tisSelected(categoryId: string) {\n\t\t\treturn this.selected.includes(categoryId);\n\t\t},\n\t\tresetCategories() {\n\t\t\tthis.$emit('clearAll');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.title {\n\tfont-size: var(--font-size-2xs);\n\tcolor: var(--color-text-base);\n}\n\n.categories {\n\tpadding-top: var(--spacing-xs);\n\tlist-style-type: none;\n}\n\n.item {\n\tmargin-top: var(--spacing-xs);\n\n\t&:nth-child(1) {\n\t\tmargin-top: 0;\n\t}\n}\n\n.button {\n\tpadding-top: var(--spacing-2xs);\n\tcursor: pointer;\n}\n</style>\n\n<style lang=\"scss\">\n.template-filters {\n\t.el-checkbox {\n\t\tdisplay: flex;\n\t\twhite-space: unset;\n\t}\n\n\t.el-checkbox__label {\n\t\ttop: -2px;\n\t\tposition: relative;\n\t\tfont-size: var(--font-size-xs);\n\t\tline-height: var(--font-line-height-loose);\n\t\tcolor: var(--color-text-dark);\n\t\tpadding-left: var(--spacing-2xs);\n\t}\n}\n</style>\n","<template>\n\t<TemplatesView>\n\t\t<template #header>\n\t\t\t<div :class=\"$style.wrapper\">\n\t\t\t\t<div :class=\"$style.title\">\n\t\t\t\t\t<n8n-heading tag=\"h1\" size=\"2xlarge\">\n\t\t\t\t\t\t{{ $locale.baseText('templates.heading') }}\n\t\t\t\t\t</n8n-heading>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"$style.button\">\n\t\t\t\t\t<n8n-button\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t:label=\"$locale.baseText('templates.newButton')\"\n\t\t\t\t\t\t@click=\"openNewWorkflow\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #content>\n\t\t\t<div :class=\"$style.contentWrapper\">\n\t\t\t\t<div :class=\"$style.filters\">\n\t\t\t\t\t<TemplateFilters\n\t\t\t\t\t\t:categories=\"templatesStore.allCategories\"\n\t\t\t\t\t\t:sortOnPopulate=\"areCategoriesPrepopulated\"\n\t\t\t\t\t\t:loading=\"loadingCategories\"\n\t\t\t\t\t\t:selected=\"categories\"\n\t\t\t\t\t\t@clear=\"onCategoryUnselected\"\n\t\t\t\t\t\t@clearAll=\"onCategoriesCleared\"\n\t\t\t\t\t\t@select=\"onCategorySelected\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"$style.search\">\n\t\t\t\t\t<n8n-input\n\t\t\t\t\t\t:value=\"search\"\n\t\t\t\t\t\t:placeholder=\"$locale.baseText('templates.searchPlaceholder')\"\n\t\t\t\t\t\t@input=\"onSearchInput\"\n\t\t\t\t\t\t@blur=\"trackSearch\"\n\t\t\t\t\t\tclearable\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #prefix>\n\t\t\t\t\t\t\t<font-awesome-icon icon=\"search\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</n8n-input>\n\t\t\t\t\t<div :class=\"$style.carouselContainer\" v-show=\"collections.length || loadingCollections\">\n\t\t\t\t\t\t<div :class=\"$style.header\">\n\t\t\t\t\t\t\t<n8n-heading :bold=\"true\" size=\"medium\" color=\"text-light\">\n\t\t\t\t\t\t\t\t{{ $locale.baseText('templates.collections') }}\n\t\t\t\t\t\t\t\t<span v-if=\"!loadingCollections\" v-text=\"`(${collections.length})`\" />\n\t\t\t\t\t\t\t</n8n-heading>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<CollectionsCarousel\n\t\t\t\t\t\t\t:collections=\"collections\"\n\t\t\t\t\t\t\t:loading=\"loadingCollections\"\n\t\t\t\t\t\t\t@openCollection=\"onOpenCollection\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<TemplateList\n\t\t\t\t\t\t:infinite-scroll-enabled=\"true\"\n\t\t\t\t\t\t:loading=\"loadingWorkflows\"\n\t\t\t\t\t\t:total-workflows=\"totalWorkflows\"\n\t\t\t\t\t\t:workflows=\"workflows\"\n\t\t\t\t\t\t@loadMore=\"onLoadMore\"\n\t\t\t\t\t\t@openTemplate=\"onOpenTemplate\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div v-if=\"endOfSearchMessage\" :class=\"$style.endText\">\n\t\t\t\t\t\t<n8n-text size=\"medium\" color=\"text-base\">\n\t\t\t\t\t\t\t<span v-html=\"endOfSearchMessage\" />\n\t\t\t\t\t\t</n8n-text>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</template>\n\t</TemplatesView>\n</template>\n\n<script lang=\"ts\">\nimport CollectionsCarousel from '@/components/CollectionsCarousel.vue';\nimport TemplateFilters from '@/components/TemplateFilters.vue';\nimport TemplateList from '@/components/TemplateList.vue';\nimport TemplatesView from './TemplatesView.vue';\n\nimport { genericHelpers } from '@/mixins/genericHelpers';\nimport type {\n\tITemplatesCollection,\n\tITemplatesWorkflow,\n\tITemplatesQuery,\n\tITemplatesCategory,\n} from '@/Interface';\nimport mixins from 'vue-typed-mixins';\nimport type { IDataObject } from 'n8n-workflow';\nimport { setPageTitle } from '@/utils';\nimport { VIEWS } from '@/constants';\nimport { debounceHelper } from '@/mixins/debounce';\nimport { mapStores } from 'pinia';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useTemplatesStore } from '@/stores/templates.store';\nimport { useUIStore } from '@/stores/ui.store';\n\ninterface ISearchEvent {\n\tsearch_string: string;\n\tworkflow_results_count: number;\n\tcollection_results_count: number;\n\tcategories_applied: ITemplatesCategory[];\n\twf_template_repo_session_id: string;\n}\n\nexport default mixins(genericHelpers, debounceHelper).extend({\n\tname: 'TemplatesSearchView',\n\tcomponents: {\n\t\tCollectionsCarousel,\n\t\tTemplateFilters,\n\t\tTemplateList,\n\t\tTemplatesView,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tareCategoriesPrepopulated: false,\n\t\t\tcategories: [] as number[],\n\t\t\tloading: true,\n\t\t\tloadingCategories: true,\n\t\t\tloadingCollections: true,\n\t\t\tloadingWorkflows: true,\n\t\t\tsearch: '',\n\t\t\tsearchEventToTrack: null as null | ISearchEvent,\n\t\t\terrorLoadingWorkflows: false,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useSettingsStore, useTemplatesStore, useUIStore, useUsersStore),\n\t\ttotalWorkflows(): number {\n\t\t\treturn this.templatesStore.getSearchedWorkflowsTotal(this.query);\n\t\t},\n\t\tworkflows(): ITemplatesWorkflow[] {\n\t\t\treturn this.templatesStore.getSearchedWorkflows(this.query) || [];\n\t\t},\n\t\tcollections(): ITemplatesCollection[] {\n\t\t\treturn this.templatesStore.getSearchedCollections(this.query) || [];\n\t\t},\n\t\tendOfSearchMessage(): string | null {\n\t\t\tif (this.loadingWorkflows) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.workflows.length && this.workflows.length >= this.totalWorkflows) {\n\t\t\t\treturn this.$locale.baseText('templates.endResult');\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!this.loadingCollections &&\n\t\t\t\tthis.workflows.length === 0 &&\n\t\t\t\tthis.collections.length === 0\n\t\t\t) {\n\t\t\t\tif (!this.settingsStore.isTemplatesEndpointReachable && this.errorLoadingWorkflows) {\n\t\t\t\t\treturn this.$locale.baseText('templates.connectionWarning');\n\t\t\t\t}\n\t\t\t\treturn this.$locale.baseText('templates.noSearchResults');\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tquery(): ITemplatesQuery {\n\t\t\treturn {\n\t\t\t\tcategories: this.categories,\n\t\t\t\tsearch: this.search,\n\t\t\t};\n\t\t},\n\t\tnothingFound(): boolean {\n\t\t\treturn (\n\t\t\t\t!this.loadingWorkflows &&\n\t\t\t\t!this.loadingCollections &&\n\t\t\t\tthis.workflows.length === 0 &&\n\t\t\t\tthis.collections.length === 0\n\t\t\t);\n\t\t},\n\t},\n\tmethods: {\n\t\tonOpenCollection({ event, id }: { event: MouseEvent; id: string }) {\n\t\t\tthis.navigateTo(event, VIEWS.COLLECTION, id);\n\t\t},\n\t\tonOpenTemplate({ event, id }: { event: MouseEvent; id: string }) {\n\t\t\tthis.navigateTo(event, VIEWS.TEMPLATE, id);\n\t\t},\n\t\tnavigateTo(e: MouseEvent, page: string, id: string) {\n\t\t\tif (e.metaKey || e.ctrlKey) {\n\t\t\t\tconst route = this.$router.resolve({ name: page, params: { id } });\n\t\t\t\twindow.open(route.href, '_blank');\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tvoid this.$router.push({ name: page, params: { id } });\n\t\t\t}\n\t\t},\n\t\tupdateSearch() {\n\t\t\tthis.updateQueryParam(this.search, this.categories.join(','));\n\t\t\tvoid this.loadWorkflowsAndCollections(false);\n\t\t},\n\t\tupdateSearchTracking(search: string, categories: number[]) {\n\t\t\tif (!search) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this.searchEventToTrack && this.searchEventToTrack.search_string.length > search.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.searchEventToTrack = {\n\t\t\t\tsearch_string: search,\n\t\t\t\tworkflow_results_count: this.workflows.length,\n\t\t\t\tcollection_results_count: this.collections.length,\n\t\t\t\tcategories_applied: categories.map((categoryId) =>\n\t\t\t\t\tthis.templatesStore.getCategoryById(categoryId.toString()),\n\t\t\t\t) as ITemplatesCategory[],\n\t\t\t\twf_template_repo_session_id: this.templatesStore.currentSessionId,\n\t\t\t};\n\t\t},\n\t\ttrackSearch() {\n\t\t\tif (this.searchEventToTrack) {\n\t\t\t\tthis.$telemetry.track(\n\t\t\t\t\t'User searched workflow templates',\n\t\t\t\t\tthis.searchEventToTrack as unknown as IDataObject,\n\t\t\t\t);\n\t\t\t\tthis.searchEventToTrack = null;\n\t\t\t}\n\t\t},\n\t\topenNewWorkflow() {\n\t\t\tthis.uiStore.nodeViewInitialized = false;\n\t\t\tvoid this.$router.push({ name: VIEWS.NEW_WORKFLOW });\n\t\t},\n\t\tonSearchInput(search: string) {\n\t\t\tthis.loadingWorkflows = true;\n\t\t\tthis.loadingCollections = true;\n\t\t\tthis.search = search;\n\t\t\tvoid this.callDebounced('updateSearch', { debounceTime: 500, trailing: true });\n\n\t\t\tif (search.length === 0) {\n\t\t\t\tthis.trackSearch();\n\t\t\t}\n\t\t},\n\t\tonCategorySelected(selected: number) {\n\t\t\tthis.categories = this.categories.concat(selected);\n\t\t\tthis.updateSearch();\n\t\t\tthis.trackCategories();\n\t\t},\n\t\tonCategoryUnselected(selected: number) {\n\t\t\tthis.categories = this.categories.filter((id) => id !== selected);\n\t\t\tthis.updateSearch();\n\t\t\tthis.trackCategories();\n\t\t},\n\t\tonCategoriesCleared() {\n\t\t\tthis.categories = [];\n\t\t\tthis.updateSearch();\n\t\t},\n\t\ttrackCategories() {\n\t\t\tif (this.categories.length) {\n\t\t\t\tthis.$telemetry.track('User changed template filters', {\n\t\t\t\t\tsearch_string: this.search,\n\t\t\t\t\tcategories_applied: this.categories.map((categoryId: number) =>\n\t\t\t\t\t\tthis.templatesStore.getCollectionById(categoryId.toString()),\n\t\t\t\t\t),\n\t\t\t\t\twf_template_repo_session_id: this.templatesStore.currentSessionId,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tupdateQueryParam(search: string, category: string) {\n\t\t\tconst query = Object.assign({}, this.$route.query);\n\n\t\t\tif (category.length) {\n\t\t\t\tquery.categories = category;\n\t\t\t} else {\n\t\t\t\tdelete query.categories;\n\t\t\t}\n\n\t\t\tif (search.length) {\n\t\t\t\tquery.search = search;\n\t\t\t} else {\n\t\t\t\tdelete query.search;\n\t\t\t}\n\n\t\t\tvoid this.$router.replace({ query });\n\t\t},\n\t\tasync onLoadMore() {\n\t\t\tif (this.workflows.length >= this.totalWorkflows) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tthis.loadingWorkflows = true;\n\t\t\t\tawait this.templatesStore.getMoreWorkflows({\n\t\t\t\t\tcategories: this.categories,\n\t\t\t\t\tsearch: this.search,\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: 'Error',\n\t\t\t\t\tmessage: 'Could not load more workflows',\n\t\t\t\t\ttype: 'error',\n\t\t\t\t});\n\t\t\t} finally {\n\t\t\t\tthis.loadingWorkflows = false;\n\t\t\t}\n\t\t},\n\t\tasync loadCategories() {\n\t\t\ttry {\n\t\t\t\tawait this.templatesStore.getCategories();\n\t\t\t} catch (e) {}\n\t\t\tthis.loadingCategories = false;\n\t\t},\n\t\tasync loadCollections() {\n\t\t\ttry {\n\t\t\t\tthis.loadingCollections = true;\n\t\t\t\tawait this.templatesStore.getCollections({\n\t\t\t\t\tcategories: this.categories,\n\t\t\t\t\tsearch: this.search,\n\t\t\t\t});\n\t\t\t} catch (e) {}\n\n\t\t\tthis.loadingCollections = false;\n\t\t},\n\t\tasync loadWorkflows() {\n\t\t\ttry {\n\t\t\t\tthis.loadingWorkflows = true;\n\t\t\t\tawait this.templatesStore.getWorkflows({\n\t\t\t\t\tsearch: this.search,\n\t\t\t\t\tcategories: this.categories,\n\t\t\t\t});\n\t\t\t\tthis.errorLoadingWorkflows = false;\n\t\t\t} catch (e) {\n\t\t\t\tthis.errorLoadingWorkflows = true;\n\t\t\t}\n\n\t\t\tthis.loadingWorkflows = false;\n\t\t},\n\t\tasync loadWorkflowsAndCollections(initialLoad: boolean) {\n\t\t\tconst search = this.search;\n\t\t\tconst categories = [...this.categories];\n\t\t\tawait Promise.all([this.loadWorkflows(), this.loadCollections()]);\n\t\t\tif (!initialLoad) {\n\t\t\t\tthis.updateSearchTracking(search, categories);\n\t\t\t}\n\t\t},\n\t\tscrollTo(position: number, behavior: ScrollBehavior = 'smooth') {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst contentArea = document.getElementById('content');\n\t\t\t\tif (contentArea) {\n\t\t\t\t\tcontentArea.scrollTo({\n\t\t\t\t\t\ttop: position,\n\t\t\t\t\t\tbehavior,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t},\n\t},\n\twatch: {\n\t\tworkflows(newWorkflows) {\n\t\t\tif (newWorkflows.length === 0) {\n\t\t\t\tthis.scrollTo(0);\n\t\t\t}\n\t\t},\n\t},\n\tbeforeRouteLeave(to, from, next) {\n\t\tconst contentArea = document.getElementById('content');\n\t\tif (contentArea) {\n\t\t\t// When leaving this page, store current scroll position in route data\n\t\t\tif (\n\t\t\t\tthis.$route.meta &&\n\t\t\t\tthis.$route.meta.setScrollPosition &&\n\t\t\t\ttypeof this.$route.meta.setScrollPosition === 'function'\n\t\t\t) {\n\t\t\t\tthis.$route.meta.setScrollPosition(contentArea.scrollTop);\n\t\t\t}\n\t\t}\n\n\t\tthis.trackSearch();\n\t\tnext();\n\t},\n\tasync mounted() {\n\t\tsetPageTitle('n8n - Templates');\n\t\tvoid this.loadCategories();\n\t\tvoid this.loadWorkflowsAndCollections(true);\n\t\tvoid this.usersStore.showPersonalizationSurvey();\n\n\t\tsetTimeout(() => {\n\t\t\t// Check if there is scroll position saved in route and scroll to it\n\t\t\tif (this.$route.meta && this.$route.meta.scrollOffset > 0) {\n\t\t\t\tthis.scrollTo(this.$route.meta.scrollOffset, 'auto');\n\t\t\t}\n\t\t}, 100);\n\t},\n\tasync created() {\n\t\tif (this.$route.query.search && typeof this.$route.query.search === 'string') {\n\t\t\tthis.search = this.$route.query.search;\n\t\t}\n\n\t\tif (typeof this.$route.query.categories === 'string' && this.$route.query.categories.length) {\n\t\t\tthis.categories = this.$route.query.categories\n\t\t\t\t.split(',')\n\t\t\t\t.map((categoryId) => parseInt(categoryId, 10));\n\t\t\tthis.areCategoriesPrepopulated = true;\n\t\t}\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.wrapper {\n\tdisplay: flex;\n\tjustify-content: space-between;\n}\n\n.contentWrapper {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\n\t@media (max-width: $breakpoint-xs) {\n\t\tflex-direction: column;\n\t}\n}\n\n.filters {\n\twidth: 200px;\n\tmargin-bottom: var(--spacing-xl);\n}\n\n.search {\n\twidth: 100%;\n\tpadding-left: var(--spacing-2xl);\n\n\t> * {\n\t\tmargin-bottom: var(--spacing-l);\n\t}\n\n\t@media (max-width: $breakpoint-xs) {\n\t\tpadding-left: 0;\n\t}\n}\n\n.header {\n\tmargin-bottom: var(--spacing-2xs);\n}\n</style>\n","<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n\tprops: {\n\t\toverflow: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n});\n</script>\n\n<template>\n\t<div :class=\"{ [$style.wrapper]: true, [$style.overflow]: overflow }\">\n\t\t<div :class=\"$style.list\">\n\t\t\t<div v-if=\"$slots.header\" :class=\"$style.header\">\n\t\t\t\t<slot name=\"header\" />\n\t\t\t</div>\n\t\t\t<div :class=\"$style.body\">\n\t\t\t\t<slot />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<style lang=\"scss\" module>\n.wrapper {\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n}\n\n.overflow {\n\t.list {\n\t\t.body {\n\t\t\toverflow: auto;\n\t\t}\n\t}\n}\n\n.list {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\theight: 100%;\n\n\t.header {\n\t\tflex: 0 0 auto;\n\t}\n\n\t.body {\n\t\toverflow: hidden;\n\t\tflex: 1 1;\n\t}\n}\n</style>\n","<template>\n\t<n8n-menu\n\t\t:items=\"menuItems\"\n\t\tmode=\"tabs\"\n\t\t:value=\"value ? 'owner' : 'all'\"\n\t\t@input=\"onSelectOwner\"\n\t/>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport type { IMenuItem } from 'n8n-design-system';\n\nexport default defineComponent({\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\tmyResourcesLabel: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tallResourcesLabel: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tcomputed: {\n\t\tmenuItems(): IMenuItem[] {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: 'all',\n\t\t\t\t\ticon: 'globe-americas',\n\t\t\t\t\tlabel: this.allResourcesLabel,\n\t\t\t\t\tposition: 'top',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'owner',\n\t\t\t\t\ticon: 'user',\n\t\t\t\t\tlabel: this.myResourcesLabel,\n\t\t\t\t\tposition: 'top',\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t},\n\tmethods: {\n\t\tonSelectOwner(type: string) {\n\t\t\tthis.$emit('input', type === 'owner');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.menu-container {\n\t--menu-background: transparent;\n\t--menu-padding: 0;\n}\n</style>\n","<template>\n\t<n8n-popover trigger=\"click\">\n\t\t<template #reference>\n\t\t\t<n8n-button\n\t\t\t\ticon=\"filter\"\n\t\t\t\ttype=\"tertiary\"\n\t\t\t\tsize=\"medium\"\n\t\t\t\t:active=\"hasFilters\"\n\t\t\t\t:class=\"[$style['filter-button'], 'ml-2xs']\"\n\t\t\t\tdata-test-id=\"resources-list-filters-trigger\"\n\t\t\t>\n\t\t\t\t<n8n-badge v-show=\"filtersLength > 0\" theme=\"primary\" class=\"mr-4xs\">\n\t\t\t\t\t{{ filtersLength }}\n\t\t\t\t</n8n-badge>\n\t\t\t\t{{ $locale.baseText('forms.resourceFiltersDropdown.filters') }}\n\t\t\t</n8n-button>\n\t\t</template>\n\t\t<div :class=\"$style['filters-dropdown']\" data-test-id=\"resources-list-filters-dropdown\">\n\t\t\t<slot :filters=\"value\" :setKeyValue=\"setKeyValue\" />\n\t\t\t<enterprise-edition\n\t\t\t\tclass=\"mb-s\"\n\t\t\t\t:features=\"[EnterpriseEditionFeature.Sharing]\"\n\t\t\t\tv-if=\"shareable\"\n\t\t\t>\n\t\t\t\t<n8n-input-label\n\t\t\t\t\t:label=\"$locale.baseText('forms.resourceFiltersDropdown.ownedBy')\"\n\t\t\t\t\t:bold=\"false\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tcolor=\"text-base\"\n\t\t\t\t\tclass=\"mb-3xs\"\n\t\t\t\t/>\n\t\t\t\t<n8n-user-select\n\t\t\t\t\t:users=\"ownedByUsers\"\n\t\t\t\t\t:currentUserId=\"usersStore.currentUser.id\"\n\t\t\t\t\t:value=\"value.ownedBy\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t@input=\"setKeyValue('ownedBy', $event)\"\n\t\t\t\t/>\n\t\t\t</enterprise-edition>\n\t\t\t<enterprise-edition :features=\"[EnterpriseEditionFeature.Sharing]\" v-if=\"shareable\">\n\t\t\t\t<n8n-input-label\n\t\t\t\t\t:label=\"$locale.baseText('forms.resourceFiltersDropdown.sharedWith')\"\n\t\t\t\t\t:bold=\"false\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tcolor=\"text-base\"\n\t\t\t\t\tclass=\"mb-3xs\"\n\t\t\t\t/>\n\t\t\t\t<n8n-user-select\n\t\t\t\t\t:users=\"sharedWithUsers\"\n\t\t\t\t\t:currentUserId=\"usersStore.currentUser.id\"\n\t\t\t\t\t:value=\"value.sharedWith\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t@input=\"setKeyValue('sharedWith', $event)\"\n\t\t\t\t/>\n\t\t\t</enterprise-edition>\n\t\t\t<div :class=\"[$style['filters-dropdown-footer'], 'mt-s']\" v-if=\"hasFilters\">\n\t\t\t\t<n8n-link @click=\"resetFilters\">\n\t\t\t\t\t{{ $locale.baseText('forms.resourceFiltersDropdown.reset') }}\n\t\t\t\t</n8n-link>\n\t\t\t</div>\n\t\t</div>\n\t</n8n-popover>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { EnterpriseEditionFeature } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useUsersStore } from '@/stores/users.store';\nimport type { PropType } from 'vue';\nimport type { IUser } from '@/Interface';\n\nexport type IResourceFiltersType = Record<string, boolean | string | string[]>;\n\nexport default defineComponent({\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: Object as PropType<IResourceFiltersType>,\n\t\t\tdefault: () => ({}),\n\t\t},\n\t\tkeys: {\n\t\t\ttype: Array as PropType<string[]>,\n\t\t\tdefault: () => [],\n\t\t},\n\t\tshareable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\treset: {\n\t\t\ttype: Function as PropType<() => void>,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tEnterpriseEditionFeature,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useUsersStore),\n\t\townedByUsers(): IUser[] {\n\t\t\treturn this.usersStore.allUsers.map((user) =>\n\t\t\t\tuser.id === this.value.sharedWith ? { ...user, disabled: true } : user,\n\t\t\t);\n\t\t},\n\t\tsharedWithUsers(): IUser[] {\n\t\t\treturn this.usersStore.allUsers.map((user) =>\n\t\t\t\tuser.id === this.value.ownedBy ? { ...user, disabled: true } : user,\n\t\t\t);\n\t\t},\n\t\tfiltersLength(): number {\n\t\t\tlet length = 0;\n\n\t\t\t(this.keys as string[]).forEach((key) => {\n\t\t\t\tif (key === 'search') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlength += (\n\t\t\t\t\tArray.isArray(this.value[key]) ? this.value[key].length > 0 : this.value[key] !== ''\n\t\t\t\t)\n\t\t\t\t\t? 1\n\t\t\t\t\t: 0;\n\t\t\t});\n\n\t\t\treturn length;\n\t\t},\n\t\thasFilters(): boolean {\n\t\t\treturn this.filtersLength > 0;\n\t\t},\n\t},\n\tmethods: {\n\t\tsetKeyValue(key: string, value: unknown) {\n\t\t\tconst filters = {\n\t\t\t\t...this.value,\n\t\t\t\t[key]: value,\n\t\t\t};\n\n\t\t\tthis.$emit('input', filters);\n\t\t},\n\t\tresetFilters() {\n\t\t\tif (this.reset) {\n\t\t\t\tthis.reset();\n\t\t\t} else {\n\t\t\t\tconst filters = { ...this.value };\n\n\t\t\t\t(this.keys as string[]).forEach((key) => {\n\t\t\t\t\tfilters[key] = Array.isArray(this.value[key]) ? [] : '';\n\t\t\t\t});\n\n\t\t\t\tthis.$emit('input', filters);\n\t\t\t}\n\t\t},\n\t},\n\twatch: {\n\t\tfiltersLength(value: number) {\n\t\t\tthis.$emit('update:filtersLength', value);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.filter-button {\n\theight: 36px;\n\talign-items: center;\n}\n\n.filters-dropdown {\n\twidth: 280px;\n\tpadding-bottom: var(--spacing-s);\n}\n\n.filters-dropdown-footer {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n}\n</style>\n","<template>\n\t<page-view-layout>\n\t\t<template #aside v-if=\"showAside\">\n\t\t\t<div :class=\"[$style['heading-wrapper'], 'mb-xs']\">\n\t\t\t\t<n8n-heading size=\"2xlarge\">\n\t\t\t\t\t{{ $locale.baseText(`${resourceKey}.heading`) }}\n\t\t\t\t</n8n-heading>\n\t\t\t</div>\n\n\t\t\t<div class=\"mt-xs mb-l\">\n\t\t\t\t<slot name=\"add-button\">\n\t\t\t\t\t<n8n-button\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tblock\n\t\t\t\t\t\t:disabled=\"disabled\"\n\t\t\t\t\t\t@click=\"$emit('click:add', $event)\"\n\t\t\t\t\t\tdata-test-id=\"resources-list-add\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $locale.baseText(`${resourceKey}.add`) }}\n\t\t\t\t\t</n8n-button>\n\t\t\t\t</slot>\n\t\t\t</div>\n\n\t\t\t<enterprise-edition :features=\"[EnterpriseEditionFeature.Sharing]\" v-if=\"shareable\">\n\t\t\t\t<resource-ownership-select\n\t\t\t\t\tv-model=\"isOwnerSubview\"\n\t\t\t\t\t:my-resources-label=\"$locale.baseText(`${resourceKey}.menu.my`)\"\n\t\t\t\t\t:all-resources-label=\"$locale.baseText(`${resourceKey}.menu.all`)\"\n\t\t\t\t/>\n\t\t\t</enterprise-edition>\n\t\t</template>\n\n\t\t<div v-if=\"loading\">\n\t\t\t<n8n-loading :class=\"[$style['header-loading'], 'mb-l']\" variant=\"custom\" />\n\t\t\t<n8n-loading :class=\"[$style['card-loading'], 'mb-2xs']\" variant=\"custom\" />\n\t\t\t<n8n-loading :class=\"$style['card-loading']\" variant=\"custom\" />\n\t\t</div>\n\t\t<template v-else>\n\t\t\t<div v-if=\"resources.length === 0\">\n\t\t\t\t<slot name=\"empty\">\n\t\t\t\t\t<n8n-action-box\n\t\t\t\t\t\tdata-test-id=\"empty-resources-list\"\n\t\t\t\t\t\temoji=\"👋\"\n\t\t\t\t\t\t:heading=\"\n\t\t\t\t\t\t\t$locale.baseText(\n\t\t\t\t\t\t\t\tusersStore.currentUser.firstName\n\t\t\t\t\t\t\t\t\t? `${resourceKey}.empty.heading`\n\t\t\t\t\t\t\t\t\t: `${resourceKey}.empty.heading.userNotSetup`,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tinterpolate: { name: usersStore.currentUser.firstName },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\"\n\t\t\t\t\t\t:description=\"$locale.baseText(`${resourceKey}.empty.description`)\"\n\t\t\t\t\t\t:buttonText=\"$locale.baseText(`${resourceKey}.empty.button`)\"\n\t\t\t\t\t\tbuttonType=\"secondary\"\n\t\t\t\t\t\t@click=\"$emit('click:add', $event)\"\n\t\t\t\t\t/>\n\t\t\t\t</slot>\n\t\t\t</div>\n\t\t\t<page-view-layout-list :overflow=\"type !== 'list'\" v-else>\n\t\t\t\t<template #header>\n\t\t\t\t\t<div class=\"mb-xs\">\n\t\t\t\t\t\t<n8n-callout\n\t\t\t\t\t\t\tv-if=\"starsBannerShouldRender\"\n\t\t\t\t\t\t\ttheme=\"secondary\"\n\t\t\t\t\t\t\ticon=\"star\"\n\t\t\t\t\t\t\t:class=\"$style['github-stars-banner']\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span v-html=\"$locale.baseText('githubStars.banner.title')\"></span>\n\t\t\t\t\t\t\t<template #trailingContent>\n\t\t\t\t\t\t\t\t<n8n-link :to=\"repoUrl\" size=\"small\" theme=\"secondary\" bold underline>\n\t\t\t\t\t\t\t\t\t{{ $locale.baseText('githubStars.banner.link') }}\n\t\t\t\t\t\t\t\t</n8n-link>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</n8n-callout>\n\n\t\t\t\t\t\t<div :class=\"$style['filters-row']\">\n\t\t\t\t\t\t\t<n8n-input\n\t\t\t\t\t\t\t\t:class=\"[$style['search'], 'mr-2xs']\"\n\t\t\t\t\t\t\t\t:placeholder=\"$locale.baseText(`${resourceKey}.search.placeholder`)\"\n\t\t\t\t\t\t\t\tv-model=\"filters.search\"\n\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\t\tref=\"search\"\n\t\t\t\t\t\t\t\tdata-test-id=\"resources-list-search\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<template #prefix>\n\t\t\t\t\t\t\t\t\t<n8n-icon icon=\"search\" />\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</n8n-input>\n\t\t\t\t\t\t\t<div :class=\"$style['sort-and-filter']\">\n\t\t\t\t\t\t\t\t<n8n-select v-model=\"sortBy\" size=\"medium\" data-test-id=\"resources-list-sort\">\n\t\t\t\t\t\t\t\t\t<n8n-option\n\t\t\t\t\t\t\t\t\t\tv-for=\"sortOption in sortOptions\"\n\t\t\t\t\t\t\t\t\t\t:key=\"sortOption\"\n\t\t\t\t\t\t\t\t\t\t:value=\"sortOption\"\n\t\t\t\t\t\t\t\t\t\t:label=\"$locale.baseText(`${resourceKey}.sort.${sortOption}`)\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</n8n-select>\n\t\t\t\t\t\t\t\t<resource-filters-dropdown\n\t\t\t\t\t\t\t\t\tv-if=\"showFiltersDropdown\"\n\t\t\t\t\t\t\t\t\t:keys=\"filterKeys\"\n\t\t\t\t\t\t\t\t\t:reset=\"resetFilters\"\n\t\t\t\t\t\t\t\t\t:value=\"filters\"\n\t\t\t\t\t\t\t\t\t:shareable=\"shareable\"\n\t\t\t\t\t\t\t\t\t@input=\"$emit('update:filters', $event)\"\n\t\t\t\t\t\t\t\t\t@update:filtersLength=\"onUpdateFiltersLength\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<template #default=\"resourceFiltersSlotProps\">\n\t\t\t\t\t\t\t\t\t\t<slot name=\"filters\" v-bind=\"resourceFiltersSlotProps\" />\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</resource-filters-dropdown>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<slot name=\"callout\"></slot>\n\n\t\t\t\t\t<div v-show=\"hasFilters\" class=\"mt-xs\">\n\t\t\t\t\t\t<n8n-info-tip :bold=\"false\">\n\t\t\t\t\t\t\t{{ $locale.baseText(`${resourceKey}.filters.active`) }}\n\t\t\t\t\t\t\t<n8n-link @click=\"resetFilters\" size=\"small\">\n\t\t\t\t\t\t\t\t{{ $locale.baseText(`${resourceKey}.filters.active.reset`) }}\n\t\t\t\t\t\t\t</n8n-link>\n\t\t\t\t\t\t</n8n-info-tip>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"pb-xs\" />\n\t\t\t\t</template>\n\n\t\t\t\t<slot name=\"preamble\" />\n\n\t\t\t\t<div\n\t\t\t\t\tv-if=\"filteredAndSortedSubviewResources.length > 0\"\n\t\t\t\t\t:class=\"$style.listWrapper\"\n\t\t\t\t\tref=\"listWrapperRef\"\n\t\t\t\t>\n\t\t\t\t\t<n8n-recycle-scroller\n\t\t\t\t\t\tv-if=\"type === 'list'\"\n\t\t\t\t\t\tdata-test-id=\"resources-list\"\n\t\t\t\t\t\t:class=\"[$style.list, 'list-style-none']\"\n\t\t\t\t\t\t:items=\"filteredAndSortedSubviewResources\"\n\t\t\t\t\t\t:item-size=\"typeProps.itemSize\"\n\t\t\t\t\t\titem-key=\"id\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #default=\"{ item, updateItemSize }\">\n\t\t\t\t\t\t\t<slot :data=\"item\" :updateItemSize=\"updateItemSize\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</n8n-recycle-scroller>\n\t\t\t\t\t<n8n-datatable\n\t\t\t\t\t\tv-if=\"typeProps.columns\"\n\t\t\t\t\t\tdata-test-id=\"resources-table\"\n\t\t\t\t\t\t:class=\"$style.datatable\"\n\t\t\t\t\t\t:columns=\"typeProps.columns\"\n\t\t\t\t\t\t:rows=\"filteredAndSortedSubviewResources\"\n\t\t\t\t\t\t:currentPage=\"currentPage\"\n\t\t\t\t\t\t:rowsPerPage=\"rowsPerPage\"\n\t\t\t\t\t\t@update:currentPage=\"setCurrentPage\"\n\t\t\t\t\t\t@update:rowsPerPage=\"setRowsPerPage\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #row=\"{ columns, row }\">\n\t\t\t\t\t\t\t<slot :data=\"row\" :columns=\"columns\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</n8n-datatable>\n\t\t\t\t</div>\n\n\t\t\t\t<n8n-text color=\"text-base\" size=\"medium\" data-test-id=\"resources-list-empty\" v-else>\n\t\t\t\t\t{{ $locale.baseText(`${resourceKey}.noResults`) }}\n\t\t\t\t\t<template v-if=\"shouldSwitchToAllSubview\">\n\t\t\t\t\t\t<span v-if=\"!filters.search\">\n\t\t\t\t\t\t\t({{ $locale.baseText(`${resourceKey}.noResults.switchToShared.preamble`) }}\n\t\t\t\t\t\t\t<n8n-link @click=\"setOwnerSubview(false)\">\n\t\t\t\t\t\t\t\t{{ $locale.baseText(`${resourceKey}.noResults.switchToShared.link`) }} </n8n-link\n\t\t\t\t\t\t\t>)\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span v-else>\n\t\t\t\t\t\t\t({{\n\t\t\t\t\t\t\t\t$locale.baseText(`${resourceKey}.noResults.withSearch.switchToShared.preamble`)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t<n8n-link @click=\"setOwnerSubview(false)\">\n\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t$locale.baseText(`${resourceKey}.noResults.withSearch.switchToShared.link`)\n\t\t\t\t\t\t\t\t}} </n8n-link\n\t\t\t\t\t\t\t>)\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</template>\n\t\t\t\t</n8n-text>\n\n\t\t\t\t<slot name=\"postamble\" />\n\t\t\t</page-view-layout-list>\n\t\t</template>\n\t</page-view-layout>\n</template>\n\n<script lang=\"ts\">\nimport { showMessage } from '@/mixins/showMessage';\nimport type { IUser } from '@/Interface';\nimport mixins from 'vue-typed-mixins';\n\nimport PageViewLayout from '@/components/layouts/PageViewLayout.vue';\nimport PageViewLayoutList from '@/components/layouts/PageViewLayoutList.vue';\nimport {\n\tEnterpriseEditionFeature,\n\tGITHUB_STARS_BANNER_SHOW_UNTIL_DATE,\n\tMAIN_REPOSITORY_URL,\n} from '@/constants';\nimport TemplateCard from '@/components/TemplateCard.vue';\nimport type { PropType } from 'vue';\nimport { debounceHelper } from '@/mixins/debounce';\nimport ResourceOwnershipSelect from '@/components/forms/ResourceOwnershipSelect.ee.vue';\nimport ResourceFiltersDropdown from '@/components/forms/ResourceFiltersDropdown.vue';\nimport { mapStores } from 'pinia';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport type { N8nInput } from 'n8n-design-system';\nimport type { DatatableColumn } from 'n8n-design-system';\n\nexport interface IResource {\n\tid: string;\n\tname: string;\n\tupdatedAt: string;\n\tcreatedAt: string;\n\townedBy?: Partial<IUser>;\n\tsharedWith?: Array<Partial<IUser>>;\n}\n\ninterface IFilters {\n\tsearch: string;\n\townedBy: string;\n\tsharedWith: string;\n\n\t[key: string]: boolean | string | string[];\n}\n\ntype IResourceKeyType = 'credentials' | 'workflows';\ntype SearchRef = InstanceType<typeof N8nInput>;\n\nconst filterKeys = ['ownedBy', 'sharedWith'];\n\nexport default mixins(showMessage, debounceHelper).extend({\n\tname: 'resources-list-layout',\n\tcomponents: {\n\t\tTemplateCard,\n\t\tPageViewLayout,\n\t\tPageViewLayoutList,\n\t\tResourceOwnershipSelect,\n\t\tResourceFiltersDropdown,\n\t},\n\tprops: {\n\t\tresourceKey: {\n\t\t\ttype: String,\n\t\t\tdefault: '' as IResourceKeyType,\n\t\t},\n\t\tdisplayName: {\n\t\t\ttype: Function as PropType<(resource: IResource) => string>,\n\t\t\tdefault: (resource: IResource) => resource.name,\n\t\t},\n\t\tresources: {\n\t\t\ttype: Array,\n\t\t\tdefault: (): IResource[] => [],\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tinitialize: {\n\t\t\ttype: Function as PropType<() => Promise<void>>,\n\t\t\tdefault: () => async () => {},\n\t\t},\n\t\tfilters: {\n\t\t\ttype: Object,\n\t\t\tdefault: (): IFilters => ({ search: '', ownedBy: '', sharedWith: '' }),\n\t\t},\n\t\tadditionalFiltersHandler: {\n\t\t\ttype: Function,\n\t\t},\n\t\tshowAside: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\tshareable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\tshowFiltersDropdown: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\tsortFns: {\n\t\t\ttype: Object as PropType<Record<string, (a: IResource, b: IResource) => number>>,\n\t\t\tdefault: (): Record<string, (a: IResource, b: IResource) => number> => ({}),\n\t\t},\n\t\tsortOptions: {\n\t\t\ttype: Array as PropType<string[]>,\n\t\t\tdefault: () => ['lastUpdated', 'lastCreated', 'nameAsc', 'nameDesc'],\n\t\t},\n\t\ttype: {\n\t\t\ttype: String as PropType<'datatable' | 'list'>,\n\t\t\tdefault: 'list',\n\t\t},\n\t\ttypeProps: {\n\t\t\ttype: Object as PropType<{ itemSize: number } | { columns: DatatableColumn[] }>,\n\t\t\tdefault: () => ({\n\t\t\t\titemSize: 0,\n\t\t\t}),\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloading: true,\n\t\t\tisOwnerSubview: false,\n\t\t\tsortBy: this.sortOptions[0],\n\t\t\thasFilters: false,\n\t\t\tcurrentPage: 1,\n\t\t\trowsPerPage: 10 as number | '*',\n\t\t\tresettingFilters: false,\n\t\t\tEnterpriseEditionFeature,\n\t\t\trepoUrl: MAIN_REPOSITORY_URL,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useSettingsStore, useUsersStore),\n\t\tstarsBannerShouldRender() {\n\t\t\treturn this.resourceKey === 'workflows' && new Date() < GITHUB_STARS_BANNER_SHOW_UNTIL_DATE;\n\t\t},\n\t\tsubviewResources(): IResource[] {\n\t\t\tif (!this.shareable) {\n\t\t\t\treturn this.resources as IResource[];\n\t\t\t}\n\n\t\t\treturn (this.resources as IResource[]).filter((resource) => {\n\t\t\t\tif (\n\t\t\t\t\tthis.isOwnerSubview &&\n\t\t\t\t\tthis.settingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.Sharing)\n\t\t\t\t) {\n\t\t\t\t\treturn !!(resource.ownedBy && resource.ownedBy.id === this.usersStore.currentUser?.id);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t},\n\t\tfilterKeys(): string[] {\n\t\t\treturn Object.keys(this.filters);\n\t\t},\n\t\tfilteredAndSortedSubviewResources(): IResource[] {\n\t\t\tconst filtered: IResource[] = this.subviewResources.filter((resource: IResource) => {\n\t\t\t\tlet matches = true;\n\n\t\t\t\tif (this.filters.ownedBy) {\n\t\t\t\t\tmatches = matches && !!(resource.ownedBy && resource.ownedBy.id === this.filters.ownedBy);\n\t\t\t\t}\n\n\t\t\t\tif (this.filters.sharedWith) {\n\t\t\t\t\tmatches =\n\t\t\t\t\t\tmatches &&\n\t\t\t\t\t\t!!(\n\t\t\t\t\t\t\tresource.sharedWith &&\n\t\t\t\t\t\t\tresource.sharedWith.find((sharee) => sharee.id === this.filters.sharedWith)\n\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (this.filters.search) {\n\t\t\t\t\tconst searchString = this.filters.search.toLowerCase();\n\n\t\t\t\t\tmatches = matches && this.displayName(resource).toLowerCase().includes(searchString);\n\t\t\t\t}\n\n\t\t\t\tif (this.additionalFiltersHandler) {\n\t\t\t\t\tmatches = this.additionalFiltersHandler(resource, this.filters, matches);\n\t\t\t\t}\n\n\t\t\t\treturn matches;\n\t\t\t});\n\n\t\t\treturn filtered.sort((a, b) => {\n\t\t\t\tswitch (this.sortBy) {\n\t\t\t\t\tcase 'lastUpdated':\n\t\t\t\t\t\treturn this.sortFns['lastUpdated']\n\t\t\t\t\t\t\t? this.sortFns['lastUpdated'](a, b)\n\t\t\t\t\t\t\t: new Date(b.updatedAt).valueOf() - new Date(a.updatedAt).valueOf();\n\t\t\t\t\tcase 'lastCreated':\n\t\t\t\t\t\treturn this.sortFns['lastCreated']\n\t\t\t\t\t\t\t? this.sortFns['lastCreated'](a, b)\n\t\t\t\t\t\t\t: new Date(b.createdAt).valueOf() - new Date(a.createdAt).valueOf();\n\t\t\t\t\tcase 'nameAsc':\n\t\t\t\t\t\treturn this.sortFns['nameAsc']\n\t\t\t\t\t\t\t? this.sortFns['nameAsc'](a, b)\n\t\t\t\t\t\t\t: this.displayName(a).trim().localeCompare(this.displayName(b).trim());\n\t\t\t\t\tcase 'nameDesc':\n\t\t\t\t\t\treturn this.sortFns['nameDesc']\n\t\t\t\t\t\t\t? this.sortFns['nameDesc'](a, b)\n\t\t\t\t\t\t\t: this.displayName(b).trim().localeCompare(this.displayName(a).trim());\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn this.sortFns[this.sortBy] ? this.sortFns[this.sortBy](a, b) : 0;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tresourcesNotOwned(): IResource[] {\n\t\t\treturn (this.resources as IResource[]).filter((resource) => {\n\t\t\t\treturn resource.ownedBy && resource.ownedBy.id !== this.usersStore.currentUser?.id;\n\t\t\t});\n\t\t},\n\t\tshouldSwitchToAllSubview(): boolean {\n\t\t\treturn !this.hasFilters && this.isOwnerSubview && this.resourcesNotOwned.length > 0;\n\t\t},\n\t},\n\tmethods: {\n\t\tasync onMounted() {\n\t\t\tawait this.initialize();\n\n\t\t\tthis.loading = false;\n\t\t\tthis.$nextTick(this.focusSearchInput);\n\t\t},\n\t\tsetCurrentPage(page: number) {\n\t\t\tthis.currentPage = page;\n\t\t},\n\t\tsetRowsPerPage(rowsPerPage: number | '*') {\n\t\t\tthis.rowsPerPage = rowsPerPage;\n\t\t},\n\t\tresetFilters() {\n\t\t\tObject.keys(this.filters).forEach((key) => {\n\t\t\t\tthis.filters[key] = Array.isArray(this.filters[key]) ? [] : '';\n\t\t\t});\n\n\t\t\tthis.resettingFilters = true;\n\t\t\tthis.sendFiltersTelemetry('reset');\n\t\t},\n\t\tfocusSearchInput() {\n\t\t\tif (this.$refs.search) {\n\t\t\t\t(this.$refs.search as SearchRef).focus();\n\t\t\t}\n\t\t},\n\t\tsetOwnerSubview(active: boolean) {\n\t\t\tthis.isOwnerSubview = active;\n\t\t},\n\t\tgetTelemetrySubview(): string {\n\t\t\treturn this.$locale.baseText(\n\t\t\t\t`${this.resourceKey as IResourceKeyType}.menu.${this.isOwnerSubview ? 'my' : 'all'}`,\n\t\t\t);\n\t\t},\n\t\tsendSubviewTelemetry() {\n\t\t\tthis.$telemetry.track(`User changed ${this.resourceKey} sub view`, {\n\t\t\t\tsub_view: this.getTelemetrySubview(),\n\t\t\t});\n\t\t},\n\t\tsendSortingTelemetry() {\n\t\t\tthis.$telemetry.track(`User changed sorting in ${this.resourceKey} list`, {\n\t\t\t\tsub_view: this.getTelemetrySubview(),\n\t\t\t\tsorting: this.sortBy,\n\t\t\t});\n\t\t},\n\t\tsendFiltersTelemetry(source: string) {\n\t\t\t// Prevent sending multiple telemetry events when resetting filters\n\t\t\t// Timeout is required to wait for search debounce to be over\n\t\t\tif (this.resettingFilters) {\n\t\t\t\tif (source !== 'reset') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetTimeout(() => (this.resettingFilters = false), 1500);\n\t\t\t}\n\n\t\t\tconst filters = this.filters as Record<string, string[] | string | boolean>;\n\t\t\tconst filtersSet: string[] = [];\n\t\t\tconst filterValues: Array<string[] | string | boolean | null> = [];\n\n\t\t\tObject.keys(filters).forEach((key) => {\n\t\t\t\tif (filters[key]) {\n\t\t\t\t\tfiltersSet.push(key);\n\t\t\t\t\tfilterValues.push(key === 'search' ? null : filters[key]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.$telemetry.track(`User set filters in ${this.resourceKey} list`, {\n\t\t\t\tfilters_set: filtersSet,\n\t\t\t\tfilter_values: filterValues,\n\t\t\t\tsub_view: this.getTelemetrySubview(),\n\t\t\t\t[`${this.resourceKey}_total_in_view`]: this.subviewResources.length,\n\t\t\t\t[`${this.resourceKey}_after_filtering`]: this.filteredAndSortedSubviewResources.length,\n\t\t\t});\n\t\t},\n\t\tonUpdateFiltersLength(length: number) {\n\t\t\tthis.hasFilters = length > 0;\n\t\t},\n\t},\n\tmounted() {\n\t\tvoid this.onMounted();\n\t},\n\twatch: {\n\t\tisOwnerSubview() {\n\t\t\tthis.sendSubviewTelemetry();\n\t\t},\n\t\t'filters.ownedBy'(value) {\n\t\t\tif (value) {\n\t\t\t\tthis.setOwnerSubview(false);\n\t\t\t}\n\t\t\tthis.sendFiltersTelemetry('ownedBy');\n\t\t},\n\t\t'filters.sharedWith'() {\n\t\t\tthis.sendFiltersTelemetry('sharedWith');\n\t\t},\n\t\t'filters.search'() {\n\t\t\tthis.callDebounced('sendFiltersTelemetry', { debounceTime: 1000, trailing: true }, 'search');\n\t\t},\n\t\tsortBy(newValue) {\n\t\t\tthis.$emit('sort', newValue);\n\t\t\tthis.sendSortingTelemetry();\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.heading-wrapper {\n\tpadding-bottom: 1px; // Match input height\n}\n\n.filters-row {\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n\n.search {\n\tmax-width: 240px;\n}\n\n.list {\n\t//display: flex;\n\t//flex-direction: column;\n}\n\n.listWrapper {\n\theight: 100%;\n}\n\n.sort-and-filter {\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n\n.header-loading {\n\theight: 36px;\n}\n\n.card-loading {\n\theight: 69px;\n}\n\n.datatable {\n\tpadding-bottom: var(--spacing-s);\n}\n\n.github-stars-banner {\n\tmargin-bottom: var(--spacing-m);\n}\n</style>\n","<template>\n\t<n8n-card :class=\"$style['card-link']\" @click=\"onClick\">\n\t\t<template #prepend>\n\t\t\t<credential-icon :credential-type-name=\"credentialType ? credentialType.name : ''\" />\n\t\t</template>\n\t\t<template #header>\n\t\t\t<n8n-heading tag=\"h2\" bold class=\"ph-no-capture\" :class=\"$style['card-heading']\">\n\t\t\t\t{{ data.name }}\n\t\t\t</n8n-heading>\n\t\t</template>\n\t\t<n8n-text color=\"text-light\" size=\"small\">\n\t\t\t<span v-if=\"credentialType\">{{ credentialType.displayName }} | </span>\n\t\t\t<span v-show=\"data\"\n\t\t\t\t>{{ $locale.baseText('credentials.item.updated') }} <time-ago :date=\"data.updatedAt\" /> |\n\t\t\t</span>\n\t\t\t<span v-show=\"data\"\n\t\t\t\t>{{ $locale.baseText('credentials.item.created') }} {{ formattedCreatedAtDate }}\n\t\t\t</span>\n\t\t</n8n-text>\n\t\t<template #append>\n\t\t\t<div :class=\"$style['card-actions']\">\n\t\t\t\t<enterprise-edition :features=\"[EnterpriseEditionFeature.Sharing]\">\n\t\t\t\t\t<n8n-badge v-if=\"credentialPermissions.isOwner\" class=\"mr-xs\" theme=\"tertiary\" bold>\n\t\t\t\t\t\t{{ $locale.baseText('credentials.item.owner') }}\n\t\t\t\t\t</n8n-badge>\n\t\t\t\t</enterprise-edition>\n\t\t\t\t<n8n-action-toggle :actions=\"actions\" theme=\"dark\" @action=\"onAction\" />\n\t\t\t</div>\n\t\t</template>\n\t</n8n-card>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\nimport type { ICredentialsResponse, IUser } from '@/Interface';\nimport type { ICredentialType } from 'n8n-workflow';\nimport { EnterpriseEditionFeature } from '@/constants';\nimport { showMessage } from '@/mixins/showMessage';\nimport CredentialIcon from '@/components/CredentialIcon.vue';\nimport type { IPermissions } from '@/permissions';\nimport { getCredentialPermissions } from '@/permissions';\nimport dateformat from 'dateformat';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useCredentialsStore } from '@/stores/credentials.store';\n\nexport const CREDENTIAL_LIST_ITEM_ACTIONS = {\n\tOPEN: 'open',\n\tDELETE: 'delete',\n};\n\nexport default mixins(showMessage).extend({\n\tdata() {\n\t\treturn {\n\t\t\tEnterpriseEditionFeature,\n\t\t};\n\t},\n\tcomponents: {\n\t\tCredentialIcon,\n\t},\n\tprops: {\n\t\tdata: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t\tdefault: (): ICredentialsResponse => ({\n\t\t\t\tid: '',\n\t\t\t\tcreatedAt: '',\n\t\t\t\tupdatedAt: '',\n\t\t\t\ttype: '',\n\t\t\t\tname: '',\n\t\t\t\tnodesAccess: [],\n\t\t\t\tsharedWith: [],\n\t\t\t\townedBy: {} as IUser,\n\t\t\t}),\n\t\t},\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useCredentialsStore, useUIStore, useUsersStore),\n\t\tcurrentUser(): IUser | null {\n\t\t\treturn this.usersStore.currentUser;\n\t\t},\n\t\tcredentialType(): ICredentialType {\n\t\t\treturn this.credentialsStore.getCredentialTypeByName(this.data.type);\n\t\t},\n\t\tcredentialPermissions(): IPermissions | null {\n\t\t\treturn !this.currentUser ? null : getCredentialPermissions(this.currentUser, this.data);\n\t\t},\n\t\tactions(): Array<{ label: string; value: string }> {\n\t\t\tif (!this.credentialPermissions) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('credentials.item.open'),\n\t\t\t\t\tvalue: CREDENTIAL_LIST_ITEM_ACTIONS.OPEN,\n\t\t\t\t},\n\t\t\t].concat(\n\t\t\t\tthis.credentialPermissions.delete\n\t\t\t\t\t? [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('credentials.item.delete'),\n\t\t\t\t\t\t\t\tvalue: CREDENTIAL_LIST_ITEM_ACTIONS.DELETE,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ]\n\t\t\t\t\t: [],\n\t\t\t);\n\t\t},\n\t\tformattedCreatedAtDate(): string {\n\t\t\tconst currentYear = new Date().getFullYear();\n\n\t\t\treturn dateformat(\n\t\t\t\tthis.data.createdAt,\n\t\t\t\t`d mmmm${this.data.createdAt.startsWith(currentYear) ? '' : ', yyyy'}`,\n\t\t\t);\n\t\t},\n\t},\n\tmethods: {\n\t\tasync onClick() {\n\t\t\tthis.uiStore.openExistingCredential(this.data.id);\n\t\t},\n\t\tasync onAction(action: string) {\n\t\t\tif (action === CREDENTIAL_LIST_ITEM_ACTIONS.OPEN) {\n\t\t\t\tawait this.onClick();\n\t\t\t} else if (action === CREDENTIAL_LIST_ITEM_ACTIONS.DELETE) {\n\t\t\t\tconst deleteConfirmed = await this.confirmMessage(\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.deleteCredential.message',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinterpolate: { savedCredentialName: this.data.name },\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.deleteCredential.headline',\n\t\t\t\t\t),\n\t\t\t\t\tnull,\n\t\t\t\t\tthis.$locale.baseText(\n\t\t\t\t\t\t'credentialEdit.credentialEdit.confirmMessage.deleteCredential.confirmButtonText',\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\tif (deleteConfirmed) {\n\t\t\t\t\tawait this.credentialsStore.deleteCredential({ id: this.data.id });\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.card-link {\n\ttransition: box-shadow 0.3s ease;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tbox-shadow: 0 2px 8px rgba(#441c17, 0.1);\n\t}\n}\n\n.card-heading {\n\tfont-size: var(--font-size-s);\n}\n\n.card-actions {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n}\n</style>\n","<template>\n\t<resources-list-layout\n\t\tref=\"layout\"\n\t\tresource-key=\"credentials\"\n\t\t:resources=\"allCredentials\"\n\t\t:initialize=\"initialize\"\n\t\t:filters=\"filters\"\n\t\t:additional-filters-handler=\"onFilter\"\n\t\t:type-props=\"{ itemSize: 77 }\"\n\t\t@click:add=\"addCredential\"\n\t\t@update:filters=\"filters = $event\"\n\t>\n\t\t<template #default=\"{ data }\">\n\t\t\t<credential-card data-test-id=\"resources-list-item\" class=\"mb-2xs\" :data=\"data\" />\n\t\t</template>\n\t\t<template #filters=\"{ setKeyValue }\">\n\t\t\t<div class=\"mb-s\">\n\t\t\t\t<n8n-input-label\n\t\t\t\t\t:label=\"$locale.baseText('credentials.filters.type')\"\n\t\t\t\t\t:bold=\"false\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tcolor=\"text-base\"\n\t\t\t\t\tclass=\"mb-3xs\"\n\t\t\t\t/>\n\t\t\t\t<n8n-select\n\t\t\t\t\t:value=\"filters.type\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tmultiple\n\t\t\t\t\tfilterable\n\t\t\t\t\tref=\"typeInput\"\n\t\t\t\t\t:class=\"$style['type-input']\"\n\t\t\t\t\t@input=\"setKeyValue('type', $event)\"\n\t\t\t\t>\n\t\t\t\t\t<n8n-option\n\t\t\t\t\t\tv-for=\"credentialType in allCredentialTypes\"\n\t\t\t\t\t\t:key=\"credentialType.name\"\n\t\t\t\t\t\t:value=\"credentialType.name\"\n\t\t\t\t\t\t:label=\"credentialType.displayName\"\n\t\t\t\t\t/>\n\t\t\t\t</n8n-select>\n\t\t\t</div>\n\t\t</template>\n\t</resources-list-layout>\n</template>\n\n<script lang=\"ts\">\nimport { showMessage } from '@/mixins/showMessage';\nimport type { ICredentialsResponse, ICredentialTypeMap } from '@/Interface';\nimport mixins from 'vue-typed-mixins';\n\nimport SettingsView from './SettingsView.vue';\nimport ResourcesListLayout from '@/components/layouts/ResourcesListLayout.vue';\nimport PageViewLayout from '@/components/layouts/PageViewLayout.vue';\nimport PageViewLayoutList from '@/components/layouts/PageViewLayoutList.vue';\nimport CredentialCard from '@/components/CredentialCard.vue';\nimport type { ICredentialType } from 'n8n-workflow';\nimport TemplateCard from '@/components/TemplateCard.vue';\nimport { debounceHelper } from '@/mixins/debounce';\nimport ResourceOwnershipSelect from '@/components/forms/ResourceOwnershipSelect.ee.vue';\nimport ResourceFiltersDropdown from '@/components/forms/ResourceFiltersDropdown.vue';\nimport { CREDENTIAL_SELECT_MODAL_KEY } from '@/constants';\nimport type Vue from 'vue';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useNodeTypesStore } from '@/stores/nodeTypes.store';\nimport { useCredentialsStore } from '@/stores/credentials.store';\n\ntype IResourcesListLayoutInstance = Vue & { sendFiltersTelemetry: (source: string) => void };\n\nexport default mixins(showMessage, debounceHelper).extend({\n\tname: 'SettingsPersonalView',\n\tcomponents: {\n\t\tResourcesListLayout,\n\t\tTemplateCard,\n\t\tPageViewLayout,\n\t\tPageViewLayoutList,\n\t\tSettingsView,\n\t\tCredentialCard,\n\t\tResourceOwnershipSelect,\n\t\tResourceFiltersDropdown,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tfilters: {\n\t\t\t\tsearch: '',\n\t\t\t\townedBy: '',\n\t\t\t\tsharedWith: '',\n\t\t\t\ttype: '',\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(useCredentialsStore, useNodeTypesStore, useUIStore, useUsersStore),\n\t\tallCredentials(): ICredentialsResponse[] {\n\t\t\treturn this.credentialsStore.allCredentials;\n\t\t},\n\t\tallCredentialTypes(): ICredentialType[] {\n\t\t\treturn this.credentialsStore.allCredentialTypes;\n\t\t},\n\t\tcredentialTypesById(): ICredentialTypeMap {\n\t\t\treturn this.credentialsStore.credentialTypesById;\n\t\t},\n\t},\n\tmethods: {\n\t\taddCredential() {\n\t\t\tthis.uiStore.openModal(CREDENTIAL_SELECT_MODAL_KEY);\n\n\t\t\tthis.$telemetry.track('User clicked add cred button', {\n\t\t\t\tsource: 'Creds list',\n\t\t\t});\n\t\t},\n\t\tasync initialize() {\n\t\t\tconst loadPromises = [\n\t\t\t\tthis.credentialsStore.fetchAllCredentials(),\n\t\t\t\tthis.credentialsStore.fetchCredentialTypes(false),\n\t\t\t];\n\n\t\t\tif (this.nodeTypesStore.allNodeTypes.length === 0) {\n\t\t\t\tloadPromises.push(this.nodeTypesStore.getNodeTypes());\n\t\t\t}\n\n\t\t\tawait Promise.all(loadPromises);\n\n\t\t\tawait this.usersStore.fetchUsers(); // Can be loaded in the background, used for filtering\n\t\t},\n\t\tonFilter(\n\t\t\tresource: ICredentialsResponse,\n\t\t\tfilters: { type: string[]; search: string },\n\t\t\tmatches: boolean,\n\t\t): boolean {\n\t\t\tif (filters.type.length > 0) {\n\t\t\t\tmatches = matches && filters.type.includes(resource.type);\n\t\t\t}\n\n\t\t\tif (filters.search) {\n\t\t\t\tconst searchString = filters.search.toLowerCase();\n\n\t\t\t\tmatches =\n\t\t\t\t\tmatches ||\n\t\t\t\t\t(this.credentialTypesById[resource.type] &&\n\t\t\t\t\t\tthis.credentialTypesById[resource.type].displayName\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(searchString));\n\t\t\t}\n\n\t\t\treturn matches;\n\t\t},\n\t\tsendFiltersTelemetry(source: string) {\n\t\t\t(this.$refs.layout as IResourcesListLayoutInstance).sendFiltersTelemetry(source);\n\t\t},\n\t},\n\twatch: {\n\t\t'filters.type'() {\n\t\t\tthis.sendFiltersTelemetry('type');\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.type-input {\n\t--max-width: 265px;\n}\n\n.sidebarContainer ul {\n\tpadding: 0 !important;\n}\n</style>\n","<template>\n\t<ExecutionsList />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport ExecutionsList from '@/components/ExecutionsList.vue';\n\nexport default defineComponent({\n\tname: 'ExecutionsView',\n\tcomponents: {\n\t\tExecutionsList,\n\t},\n});\n</script>\n","<template>\n\t<n8n-card :class=\"$style.cardLink\" @click=\"onClick\">\n\t\t<template #header>\n\t\t\t<n8n-heading\n\t\t\t\ttag=\"h2\"\n\t\t\t\tbold\n\t\t\t\tclass=\"ph-no-capture\"\n\t\t\t\t:class=\"$style.cardHeading\"\n\t\t\t\tdata-test-id=\"workflow-card-name\"\n\t\t\t>\n\t\t\t\t{{ data.name }}\n\t\t\t</n8n-heading>\n\t\t</template>\n\t\t<div :class=\"$style.cardDescription\">\n\t\t\t<n8n-text color=\"text-light\" size=\"small\">\n\t\t\t\t<span v-show=\"data\"\n\t\t\t\t\t>{{ $locale.baseText('workflows.item.updated') }} <time-ago :date=\"data.updatedAt\" /> |\n\t\t\t\t</span>\n\t\t\t\t<span v-show=\"data\" class=\"mr-2xs\"\n\t\t\t\t\t>{{ $locale.baseText('workflows.item.created') }} {{ formattedCreatedAtDate }}\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\tv-if=\"settingsStore.areTagsEnabled && data.tags && data.tags.length > 0\"\n\t\t\t\t\tv-show=\"data\"\n\t\t\t\t>\n\t\t\t\t\t<n8n-tags\n\t\t\t\t\t\t:tags=\"data.tags\"\n\t\t\t\t\t\t:truncateAt=\"3\"\n\t\t\t\t\t\ttruncate\n\t\t\t\t\t\t@click=\"onClickTag\"\n\t\t\t\t\t\t@expand=\"onExpandTags\"\n\t\t\t\t\t\tdata-test-id=\"workflow-card-tags\"\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t</n8n-text>\n\t\t</div>\n\t\t<template #append>\n\t\t\t<div :class=\"$style.cardActions\">\n\t\t\t\t<enterprise-edition :features=\"[EnterpriseEditionFeature.Sharing]\">\n\t\t\t\t\t<n8n-badge v-if=\"workflowPermissions.isOwner\" class=\"mr-xs\" theme=\"tertiary\" bold>\n\t\t\t\t\t\t{{ $locale.baseText('workflows.item.owner') }}\n\t\t\t\t\t</n8n-badge>\n\t\t\t\t</enterprise-edition>\n\n\t\t\t\t<workflow-activator\n\t\t\t\t\tclass=\"mr-s\"\n\t\t\t\t\t:workflow-active=\"data.active\"\n\t\t\t\t\t:workflow-id=\"data.id\"\n\t\t\t\t\tref=\"activator\"\n\t\t\t\t\tdata-test-id=\"workflow-card-activator\"\n\t\t\t\t/>\n\n\t\t\t\t<n8n-action-toggle\n\t\t\t\t\t:actions=\"actions\"\n\t\t\t\t\ttheme=\"dark\"\n\t\t\t\t\t@action=\"onAction\"\n\t\t\t\t\tdata-test-id=\"workflow-card-actions\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</template>\n\t</n8n-card>\n</template>\n\n<script lang=\"ts\">\nimport mixins from 'vue-typed-mixins';\nimport type { IWorkflowDb, IUser, ITag } from '@/Interface';\nimport {\n\tDUPLICATE_MODAL_KEY,\n\tEnterpriseEditionFeature,\n\tVIEWS,\n\tWORKFLOW_SHARE_MODAL_KEY,\n} from '@/constants';\nimport { showMessage } from '@/mixins/showMessage';\nimport type { IPermissions } from '@/permissions';\nimport { getWorkflowPermissions } from '@/permissions';\nimport dateformat from 'dateformat';\nimport WorkflowActivator from '@/components/WorkflowActivator.vue';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\n\ntype ActivatorRef = InstanceType<typeof WorkflowActivator>;\n\nexport const WORKFLOW_LIST_ITEM_ACTIONS = {\n\tOPEN: 'open',\n\tSHARE: 'share',\n\tDUPLICATE: 'duplicate',\n\tDELETE: 'delete',\n};\n\nexport default mixins(showMessage).extend({\n\tdata() {\n\t\treturn {\n\t\t\tEnterpriseEditionFeature,\n\t\t};\n\t},\n\tcomponents: {\n\t\tWorkflowActivator,\n\t},\n\tprops: {\n\t\tdata: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t\tdefault: (): IWorkflowDb => ({\n\t\t\t\tid: '',\n\t\t\t\tcreatedAt: '',\n\t\t\t\tupdatedAt: '',\n\t\t\t\tactive: false,\n\t\t\t\tconnections: {},\n\t\t\t\tnodes: [],\n\t\t\t\tname: '',\n\t\t\t\tsharedWith: [],\n\t\t\t\townedBy: {} as IUser,\n\t\t\t\tversionId: '',\n\t\t\t}),\n\t\t},\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tcomputed: {\n\t\t...mapStores(useSettingsStore, useUIStore, useUsersStore, useWorkflowsStore),\n\t\tcurrentUser(): IUser {\n\t\t\treturn this.usersStore.currentUser || ({} as IUser);\n\t\t},\n\t\tworkflowPermissions(): IPermissions {\n\t\t\treturn getWorkflowPermissions(this.currentUser, this.data);\n\t\t},\n\t\tactions(): Array<{ label: string; value: string }> {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('workflows.item.open'),\n\t\t\t\t\tvalue: WORKFLOW_LIST_ITEM_ACTIONS.OPEN,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('workflows.item.share'),\n\t\t\t\t\tvalue: WORKFLOW_LIST_ITEM_ACTIONS.SHARE,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('workflows.item.duplicate'),\n\t\t\t\t\tvalue: WORKFLOW_LIST_ITEM_ACTIONS.DUPLICATE,\n\t\t\t\t},\n\t\t\t].concat(\n\t\t\t\tthis.workflowPermissions.delete\n\t\t\t\t\t? [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: this.$locale.baseText('workflows.item.delete'),\n\t\t\t\t\t\t\t\tvalue: WORKFLOW_LIST_ITEM_ACTIONS.DELETE,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t  ]\n\t\t\t\t\t: [],\n\t\t\t);\n\t\t},\n\t\tformattedCreatedAtDate(): string {\n\t\t\tconst currentYear = new Date().getFullYear();\n\n\t\t\treturn dateformat(\n\t\t\t\tthis.data.createdAt,\n\t\t\t\t`d mmmm${this.data.createdAt.startsWith(currentYear) ? '' : ', yyyy'}`,\n\t\t\t);\n\t\t},\n\t},\n\tmethods: {\n\t\tasync onClick(event?: PointerEvent) {\n\t\t\tif (event) {\n\t\t\t\tif ((this.$refs.activator as ActivatorRef)?.$el.contains(event.target as HTMLElement)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (event.metaKey || event.ctrlKey) {\n\t\t\t\t\tconst route = this.$router.resolve({\n\t\t\t\t\t\tname: VIEWS.WORKFLOW,\n\t\t\t\t\t\tparams: { name: this.data.id },\n\t\t\t\t\t});\n\t\t\t\t\twindow.open(route.href, '_blank');\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.$router.push({\n\t\t\t\tname: VIEWS.WORKFLOW,\n\t\t\t\tparams: { name: this.data.id },\n\t\t\t});\n\t\t},\n\t\tonClickTag(tagId: string, event: PointerEvent) {\n\t\t\tevent.stopPropagation();\n\n\t\t\tthis.$emit('click:tag', tagId, event);\n\t\t},\n\t\tonExpandTags() {\n\t\t\tthis.$emit('expand:tags');\n\t\t},\n\t\tasync onAction(action: string) {\n\t\t\tif (action === WORKFLOW_LIST_ITEM_ACTIONS.OPEN) {\n\t\t\t\tawait this.onClick();\n\t\t\t} else if (action === WORKFLOW_LIST_ITEM_ACTIONS.DUPLICATE) {\n\t\t\t\tthis.uiStore.openModalWithData({\n\t\t\t\t\tname: DUPLICATE_MODAL_KEY,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tid: this.data.id,\n\t\t\t\t\t\tname: this.data.name,\n\t\t\t\t\t\ttags: (this.data.tags || []).map((tag: ITag) => tag.id),\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else if (action === WORKFLOW_LIST_ITEM_ACTIONS.SHARE) {\n\t\t\t\tthis.uiStore.openModalWithData({\n\t\t\t\t\tname: WORKFLOW_SHARE_MODAL_KEY,\n\t\t\t\t\tdata: { id: this.data.id },\n\t\t\t\t});\n\n\t\t\t\tthis.$telemetry.track('User opened sharing modal', {\n\t\t\t\t\tworkflow_id: this.data.id,\n\t\t\t\t\tuser_id_sharer: this.currentUser.id,\n\t\t\t\t\tsub_view: this.$route.name === VIEWS.WORKFLOWS ? 'Workflows listing' : 'Workflow editor',\n\t\t\t\t});\n\t\t\t} else if (action === WORKFLOW_LIST_ITEM_ACTIONS.DELETE) {\n\t\t\t\tconst deleteConfirmed = await this.confirmMessage(\n\t\t\t\t\tthis.$locale.baseText('mainSidebar.confirmMessage.workflowDelete.message', {\n\t\t\t\t\t\tinterpolate: { workflowName: this.data.name },\n\t\t\t\t\t}),\n\t\t\t\t\tthis.$locale.baseText('mainSidebar.confirmMessage.workflowDelete.headline'),\n\t\t\t\t\t'warning',\n\t\t\t\t\tthis.$locale.baseText('mainSidebar.confirmMessage.workflowDelete.confirmButtonText'),\n\t\t\t\t\tthis.$locale.baseText('mainSidebar.confirmMessage.workflowDelete.cancelButtonText'),\n\t\t\t\t);\n\n\t\t\t\tif (deleteConfirmed === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.workflowsStore.deleteWorkflow(this.data.id);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.$showError(error, this.$locale.baseText('generic.deleteWorkflowError'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Reset tab title since workflow is deleted.\n\t\t\t\tthis.$showMessage({\n\t\t\t\t\ttitle: this.$locale.baseText('mainSidebar.showMessage.handleSelect1.title'),\n\t\t\t\t\ttype: 'success',\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.cardLink {\n\ttransition: box-shadow 0.3s ease;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tbox-shadow: 0 2px 8px rgba(#441c17, 0.1);\n\t}\n}\n\n.cardHeading {\n\tfont-size: var(--font-size-s);\n\tword-break: break-word;\n}\n\n.cardDescription {\n\tmin-height: 19px;\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.cardActions {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n}\n</style>\n","<template>\n\t<resources-list-layout\n\t\tref=\"layout\"\n\t\tresource-key=\"workflows\"\n\t\t:resources=\"allWorkflows\"\n\t\t:filters=\"filters\"\n\t\t:additional-filters-handler=\"onFilter\"\n\t\t:show-aside=\"allWorkflows.length > 0\"\n\t\t:shareable=\"isShareable\"\n\t\t:initialize=\"initialize\"\n\t\t@click:add=\"addWorkflow\"\n\t\t@update:filters=\"filters = $event\"\n\t>\n\t\t<template #default=\"{ data, updateItemSize }\">\n\t\t\t<workflow-card\n\t\t\t\tdata-test-id=\"resources-list-item\"\n\t\t\t\tclass=\"mb-2xs\"\n\t\t\t\t:data=\"data\"\n\t\t\t\t@expand:tags=\"updateItemSize(data)\"\n\t\t\t\t@click:tag=\"onClickTag\"\n\t\t\t/>\n\t\t</template>\n\t\t<template #empty>\n\t\t\t<div class=\"text-center mt-s\">\n\t\t\t\t<n8n-heading tag=\"h2\" size=\"xlarge\" class=\"mb-2xs\">\n\t\t\t\t\t{{\n\t\t\t\t\t\t$locale.baseText(\n\t\t\t\t\t\t\tcurrentUser.firstName\n\t\t\t\t\t\t\t\t? 'workflows.empty.heading'\n\t\t\t\t\t\t\t\t: 'workflows.empty.heading.userNotSetup',\n\t\t\t\t\t\t\t{ interpolate: { name: currentUser.firstName } },\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</n8n-heading>\n\t\t\t\t<n8n-text size=\"large\" color=\"text-base\">\n\t\t\t\t\t{{ $locale.baseText('workflows.empty.description') }}\n\t\t\t\t</n8n-text>\n\t\t\t</div>\n\t\t\t<div :class=\"['text-center', 'mt-2xl', $style.actionsContainer]\">\n\t\t\t\t<n8n-card\n\t\t\t\t\t:class=\"$style.emptyStateCard\"\n\t\t\t\t\thoverable\n\t\t\t\t\t@click=\"addWorkflow\"\n\t\t\t\t\tdata-test-id=\"new-workflow-card\"\n\t\t\t\t>\n\t\t\t\t\t<n8n-icon :class=\"$style.emptyStateCardIcon\" icon=\"file\" />\n\t\t\t\t\t<n8n-text size=\"large\" class=\"mt-xs\" color=\"text-base\">\n\t\t\t\t\t\t{{ $locale.baseText('workflows.empty.startFromScratch') }}\n\t\t\t\t\t</n8n-text>\n\t\t\t\t</n8n-card>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #filters=\"{ setKeyValue }\">\n\t\t\t<div class=\"mb-s\" v-if=\"settingsStore.areTagsEnabled\">\n\t\t\t\t<n8n-input-label\n\t\t\t\t\t:label=\"$locale.baseText('workflows.filters.tags')\"\n\t\t\t\t\t:bold=\"false\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tcolor=\"text-base\"\n\t\t\t\t\tclass=\"mb-3xs\"\n\t\t\t\t/>\n\t\t\t\t<TagsDropdown\n\t\t\t\t\t:placeholder=\"$locale.baseText('workflowOpen.filterWorkflows')\"\n\t\t\t\t\t:currentTagIds=\"filters.tags\"\n\t\t\t\t\t:createEnabled=\"false\"\n\t\t\t\t\t@update=\"setKeyValue('tags', $event)\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class=\"mb-s\">\n\t\t\t\t<n8n-input-label\n\t\t\t\t\t:label=\"$locale.baseText('workflows.filters.status')\"\n\t\t\t\t\t:bold=\"false\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tcolor=\"text-base\"\n\t\t\t\t\tclass=\"mb-3xs\"\n\t\t\t\t/>\n\t\t\t\t<n8n-select :value=\"filters.status\" @input=\"setKeyValue('status', $event)\" size=\"medium\">\n\t\t\t\t\t<n8n-option\n\t\t\t\t\t\tv-for=\"option in statusFilterOptions\"\n\t\t\t\t\t\t:key=\"option.label\"\n\t\t\t\t\t\t:label=\"option.label\"\n\t\t\t\t\t\t:value=\"option.value\"\n\t\t\t\t\t>\n\t\t\t\t\t</n8n-option>\n\t\t\t\t</n8n-select>\n\t\t\t</div>\n\t\t</template>\n\t</resources-list-layout>\n</template>\n\n<script lang=\"ts\">\nimport { showMessage } from '@/mixins/showMessage';\nimport mixins from 'vue-typed-mixins';\n\nimport SettingsView from './SettingsView.vue';\nimport ResourcesListLayout from '@/components/layouts/ResourcesListLayout.vue';\nimport PageViewLayout from '@/components/layouts/PageViewLayout.vue';\nimport PageViewLayoutList from '@/components/layouts/PageViewLayoutList.vue';\nimport WorkflowCard from '@/components/WorkflowCard.vue';\nimport TemplateCard from '@/components/TemplateCard.vue';\nimport { EnterpriseEditionFeature, VIEWS } from '@/constants';\nimport { debounceHelper } from '@/mixins/debounce';\nimport type Vue from 'vue';\nimport type { ITag, IUser, IWorkflowDb } from '@/Interface';\nimport TagsDropdown from '@/components/TagsDropdown.vue';\nimport { mapStores } from 'pinia';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useSettingsStore } from '@/stores/settings.store';\nimport { useUsersStore } from '@/stores/users.store';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useCredentialsStore } from '@/stores/credentials.store';\n\ntype IResourcesListLayoutInstance = Vue & { sendFiltersTelemetry: (source: string) => void };\n\nconst StatusFilter = {\n\tACTIVE: true,\n\tDEACTIVATED: false,\n\tALL: '',\n};\n\nconst WorkflowsView = mixins(showMessage, debounceHelper).extend({\n\tname: 'WorkflowsView',\n\tcomponents: {\n\t\tResourcesListLayout,\n\t\tTemplateCard,\n\t\tPageViewLayout,\n\t\tPageViewLayoutList,\n\t\tSettingsView,\n\t\tWorkflowCard,\n\t\tTagsDropdown,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tfilters: {\n\t\t\t\tsearch: '',\n\t\t\t\townedBy: '',\n\t\t\t\tsharedWith: '',\n\t\t\t\tstatus: StatusFilter.ALL,\n\t\t\t\ttags: [] as string[],\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapStores(\n\t\t\tuseSettingsStore,\n\t\t\tuseUIStore,\n\t\t\tuseUsersStore,\n\t\t\tuseWorkflowsStore,\n\t\t\tuseCredentialsStore,\n\t\t),\n\t\tcurrentUser(): IUser {\n\t\t\treturn this.usersStore.currentUser || ({} as IUser);\n\t\t},\n\t\tallWorkflows(): IWorkflowDb[] {\n\t\t\treturn this.workflowsStore.allWorkflows;\n\t\t},\n\t\tisShareable(): boolean {\n\t\t\treturn this.settingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.Sharing);\n\t\t},\n\t\thasActiveWorkflows(): boolean {\n\t\t\treturn !!this.workflowsStore.activeWorkflows.length;\n\t\t},\n\t\tstatusFilterOptions(): Array<{ label: string; value: string | boolean }> {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('workflows.filters.status.all'),\n\t\t\t\t\tvalue: StatusFilter.ALL,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('workflows.filters.status.active'),\n\t\t\t\t\tvalue: StatusFilter.ACTIVE,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: this.$locale.baseText('workflows.filters.status.deactivated'),\n\t\t\t\t\tvalue: StatusFilter.DEACTIVATED,\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t},\n\tmethods: {\n\t\taddWorkflow() {\n\t\t\tthis.uiStore.nodeViewInitialized = false;\n\t\t\tvoid this.$router.push({ name: VIEWS.NEW_WORKFLOW });\n\n\t\t\tthis.$telemetry.track('User clicked add workflow button', {\n\t\t\t\tsource: 'Workflows list',\n\t\t\t});\n\t\t},\n\t\tasync initialize() {\n\t\t\tawait Promise.all([\n\t\t\t\tthis.usersStore.fetchUsers(),\n\t\t\t\tthis.workflowsStore.fetchAllWorkflows(),\n\t\t\t\tthis.workflowsStore.fetchActiveWorkflows(),\n\t\t\t\tthis.credentialsStore.fetchAllCredentials(),\n\t\t\t]);\n\t\t},\n\t\tonClickTag(tagId: string, event: PointerEvent) {\n\t\t\tif (!this.filters.tags.includes(tagId)) {\n\t\t\t\tthis.filters.tags.push(tagId);\n\t\t\t}\n\t\t},\n\t\tonFilter(\n\t\t\tresource: IWorkflowDb,\n\t\t\tfilters: { tags: string[]; search: string; status: string | boolean },\n\t\t\tmatches: boolean,\n\t\t): boolean {\n\t\t\tif (this.settingsStore.areTagsEnabled && filters.tags.length > 0) {\n\t\t\t\tmatches =\n\t\t\t\t\tmatches &&\n\t\t\t\t\tfilters.tags.every((tag) =>\n\t\t\t\t\t\t(resource.tags as ITag[])?.find((resourceTag) =>\n\t\t\t\t\t\t\ttypeof resourceTag === 'object'\n\t\t\t\t\t\t\t\t? `${resourceTag.id}` === `${tag}`\n\t\t\t\t\t\t\t\t: `${resourceTag}` === `${tag}`,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (filters.status !== '') {\n\t\t\t\tmatches = matches && resource.active === filters.status;\n\t\t\t}\n\n\t\t\treturn matches;\n\t\t},\n\t\tsendFiltersTelemetry(source: string) {\n\t\t\t(this.$refs.layout as IResourcesListLayoutInstance).sendFiltersTelemetry(source);\n\t\t},\n\t},\n\twatch: {\n\t\t'filters.tags'() {\n\t\t\tthis.sendFiltersTelemetry('tags');\n\t\t},\n\t},\n\tmounted() {\n\t\tvoid this.usersStore.showPersonalizationSurvey();\n\t},\n});\n\nexport default WorkflowsView;\n</script>\n\n<style lang=\"scss\" module>\n.actionsContainer {\n\tdisplay: flex;\n\tjustify-content: center;\n}\n\n.emptyStateCard {\n\twidth: 192px;\n\ttext-align: center;\n\tdisplay: inline-flex;\n\theight: 230px;\n\n\t& + & {\n\t\tmargin-left: var(--spacing-s);\n\t}\n\n\t&:hover {\n\t\tsvg {\n\t\t\tcolor: var(--color-primary);\n\t\t}\n\t}\n}\n\n.emptyStateCardIcon {\n\tfont-size: 48px;\n\n\tsvg {\n\t\twidth: 48px !important;\n\t\tcolor: var(--color-foreground-dark);\n\t\ttransition: color 0.3s ease;\n\t}\n}\n</style>\n","<script lang=\"ts\" setup>\nimport type { ComponentPublicInstance, PropType } from 'vue';\nimport { computed, nextTick, onMounted, ref, watch } from 'vue';\nimport type { EnvironmentVariable, Rule, RuleGroup } from '@/Interface';\nimport { useI18n, useToast, useCopyToClipboard } from '@/composables';\nimport { EnterpriseEditionFeature } from '@/constants';\nimport { useSettingsStore, useUsersStore } from '@/stores';\nimport { getVariablesPermissions } from '@/permissions';\n\nconst { i18n } = useI18n();\nconst copyToClipboard = useCopyToClipboard();\nconst { showMessage } = useToast();\nconst settingsStore = useSettingsStore();\nconst usersStore = useUsersStore();\n\nconst emit = defineEmits(['save', 'cancel', 'edit', 'delete']);\n\nconst props = defineProps({\n\tdata: {\n\t\ttype: Object as PropType<EnvironmentVariable>,\n\t\tdefault: () => ({}),\n\t},\n\tediting: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t},\n});\n\nconst permissions = getVariablesPermissions(usersStore.currentUser);\nconst modelValue = ref<EnvironmentVariable>({ ...props.data });\n\nconst formValidationStatus = ref<Record<string, boolean>>({\n\tkey: false,\n\tvalue: false,\n});\nconst formValid = computed(() => {\n\treturn formValidationStatus.value.key && formValidationStatus.value.value;\n});\n\nconst keyInputRef = ref<ComponentPublicInstance & { inputRef?: HTMLElement }>();\nconst valueInputRef = ref<HTMLElement>();\n\nconst usage = ref(`$vars.${props.data.key}`);\n\nconst isFeatureEnabled = computed(() =>\n\tsettingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.Variables),\n);\n\nconst showActions = computed(\n\t() => isFeatureEnabled.value && (permissions.edit || permissions.delete),\n);\n\nonMounted(() => {\n\tfocusFirstInput();\n});\n\nconst keyValidationRules: Array<Rule | RuleGroup> = [\n\t{ name: 'REQUIRED' },\n\t{ name: 'MAX_LENGTH', config: { maximum: 50 } },\n\t{\n\t\tname: 'MATCH_REGEX',\n\t\tconfig: {\n\t\t\tregex: /^[a-zA-Z]/,\n\t\t\tmessage: i18n.baseText('variables.editing.key.error.startsWithLetter'),\n\t\t},\n\t},\n\t{\n\t\tname: 'MATCH_REGEX',\n\t\tconfig: {\n\t\t\tregex: /^[a-zA-Z][a-zA-Z0-9_]*$/,\n\t\t\tmessage: i18n.baseText('variables.editing.key.error.jsonKey'),\n\t\t},\n\t},\n];\n\nconst valueValidationRules: Array<Rule | RuleGroup> = [\n\t{ name: 'MAX_LENGTH', config: { maximum: 220 } },\n];\n\nwatch(\n\t() => modelValue.value.key,\n\t() => {\n\t\tnextTick(() => {\n\t\t\tif (formValidationStatus.value.key) {\n\t\t\t\tupdateUsageSyntax();\n\t\t\t}\n\t\t});\n\t},\n);\n\nfunction updateUsageSyntax() {\n\tusage.value = `$vars.${modelValue.value.key || props.data.key}`;\n}\n\nasync function onCancel() {\n\tmodelValue.value = { ...props.data };\n\temit('cancel', modelValue.value);\n}\n\nasync function onSave() {\n\temit('save', modelValue.value);\n}\n\nasync function onEdit() {\n\temit('edit', modelValue.value);\n\n\tawait nextTick();\n\n\tfocusFirstInput();\n}\n\nasync function onDelete() {\n\temit('delete', modelValue.value);\n}\n\nfunction onValidate(key: string, value: boolean) {\n\tformValidationStatus.value[key] = value;\n}\n\nfunction onUsageClick() {\n\tcopyToClipboard(usage.value);\n\tshowMessage({\n\t\ttitle: i18n.baseText('variables.row.usage.copiedToClipboard'),\n\t\ttype: 'success',\n\t});\n}\n\nfunction focusFirstInput() {\n\tkeyInputRef.value?.inputRef?.focus?.();\n}\n</script>\n\n<template>\n\t<tr :class=\"$style.variablesRow\" data-test-id=\"variables-row\">\n\t\t<td class=\"variables-key-column\">\n\t\t\t<div>\n\t\t\t\t<span v-if=\"!editing\">{{ data.key }}</span>\n\t\t\t\t<n8n-form-input\n\t\t\t\t\tv-else\n\t\t\t\t\tlabel\n\t\t\t\t\tname=\"key\"\n\t\t\t\t\tdata-test-id=\"variable-row-key-input\"\n\t\t\t\t\t:placeholder=\"i18n.baseText('variables.editing.key.placeholder')\"\n\t\t\t\t\trequired\n\t\t\t\t\tvalidateOnBlur\n\t\t\t\t\t:validationRules=\"keyValidationRules\"\n\t\t\t\t\tv-model=\"modelValue.key\"\n\t\t\t\t\tref=\"keyInputRef\"\n\t\t\t\t\t@validate=\"(value) => onValidate('key', value)\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</td>\n\t\t<td class=\"variables-value-column\">\n\t\t\t<div>\n\t\t\t\t<span v-if=\"!editing\">{{ data.value }}</span>\n\t\t\t\t<n8n-form-input\n\t\t\t\t\tv-else\n\t\t\t\t\tlabel\n\t\t\t\t\tname=\"value\"\n\t\t\t\t\tdata-test-id=\"variable-row-value-input\"\n\t\t\t\t\t:placeholder=\"i18n.baseText('variables.editing.value.placeholder')\"\n\t\t\t\t\tvalidateOnBlur\n\t\t\t\t\t:validationRules=\"valueValidationRules\"\n\t\t\t\t\tv-model=\"modelValue.value\"\n\t\t\t\t\tref=\"valueInputRef\"\n\t\t\t\t\t@validate=\"(value) => onValidate('value', value)\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</td>\n\t\t<td class=\"variables-usage-column\">\n\t\t\t<div>\n\t\t\t\t<n8n-tooltip placement=\"top\">\n\t\t\t\t\t<span v-if=\"modelValue.key && usage\" :class=\"$style.usageSyntax\" @click=\"onUsageClick\">{{\n\t\t\t\t\t\tusage\n\t\t\t\t\t}}</span>\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t{{ i18n.baseText('variables.row.usage.copyToClipboard') }}\n\t\t\t\t\t</template>\n\t\t\t\t</n8n-tooltip>\n\t\t\t</div>\n\t\t</td>\n\t\t<td v-if=\"isFeatureEnabled\">\n\t\t\t<div v-if=\"editing\" :class=\"$style.buttons\">\n\t\t\t\t<n8n-button\n\t\t\t\t\tdata-test-id=\"variable-row-cancel-button\"\n\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\tclass=\"mr-xs\"\n\t\t\t\t\t@click=\"onCancel\"\n\t\t\t\t>\n\t\t\t\t\t{{ i18n.baseText('variables.row.button.cancel') }}\n\t\t\t\t</n8n-button>\n\t\t\t\t<n8n-button\n\t\t\t\t\tdata-test-id=\"variable-row-save-button\"\n\t\t\t\t\t:disabled=\"!formValid\"\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t@click=\"onSave\"\n\t\t\t\t>\n\t\t\t\t\t{{ i18n.baseText('variables.row.button.save') }}\n\t\t\t\t</n8n-button>\n\t\t\t</div>\n\t\t\t<div v-else :class=\"[$style.buttons, $style.hoverButtons]\">\n\t\t\t\t<n8n-tooltip :disabled=\"permissions.edit\" placement=\"top\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\tdata-test-id=\"variable-row-edit-button\"\n\t\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t\tclass=\"mr-xs\"\n\t\t\t\t\t\t\t:disabled=\"!permissions.edit\"\n\t\t\t\t\t\t\t@click=\"onEdit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ i18n.baseText('variables.row.button.edit') }}\n\t\t\t\t\t\t</n8n-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t{{ i18n.baseText('variables.row.button.edit.onlyOwnerCanSave') }}\n\t\t\t\t\t</template>\n\t\t\t\t</n8n-tooltip>\n\t\t\t\t<n8n-tooltip :disabled=\"permissions.delete\" placement=\"top\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<n8n-button\n\t\t\t\t\t\t\tdata-test-id=\"variable-row-delete-button\"\n\t\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t\t:disabled=\"!permissions.delete\"\n\t\t\t\t\t\t\t@click=\"onDelete\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ i18n.baseText('variables.row.button.delete') }}\n\t\t\t\t\t\t</n8n-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<template #content>\n\t\t\t\t\t\t{{ i18n.baseText('variables.row.button.delete.onlyOwnerCanDelete') }}\n\t\t\t\t\t</template>\n\t\t\t\t</n8n-tooltip>\n\t\t\t</div>\n\t\t</td>\n\t</tr>\n</template>\n\n<style lang=\"scss\" module>\n.variablesRow {\n\t&:hover {\n\t\t.hoverButtons {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\n\ttd {\n\t\t> div {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tmin-height: 40px;\n\t\t}\n\t}\n}\n\n.buttons {\n\tdisplay: flex;\n\tflex-wrap: nowrap;\n\tjustify-content: flex-end;\n}\n\n.hoverButtons {\n\topacity: 0;\n\ttransition: opacity 0.2s ease;\n}\n\n.usageSyntax {\n\tcursor: pointer;\n\tbackground: var(--color-success-tint-2);\n\tcolor: var(--color-success);\n\tfont-family: var(--font-family-monospace);\n\tfont-size: var(--font-size-s);\n}\n</style>\n","<script lang=\"ts\" setup>\nimport { computed, ref } from 'vue';\nimport { useEnvironmentsStore, useUIStore, useSettingsStore, useUsersStore } from '@/stores';\nimport { useI18n, useTelemetry, useToast, useUpgradeLink, useMessage } from '@/composables';\n\nimport ResourcesListLayout from '@/components/layouts/ResourcesListLayout.vue';\nimport VariablesRow from '@/components/VariablesRow.vue';\n\nimport { EnterpriseEditionFeature } from '@/constants';\nimport type {\n\tDatatableColumn,\n\tEnvironmentVariable,\n\tTemporaryEnvironmentVariable,\n} from '@/Interface';\nimport { uid } from 'n8n-design-system/utils';\nimport { getVariablesPermissions } from '@/permissions';\n\nconst settingsStore = useSettingsStore();\nconst environmentsStore = useEnvironmentsStore();\nconst usersStore = useUsersStore();\nconst uiStore = useUIStore();\nconst telemetry = useTelemetry();\nconst { i18n } = useI18n();\nconst message = useMessage();\n\nconst layoutRef = ref<InstanceType<typeof ResourcesListLayout> | null>(null);\n\nconst { showError } = useToast();\n\nconst TEMPORARY_VARIABLE_UID_BASE = '@tmpvar';\n\nconst allVariables = ref<Array<EnvironmentVariable | TemporaryEnvironmentVariable>>([]);\nconst editMode = ref<Record<string, boolean>>({});\n\nconst permissions = getVariablesPermissions(usersStore.currentUser);\n\nconst isFeatureEnabled = computed(() =>\n\tsettingsStore.isEnterpriseFeatureEnabled(EnterpriseEditionFeature.Variables),\n);\nconst canCreateVariables = computed(() => isFeatureEnabled.value && permissions.create);\n\nconst datatableColumns = computed<DatatableColumn[]>(() => [\n\t{\n\t\tid: 0,\n\t\tpath: 'name',\n\t\tlabel: i18n.baseText('variables.table.key'),\n\t\tclasses: ['variables-key-column'],\n\t},\n\t{\n\t\tid: 1,\n\t\tpath: 'value',\n\t\tlabel: i18n.baseText('variables.table.value'),\n\t\tclasses: ['variables-value-column'],\n\t},\n\t{\n\t\tid: 2,\n\t\tpath: 'usage',\n\t\tlabel: i18n.baseText('variables.table.usage'),\n\t\tclasses: ['variables-usage-column'],\n\t},\n\t...(isFeatureEnabled.value\n\t\t? [\n\t\t\t\t{\n\t\t\t\t\tid: 3,\n\t\t\t\t\tpath: 'actions',\n\t\t\t\t\tlabel: '',\n\t\t\t\t},\n\t\t  ]\n\t\t: []),\n]);\n\nconst contextBasedTranslationKeys = computed(() => uiStore.contextBasedTranslationKeys);\nconst { upgradeLinkUrl } = useUpgradeLink({\n\tdefault: '&source=variables',\n\tdesktop: '&utm_campaign=upgrade-variables',\n});\n\nconst newlyAddedVariableIds = ref<number[]>([]);\n\nconst nameSortFn = (a: EnvironmentVariable, b: EnvironmentVariable, direction: 'asc' | 'desc') => {\n\tif (`${a.id}`.startsWith(TEMPORARY_VARIABLE_UID_BASE)) {\n\t\treturn -1;\n\t} else if (`${b.id}`.startsWith(TEMPORARY_VARIABLE_UID_BASE)) {\n\t\treturn 1;\n\t} else if (\n\t\tnewlyAddedVariableIds.value.includes(a.id) &&\n\t\tnewlyAddedVariableIds.value.includes(b.id)\n\t) {\n\t\treturn newlyAddedVariableIds.value.indexOf(a.id) - newlyAddedVariableIds.value.indexOf(b.id);\n\t} else if (newlyAddedVariableIds.value.includes(a.id)) {\n\t\treturn -1;\n\t} else if (newlyAddedVariableIds.value.includes(b.id)) {\n\t\treturn 1;\n\t}\n\n\treturn direction === 'asc'\n\t\t? displayName(a).trim().localeCompare(displayName(b).trim())\n\t\t: displayName(b).trim().localeCompare(displayName(a).trim());\n};\nconst sortFns = {\n\tnameAsc: (a: EnvironmentVariable, b: EnvironmentVariable) => {\n\t\treturn nameSortFn(a, b, 'asc');\n\t},\n\tnameDesc: (a: EnvironmentVariable, b: EnvironmentVariable) => {\n\t\treturn nameSortFn(a, b, 'desc');\n\t},\n};\n\nfunction resetNewVariablesList() {\n\tnewlyAddedVariableIds.value = [];\n}\n\nasync function initialize() {\n\tawait environmentsStore.fetchAllVariables();\n\n\tallVariables.value = [...environmentsStore.variables];\n}\n\nfunction addTemporaryVariable() {\n\tconst temporaryVariable: TemporaryEnvironmentVariable = {\n\t\tid: uid(TEMPORARY_VARIABLE_UID_BASE),\n\t\tkey: '',\n\t\tvalue: '',\n\t};\n\n\tif (layoutRef.value) {\n\t\t// Reset scroll position\n\t\tif (layoutRef.value.$refs.listWrapperRef) {\n\t\t\tlayoutRef.value.$refs.listWrapperRef.scrollTop = 0;\n\t\t}\n\n\t\t// Reset pagination\n\t\tif (layoutRef.value.currentPage !== 1) {\n\t\t\tlayoutRef.value.setCurrentPage(1);\n\t\t}\n\t}\n\n\tallVariables.value.unshift(temporaryVariable);\n\teditMode.value[temporaryVariable.id] = true;\n\n\ttelemetry.track('User clicked add variable button');\n}\n\nasync function saveVariable(data: EnvironmentVariable | TemporaryEnvironmentVariable) {\n\tlet updatedVariable: EnvironmentVariable;\n\n\ttry {\n\t\tif (typeof data.id === 'string' && data.id.startsWith(TEMPORARY_VARIABLE_UID_BASE)) {\n\t\t\tconst { id, ...rest } = data;\n\t\t\tupdatedVariable = await environmentsStore.createVariable(rest);\n\t\t\tallVariables.value.unshift(updatedVariable);\n\t\t\tallVariables.value = allVariables.value.filter((variable) => variable.id !== data.id);\n\t\t\tnewlyAddedVariableIds.value.unshift(updatedVariable.id);\n\t\t} else {\n\t\t\tupdatedVariable = await environmentsStore.updateVariable(data as EnvironmentVariable);\n\t\t\tallVariables.value = allVariables.value.map((variable) =>\n\t\t\t\tvariable.id === data.id ? updatedVariable : variable,\n\t\t\t);\n\t\t\ttoggleEditing(updatedVariable);\n\t\t}\n\t} catch (error) {\n\t\tshowError(error, i18n.baseText('variables.errors.save'));\n\t}\n}\n\nfunction toggleEditing(data: EnvironmentVariable) {\n\teditMode.value = {\n\t\t...editMode.value,\n\t\t[data.id]: !editMode.value[data.id],\n\t};\n}\n\nfunction cancelEditing(data: EnvironmentVariable | TemporaryEnvironmentVariable) {\n\tif (typeof data.id === 'string' && data.id.startsWith(TEMPORARY_VARIABLE_UID_BASE)) {\n\t\tallVariables.value = allVariables.value.filter((variable) => variable.id !== data.id);\n\t} else {\n\t\ttoggleEditing(data as EnvironmentVariable);\n\t}\n}\n\nasync function deleteVariable(data: EnvironmentVariable) {\n\ttry {\n\t\tawait message.confirm(\n\t\t\ti18n.baseText('variables.modals.deleteConfirm.message', { interpolate: { name: data.key } }),\n\t\t\ti18n.baseText('variables.modals.deleteConfirm.title'),\n\t\t\t{\n\t\t\t\tconfirmButtonText: i18n.baseText('variables.modals.deleteConfirm.confirmButton'),\n\t\t\t\tcancelButtonText: i18n.baseText('variables.modals.deleteConfirm.cancelButton'),\n\t\t\t},\n\t\t);\n\t} catch (e) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait environmentsStore.deleteVariable(data);\n\t\tallVariables.value = allVariables.value.filter((variable) => variable.id !== data.id);\n\t} catch (error) {\n\t\tshowError(error, i18n.baseText('variables.errors.delete'));\n\t}\n}\n\nfunction goToUpgrade() {\n\twindow.open(upgradeLinkUrl.value, '_blank');\n}\n\nfunction displayName(resource: EnvironmentVariable) {\n\treturn resource.key;\n}\n</script>\n\n<template>\n\t<ResourcesListLayout\n\t\tref=\"layoutRef\"\n\t\tresource-key=\"variables\"\n\t\t:disabled=\"!isFeatureEnabled\"\n\t\t:resources=\"allVariables\"\n\t\t:initialize=\"initialize\"\n\t\t:shareable=\"false\"\n\t\t:displayName=\"displayName\"\n\t\t:sortFns=\"sortFns\"\n\t\t:sortOptions=\"['nameAsc', 'nameDesc']\"\n\t\t:showFiltersDropdown=\"false\"\n\t\ttype=\"datatable\"\n\t\t:type-props=\"{ columns: datatableColumns }\"\n\t\t@sort=\"resetNewVariablesList\"\n\t\t@click:add=\"addTemporaryVariable\"\n\t>\n\t\t<template #add-button>\n\t\t\t<n8n-tooltip placement=\"top\" :disabled=\"canCreateVariables\">\n\t\t\t\t<div>\n\t\t\t\t\t<n8n-button\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tblock\n\t\t\t\t\t\t:disabled=\"!canCreateVariables\"\n\t\t\t\t\t\t@click=\"addTemporaryVariable\"\n\t\t\t\t\t\tdata-test-id=\"resources-list-add\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $locale.baseText(`variables.add`) }}\n\t\t\t\t\t</n8n-button>\n\t\t\t\t</div>\n\t\t\t\t<template #content>\n\t\t\t\t\t<span v-if=\"!isFeatureEnabled\">{{\n\t\t\t\t\t\ti18n.baseText(`variables.add.unavailable${allVariables.length === 0 ? '.empty' : ''}`)\n\t\t\t\t\t}}</span>\n\t\t\t\t\t<span v-else>{{ i18n.baseText('variables.add.onlyOwnerCanCreate') }}</span>\n\t\t\t\t</template>\n\t\t\t</n8n-tooltip>\n\t\t</template>\n\t\t<template v-if=\"!isFeatureEnabled\" #preamble>\n\t\t\t<n8n-action-box\n\t\t\t\tclass=\"mb-m\"\n\t\t\t\tdata-test-id=\"unavailable-resources-list\"\n\t\t\t\temoji=\"👋\"\n\t\t\t\t:heading=\"$locale.baseText(contextBasedTranslationKeys.variables.unavailable.title)\"\n\t\t\t\t:description=\"\n\t\t\t\t\t$locale.baseText(contextBasedTranslationKeys.variables.unavailable.description)\n\t\t\t\t\"\n\t\t\t\t:buttonText=\"$locale.baseText(contextBasedTranslationKeys.variables.unavailable.button)\"\n\t\t\t\tbuttonType=\"secondary\"\n\t\t\t\t@click=\"goToUpgrade\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-if=\"!isFeatureEnabled\" #empty>\n\t\t\t<n8n-action-box\n\t\t\t\tdata-test-id=\"unavailable-resources-list\"\n\t\t\t\temoji=\"👋\"\n\t\t\t\t:heading=\"$locale.baseText(contextBasedTranslationKeys.variables.unavailable.title)\"\n\t\t\t\t:description=\"\n\t\t\t\t\t$locale.baseText(contextBasedTranslationKeys.variables.unavailable.description)\n\t\t\t\t\"\n\t\t\t\t:buttonText=\"$locale.baseText(contextBasedTranslationKeys.variables.unavailable.button)\"\n\t\t\t\tbuttonType=\"secondary\"\n\t\t\t\t@click=\"goToUpgrade\"\n\t\t\t/>\n\t\t</template>\n\t\t<template #default=\"{ data }\">\n\t\t\t<VariablesRow\n\t\t\t\t:key=\"data.id\"\n\t\t\t\t:editing=\"editMode[data.id]\"\n\t\t\t\t:data=\"data\"\n\t\t\t\t@save=\"saveVariable\"\n\t\t\t\t@edit=\"toggleEditing\"\n\t\t\t\t@cancel=\"cancelEditing\"\n\t\t\t\t@delete=\"deleteVariable\"\n\t\t\t/>\n\t\t</template>\n\t</ResourcesListLayout>\n</template>\n\n<style lang=\"scss\" module>\n.type-input {\n\t--max-width: 265px;\n}\n\n.sidebarContainer ul {\n\tpadding: 0 !important;\n}\n</style>\n\n<style lang=\"scss\" scoped>\n@use 'n8n-design-system/css/common/var.scss';\n\n:deep(.datatable) {\n\ttable {\n\t\ttable-layout: fixed;\n\t}\n\n\tth,\n\ttd {\n\t\twidth: 25%;\n\n\t\t@media screen and (max-width: var.$md) {\n\t\t\twidth: 33.33%;\n\t\t}\n\n\t\t&.variables-value-column,\n\t\t&.variables-key-column,\n\t\t&.variables-usage-column {\n\t\t\t> div {\n\t\t\t\twidth: 100%;\n\n\t\t\t\t> span {\n\t\t\t\t\tmax-width: 100%;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\theight: 18px;\n\t\t\t\t}\n\n\t\t\t\t> div {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t.variables-usage-column {\n\t\t@media screen and (max-width: var.$md) {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n</style>\n","<script lang=\"ts\" setup>\nimport { computed, onMounted, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router/composables';\nimport { Notification } from 'element-ui';\nimport type { UsageTelemetry } from '@/stores/usage.store';\nimport { useUsageStore } from '@/stores/usage.store';\nimport { telemetry } from '@/plugins/telemetry';\nimport { i18n as locale } from '@/plugins/i18n';\nimport { N8N_PRICING_PAGE_URL } from '@/constants';\n\nconst usageStore = useUsageStore();\nconst route = useRoute();\nconst router = useRouter();\n\nconst queryParamCallback = ref<string>(\n\t`callback=${encodeURIComponent(`${window.location.origin}${window.location.pathname}`)}`,\n);\nconst viewPlansUrl = computed(\n\t() => `${usageStore.viewPlansUrl}&${queryParamCallback.value}&source=usage_page`,\n);\nconst managePlanUrl = computed(() => `${usageStore.managePlanUrl}&${queryParamCallback.value}`);\nconst activationKeyModal = ref(false);\nconst activationKey = ref('');\nconst activationKeyInput = ref<HTMLInputElement | null>(null);\n\nconst showActivationSuccess = () => {\n\tNotification.success({\n\t\ttitle: locale.baseText('settings.usageAndPlan.license.activation.success.title'),\n\t\tmessage: locale.baseText('settings.usageAndPlan.license.activation.success.message', {\n\t\t\tinterpolate: {\n\t\t\t\tname: usageStore.planName,\n\t\t\t\ttype: usageStore.planId\n\t\t\t\t\t? locale.baseText('settings.usageAndPlan.plan')\n\t\t\t\t\t: locale.baseText('settings.usageAndPlan.edition'),\n\t\t\t},\n\t\t}),\n\t\tposition: 'bottom-right',\n\t});\n};\n\nconst showActivationError = (error: Error) => {\n\tNotification.error({\n\t\ttitle: locale.baseText('settings.usageAndPlan.license.activation.error.title'),\n\t\tmessage: error.message,\n\t\tposition: 'bottom-right',\n\t});\n};\n\nconst onLicenseActivation = async () => {\n\ttry {\n\t\tawait usageStore.activateLicense(activationKey.value);\n\t\tactivationKeyModal.value = false;\n\t\tshowActivationSuccess();\n\t} catch (error) {\n\t\tshowActivationError(error);\n\t}\n};\n\nonMounted(async () => {\n\tif (usageStore.isDesktop) {\n\t\treturn;\n\t}\n\n\tusageStore.setLoading(true);\n\tif (route.query.key) {\n\t\ttry {\n\t\t\tawait usageStore.activateLicense(route.query.key as string);\n\t\t\tawait router.replace({ query: {} });\n\t\t\tshowActivationSuccess();\n\t\t\tusageStore.setLoading(false);\n\t\t\treturn;\n\t\t} catch (error) {\n\t\t\tshowActivationError(error);\n\t\t}\n\t}\n\ttry {\n\t\tif (!route.query.key && usageStore.canUserActivateLicense) {\n\t\t\tawait usageStore.refreshLicenseManagementToken();\n\t\t} else {\n\t\t\tawait usageStore.getLicenseInfo();\n\t\t}\n\t\tusageStore.setLoading(false);\n\t} catch (error) {\n\t\tif (!error.name) {\n\t\t\terror.name = locale.baseText('settings.usageAndPlan.error');\n\t\t}\n\t\tNotification.error({\n\t\t\ttitle: error.name,\n\t\t\tmessage: error.message,\n\t\t\tposition: 'bottom-right',\n\t\t});\n\t}\n});\n\nconst sendUsageTelemetry = (action: UsageTelemetry['action']) => {\n\tconst telemetryPayload = usageStore.telemetryPayload;\n\ttelemetryPayload.action = action;\n\ttelemetry.track('User clicked button on usage page', telemetryPayload);\n};\n\nconst onAddActivationKey = () => {\n\tactivationKeyModal.value = true;\n\tsendUsageTelemetry('add_activation_key');\n};\n\nconst onViewPlans = () => {\n\tsendUsageTelemetry('view_plans');\n};\n\nconst onManagePlan = () => {\n\tsendUsageTelemetry('manage_plan');\n};\n\nconst onDialogClosed = () => {\n\tactivationKey.value = '';\n};\n\nconst onDialogOpened = () => {\n\tactivationKeyInput.value?.focus();\n};\n\nconst openPricingPage = () => {\n\tsendUsageTelemetry('desktop_view_plans');\n\twindow.open(N8N_PRICING_PAGE_URL, '_blank');\n};\n</script>\n\n<template>\n\t<div>\n\t\t<n8n-heading size=\"2xlarge\">{{ locale.baseText('settings.usageAndPlan.title') }}</n8n-heading>\n\t\t<n8n-action-box\n\t\t\tv-if=\"usageStore.isDesktop\"\n\t\t\t:class=\"$style.actionBox\"\n\t\t\t:heading=\"locale.baseText('settings.usageAndPlan.desktop.title')\"\n\t\t\t:description=\"locale.baseText('settings.usageAndPlan.desktop.description')\"\n\t\t\t:buttonText=\"locale.baseText('settings.usageAndPlan.button.plans')\"\n\t\t\t@click=\"openPricingPage\"\n\t\t/>\n\t\t<div v-if=\"!usageStore.isDesktop && !usageStore.isLoading\">\n\t\t\t<n8n-heading :class=\"$style.title\" size=\"large\">\n\t\t\t\t<i18n path=\"settings.usageAndPlan.description\">\n\t\t\t\t\t<template #name>{{ usageStore.planName }}</template>\n\t\t\t\t\t<template #type>\n\t\t\t\t\t\t<span v-if=\"usageStore.planId\">{{\n\t\t\t\t\t\t\tlocale.baseText('settings.usageAndPlan.plan')\n\t\t\t\t\t\t}}</span>\n\t\t\t\t\t\t<span v-else>{{ locale.baseText('settings.usageAndPlan.edition') }}</span>\n\t\t\t\t\t</template>\n\t\t\t\t</i18n>\n\t\t\t</n8n-heading>\n\n\t\t\t<div :class=\"$style.quota\">\n\t\t\t\t<n8n-text size=\"medium\" color=\"text-light\">\n\t\t\t\t\t{{ locale.baseText('settings.usageAndPlan.activeWorkflows') }}\n\t\t\t\t</n8n-text>\n\t\t\t\t<div :class=\"$style.chart\">\n\t\t\t\t\t<span v-if=\"usageStore.executionLimit > 0\" :class=\"$style.chartLine\">\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t:class=\"$style.chartBar\"\n\t\t\t\t\t\t\t:style=\"{ width: `${usageStore.executionPercentage}%` }\"\n\t\t\t\t\t\t></span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<i18n :class=\"$style.count\" path=\"settings.usageAndPlan.activeWorkflows.count\">\n\t\t\t\t\t\t<template #count>{{ usageStore.executionCount }}</template>\n\t\t\t\t\t\t<template #limit>\n\t\t\t\t\t\t\t<span v-if=\"usageStore.executionLimit < 0\">{{\n\t\t\t\t\t\t\t\tlocale.baseText('settings.usageAndPlan.activeWorkflows.unlimited')\n\t\t\t\t\t\t\t}}</span>\n\t\t\t\t\t\t\t<span v-else>{{ usageStore.executionLimit }}</span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</i18n>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<n8n-info-tip>{{\n\t\t\t\tlocale.baseText('settings.usageAndPlan.activeWorkflows.hint')\n\t\t\t}}</n8n-info-tip>\n\n\t\t\t<div :class=\"$style.buttons\">\n\t\t\t\t<n8n-button\n\t\t\t\t\t:class=\"$style.buttonTertiary\"\n\t\t\t\t\t@click=\"onAddActivationKey\"\n\t\t\t\t\tv-if=\"usageStore.canUserActivateLicense\"\n\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t>\n\t\t\t\t\t<strong>{{ locale.baseText('settings.usageAndPlan.button.activation') }}</strong>\n\t\t\t\t</n8n-button>\n\t\t\t\t<n8n-button v-if=\"usageStore.managementToken\" @click=\"onManagePlan\" size=\"large\">\n\t\t\t\t\t<a :href=\"managePlanUrl\" target=\"_blank\">{{\n\t\t\t\t\t\tlocale.baseText('settings.usageAndPlan.button.manage')\n\t\t\t\t\t}}</a>\n\t\t\t\t</n8n-button>\n\t\t\t\t<n8n-button v-else @click=\"onViewPlans\" size=\"large\">\n\t\t\t\t\t<a :href=\"viewPlansUrl\" target=\"_blank\">{{\n\t\t\t\t\t\tlocale.baseText('settings.usageAndPlan.button.plans')\n\t\t\t\t\t}}</a>\n\t\t\t\t</n8n-button>\n\t\t\t</div>\n\n\t\t\t<el-dialog\n\t\t\t\twidth=\"480px\"\n\t\t\t\ttop=\"0\"\n\t\t\t\t@closed=\"onDialogClosed\"\n\t\t\t\t@opened=\"onDialogOpened\"\n\t\t\t\t:visible.sync=\"activationKeyModal\"\n\t\t\t\t:title=\"locale.baseText('settings.usageAndPlan.dialog.activation.title')\"\n\t\t\t>\n\t\t\t\t<template #default>\n\t\t\t\t\t<n8n-input\n\t\t\t\t\t\tref=\"activationKeyInput\"\n\t\t\t\t\t\tv-model=\"activationKey\"\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t:placeholder=\"locale.baseText('settings.usageAndPlan.dialog.activation.label')\"\n\t\t\t\t\t/>\n\t\t\t\t</template>\n\t\t\t\t<template #footer>\n\t\t\t\t\t<n8n-button @click=\"activationKeyModal = false\" size=\"medium\" type=\"secondary\">\n\t\t\t\t\t\t{{ locale.baseText('settings.usageAndPlan.dialog.activation.cancel') }}\n\t\t\t\t\t</n8n-button>\n\t\t\t\t\t<n8n-button @click=\"onLicenseActivation\" size=\"medium\">\n\t\t\t\t\t\t{{ locale.baseText('settings.usageAndPlan.dialog.activation.activate') }}\n\t\t\t\t\t</n8n-button>\n\t\t\t\t</template>\n\t\t\t</el-dialog>\n\t\t</div>\n\t</div>\n</template>\n\n<style lang=\"scss\" module>\n@import '@/styles/css-animation-helpers.scss';\n\n.actionBox {\n\tmargin: var(--spacing-2xl) 0 0;\n}\n\n.spacedFlex {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n}\n\n.title {\n\tdisplay: block;\n\tpadding: var(--spacing-2xl) 0 var(--spacing-m);\n}\n\n.quota {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\theight: 54px;\n\tpadding: 0 var(--spacing-s);\n\tmargin: 0 0 var(--spacing-xs);\n\tbackground: var(--color-background-xlight);\n\tborder-radius: var(--border-radius-large);\n\tborder: 1px solid var(--color-light-grey);\n\twhite-space: nowrap;\n\n\t.count {\n\t\ttext-transform: lowercase;\n\t\tfont-size: var(--font-size-s);\n\t}\n}\n\n.buttons {\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tpadding: var(--spacing-xl) 0 0;\n\n\tbutton {\n\t\tmargin-left: var(--spacing-xs);\n\n\t\ta {\n\t\t\tdisplay: inline-block;\n\t\t\tcolor: inherit;\n\t\t\ttext-decoration: none;\n\t\t\tpadding: var(--spacing-xs) var(--spacing-m);\n\t\t\tmargin: calc(var(--spacing-xs) * -1) calc(var(--spacing-m) * -1);\n\t\t}\n\t}\n}\n\n.chart {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-end;\n\tflex-grow: 1;\n}\n\n.chartLine {\n\tdisplay: block;\n\theight: 10px;\n\twidth: 100%;\n\tmax-width: 260px;\n\tmargin: 0 var(--spacing-m);\n\tborder-radius: 10px;\n\tbackground: var(--color-background-base);\n}\n\n.chartBar {\n\tfloat: left;\n\theight: 100%;\n\tmax-width: 100%;\n\tbackground: var(--color-secondary);\n\tborder-radius: 10px;\n\ttransition: width 0.2s $ease-out-expo;\n}\n\ndiv[class*='info'] > span > span:last-child {\n\tline-height: 1.4;\n\tpadding: 0 0 0 var(--spacing-4xs);\n}\n\n.buttonTertiary {\n\t&,\n\t&:hover {\n\t\tbackground: transparent;\n\t}\n}\n</style>\n\n<style lang=\"scss\" scoped>\n:deep(.el-dialog__wrapper) {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\n\t.el-dialog {\n\t\tmargin: 0;\n\n\t\t.el-dialog__footer {\n\t\t\tbutton {\n\t\t\t\tmargin-left: var(--spacing-xs);\n\t\t\t}\n\t\t}\n\t}\n}\n</style>\n","<script lang=\"ts\" setup>\nimport { computed, ref, onBeforeMount } from 'vue';\nimport { Notification } from 'element-ui';\nimport { useSSOStore } from '@/stores/sso.store';\nimport { useUIStore } from '@/stores/ui.store';\nimport { i18n as locale } from '@/plugins/i18n';\nimport CopyInput from '@/components/CopyInput.vue';\n\nconst ssoStore = useSSOStore();\nconst uiStore = useUIStore();\n\nconst ssoActivatedLabel = computed(() =>\n\tssoStore.isSamlLoginEnabled\n\t\t? locale.baseText('settings.sso.activated')\n\t\t: locale.baseText('settings.sso.deactivated'),\n);\nconst ssoSettingsSaved = ref(false);\nconst metadata = ref();\nconst redirectUrl = ref();\nconst entityId = ref();\n\nconst getSamlConfig = async () => {\n\tconst config = await ssoStore.getSamlConfig();\n\tentityId.value = config?.entityID;\n\tredirectUrl.value = config?.returnUrl;\n\tmetadata.value = config?.metadata;\n\tssoSettingsSaved.value = !!config?.metadata;\n};\n\nconst onSave = async () => {\n\ttry {\n\t\tawait ssoStore.saveSamlConfig({ metadata: metadata.value });\n\t\tawait getSamlConfig();\n\t} catch (error) {\n\t\tNotification.error({\n\t\t\ttitle: 'Error',\n\t\t\tmessage: error.message,\n\t\t\tposition: 'bottom-right',\n\t\t});\n\t}\n};\n\nconst onTest = async () => {\n\ttry {\n\t\tconst url = await ssoStore.testSamlConfig();\n\t\twindow.open(url, '_blank');\n\t} catch (error) {\n\t\tNotification.error({\n\t\t\ttitle: 'Error',\n\t\t\tmessage: error.message,\n\t\t\tposition: 'bottom-right',\n\t\t});\n\t}\n};\n\nconst goToUpgrade = () => {\n\tuiStore.goToUpgrade('sso', 'upgrade-sso');\n};\n\nonBeforeMount(async () => {\n\tif (!ssoStore.isEnterpriseSamlEnabled) {\n\t\treturn;\n\t}\n\ttry {\n\t\tawait getSamlConfig();\n\t} catch (error) {\n\t\tNotification.error({\n\t\t\ttitle: 'Error',\n\t\t\tmessage: error.message,\n\t\t\tposition: 'bottom-right',\n\t\t});\n\t}\n});\n</script>\n\n<template>\n\t<div>\n\t\t<n8n-heading size=\"2xlarge\">{{ locale.baseText('settings.sso.title') }}</n8n-heading>\n\t\t<div :class=\"$style.top\">\n\t\t\t<n8n-heading size=\"medium\">{{ locale.baseText('settings.sso.subtitle') }}</n8n-heading>\n\t\t\t<n8n-tooltip v-if=\"ssoStore.isEnterpriseSamlEnabled\" :disabled=\"ssoStore.isSamlLoginEnabled\">\n\t\t\t\t<template #content>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{{ locale.baseText('settings.sso.activation.tooltip') }}\n\t\t\t\t\t</span>\n\t\t\t\t</template>\n\t\t\t\t<el-switch\n\t\t\t\t\tv-model=\"ssoStore.isSamlLoginEnabled\"\n\t\t\t\t\t:disabled=\"!ssoSettingsSaved\"\n\t\t\t\t\t:class=\"$style.switch\"\n\t\t\t\t\t:inactive-text=\"ssoActivatedLabel\"\n\t\t\t\t/>\n\t\t\t</n8n-tooltip>\n\t\t</div>\n\t\t<n8n-info-tip>\n\t\t\t<i18n path=\"settings.sso.info\">\n\t\t\t\t<template #link>\n\t\t\t\t\t<a href=\"https://docs.n8n.io/user-management/saml/\" target=\"_blank\">\n\t\t\t\t\t\t{{ locale.baseText('settings.sso.info.link') }}\n\t\t\t\t\t</a>\n\t\t\t\t</template>\n\t\t\t</i18n>\n\t\t</n8n-info-tip>\n\t\t<div v-if=\"ssoStore.isEnterpriseSamlEnabled\" data-test-id=\"sso-content-licensed\">\n\t\t\t<div :class=\"$style.group\">\n\t\t\t\t<label>{{ locale.baseText('settings.sso.settings.redirectUrl.label') }}</label>\n\t\t\t\t<CopyInput\n\t\t\t\t\t:value=\"redirectUrl\"\n\t\t\t\t\t:copy-button-text=\"locale.baseText('generic.clickToCopy')\"\n\t\t\t\t\t:toast-title=\"locale.baseText('settings.sso.settings.redirectUrl.copied')\"\n\t\t\t\t/>\n\t\t\t\t<small>{{ locale.baseText('settings.sso.settings.redirectUrl.help') }}</small>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.group\">\n\t\t\t\t<label>{{ locale.baseText('settings.sso.settings.entityId.label') }}</label>\n\t\t\t\t<CopyInput\n\t\t\t\t\t:value=\"entityId\"\n\t\t\t\t\t:copy-button-text=\"locale.baseText('generic.clickToCopy')\"\n\t\t\t\t\t:toast-title=\"locale.baseText('settings.sso.settings.entityId.copied')\"\n\t\t\t\t/>\n\t\t\t\t<small>{{ locale.baseText('settings.sso.settings.entityId.help') }}</small>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.group\">\n\t\t\t\t<label>{{ locale.baseText('settings.sso.settings.ips.label') }}</label>\n\t\t\t\t<n8n-input v-model=\"metadata\" type=\"textarea\" name=\"metadata\" />\n\t\t\t\t<small>{{ locale.baseText('settings.sso.settings.ips.help') }}</small>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.buttons\">\n\t\t\t\t<n8n-button\n\t\t\t\t\t:disabled=\"!ssoSettingsSaved\"\n\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t@click=\"onTest\"\n\t\t\t\t\tdata-test-id=\"sso-test\"\n\t\t\t\t>\n\t\t\t\t\t{{ locale.baseText('settings.sso.settings.test') }}\n\t\t\t\t</n8n-button>\n\t\t\t\t<n8n-button :disabled=\"!metadata\" @click=\"onSave\" data-test-id=\"sso-save\">\n\t\t\t\t\t{{ locale.baseText('settings.sso.settings.save') }}\n\t\t\t\t</n8n-button>\n\t\t\t</div>\n\t\t</div>\n\t\t<n8n-action-box\n\t\t\tv-else\n\t\t\tdata-test-id=\"sso-content-unlicensed\"\n\t\t\t:class=\"$style.actionBox\"\n\t\t\t:description=\"locale.baseText('settings.sso.actionBox.description')\"\n\t\t\t:buttonText=\"locale.baseText('settings.sso.actionBox.buttonText')\"\n\t\t\t@click=\"goToUpgrade\"\n\t\t>\n\t\t\t<template #heading>\n\t\t\t\t<span>{{ locale.baseText('settings.sso.actionBox.title') }}</span>\n\t\t\t</template>\n\t\t</n8n-action-box>\n\t</div>\n</template>\n\n<style lang=\"scss\" module>\n.top {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tpadding: var(--spacing-2xl) 0 var(--spacing-xl);\n}\n\n.switch {\n\tspan {\n\t\tfont-size: var(--font-size-2xs);\n\t\tfont-weight: var(--font-weight-bold);\n\t\tcolor: var(--color-text-light);\n\t}\n}\n\n.buttons {\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tpadding: var(--spacing-2xl) 0 var(--spacing-3xl);\n\n\tbutton {\n\t\tmargin: 0 var(--spacing-s) 0 0;\n\t}\n}\n\n.group {\n\tpadding: var(--spacing-xl) 0 0;\n\n\tlabel {\n\t\tdisplay: inline-block;\n\t\tfont-size: var(--font-size-s);\n\t\tfont-weight: var(--font-weight-bold);\n\t\tpadding: 0 0 var(--spacing-2xs);\n\t}\n\n\tsmall {\n\t\tdisplay: block;\n\t\tpadding: var(--spacing-2xs) 0 0;\n\t\tfont-size: var(--font-size-2xs);\n\t\tcolor: var(--color-text-base);\n\t}\n}\n\n.actionBox {\n\tmargin: var(--spacing-2xl) 0 0;\n}\n</style>\n","<script lang=\"ts\">\nimport { VIEWS } from '@/constants';\nimport { mapStores } from 'pinia';\nimport { useUsersStore } from '@/stores/users.store';\nimport mixins from 'vue-typed-mixins';\nimport { showMessage } from '@/mixins/showMessage';\n\nexport default mixins(showMessage).extend({\n\tname: 'SignoutView',\n\tcomputed: {\n\t\t...mapStores(useUsersStore),\n\t},\n\tmethods: {\n\t\tasync logout() {\n\t\t\ttry {\n\t\t\t\tawait this.usersStore.logout();\n\t\t\t\tvoid this.$router.replace({ name: VIEWS.SIGNIN });\n\t\t\t} catch (e) {\n\t\t\t\tthis.$showError(e, this.$locale.baseText('auth.signout.error'));\n\t\t\t}\n\t\t},\n\t},\n\tmounted() {\n\t\tvoid this.logout();\n\t},\n});\n</script>\n\n<template>\n\t<div />\n</template>\n","<script lang=\"ts\" setup>\nimport { reactive, ref } from 'vue';\nimport { useRouter } from 'vue-router/composables';\nimport { Notification } from 'element-ui';\nimport type { IFormBoxConfig } from 'n8n-design-system';\nimport AuthView from '@/views/AuthView.vue';\nimport { i18n as locale } from '@/plugins/i18n';\nimport { useSSOStore } from '@/stores/sso.store';\nimport { VIEWS } from '@/constants';\n\nconst router = useRouter();\nconst ssoStore = useSSOStore();\n\nconst loading = ref(false);\nconst FORM_CONFIG: IFormBoxConfig = reactive({\n\ttitle: locale.baseText('auth.signup.setupYourAccount'),\n\tbuttonText: locale.baseText('auth.signup.finishAccountSetup'),\n\tinputs: [\n\t\t{\n\t\t\tname: 'firstName',\n\t\t\tinitialValue: ssoStore.userData?.firstName,\n\t\t\tproperties: {\n\t\t\t\tlabel: locale.baseText('auth.firstName'),\n\t\t\t\tmaxlength: 32,\n\t\t\t\trequired: true,\n\t\t\t\tautocomplete: 'given-name',\n\t\t\t\tcapitalize: true,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: 'lastName',\n\t\t\tinitialValue: ssoStore.userData?.lastName,\n\t\t\tproperties: {\n\t\t\t\tlabel: locale.baseText('auth.lastName'),\n\t\t\t\tmaxlength: 32,\n\t\t\t\trequired: true,\n\t\t\t\tautocomplete: 'family-name',\n\t\t\t\tcapitalize: true,\n\t\t\t},\n\t\t},\n\t],\n});\nconst onSubmit = async (values: { firstName: string; lastName: string }) => {\n\ttry {\n\t\tloading.value = true;\n\t\tawait ssoStore.updateUser(values);\n\t\tawait router.push({ name: VIEWS.HOMEPAGE });\n\t} catch (error) {\n\t\tloading.value = false;\n\t\tNotification.error({\n\t\t\ttitle: 'Error',\n\t\t\tmessage: error.message,\n\t\t\tposition: 'bottom-right',\n\t\t});\n\t}\n};\n</script>\n\n<template>\n\t<AuthView :form=\"FORM_CONFIG\" :formLoading=\"loading\" @submit=\"onSubmit\" />\n</template>\n","<script lang=\"ts\" setup>\nimport { computed, ref } from 'vue';\nimport { i18n as locale } from '@/plugins/i18n';\nimport { useVersionControlStore } from '@/stores/versionControl.store';\nimport { useUIStore } from '@/stores/ui.store';\nimport { useMessage } from '@/composables';\n\nconst versionControlStore = useVersionControlStore();\nconst uiStore = useUIStore();\nconst message = useMessage();\n\nconst sshKey = computed(() => versionControlStore.state.sshKey);\nconst branch = computed(() => versionControlStore.state.currentBranch);\nconst branches = ref<string[]>([]);\nconst selectElement = ref<HTMLSelectElement | null>(null);\n\nconst onContinue = () => {\n\tvoid versionControlStore.initSsh({\n\t\tname: versionControlStore.state.authorName,\n\t\temail: versionControlStore.state.authorEmail,\n\t\tremoteRepository: versionControlStore.state.repositoryUrl,\n\t});\n};\n\nconst onConnect = () => {\n\tvoid versionControlStore.initRepository();\n};\n\nconst onSelect = async (b: string) => {\n\tif (b === branch.value) {\n\t\treturn;\n\t}\n\tconst switchBranch = await message\n\t\t.confirm(\n\t\t\tlocale.baseText('settings.versionControl.switchBranch.description', {\n\t\t\t\tinterpolate: { branch: b },\n\t\t\t}),\n\t\t\tlocale.baseText('settings.versionControl.switchBranch.title', { interpolate: { branch: b } }),\n\t\t)\n\t\t.catch(() => {});\n\tif (switchBranch === 'confirm') {\n\t\tversionControlStore.state.currentBranch = b;\n\t\tselectElement.value?.blur();\n\t}\n};\n\nconst goToUpgrade = () => {\n\tuiStore.goToUpgrade('version-control', 'upgrade-version-control');\n};\n</script>\n\n<template>\n\t<div>\n\t\t<n8n-heading size=\"2xlarge\">{{ locale.baseText('settings.versionControl.title') }}</n8n-heading>\n\t\t<div\n\t\t\tv-if=\"versionControlStore.isEnterpriseVersionControlEnabled\"\n\t\t\tdata-test-id=\"version-control-content-licensed\"\n\t\t>\n\t\t\t<n8n-callout theme=\"secondary\" icon=\"info-circle\" class=\"mt-2xl mb-l\">{{\n\t\t\t\tlocale.baseText('settings.versionControl.description')\n\t\t\t}}</n8n-callout>\n\t\t\t<div :class=\"$style.group\">\n\t\t\t\t<label for=\"repoUrl\">{{ locale.baseText('settings.versionControl.repoUrl') }}</label>\n\t\t\t\t<n8n-input\n\t\t\t\t\tid=\"repoUrl\"\n\t\t\t\t\t:placeholder=\"locale.baseText('settings.versionControl.repoUrlPlaceholder')\"\n\t\t\t\t\tv-model=\"versionControlStore.state.repositoryUrl\"\n\t\t\t\t/>\n\t\t\t\t<small>{{ locale.baseText('settings.versionControl.repoUrlDescription') }}</small>\n\t\t\t</div>\n\t\t\t<div :class=\"$style.group\">\n\t\t\t\t<label for=\"authorName\">{{ locale.baseText('settings.versionControl.authorName') }}</label>\n\t\t\t\t<n8n-input id=\"authorName\" v-model=\"versionControlStore.state.authorName\" />\n\t\t\t</div>\n\t\t\t<div :class=\"$style.group\">\n\t\t\t\t<label for=\"authorEmail\">{{\n\t\t\t\t\tlocale.baseText('settings.versionControl.authorEmail')\n\t\t\t\t}}</label>\n\t\t\t\t<n8n-input id=\"authorEmail\" v-model=\"versionControlStore.state.authorEmail\" />\n\t\t\t</div>\n\t\t\t<n8n-button v-if=\"!sshKey\" @click=\"onContinue\" size=\"large\" class=\"mt-2xs\">{{\n\t\t\t\tlocale.baseText('settings.versionControl.button.continue')\n\t\t\t}}</n8n-button>\n\t\t\t<div v-if=\"sshKey\" :class=\"$style.group\">\n\t\t\t\t<label>{{ locale.baseText('settings.versionControl.sshKey') }}</label>\n\t\t\t\t<CopyInput\n\t\t\t\t\t:value=\"versionControlStore.state.sshKey\"\n\t\t\t\t\t:copy-button-text=\"locale.baseText('generic.clickToCopy')\"\n\t\t\t\t/>\n\t\t\t\t<n8n-notice type=\"info\" class=\"mt-s\">\n\t\t\t\t\t<i18n path=\"settings.versionControl.sshKeyDescription\">\n\t\t\t\t\t\t<template #link>\n\t\t\t\t\t\t\t<a href=\"#\" target=\"_blank\">\n\t\t\t\t\t\t\t\t{{ locale.baseText('settings.versionControl.sshKeyDescriptionLink') }}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</i18n>\n\t\t\t\t</n8n-notice>\n\t\t\t</div>\n\t\t\t<n8n-button v-if=\"sshKey\" @click=\"onConnect\" size=\"large\" :class=\"$style.connect\">{{\n\t\t\t\tlocale.baseText('settings.versionControl.button.connect')\n\t\t\t}}</n8n-button>\n\t\t\t<div v-if=\"versionControlStore.state.branches.length\" :class=\"$style.group\">\n\t\t\t\t<label>{{ locale.baseText('settings.versionControl.branches') }}</label>\n\t\t\t\t<n8n-select\n\t\t\t\t\tref=\"selectElement\"\n\t\t\t\t\t:value=\"versionControlStore.state.currentBranch\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tfilterable\n\t\t\t\t\t@input=\"onSelect\"\n\t\t\t\t>\n\t\t\t\t\t<n8n-option\n\t\t\t\t\t\tv-for=\"b in versionControlStore.state.branches\"\n\t\t\t\t\t\t:key=\"b\"\n\t\t\t\t\t\t:value=\"b\"\n\t\t\t\t\t\t:label=\"b\"\n\t\t\t\t\t/>\n\t\t\t\t</n8n-select>\n\t\t\t</div>\n\t\t</div>\n\t\t<n8n-action-box\n\t\t\tv-else\n\t\t\tdata-test-id=\"version-control-content-unlicensed\"\n\t\t\t:class=\"$style.actionBox\"\n\t\t\t:description=\"locale.baseText('settings.versionControl.actionBox.description')\"\n\t\t\t:buttonText=\"locale.baseText('settings.versionControl.actionBox.buttonText')\"\n\t\t\t@click=\"goToUpgrade\"\n\t\t>\n\t\t\t<template #heading>\n\t\t\t\t<span>{{ locale.baseText('settings.versionControl.actionBox.title') }}</span>\n\t\t\t</template>\n\t\t</n8n-action-box>\n\t</div>\n</template>\n\n<style lang=\"scss\" module>\n.group {\n\tpadding: 0 0 var(--spacing-2xs);\n\n\tlabel {\n\t\tdisplay: inline-block;\n\t\tpadding: 0 0 var(--spacing-2xs);\n\t\tfont-size: var(--font-size-s);\n\t}\n\n\tsmall {\n\t\tdisplay: inline-block;\n\t\tpadding: var(--spacing-2xs) 0 0;\n\t\tfont-size: var(--font-size-2xs);\n\t\tcolor: var(--color-text-light);\n\t}\n}\n\n.connect {\n\tmargin: calc(var(--spacing-2xs) * -1) 0 var(--spacing-2xs);\n}\n\n.actionBox {\n\tmargin: var(--spacing-2xl) 0 0;\n}\n</style>\n","import Vue from 'vue';\n\nimport ChangePasswordView from './views/ChangePasswordView.vue';\nimport ErrorView from './views/ErrorView.vue';\nimport ForgotMyPasswordView from './views/ForgotMyPasswordView.vue';\nimport MainHeader from '@/components/MainHeader/MainHeader.vue';\nimport MainSidebar from '@/components/MainSidebar.vue';\nimport NodeView from '@/views/NodeView.vue';\nimport WorkflowExecutionsList from '@/components/ExecutionsView/ExecutionsList.vue';\nimport ExecutionsLandingPage from '@/components/ExecutionsView/ExecutionsLandingPage.vue';\nimport ExecutionPreview from '@/components/ExecutionsView/ExecutionPreview.vue';\nimport SettingsView from './views/SettingsView.vue';\nimport SettingsLdapView from './views/SettingsLdapView.vue';\nimport SettingsPersonalView from './views/SettingsPersonalView.vue';\nimport SettingsUsersView from './views/SettingsUsersView.vue';\nimport SettingsCommunityNodesView from './views/SettingsCommunityNodesView.vue';\nimport SettingsApiView from './views/SettingsApiView.vue';\nimport SettingsLogStreamingView from './views/SettingsLogStreamingView.vue';\nimport SettingsFakeDoorView from './views/SettingsFakeDoorView.vue';\nimport SetupView from './views/SetupView.vue';\nimport SigninView from './views/SigninView.vue';\nimport SignupView from './views/SignupView.vue';\nimport type { Route } from 'vue-router';\nimport Router from 'vue-router';\n\nimport TemplatesCollectionView from '@/views/TemplatesCollectionView.vue';\nimport TemplatesWorkflowView from '@/views/TemplatesWorkflowView.vue';\nimport TemplatesSearchView from '@/views/TemplatesSearchView.vue';\nimport CredentialsView from '@/views/CredentialsView.vue';\nimport ExecutionsView from '@/views/ExecutionsView.vue';\nimport WorkflowsView from '@/views/WorkflowsView.vue';\nimport VariablesView from '@/views/VariablesView.vue';\nimport type { IPermissions } from './Interface';\nimport { LOGIN_STATUS, ROLE } from '@/utils';\nimport type { RouteConfigSingleView } from 'vue-router/types/router';\nimport { TEMPLATE_EXPERIMENT, VIEWS } from './constants';\nimport { useSettingsStore } from './stores/settings.store';\nimport { useTemplatesStore } from './stores/templates.store';\nimport { useSSOStore } from './stores/sso.store';\nimport SettingsUsageAndPlanVue from './views/SettingsUsageAndPlan.vue';\nimport SettingsSso from './views/SettingsSso.vue';\nimport SignoutView from '@/views/SignoutView.vue';\nimport SamlOnboarding from '@/views/SamlOnboarding.vue';\nimport SettingsVersionControl from './views/SettingsVersionControl.vue';\nimport { usePostHog } from './stores/posthog.store';\n\nVue.use(Router);\n\ninterface IRouteConfig extends RouteConfigSingleView {\n\tmeta: {\n\t\tnodeView?: boolean;\n\t\ttemplatesEnabled?: boolean;\n\t\tgetRedirect?: () => { name: string } | false;\n\t\tpermissions: IPermissions;\n\t\ttelemetry?: {\n\t\t\tdisabled?: true;\n\t\t\tgetProperties: (route: Route) => object;\n\t\t};\n\t\tscrollOffset?: number;\n\t};\n}\n\nfunction getTemplatesRedirect() {\n\tconst settingsStore = useSettingsStore();\n\tconst posthog = usePostHog();\n\tconst isTemplatesEnabled: boolean = settingsStore.isTemplatesEnabled;\n\tif (\n\t\t!posthog.isVariantEnabled(TEMPLATE_EXPERIMENT.name, TEMPLATE_EXPERIMENT.variant) &&\n\t\t!isTemplatesEnabled\n\t) {\n\t\treturn { name: VIEWS.NOT_FOUND };\n\t}\n\n\treturn false;\n}\n\nexport const routes = [\n\t{\n\t\tpath: '/',\n\t\tname: VIEWS.HOMEPAGE,\n\t\tmeta: {\n\t\t\tgetRedirect() {\n\t\t\t\treturn { name: VIEWS.WORKFLOWS };\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/collections/:id',\n\t\tname: VIEWS.COLLECTION,\n\t\tcomponents: {\n\t\t\tdefault: TemplatesCollectionView,\n\t\t\tsidebar: MainSidebar,\n\t\t},\n\t\tmeta: {\n\t\t\ttemplatesEnabled: true,\n\t\t\ttelemetry: {\n\t\t\t\tgetProperties(route: Route) {\n\t\t\t\t\tconst templatesStore = useTemplatesStore();\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcollection_id: route.params.id,\n\t\t\t\t\t\twf_template_repo_session_id: templatesStore.currentSessionId,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t},\n\t\t\tgetRedirect: getTemplatesRedirect,\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/templates/:id',\n\t\tname: VIEWS.TEMPLATE,\n\t\tcomponents: {\n\t\t\tdefault: TemplatesWorkflowView,\n\t\t\tsidebar: MainSidebar,\n\t\t},\n\t\tmeta: {\n\t\t\ttemplatesEnabled: true,\n\t\t\tgetRedirect: getTemplatesRedirect,\n\t\t\ttelemetry: {\n\t\t\t\tgetProperties(route: Route) {\n\t\t\t\t\tconst templatesStore = useTemplatesStore();\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttemplate_id: route.params.id,\n\t\t\t\t\t\twf_template_repo_session_id: templatesStore.currentSessionId,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/templates/',\n\t\tname: VIEWS.TEMPLATES,\n\t\tcomponents: {\n\t\t\tdefault: TemplatesSearchView,\n\t\t\tsidebar: MainSidebar,\n\t\t},\n\t\tmeta: {\n\t\t\ttemplatesEnabled: true,\n\t\t\tgetRedirect: getTemplatesRedirect,\n\t\t\t// Templates view remembers it's scroll position on back\n\t\t\tscrollOffset: 0,\n\t\t\ttelemetry: {\n\t\t\t\tgetProperties(route: Route) {\n\t\t\t\t\tconst templatesStore = useTemplatesStore();\n\t\t\t\t\treturn {\n\t\t\t\t\t\twf_template_repo_session_id: templatesStore.currentSessionId,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t},\n\t\t\tsetScrollPosition(pos: number) {\n\t\t\t\tthis.scrollOffset = pos;\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/credentials',\n\t\tname: VIEWS.CREDENTIALS,\n\t\tcomponents: {\n\t\t\tdefault: CredentialsView,\n\t\t\tsidebar: MainSidebar,\n\t\t},\n\t\tmeta: {\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/variables',\n\t\tname: VIEWS.VARIABLES,\n\t\tcomponents: {\n\t\t\tdefault: VariablesView,\n\t\t\tsidebar: MainSidebar,\n\t\t},\n\t\tmeta: {\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/executions',\n\t\tname: VIEWS.EXECUTIONS,\n\t\tcomponents: {\n\t\t\tdefault: ExecutionsView,\n\t\t\tsidebar: MainSidebar,\n\t\t},\n\t\tmeta: {\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/workflow',\n\t\tredirect: '/workflow/new',\n\t},\n\t{\n\t\tpath: '/workflows',\n\t\tname: VIEWS.WORKFLOWS,\n\t\tcomponents: {\n\t\t\tdefault: WorkflowsView,\n\t\t\tsidebar: MainSidebar,\n\t\t},\n\t\tmeta: {\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/workflow/new',\n\t\tname: VIEWS.NEW_WORKFLOW,\n\t\tcomponents: {\n\t\t\tdefault: NodeView,\n\t\t\theader: MainHeader,\n\t\t\tsidebar: MainSidebar,\n\t\t},\n\t\tmeta: {\n\t\t\tnodeView: true,\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/workflow/:name',\n\t\tname: VIEWS.WORKFLOW,\n\t\tcomponents: {\n\t\t\tdefault: NodeView,\n\t\t\theader: MainHeader,\n\t\t\tsidebar: MainSidebar,\n\t\t},\n\t\tmeta: {\n\t\t\tnodeView: true,\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/workflow/:name/executions',\n\t\tname: VIEWS.WORKFLOW_EXECUTIONS,\n\t\tcomponents: {\n\t\t\tdefault: WorkflowExecutionsList,\n\t\t\theader: MainHeader,\n\t\t\tsidebar: MainSidebar,\n\t\t},\n\t\tmeta: {\n\t\t\tkeepWorkflowAlive: true,\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tname: VIEWS.EXECUTION_HOME,\n\t\t\t\tcomponents: {\n\t\t\t\t\texecutionPreview: ExecutionsLandingPage,\n\t\t\t\t},\n\t\t\t\tmeta: {\n\t\t\t\t\tkeepWorkflowAlive: true,\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tallow: {\n\t\t\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: ':executionId',\n\t\t\t\tname: VIEWS.EXECUTION_PREVIEW,\n\t\t\t\tcomponents: {\n\t\t\t\t\texecutionPreview: ExecutionPreview,\n\t\t\t\t},\n\t\t\t\tmeta: {\n\t\t\t\t\tkeepWorkflowAlive: true,\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tallow: {\n\t\t\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tpath: '/workflows/demo',\n\t\tname: VIEWS.DEMO,\n\t\tcomponents: {\n\t\t\tdefault: NodeView,\n\t\t},\n\t\tmeta: {\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/workflows/templates/:id',\n\t\tname: VIEWS.TEMPLATE_IMPORT,\n\t\tcomponents: {\n\t\t\tdefault: NodeView,\n\t\t\theader: MainHeader,\n\t\t\tsidebar: MainSidebar,\n\t\t},\n\t\tmeta: {\n\t\t\ttemplatesEnabled: true,\n\t\t\tgetRedirect: getTemplatesRedirect,\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/signin',\n\t\tname: VIEWS.SIGNIN,\n\t\tcomponents: {\n\t\t\tdefault: SigninView,\n\t\t},\n\t\tmeta: {\n\t\t\ttelemetry: {\n\t\t\t\tpageCategory: 'auth',\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedOut],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/signup',\n\t\tname: VIEWS.SIGNUP,\n\t\tcomponents: {\n\t\t\tdefault: SignupView,\n\t\t},\n\t\tmeta: {\n\t\t\ttelemetry: {\n\t\t\t\tpageCategory: 'auth',\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedOut],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/signout',\n\t\tname: VIEWS.SIGNOUT,\n\t\tcomponents: {\n\t\t\tdefault: SignoutView,\n\t\t},\n\t\tmeta: {\n\t\t\ttelemetry: {\n\t\t\t\tpageCategory: 'auth',\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/setup',\n\t\tname: VIEWS.SETUP,\n\t\tcomponents: {\n\t\t\tdefault: SetupView,\n\t\t},\n\t\tmeta: {\n\t\t\ttelemetry: {\n\t\t\t\tpageCategory: 'auth',\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\trole: [ROLE.Default],\n\t\t\t\t},\n\t\t\t\tdeny: {\n\t\t\t\t\tshouldDeny: () => {\n\t\t\t\t\t\tconst settingsStore = useSettingsStore();\n\t\t\t\t\t\treturn settingsStore.isUserManagementEnabled === false;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/forgot-password',\n\t\tname: VIEWS.FORGOT_PASSWORD,\n\t\tcomponents: {\n\t\t\tdefault: ForgotMyPasswordView,\n\t\t},\n\t\tmeta: {\n\t\t\ttelemetry: {\n\t\t\t\tpageCategory: 'auth',\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedOut],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/change-password',\n\t\tname: VIEWS.CHANGE_PASSWORD,\n\t\tcomponents: {\n\t\t\tdefault: ChangePasswordView,\n\t\t},\n\t\tmeta: {\n\t\t\ttelemetry: {\n\t\t\t\tpageCategory: 'auth',\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedOut],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '/settings',\n\t\tcomponent: SettingsView,\n\t\tprops: true,\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: 'usage',\n\t\t\t\tname: VIEWS.USAGE,\n\t\t\t\tcomponents: {\n\t\t\t\t\tsettingsView: SettingsUsageAndPlanVue,\n\t\t\t\t},\n\t\t\t\tmeta: {\n\t\t\t\t\ttelemetry: {\n\t\t\t\t\t\tpageCategory: 'settings',\n\t\t\t\t\t\tgetProperties(route: Route) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tfeature: 'usage',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tallow: {\n\t\t\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdeny: {\n\t\t\t\t\t\t\tshouldDeny: () => {\n\t\t\t\t\t\t\t\tconst settingsStore = useSettingsStore();\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tsettingsStore.settings.hideUsagePage === true ||\n\t\t\t\t\t\t\t\t\tsettingsStore.settings.deployment?.type === 'cloud'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'personal',\n\t\t\t\tname: VIEWS.PERSONAL_SETTINGS,\n\t\t\t\tcomponents: {\n\t\t\t\t\tsettingsView: SettingsPersonalView,\n\t\t\t\t},\n\t\t\t\tmeta: {\n\t\t\t\t\ttelemetry: {\n\t\t\t\t\t\tpageCategory: 'settings',\n\t\t\t\t\t\tgetProperties(route: Route) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tfeature: 'personal',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tallow: {\n\t\t\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdeny: {\n\t\t\t\t\t\t\trole: [ROLE.Default],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'users',\n\t\t\t\tname: VIEWS.USERS_SETTINGS,\n\t\t\t\tcomponents: {\n\t\t\t\t\tsettingsView: SettingsUsersView,\n\t\t\t\t},\n\t\t\t\tmeta: {\n\t\t\t\t\ttelemetry: {\n\t\t\t\t\t\tpageCategory: 'settings',\n\t\t\t\t\t\tgetProperties(route: Route) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tfeature: 'users',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tallow: {\n\t\t\t\t\t\t\trole: [ROLE.Default, ROLE.Owner],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdeny: {\n\t\t\t\t\t\t\tshouldDeny: () => {\n\t\t\t\t\t\t\t\tconst settingsStore = useSettingsStore();\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\tsettingsStore.isUserManagementEnabled === false &&\n\t\t\t\t\t\t\t\t\t!(settingsStore.isCloudDeployment || settingsStore.isDesktopDeployment)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'api',\n\t\t\t\tname: VIEWS.API_SETTINGS,\n\t\t\t\tcomponents: {\n\t\t\t\t\tsettingsView: SettingsApiView,\n\t\t\t\t},\n\t\t\t\tmeta: {\n\t\t\t\t\ttelemetry: {\n\t\t\t\t\t\tpageCategory: 'settings',\n\t\t\t\t\t\tgetProperties(route: Route) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tfeature: 'api',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tallow: {\n\t\t\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdeny: {\n\t\t\t\t\t\t\tshouldDeny: () => {\n\t\t\t\t\t\t\t\tconst settingsStore = useSettingsStore();\n\t\t\t\t\t\t\t\treturn settingsStore.isPublicApiEnabled === false;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'version-control',\n\t\t\t\tname: VIEWS.VERSION_CONTROL,\n\t\t\t\tcomponents: {\n\t\t\t\t\tsettingsView: SettingsVersionControl,\n\t\t\t\t},\n\t\t\t\tmeta: {\n\t\t\t\t\ttelemetry: {\n\t\t\t\t\t\tpageCategory: 'settings',\n\t\t\t\t\t\tgetProperties(route: Route) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tfeature: 'vc',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tallow: {\n\t\t\t\t\t\t\trole: [ROLE.Owner],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdeny: {\n\t\t\t\t\t\t\tshouldDeny: () => !window.localStorage.getItem('version-control'),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'sso',\n\t\t\t\tname: VIEWS.SSO_SETTINGS,\n\t\t\t\tcomponents: {\n\t\t\t\t\tsettingsView: SettingsSso,\n\t\t\t\t},\n\t\t\t\tmeta: {\n\t\t\t\t\ttelemetry: {\n\t\t\t\t\t\tpageCategory: 'settings',\n\t\t\t\t\t\tgetProperties(route: Route) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tfeature: 'sso',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tallow: {\n\t\t\t\t\t\t\trole: [ROLE.Owner],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdeny: {\n\t\t\t\t\t\t\tshouldDeny: () => {\n\t\t\t\t\t\t\t\tconst settingsStore = useSettingsStore();\n\t\t\t\t\t\t\t\treturn settingsStore.isDesktopDeployment;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'log-streaming',\n\t\t\t\tname: VIEWS.LOG_STREAMING_SETTINGS,\n\t\t\t\tcomponents: {\n\t\t\t\t\tsettingsView: SettingsLogStreamingView,\n\t\t\t\t},\n\t\t\t\tmeta: {\n\t\t\t\t\ttelemetry: {\n\t\t\t\t\t\tpageCategory: 'settings',\n\t\t\t\t\t},\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tallow: {\n\t\t\t\t\t\t\trole: [ROLE.Default, ROLE.Owner],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdeny: {\n\t\t\t\t\t\t\trole: [ROLE.Member],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'community-nodes',\n\t\t\t\tname: VIEWS.COMMUNITY_NODES,\n\t\t\t\tcomponents: {\n\t\t\t\t\tsettingsView: SettingsCommunityNodesView,\n\t\t\t\t},\n\t\t\t\tmeta: {\n\t\t\t\t\ttelemetry: {\n\t\t\t\t\t\tpageCategory: 'settings',\n\t\t\t\t\t},\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tallow: {\n\t\t\t\t\t\t\trole: [ROLE.Default, ROLE.Owner],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdeny: {\n\t\t\t\t\t\t\tshouldDeny: () => {\n\t\t\t\t\t\t\t\tconst settingsStore = useSettingsStore();\n\t\t\t\t\t\t\t\treturn settingsStore.isCommunityNodesFeatureEnabled === false;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'coming-soon/:featureId',\n\t\t\t\tname: VIEWS.FAKE_DOOR,\n\t\t\t\tcomponents: {\n\t\t\t\t\tsettingsView: SettingsFakeDoorView,\n\t\t\t\t},\n\t\t\t\tmeta: {\n\t\t\t\t\ttelemetry: {\n\t\t\t\t\t\tpageCategory: 'settings',\n\t\t\t\t\t\tgetProperties(route: Route) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tfeature: route.params['featureId'],\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tallow: {\n\t\t\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'ldap',\n\t\t\t\tname: VIEWS.LDAP_SETTINGS,\n\t\t\t\tcomponents: {\n\t\t\t\t\tsettingsView: SettingsLdapView,\n\t\t\t\t},\n\t\t\t\tmeta: {\n\t\t\t\t\tpermissions: {\n\t\t\t\t\t\tallow: {\n\t\t\t\t\t\t\trole: [ROLE.Default, ROLE.Owner],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdeny: {\n\t\t\t\t\t\t\trole: [ROLE.Member],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tpath: '/saml/onboarding',\n\t\tname: VIEWS.SAML_ONBOARDING,\n\t\tcomponents: {\n\t\t\tdefault: SamlOnboarding,\n\t\t},\n\t\tmeta: {\n\t\t\ttelemetry: {\n\t\t\t\tpageCategory: 'auth',\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn],\n\t\t\t\t},\n\t\t\t\tdeny: {\n\t\t\t\t\tshouldDeny: () => {\n\t\t\t\t\t\tconst settingsStore = useSettingsStore();\n\t\t\t\t\t\tconst ssoStore = useSSOStore();\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t!ssoStore.isEnterpriseSamlEnabled ||\n\t\t\t\t\t\t\tsettingsStore.isCloudDeployment ||\n\t\t\t\t\t\t\tsettingsStore.isDesktopDeployment\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tpath: '*',\n\t\tname: VIEWS.NOT_FOUND,\n\t\tcomponent: ErrorView,\n\t\tprops: {\n\t\t\tmessageKey: 'error.pageNotFound',\n\t\t\terrorCode: 404,\n\t\t\tredirectTextKey: 'error.goBack',\n\t\t\tredirectPage: VIEWS.HOMEPAGE,\n\t\t},\n\t\tmeta: {\n\t\t\tnodeView: true,\n\t\t\ttelemetry: {\n\t\t\t\tdisabled: true,\n\t\t\t},\n\t\t\tpermissions: {\n\t\t\t\tallow: {\n\t\t\t\t\t// TODO: Once custom permissions are merged, this needs to be updated with index validation\n\t\t\t\t\tloginStatus: [LOGIN_STATUS.LoggedIn, LOGIN_STATUS.LoggedOut],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n] as IRouteConfig[];\n\nconst router = new Router({\n\tmode: 'history',\n\tbase: import.meta.env.DEV ? '/' : window.BASE_PATH ?? '/',\n\tscrollBehavior(to, from, savedPosition) {\n\t\t// saved position == null means the page is NOT visited from history (back button)\n\t\tif (savedPosition === null && to.name === VIEWS.TEMPLATES && to.meta) {\n\t\t\t// for templates view, reset scroll position in this case\n\t\t\tto.meta.setScrollPosition(0);\n\t\t}\n\t},\n\troutes,\n});\n\nexport default router;\n","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue';\n\nimport './plugins';\nimport 'vue-json-pretty/lib/styles.css';\nimport '@jsplumb/browser-ui/css/jsplumbtoolkit.css';\nimport 'n8n-design-system/css/index.scss';\nimport './n8n-theme.scss';\n\nimport './styles/autocomplete-theme.scss';\n\nimport '@fontsource/open-sans/latin-400.css';\nimport '@fontsource/open-sans/latin-600.css';\nimport '@fontsource/open-sans/latin-700.css';\n\nimport App from '@/App.vue';\nimport router from './router';\n\nimport { runExternalHook } from '@/utils';\nimport { TelemetryPlugin } from './plugins/telemetry';\nimport { I18nPlugin, i18nInstance } from './plugins/i18n';\n\nimport { createPinia, PiniaVuePlugin } from 'pinia';\n\nimport { useWebhooksStore, useUsersStore } from '@/stores';\nimport { VIEWS } from '@/constants';\n\nVue.config.productionTip = false;\n\nVue.use(TelemetryPlugin);\nVue.use((vue) => I18nPlugin(vue));\nVue.use(PiniaVuePlugin);\n\nconst pinia = createPinia();\n\nnew Vue({\n\ti18n: i18nInstance,\n\trouter,\n\tpinia,\n\trender: (h) => h(App),\n}).$mount('#app');\n\nrouter.afterEach((to, from) => {\n\tvoid runExternalHook('main.routeChange', useWebhooksStore(), { from, to });\n\tconst userStore = useUsersStore();\n\tif (userStore.currentUser && to.name && to.name !== VIEWS.SIGNOUT && !to.name.includes('Modal')) {\n\t\tvoid userStore.showUserActivationSurveyModal();\n\t}\n});\n\nif (!import.meta.env.PROD) {\n\t// Make sure that we get all error messages properly displayed\n\t// as long as we are not in production mode\n\twindow.onerror = (message, source, lineno, colno, error) => {\n\t\tif (message.toString().includes('ResizeObserver')) {\n\t\t\t// That error can apparently be ignored and can probably\n\t\t\t// not do anything about it anyway\n\t\t\treturn;\n\t\t}\n\t\tconsole.error('error caught in main.ts'); // eslint-disable-line no-console\n\t\tconsole.error(message); // eslint-disable-line no-console\n\t\tconsole.error(error); // eslint-disable-line no-console\n\t};\n}\n"],"names":["faVariable","addIcon","icon","library","faAngleDoubleLeft","faAngleDown","faAngleLeft","faAngleRight","faAngleUp","faArrowLeft","faArrowRight","faAt","faBan","faBolt","faBook","faBoxOpen","faBug","faCalculator","faCalendar","faChartBar","faCheck","faCheckCircle","faCheckSquare","faChevronLeft","faChevronRight","faChevronDown","faChevronUp","faCode","faCodeBranch","faCog","faCogs","faClock","faClone","faCloud","faCloudDownloadAlt","faCopy","faCube","faCut","faDotCircle","faGripVertical","faEdit","faEllipsisV","faEnvelope","faEye","faExclamationTriangle","faExpand","faExpandAlt","faExternalLinkAlt","faExchangeAlt","faFile","faFileAlt","faFileArchive","faFileCode","faFileDownload","faFileExport","faFileImport","faFilePdf","faFilter","faFingerprint","faFlask","faFolderOpen","faFont","faGift","faGlobe","faGlobeAmericas","faGraduationCap","faHandPointLeft","faHashtag","faHdd","faHome","faHourglass","faImage","faInbox","faInfo","faInfoCircle","faKey","faLink","faList","faLightbulb","faMapSigns","faMousePointer","faNetworkWired","faPause","faPauseCircle","faPen","faPencilAlt","faPlay","faPlayCircle","faPlug","faPlus","faPlusCircle","faPlusSquare","faQuestion","faQuestionCircle","faRedo","faRss","faSave","faSatelliteDish","faSearch","faSearchMinus","faSearchPlus","faServer","faSignInAlt","faSignOutAlt","faSlidersH","faSpinner","faSolidStickyNote","faStickyNote","faStar","faStop","faSun","faSync","faSyncAlt","faTable","faTasks","faTerminal","faThLarge","faThumbtack","faTimes","faTimesCircle","faToolbox","faTrash","faUndo","faUnlink","faUser","faUserCircle","faUserFriends","faUsers","faVideo","faTree","faUserLock","Vue","FontAwesomeIcon","Vue2TouchEvents","vClickOutside","runtime","exports","Op","hasOwn","defineProperty","obj","key","desc","undefined","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","define","value","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","prototype","method","genFun","ctor","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","iter","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","methodName","info","pushTryEntry","locs","entry","resetTryEntry","val","object","keys","next","iterable","iteratorMethod","i","skipTempReset","name","rootEntry","rootRecord","exception","handle","loc","caught","hasCatch","hasFinally","type","finallyEntry","afterLoc","finallyLoc","tryLoc","thrown","resultName","nextLoc","module","accidentalStrictMode","nodeViewEventBus","createEventBus","_sfc_main$2o","defineComponent","mapStores","useSettingsStore","acc","feature","useMessage","alert","message","configOrTitle","config","resolvedConfig","MessageBox","confirm","prompt","Message","Fragment","VueAgile","ElementUI","N8nPlugin","EnterpriseEdition","Loading","messageService","Notification","_sfc_main$2n","Modal","ABOUT_MODAL_KEY","useRootStore","_sfc_main$2m","ASK_AI_WAITLIST_URL","ASK_AI_MODAL_KEY","_sfc_main","mixins","showMessage","COMMUNITY_PACKAGE_CONFIRM_MODAL_KEY","COMMUNITY_PACKAGE_MANAGE_ACTIONS","useCommunityNodesStore","node","updatedVersion","_sfc_main$2k","COMMUNITY_PACKAGE_INSTALL_MODAL_KEY","NPM_KEYWORD_SEARCH_URL","COMMUNITY_NODES_INSTALLATION_DOCS_URL","COMMUNITY_NODES_RISKS_DOCS_URL","_sfc_main$2j","CHANGE_PASSWORD_MODAL_KEY","useUsersStore","e","_sfc_main$2i","workflowHelpers","VALID_EMAIL_REGEX","_sfc_main$2h","useCredentialsStore","useNodeTypesStore","iconUrl","_a","_b","nodeType","nodesWithAccess","parentCred","_sfc_main$2g","copyPaste","style","isSafari","isIe","hiddenInput","ieClipboardDiv","debounce","event","path","index","plainTextData","clipboardEventName","clipboardData","clipboardText","range","selection","element","selected","_sfc_main$2f","_sfc_main$2e","ParameterOptions","ParameterInputWrapper","useWorkflowsStore","isValueExpression","expanded","command","parameterData","_sfc_main$2d","ParameterInputExpanded","baseUrl","googleAuthButtons","nodeTypesStore","ndvStore","useNDVStore","ref","authRelatedFieldsValues","onMounted","activeNodeType","credentialsForType","cred","props","authOptionForCred","getAuthTypeForNodeCredential","authRelatedFields","field","computed","activeNode","authOptions","getNodeAuthOptions","filteredNodeAuthOptions","option","shouldShowAuthOption","nodeAuthFields","getNodeAuthFields","prop","isAuthRelatedParameter","shouldDisplay","fieldName","onAuthTypeChange","newType","emit","valueChanged","data","expose","_sfc_main$29","AuthTypeSelector","Banner","CopyInput","CredentialInputs","OauthButton","GoogleAuthButton","EnterpriseEditionFeature","credTranslation","addCredentialTranslation","useUIStore","getAppNameFromCredType","isCommunityNode","isCommunityPackageName","documentationUrl","url","DOCS_DOMAIN","BUILTIN_CREDENTIALS_DOCS_URL","oauthType","newValue","oldValue","_sfc_main$28","register","num","totalSec","text","format","epoch","convertToHumanReadableDate","_sfc_main$27","TimeAgo","_sfc_main$26","useUsageStore","user","isCurrentUser","isAlreadySharedWithUser","sharee","userId","VIEWS","_sfc_main$25","_sfc_main$24","inputRef","_sfc_main$23","_sfc_main$22","nodeHelpers","CredentialSharing","CredentialConfig","CredentialIcon","CredentialInfo","InlineNameEdit","SaveButton","FeatureComingSoon","isCredentialModalState","CREDENTIAL_EDIT_MODAL_KEY","property","nodeAuthOptions","getNodeCredentialForSelectedAuthType","ownedBy","sharedWith","credentialData","accu","credential","propertyData","getCredentialPermissions","credentialTypeName","keepEditing","displayName","parameter","credentialTypeData","combineProperties","credentialsTypeName","mergeCredentialProperties","NodeHelpers.mergeNodeProperties","currentCredentials","access","tab","tabName","credType","sharees","oauthTokenData","credData","credentialType","types","typeName","contentRef","nodesAccess","details","credentialDetails","NodeHelpers.getNodeParameters","isNewCredential","trackProperties","savedCredentialName","isValidCredentialResponse","params","oauthPopup","receiveMessage","updateNodeAuthType","newDefaultName","NAME_EMAIL_FORMAT_REGEX","getEmail","email","parsed","matches","_sfc_main$21","INVITE_USER_MODAL_KEY","ROLE","invite","emails","invited","erroredInvites","successfulEmailInvites","successfulUrlInvites","_sfc_main$20","externalHooks","elementRef","CREDENTIAL_SELECT_MODAL_KEY","telemetryPayload","MANAGE_KEY","CREATE_KEY","_sfc_main$1$","selectRef","select","input","MAX_TAG_NAME_LENGTH","keyboardEvent","useTagsStore","tag","id","filter","newTag","ops","TAGS_MANAGER_MODAL_KEY","tagRefs","createRef","tagId","tagOptions","visible","_sfc_main$1_","TagsDropdown","currentTagIds","MAX_WORKFLOW_NAME_LENGTH","isEmptyWorkflow","PLACEHOLDER_EMPTY_WORKFLOW_ID","isCurrentWorkflowEmpty","currentWorkflow","getWorkflowPermissions","active","tagIds","currentWorkflowId","workflowToUpdate","createdAt","updatedAt","usedCredentials","workflow","_sfc_main$1Z","_sfc_main$1Y","ONBOARDING_CALL_SIGNUP_MODAL_KEY","SURVEY_VERSION","_sfc_main$1X","PERSONALIZATION_MODAL_KEY","EMAIL_KEY","COMPANY_TYPE_KEY","SAAS_COMPANY_TYPE","ECOMMERCE_COMPANY_TYPE","DIGITAL_AGENCY_COMPANY_TYPE","SYSTEMS_INTEGRATOR_COMPANY_TYPE","EDUCATION_TYPE","OTHER_COMPANY_TYPE","PERSONAL_COMPANY_TYPE","COMPANY_INDUSTRY_EXTENDED_KEY","FINANCE_INSURANCE_INDUSTRY","GOVERNMENT_INDUSTRY","HEALTHCARE_INDUSTRY","IT_INDUSTRY","LEGAL_INDUSTRY","MSP_INDUSTRY","MARKETING_INDUSTRY","MEDIA_INDUSTRY","MANUFACTURING_INDUSTRY","PHYSICAL_RETAIL_OR_SERVICES","REAL_ESTATE_OR_CONSTRUCTION","SECURITY_INDUSTRY","TELECOMS_INDUSTRY","OTHER_INDUSTRY_OPTION","OTHER_COMPANY_INDUSTRY_EXTENDED_KEY","companyType","companyIndustry","ROLE_KEY","ROLE_BUSINESS_OWNER","ROLE_CUSTOMER_SUPPORT","ROLE_DATA_SCIENCE","ROLE_DEVOPS","ROLE_IT","ROLE_ENGINEERING","ROLE_SALES_AND_MARKETING","ROLE_SECURITY","ROLE_OTHER","ROLE_OTHER_KEY","role","DEVOPS_AUTOMATION_GOAL_KEY","DEVOPS_AUTOMATION_CI_CD_GOAL","DEVOPS_AUTOMATION_CLOUD_INFRASTRUCTURE_ORCHESTRATION_GOAL","DEVOPS_AUTOMATION_DATA_SYNCING_GOAL","DEVOPS_INCIDENT_RESPONSE_GOAL","DEVOPS_MONITORING_AND_ALERTING_GOAL","DEVOPS_REPORTING_GOAL","DEVOPS_TICKETING_SYSTEMS_INTEGRATIONS_GOAL","OTHER_AUTOMATION_GOAL","DEVOPS_AUTOMATION_GOAL_OTHER_KEY","goals","DEVOPS_AUTOMATION_OTHER","MARKETING_AUTOMATION_GOAL_KEY","MARKETING_AUTOMATION_LEAD_GENERATION_GOAL","MARKETING_AUTOMATION_CUSTOMER_COMMUNICATION","MARKETING_AUTOMATION_ACTIONS","MARKETING_AUTOMATION_AD_CAMPAIGN","MARKETING_AUTOMATION_REPORTING","MARKETING_AUTOMATION_DATA_SYNCHING","MARKETING_AUTOMATION_OTHER","OTHER_MARKETING_AUTOMATION_GOAL_KEY","AUTOMATION_BENEFICIARY_KEY","AUTOMATION_BENEFICIARY_SELF","AUTOMATION_BENEFICIARY_MY_TEAM","AUTOMATION_BENEFICIARY_OTHER_TEAMS","COMPANY_SIZE_KEY","COMPANY_SIZE_20_OR_LESS","COMPANY_SIZE_20_99","COMPANY_SIZE_100_499","COMPANY_SIZE_500_999","COMPANY_SIZE_1000_OR_MORE","COMPANY_SIZE_PERSONAL_USE","REPORTED_SOURCE_KEY","REPORTED_SOURCE_GOOGLE","REPORTED_SOURCE_TWITTER","REPORTED_SOURCE_LINKEDIN","REPORTED_SOURCE_YOUTUBE","REPORTED_SOURCE_FRIEND","REPORTED_SOURCE_PODCAST","REPORTED_SOURCE_EVENT","REPORTED_SOURCE_OTHER","REPORTED_SOURCE_OTHER_KEY","survey","getAccountAge","ONBOARDING_PROMPT_TIMEBOX","onboardingResponse","promptTimeout","FIRST_ONBOARDING_PROMPT_TIMEOUT","_sfc_main$1W","search","INPUT_TRANSITION_TIMEOUT","DELETE_TRANSITION_TIMEOUT","_sfc_main$1V","row","columnIndex","bodyWrapperRef","_sfc_main$1U","TagsTableHeader","TagsTable","getUsage","count","disabled","tagRows","updateId","onUpdate","updated","deleteId","onDelete","deleted","onCreate","created","_sfc_main$1T","_sfc_main$1S","TagsView","NoTagsView","cb","escapedName","oldName","updatedTag","_sfc_main$1R","activeElement","_sfc_main$1Q","iconType","iconSource","_sfc_main$1P","NodeIcon","Badge","WarningTooltip","_sfc_main$1N","_sfc_main$1M","ModalDrawer","VersionCard","useVersionsStore","VERSIONS_MODAL_KEY","DEFAULT_TITLE","GREAT_FEEDBACK_TITLE","DEFAULT_FEEDBACK_TITLE","_sfc_main$1L","isActive","VALUE_SURVEY_MODAL_KEY","response","_sfc_main$1K","genericHelpers","WORKFLOW_SETTINGS_MODAL_KEY","useWorkflowsEEStore","fallback","promises","workflowSettings","deepCopy","str","time","currentUserIsOwner","timezones","defaultTimezoneValue","timezone","workflows","a","b","hours","minutes","seconds","localWorkflowSettings","oldSettings","remainder","_sfc_main$1J","operation","transferUser","_sfc_main$1I","msPassed","workflowActivate","telemetrySource","workflowId","newActiveState","nodesIssuesExist","currWorkflowId","isCurrentWorkflow","isWorkflowActive","newStateName","activationEventName","LOCAL_STORAGE_ACTIVATION_FLAG","WORKFLOW_ACTIVE_MODAL_KEY","_sfc_main$1H","getActivatableTriggerNodes","errorMessage","errorData","isObject","isObject_1","freeGlobal","_freeGlobal","require$$0","freeSelf","root","_root","now","now_1","reWhitespace","trimmedEndIndex","string","_trimmedEndIndex","reTrimStart","baseTrim","_baseTrim","Symbol","_Symbol","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","getRawTag","isOwn","unmasked","_getRawTag","objectToString","_objectToString","require$$1","require$$2","nullTag","undefinedTag","baseGetTag","_baseGetTag","isObjectLike","isObjectLike_1","symbolTag","isSymbol","isSymbol_1","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","other","isBinary","toNumber_1","FUNC_ERROR_TEXT","nativeMax","nativeMin","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","args","thisArg","leadingEdge","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","debounce_1","useCopyToClipboard","copyToClipboard","useExternalHooks","eventName","metadata","runExternalHook","useWebhooksStore","reactive","useGlobalLinkActions","registerCustomAction","action","unregisterCustomAction","del","delegateClick","clickedElement","actionAttribute","availableActions","reload","instance","getCurrentInstance","onUnmounted","useI18n","isEnglishLocale","localizeNodeName","nodeName","nodeTypeName","i18n","Telemetry$1","__publicField","telemetrySettings","instanceId","versionCli","settingsStore","rootStore","logging","useTelemetryStore","traits","properties","updatedProperties","route","pageName","category","queue","argsCopy","script","telemetry","Telemetry","TelemetryPlugin","vue","useTelemetry","messageDefaults","useToast","workflowsStore","messageData","track","sanitizeHtml","notification","showToast","collapsableDetails","description","errorDescription","showError","title","messageLine","useUpgradeLink","queryParams","uiStore","usageStore","linkUrlTranslationKey","DATE_TIME_MASK","debouncedEmit","isCustomDataFilterTracked","isAdvancedExecutionFilterEnabled","showTags","getDefaultFilter","vModel","getObjectKeys","statuses","locale","countSelectedFilterProps","isEmpty","onFilterMetaChange","onTagsChange","tags","onFilterReset","goToUpgrade","onBeforeMount","executionHelpers","execution","status","stoppedAt","fullDate","date","executionFilterToQueryFilter","queryFilter","_sfc_main$1F","ExecutionTime","WorkflowActivator","ExecutionFilter","setPageTitle","returnData","executionId","sendData","commandData","loadWorkflow","activeExecutions","activeExecution","results","alreadyPresentExecutions","alreadyPresentExecutionIds","exec","lastId","gaps","currentItem","currentId","_range","executionIndex","j","alreadyPresentExecutionsFiltered","activeExecutionId","WAIT_TIME_UNLIMITED","_sfc_main$1E","ExecutionsList","EXECUTIONS_MODAL_KEY","_sfc_main$1D","checkboxValue","foundTriggers","trigger","triggerNodeType","serviceName","getTriggerNodeServiceName","_sfc_main$1C","IMPORT_CURL_MODAL_KEY","curlCommand","parameters","invalidProtocol","CURL_IMPORT_NOT_SUPPORTED_PROTOCOLS","p","CURL_IMPORT_NODES_PROTOCOLS","useNode","protocol","_sfc_main$1B","WORKFLOW_SHARE_MODAL_KEY","previousSharedWith","previousSharee","saveWorkflowPromise","shareesAdded","shareesRemoved","firstName","lastName","isNewSharee","isLastUserWithAccessToCredentialsById","isLastUserWithAccess","isCredentialOwner","isCredentialSharee","workflowSharee","isLastUserWithAccessToCredentials","failure","isNavigationFailure","userStore","workflowStore","hasAnyChanges","feedback","modalBus","workflowName","currentSettings","getCurrentSettings","showConfetti","onShareFeedback","getFeedback","showSharedFeedbackSuccess","onSkip","beforeClosingModal","showSharedFeedbackError","onInput","confetti","destinationToFakeINodeUi","destination","fakeType","webhookModalDescription","syslogModalDescription","sentryModalDescription","_sfc_main$1z","Checkbox","useLogStreamingStore","checked","t","labelInfo","infoText","_sfc_main$1y","defaultMessageEventBusDestinationOptions","ParameterInputList","NodeCredentials","EventSelection","LOG_STREAM_MODAL_KEY","MessageEventBusDestinationTypeNames","items","destinationType","newDestination","defaultMessageEventBusDestinationSyslogOptions","defaultMessageEventBusDestinationSentryOptions","defaultMessageEventBusDestinationWebhookOptions","parameterPath","nodeParameters","parameterPathArray","get","unset","set","_sfc_main$1x","AboutModal","AskAiModal","ActivationModal","CommunityPackageInstallModal","CommunityPackageManageConfirmModal","ContactPromptModal","ChangePasswordModal","CredentialEdit","CredentialsSelectModal","DeleteUserModal","DuplicateWorkflowDialog","InviteUsersModal","ExecutionsModal","ModalRoot","OnboardingCallSignupModal","PersonalizationModal","TagsManager","UpdatesPanel","ValueSurvey","WorkflowSettings","WorkflowShareModal","ImportCurlModal","EventDestinationSettingsModal","WorkflowSuccessModal","CONTACT_PROMPT_MODAL_KEY","DELETE_USER_MODAL_KEY","DUPLICATE_MODAL_KEY","USER_ACTIVATION_SURVEY_MODAL","_sfc_main$1v","enabled","userHelpers","permissions","currentUser","isAuthorized","useDebounceHelper","debouncedFunctions","inputParameters","debounceTime","debouncedFunc","useDeviceSupportHelpers","isTouchDevice","userAgent","isMacOs","controlKeyCode","isCtrlKeyPressed","UNDO_REDO_DEBOUNCE_INTERVAL","useHistoryHelper","activeRoute","historyStore","useHistoryStore","callDebounced","isNDVOpen","undo","BulkCommand","commands","reverseCommands","nextTick","Command","trackCommand","redo","c","trackUndoAttempt","handleKeyDown","currentNodeViewTab","getNodeViewTab","MAIN_HEADER_TABS","newVersions","currentVersion","nextVersions","fixVersion","useRouter","useRoute","effectScope","shallowReactive","to","versionControlApiRoot","initSsh","makeRestApiRequest","initRepository","sync","getConfig","setPreferences","preferences","getPreferences","useVersionControlStore","defineStore","isEnterpriseVersionControlEnabled","vcApi.initSsh","branches","currentBranch","vcApi.initRepository","vcApi.sync","remoteRepository","vcApi.getConfig","vcApi.getPreferences","vcApi.setPreferences","_sfc_main$1u","LoadingView","Modals","useTemplatesStore","HIRING_BANNER","redirect","theme","LOCAL_STORAGE_THEME","newLocale","loadLanguage","_sfc_main$1t","initSSO","getSamlMetadata","getSamlConfig","saveSamlConfig","toggleSamlConfig","testSamlConfig","useSSOStore","usersStore","isLoading","setLoading","loading","isSamlLoginEnabled","toggleLoginEnabled","isEnterpriseSamlEnabled","isDefaultAuthenticationSaml","showSsoLoginButton","getSSORedirectUrl","ssoApi.initSSO","ssoApi.toggleSamlConfig","ssoApi.getSamlMetadata","ssoApi.getSamlConfig","ssoApi.saveSamlConfig","ssoApi.testSamlConfig","updateUser","updateCurrentUser","userData","ssoStore","_sfc_main$1r","Logo","SSOLogin","_sfc_main$1q","AuthView","token","_sfc_main$1p","_sfc_main$1o","EMAIL_INPUTS","NO_SMTP_INPUTS","DEFAULT_FORM_CONFIG","useTitleChange","pushConnection","useSegment","useWebSockets","restUrl","host","retryAttempts","queueLength","isRetry","receivedData","pushData","recoveredPushData","recoveredExecutionId","executionData","parse","iRunExecutionData","_d","_c","_e","_f","activeRunData","_i","_h","_g","iRun","_j","_m","_l","_k","_t","_s","_r","_q","_p","_o","_n","runDataExecuted","runDataExecutedErrorMessage","lineNumber","codeNodeEditorEventBus","saveManualExecutions","isSavingExecutions","_u","workflowData","eventData","TelemetryHelpers.generateNodesGraph","_v","nodeOutput","lastNodeExecuted","itemsCount","nodesToBeRemoved","DEFAULT_WORKFLOW_NAME_LIMIT","WORKFLOW_NAME_END_COUNT_TO_KEEP","_sfc_main$1n","shorten","_sfc_main$1m","observer","entries","target","isIntersecting","observed","broadcast","componentName","child","EmitterMixin","parent","_sfc_main$1l","emitter","DEFAULT_MAX_TAGS_LIMIT","_sfc_main$1k","IntersectionObserver","IntersectionObserved","limit","toDisplay","visibleCount","hidden","hiddenTitle","countTag","el","_sfc_main$1j","_sfc_main$1i","_sfc_main$1h","ExpandableInputBase","_sfc_main$1g","_sfc_main$1f","ExpandableInputEdit","ExpandableInputPreview","onSubmit","_sfc_main$1e","debounceHelper","BREAKPOINT_SM","BREAKPOINT_XL","BREAKPOINT_LG","BREAKPOINT_MD","hasChanged","prev","curr","_sfc_main$1d","TagsContainer","PushConnectionTracker","ShortenName","InlineTextEdit","BreakpointsObserver","WORKFLOW_MENU_ACTIONS","current","saved","newName","reader","exportData","usageCount","blob","saveAs","promptResponse","_sfc_main$1c","_sfc_main$1b","WorkflowDetails","TabBar","STICKY_NODE_TYPE","from","routeWorkflowId","workflowRun","runData","source","workflowIssues","errorMessages","nodeIssues","trackNodeIssues","trackErrorNodeTypes","NodeHelpers.nodeIssuesToString","issueNodeType","issueNode","trackNodeIssue","nodeIssue","directParentNodes","newRunData","startNodes","directParentNode","parentNodes","parentNode","isNewWorkflow","hasWebhookNode","startRunData","runWorkflowApiResponse","_sfc_main$19","GiftNotificationIcon","injectedItems","item","regularItems","itemType","defaultRoute","routeProps","settingsRoutes","defaultSettingsRoute","browserWidth","width","deviceSupportHelpers","moveNodeWorkflow","offsetPosition","x","y","getMousePosition","nodeViewOffsetPositionX","nodeViewOffsetPositionY","moveButtonPressed","useCanvasMouseSelect","selectActive","selectBox","useDeviceSupport","canvasStore","useCanvasStore","_setSelectBoxStyle","styles","_showSelectBox","getMousePositionWithinNodeView","_updateSelectBox","selectionBox","_getSelectionBox","_hideSelectBox","_getNodesInSelection","returnNodes","_createSelectBox","mouseUpMouseSelect","_mouseMoveSelect","deselectAllNodes","selectedNodes","nodeSelected","mouseDownMouseSelect","mouseX","mouseY","sidebarWidth","SIDEBAR_WIDTH","SIDEBAR_WIDTH_EXPANDED","headerHeight","HEADER_HEIGHT","relativeX","relativeY","nodeViewScale","nodeViewOffsetPosition","getRelativePosition","nodeDeselected","useUniqueNodeName","numberSuffixedNames","uniqueNodeName","originalName","extraNames","canvasNames","nsn","unique","lastChar","match","_sfc_main$18","_sfc_main$17","utmTags","primaryDocUrl","NPM_PACKAGE_DOCS_BASE_URL","BUILTIN_NODES_DOCS_URL","pushCogRight","_sfc_main$16","WEBHOOK_NODE_TYPE","webhookData","webhookUrl","pinData","PIN_DATA_NODE_TYPES_DENYLIST","toRemove","positionMatchRegEx","positionMatch","position","lineBreaksUpToPosition","stringSizeInBytes","MAX_WORKFLOW_PINNED_DATA_SIZE","_sfc_main$15","triggeredNode","executingNode","MANUAL_TRIGGER_NODE_TYPE","waitingOnWebhook","executedNode","shouldUnpinAndExecute","dataPinningEventBus","_sfc_main$14","NodeTitle","ParameterInputFull","NodeSettingsTabs","NodeWebhooks","NodeExecuteButton","shortNodeType","nodeCredential","CUSTOM_NODES_DOCS_URL","MAIN_NODE_PANEL_WIDTH","newNode","oldNode","parameterName","nameParts","lastNamePart","isArray","lastNameParts","tempValue","updateInformation","RenameNodeCommand","nodeNameBefore","oldNodeParameters","foundNodeSettings","nodeSetting","_sfc_main$13","Teleport","draggablePosition","_sfc_main$12","Draggable","SIDE_MARGIN","SIDE_PANELS_MARGIN","MIN_PANEL_WIDTH","PANEL_WIDTH","PANEL_WIDTH_LARGE","initialMainPanelWidth","_sfc_main$11","PanelDragButton","supportedDirections","hasInput","outputPanelRelativeLeft","panelMinLeft","currentRelativeLeftDelta","multiplier","minRelativeWidth","windowWidth","isBelowMinLeft","isMaxRight","relativeWidth","mainPanelRelativeWidth","relativeLeft","mainPanelRelativeLeft","mainPanelRelativeRight","isMinLeft","isInputless","px","direction","relativeDistance","storedPanelWidthData","LOCAL_STORAGE_MAIN_PANEL_RELATIVE_WIDTH","parsedWidth","initialPosition","_sfc_main$10","VueJsonPretty","fileName","fileType","mimeType","isJSONData","jsonParse","binaryUrl","_sfc_main$$","BinaryDataDisplayEmbed","binaryData","workflowExecution","_sfc_main$_","MAX_DISPLAY_DATA_SIZE","parameterFullName","baseErrorMessage","fullPath","pathParts","currentParameterName","arrayMatch","currentParameter","RunDataTable","__vitePreload","RunDataJson","RunDataSchema","RunDataHtml","_sfc_main$Z","BinaryDataDisplay","NodeErrorView","CodeNodeEditor","MAX_DISPLAY_ITEMS_AUTO_ALL","DATA_PINNING_DOCS_URL","DATA_EDITING_DOCS_URL","defaults","schemaView","HTML_NODE_TYPE","taskData","inputData","offset","executionDataToJson","capitalize","outputName","appendBranchWord","NODE_TYPES_EXCLUDED_FROM_OUTPUT_NAME_APPEND","itemIndex","LOCAL_STORAGE_PIN_DATA_DISCOVERY_NDV_FLAG","LOCAL_STORAGE_PIN_DATA_DISCOVERY_CANVAS_FLAG","origin","clearJsonKey","TEST_PIN_DATA","errorType","pageSize","maxPage","displayMode","previous","dataContainerRef","dataDisplay","itemsLabel","runIndex","outputIndex","fileExtension","bufferString","d","jsonItems","run","newData","prevData","branchIndex","_sfc_main$Y","_sfc_main$X","RunData","RunInfo","runAt","runDataRef","_sfc_main$V","WireMeUp","toIgnore","START_NODE_TYPE","CRON_NODE_TYPE","INTERVAL_NODE_TYPE","nodes","connectedInputs","inputIndex","truncated","_sfc_main$U","_sfc_main$T","NodeSettings","InputPanel","OutputPanel","NDVDraggablePanels","TriggerPanel","isWebhookBasedNode","isPollingNode","override","EXECUTABLE_TRIGGER_NODE_TYPES","BASE_NODE_SURVEY_URL","credentials","foreignCredentials","outgoingConnections","isTooltipVisible","pane","nodeBase","endpoint","canvas","nodeTypeData","indexData","inputName","anchorPosition","NodeViewUtils.ANCHOR_POSITIONS","newEndpointData","NodeViewUtils.getInputEndpointUUID","NodeViewUtils.getInputEndpointStyle","NodeViewUtils.getInputNameOverlay","NodeViewUtils.getOutputEndpointUUID","NodeViewUtils.getOutputEndpointStyle","overlaySpec","NodeViewUtils.getOutputNameOverlay","plusEndpointData","plusEndpoint","NO_OP_NODE_TYPE","_sfc_main$S","TitledList","workflowResultDataNode","eventTriggerDescription","nodeExecutionRunData","issues","executionRunData","waitDate","borderColor","getStyleTokenValue","shouldShowTriggerTooltip","dataItemsCount","nodeSubtitle","CUSTOM_API_CALL_KEY","EnableNodeToggleCommand","_sfc_main$R","content","isString","isNumber","edit","link","isOnboardingNote","QUICKSTART_NOTE_NAME","isWelcomeVideo","height","dX","dY","nodeCreatorStore","useNodeCreatorStore","containerCssVars","NodeCreator","NodeCreation","CanvasControls","_sfc_main$P","NodeDetailsView","Node","Sticky","CanvasAddButton","vm","currentTab","nodeViewNotInitialized","workflowChanged","isOpeningTemplate","previousDirtyState","containsTrigger","newScale","confirmModal","MODAL_CONFIRMED","MODAL_CANCEL","useEnvironmentsStore","NodeViewUtils.getBackgroundStyles","returnClasses","NodeViewUtils.GRID_SIZE","NODE_CREATOR_OPEN_SOURCES","isVisible","notice","TRIGGER_NODE_CREATOR_VIEW","nodeErrorFound","errorCheck","NodeViewUtils.getFixedNodesList","templateId","selectedExecution","lastSelectedNode","connections","connectionsParent","siblingNode","lastCheckedNodePosition","nextSelectNode","ouputConnections","ouputConnection","nodesToDelete","sourceNodeName","margin","recordHistory","sourceNode","childNodes","oldPosition","MoveNodeCommand","deleteCopiedNodes","isCut","workflowToCopy","nodeData","executedData","trackProps","importTags","nodeIdMap","newId","uuid","currInstanceId","nodeGraph","NodeViewUtils.getNewNodePosition","tagsEnabled","allTags","tagNames","workflowTags","notFound","creatingTagPromises","creationPromise","imported","nodeTypeNames","mousePosition","nodesToAdd","NodeViewUtils.NODE_SIZE","setActive","deselectAllOthers","maxNodes","nodeVersion","newNodeData","credentialPerType","defaultCredential","selectedCredentials","authentication","authDisplayOptions","displayOption","optionValue","showDetail","trackHistory","isAutoAdd","lastSelectedConnection","diffX","NodeViewUtils.getConnectorLengths","NodeViewUtils.MAX_X_TO_PUSH_DOWNSTREAM_NODES","NodeViewUtils.PUSH_NODES_OFFSET","yOffset","sourceNodeType","offsets","sourceOutputIndex","localizedName","sourceNodeOutputIndex","targetNodeName","targetNodeOuputIndex","nodeConnections","connection","connectionData","lastSelectedNodeOutputIndex","targetOutputIndex","sourceInfo","targetInfo","NodeViewUtils.resetConnection","NodeViewUtils.moveBackInputLabelPosition","AddConnectionCommand","NodeViewUtils.addConnectionActionsOverlay","NodeViewUtils.addConnectionTestData","NodeViewUtils.showOrHideItemsLabel","NodeViewUtils.showOrHideMidpointArrow","overlay","NodeViewUtils.hideConnectionActions","NodeViewUtils.showConnectionActions","NodeViewUtils.resetInputLabelPosition","connectionInfo","mouse","getConnectionInfo","RemoveConnectionCommand","removeCommand","onMouseMove","NodeViewUtils.showDropConnectionState","inputMargin","top","left","right","bottom","NodeViewUtils.getMousePosition","endpointUUID","NodeViewUtils.showPullConnectionState","onMouseUp","NodeViewUtils.resetConnectionAfterPull","endpoints","EVENT_CONNECTION_ABORT","INTERCEPT_BEFORE_DROP","EVENT_CONNECTION","EVENT_DRAG_MOVE","EVENT_CONNECTION_MOUSEOVER","EVENT_CONNECTION_MOUSEOUT","EVENT_CONNECTION_MOVED","EVENT_ENDPOINT_MOUSEOVER","EVENT_ENDPOINT_MOUSEOUT","EVENT_CONNECTION_DETACHED","EVENT_CONNECTION_DRAG","EVENT_PLUS_ENDPOINT_CLICK","elements","endpointInstance","N8nPlusEndpointType","confirmationMessage","MODAL_CLOSE","outputUuid","inputUuid","removeVisualConnection","targetNode","connectionInstance","_","targetInputIndex","sourceId","targetId","sourceEndpoint","targetEndpoint","uuids","nodeEl","outgoing","incoming","waiting","outputMap","NodeViewUtils.getOutputSummary","output","NodeViewUtils.recoveredConnection","NodeViewUtils.addConnectionOutputSuccess","NODE_OUTPUT_DEFAULT_KEY","NodeViewUtils.getRunItemsLabel","trackBulk","requiredNodeTypes","deleteAllowed","checkNode","waitForNewConnection","conn1","conn2","RemoveNodeCommand","currentName","promptResponsePromise","nameInput","nodeCredentialType","nodeCredentials","credentialOptions","credentialsId","credentialsForId","optionData","credentialsForName","foundNodeIssues","AddNodeCommand","sourceIndex","outwardConnections","targetData","nodeNameTable","newNodeNames","nodeTypesCount","createNodes","localized","newConnections","currentConnections","createNodeNames","connectionIndex","nodeSourceConnections","tempWorkflow","exportNodeNames","connectionToKeep","typeConnections","nodeInfos","allNodes","nodesToBeFetched","nodeVersions","n","json","createNodeActive","REGULAR_NODE_CREATOR_VIEW","mode","nodeTypes","dragAndDrop","openNDV","actionWatcher","after","lastAddedNode","previouslyAddedNode","callback","suspend","isDisabled","loadPromises","ready","historyBus","_sfc_main$O","_sfc_main$N","newSettings","_sfc_main$M","ExecutionCard","ExecutionsInfoAccordion","executionsListRef","diff","payload","sidebarContainerRef","currentExecutionCardRefs","cardElement","listCapacity","cardRect","LIST_HEADER_OFFSET","MAX_LOADING_ATTEMPTS","LOAD_MORE_PAGE_SIZE","_sfc_main$L","ExecutionsSidebar","activeNotPresent","ex","workflowUpdated","onNewWorkflow","shouldUpdate","workflowExecutions","currentExecutions","newExecution","nextExecution","fetchedExecutions","existingExecutions","updatedActiveExecution","existingExecution","existingStillRunning","currentFinished","NO_NETWORK_ERROR_CODE","attemptCount","_sfc_main$K","workflowRoute","_sfc_main$J","iframeRef","show","_sfc_main$I","ElDropdown","WorkflowPreview","retryDropdownRef","_sfc_main$H","menuItems","SettingsView","SettingsSidebar","_sfc_main$G","InfiniteLoading","column","startedAt","endedAt","runTimeInMinutes","humanizeDuration","capitalizeFirstLetter","convertToDisplayDate","formInputsRef","newConfiguration","saveForm","whenLoginEnabled","whenSyncAndLoginEnabled","whenAdminBindingAndLoginEnabled","_sfc_main$F","form","_sfc_main$E","_sfc_main$D","PageAlert","_sfc_main$C","PACKAGE_COUNT_THRESHOLD","_sfc_main$B","CommunityPackageCard","installedPackages","packagesToUpdate","packageCount","COMMUNITY_NODES_NPM_INSTALLATION_URL","linkUrl","_sfc_main$A","apiPath","latestVersion","_sfc_main$z","DESTINATION_LIST_ITEM_ACTIONS","_sfc_main$y","actions","destinationId","_sfc_main$x","PageViewLayout","EventDestinationCard","sortedKeys","eventNamesData","destinationData","foundNode","editDestination","_sfc_main$w","_sfc_main$v","entities","forceRedirectedHere","_sfc_main$u","emailLabel","ldapLoginLabel","isLdapLoginEnabled","_sfc_main$t","inviterId","inviteeId","_sfc_main$s","_sfc_main$r","TemplateDetailsBlock","abbreviateNumber","filterTemplateNodes","_sfc_main$q","_sfc_main$p","NodeList","_sfc_main$o","TemplateCard","loaderRef","rect","_sfc_main$n","_sfc_main$m","GoBackButton","_sfc_main$l","TemplateDetails","TemplateList","TemplatesView","contentArea","page","collection","_sfc_main$k","template","_sfc_main$j","_sfc_main$i","Card","_sfc_main$h","CollectionCard","scrollWidth","scrollLeft","sliderRef","_sfc_main$g","categories","selectedCategories","notSelectedCategories","selectedCategory","categoryId","_sfc_main$f","CollectionsCarousel","TemplateFilters","query","initialLoad","behavior","newWorkflows","_sfc_main$e","_sfc_main$d","_sfc_main$c","length","filters","_sfc_main$b","PageViewLayoutList","ResourceOwnershipSelect","ResourceFiltersDropdown","resource","MAIN_REPOSITORY_URL","GITHUB_STARS_BANNER_SHOW_UNTIL_DATE","searchString","rowsPerPage","filtersSet","filterValues","CREDENTIAL_LIST_ITEM_ACTIONS","_sfc_main$a","currentYear","dateformat","_sfc_main$9","ResourcesListLayout","CredentialCard","_sfc_main$8","WORKFLOW_LIST_ITEM_ACTIONS","_sfc_main$7","StatusFilter","WorkflowsView","WorkflowCard","resourceTag","getVariablesPermissions","modelValue","formValidationStatus","formValid","keyInputRef","valueInputRef","usage","isFeatureEnabled","showActions","focusFirstInput","keyValidationRules","valueValidationRules","watch","updateUsageSyntax","onCancel","onSave","onEdit","onValidate","onUsageClick","environmentsStore","layoutRef","TEMPORARY_VARIABLE_UID_BASE","allVariables","editMode","canCreateVariables","datatableColumns","contextBasedTranslationKeys","upgradeLinkUrl","newlyAddedVariableIds","nameSortFn","sortFns","resetNewVariablesList","initialize","addTemporaryVariable","temporaryVariable","uid","saveVariable","updatedVariable","rest","variable","toggleEditing","cancelEditing","deleteVariable","router","queryParamCallback","viewPlansUrl","managePlanUrl","activationKeyModal","activationKey","activationKeyInput","showActivationSuccess","showActivationError","onLicenseActivation","sendUsageTelemetry","N8N_PRICING_PAGE_URL","ssoActivatedLabel","ssoSettingsSaved","redirectUrl","entityId","onTest","_sfc_main$2","FORM_CONFIG","versionControlStore","sshKey","branch","selectElement","Router","getTemplatesRedirect","posthog","usePostHog","isTemplatesEnabled","TEMPLATE_EXPERIMENT","routes","LOGIN_STATUS","TemplatesCollectionView","MainSidebar","templatesStore","TemplatesWorkflowView","TemplatesSearchView","pos","CredentialsView","VariablesView","ExecutionsView","NodeView","MainHeader","WorkflowExecutionsList","ExecutionsLandingPage","ExecutionPreview","SigninView","SignupView","SignoutView","SetupView","ForgotMyPasswordView","ChangePasswordView","SettingsUsageAndPlanVue","SettingsPersonalView","SettingsUsersView","SettingsApiView","SettingsVersionControl","SettingsSso","SettingsLogStreamingView","SettingsCommunityNodesView","SettingsFakeDoorView","SettingsLdapView","SamlOnboarding","ErrorView","savedPosition","I18nPlugin","PiniaVuePlugin","pinia","createPinia","i18nInstance","h","App"],"mappings":"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,YAAa,uBACb,KAAM,YACN,KAAM,UACN,QAAS,GACT,iBAAkB,GAClB,YAAa,6CACd,EACA,CACC,YAAa,2BACb,KAAM,eACN,KAAM,UACN,eAAgB,CACf,KAAM,CACL,UAAW,CAAC,EAAI,CACjB,CACD,EACA,QAAS,CACR,CACC,KAAM,qBACN,MAAO,SACR,EACA,CACC,KAAM,aACN,MAAO,MACR,CACD,EACA,QAAS,SACV,EACA,CACC,YAAa,uBACb,KAAM,kBACN,KAAM,kBACN,eAAgB,CACf,KAAM,CACL,UAAW,CAAC,EAAI,EAChB,aAAc,CAAC,SAAS,CACzB,CACD,EACA,YAAa,CACZ,eAAgB,EACjB,EACA,YAAa,gBACb,QAAS,CACR,WAAY,CACX,CACC,KAAM,GACN,MAAO,EACR,CACD,CACD,EACA,QAAS,CACR,CACC,KAAM,aACN,YAAa,YACb,OAAQ,CACP,CACC,YAAa,OACb,KAAM,OACN,KAAM,SACN,QAAS,EACV,EACA,CACC,YAAa,QACb,KAAM,QACN,KAAM,SACN,QAAS,EACV,CACD,CACD,CACD,CACD,EACA,CACC,YAAa,OACb,KAAM,YACN,KAAM,OACN,eAAgB,CACf,KAAM,CACL,UAAW,CAAC,EAAI,EAChB,aAAc,CAAC,MAAM,CACtB,CACD,EACA,QAAS,EACV,EACA,CACC,YAAa,cACb,KAAM,cACN,KAAM,UACN,QAAS,GACT,iBAAkB,GAClB,YAAa,wCACd,EACA,CACC,YAAa,kBACb,KAAM,iBACN,KAAM,UACN,eAAgB,CACf,KAAM,CACL,YAAa,CAAC,EAAI,CACnB,CACD,EACA,QAAS,CACR,CACC,KAAM,qBACN,MAAO,SACR,EACA,CACC,KAAM,aACN,MAAO,MACR,CACD,EACA,QAAS,SACV,EACA,CACC,YAAa,oBACb,KAAM,mBACN,KAAM,kBACN,eAAgB,CACf,KAAM,CACL,YAAa,CAAC,EAAI,EAClB,eAAgB,CAAC,SAAS,CAC3B,CACD,EACA,YAAa,CACZ,eAAgB,EACjB,EACA,YAAa,gBACb,QAAS,CACR,WAAY,CACX,CACC,KAAM,GACN,MAAO,EACR,CACD,CACD,EACA,QAAS,CACR,CACC,KAAM,aACN,YAAa,YACb,OAAQ,CACP,CACC,YAAa,OACb,KAAM,OACN,KAAM,SACN,QAAS,EACV,EACA,CACC,YAAa,QACb,KAAM,QACN,KAAM,SACN,QAAS,EACV,CACD,CACD,CACD,CACD,EACA,CACC,YAAa,OACb,KAAM,cACN,KAAM,OACN,eAAgB,CACf,KAAM,CACL,YAAa,CAAC,EAAI,EAClB,eAAgB,CAAC,MAAM,CACxB,CACD,EACA,QAAS,EACV,EACA,CACC,YAAa,UACb,KAAM,UACN,KAAM,aACN,YAAa,aACb,QAAS,CAAC,EACV,QAAS,CACR,CACC,YAAa,oBACb,KAAM,yBACN,KAAM,UACN,iBAAkB,GAClB,QAAS,GACT,YAAa,8CACd,EACA,CACC,YAAa,mCACb,KAAM,uBACN,KAAM,UACN,eAAgB,CACf,KAAM,CACL,aAAc,CAAC,EAAI,CACpB,CACD,EACA,QAAS,CACR,CACC,KAAM,cACN,MAAO,SACP,YAAa,sBACd,EACA,CACC,KAAM,gBACN,MAAO,WACP,YAAa,0BACd,EACA,CACC,KAAM,wBACN,MAAO,UACP,YAAa,4BACd,CACD,EACA,QAAS,UACV,EACA,CACC,YAAa,YACb,KAAM,WACN,YAAa,eACb,KAAM,kBACN,YAAa,CACZ,eAAgB,EACjB,EACA,QAAS,CACR,SAAU,CAAC,CACZ,EACA,QAAS,CACR,CACC,YAAa,WACb,KAAM,WACN,OAAQ,CACP,CACC,YAAa,mBACb,KAAM,kBACN,KAAM,UACN,QAAS,GACT,iBAAkB,GAClB,YAAa,iCACd,EACA,CACC,YAAa,gBACb,KAAM,eACN,KAAM,SACN,eAAgB,CACf,KAAM,CACL,gBAAiB,CAAC,EAAI,CACvB,CACD,EACA,QAAS,GACT,YAAa,mCACd,CACD,CACD,CACD,CACD,EACA,CACC,YAAa,QACb,KAAM,QACN,YAAa,YACb,KAAM,kBACN,YAAa,CACZ,eAAgB,EACjB,EACA,QAAS,CACR,MAAO,CAAC,CACT,EACA,QAAS,CACR,CACC,YAAa,QACb,KAAM,QACN,OAAQ,CACP,CA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pC,CACD,CACD,CACD,EACA,CACC,KAAM,YACN,SAAU,eACX,EACA,CACC,KAAM,aACN,KAAM9oD,EAAM,UACZ,WAAY,CACX,QAASkkD,GACT,QAAS8E,EACV,EACA,KAAM,CACL,YAAa,CACZ,MAAO,CACN,YAAa,CAACF,GAAa,QAAQ,CACpC,CACD,CACD,CACD,EACA,CACC,KAAM,gBACN,KAAM9oD,EAAM,aACZ,WAAY,CACX,QAASwpD,GACT,OAAQC,GACR,QAAST,EACV,EACA,KAAM,CACL,SAAU,GACV,YAAa,CACZ,MAAO,CACN,YAAa,CAACF,GAAa,QAAQ,CACpC,CACD,CACD,CACD,EACA,CACC,KAAM,kBACN,KAAM9oD,EAAM,SACZ,WAAY,CACX,QAASwpD,GACT,OAAQC,GACR,QAAST,EACV,EACA,KAAM,CACL,SAAU,GACV,YAAa,CACZ,MAAO,CACN,YAAa,CAACF,GAAa,QAAQ,CACpC,CACD,CACD,CACD,EACA,CACC,KAAM,6BACN,KAAM9oD,EAAM,oBACZ,WAAY,CACX,QAAS0pD,GACT,OAAQD,GACR,QAAST,EACV,EACA,KAAM,CACL,kBAAmB,GACnB,YAAa,CACZ,MAAO,CACN,YAAa,CAACF,GAAa,QAAQ,CACpC,CACD,CACD,EACA,SAAU,CACT,CACC,KAAM,GACN,KAAM9oD,EAAM,eACZ,WAAY,CACX,iBAAkB2pD,EACnB,EACA,KAAM,CACL,kBAAmB,GACnB,YAAa,CACZ,MAAO,CACN,YAAa,CAACb,GAAa,QAAQ,CACpC,CACD,CACD,CACD,EACA,CACC,KAAM,eACN,KAAM9oD,EAAM,kBACZ,WAAY,CACX,iBAAkB4pD,EACnB,EACA,KAAM,CACL,kBAAmB,GACnB,YAAa,CACZ,MAAO,CACN,YAAa,CAACd,GAAa,QAAQ,CACpC,CACD,CACD,CACD,CACD,CACD,EACA,CACC,KAAM,kBACN,KAAM9oD,EAAM,KACZ,WAAY,CACX,QAASwpD,EACV,EACA,KAAM,CACL,YAAa,CACZ,MAAO,CACN,YAAa,CAACV,GAAa,QAAQ,CACpC,CACD,CACD,CACD,EACA,CACC,KAAM,2BACN,KAAM9oD,EAAM,gBACZ,WAAY,CACX,QAASwpD,GACT,OAAQC,GACR,QAAST,EACV,EACA,KAAM,CACL,iBAAkB,GAClB,YAAaR,GACb,YAAa,CACZ,MAAO,CACN,YAAa,CAACM,GAAa,QAAQ,CACpC,CACD,CACD,CACD,EACA,CACC,KAAM,UACN,KAAM9oD,EAAM,OACZ,WAAY,CACX,QAAS6pD,EACV,EACA,KAAM,CACL,UAAW,CACV,aAAc,MACf,EACA,YAAa,CACZ,MAAO,CACN,YAAa,CAACf,GAAa,SAAS,CACrC,CACD,CACD,CACD,EACA,CACC,KAAM,UACN,KAAM9oD,EAAM,OACZ,WAAY,CACX,QAAS8pD,EACV,EACA,KAAM,CACL,UAAW,CACV,aAAc,MACf,EACA,YAAa,CACZ,MAAO,CACN,YAAa,CAAChB,GAAa,SAAS,CACrC,CACD,CACD,CACD,EACA,CACC,KAAM,WACN,KAAM9oD,EAAM,QACZ,WAAY,CACX,QAAS+pD,EACV,EACA,KAAM,CACL,UAAW,CACV,aAAc,MACf,EACA,YAAa,CACZ,MAAO,CACN,YAAa,CAACjB,GAAa,QAAQ,CACpC,CACD,CACD,CACD,EACA,CACC,KAAM,SACN,KAAM9oD,EAAM,MACZ,WAAY,CACX,QAASgqD,EACV,EACA,KAAM,CACL,UAAW,CACV,aAAc,MACf,EACA,YAAa,CACZ,MAAO,CACN,KAAM,CAAC7lD,GAAK,OAAO,CACpB,EACA,KAAM,CACL,WAAY,IACWnO,IACD,0BAA4B,EAEnD,CACD,CACD,CACD,EACA,CACC,KAAM,mBACN,KAAMgK,EAAM,gBACZ,WAAY,CACX,QAASiqD,EACV,EACA,KAAM,CACL,UAAW,CACV,aAAc,MACf,EACA,YAAa,CACZ,MAAO,CACN,YAAa,CAACnB,GAAa,SAAS,CACrC,CACD,CACD,CACD,EACA,CACC,KAAM,mBACN,KAAM9oD,EAAM,gBACZ,WAAY,CACX,QAASkqD,EACV,EACA,KAAM,CACL,UAAW,CACV,aAAc,MACf,EACA,YAAa,CACZ,MAAO,CACN,YAAa,CAACpB,GAAa,SAAS,CACrC,CACD,CACD,CACD,EACA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"}