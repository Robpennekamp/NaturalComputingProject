{"version":3,"file":"RunDataTable-eb563a78.js","sources":["../../src/components/RunDataTable.vue","../../../../../../../../../static/data-mapping-gif.gif"],"sourcesContent":["<template>\n\t<div :class=\"$style.dataDisplay\">\n\t\t<table :class=\"$style.table\" v-if=\"tableData.columns && tableData.columns.length === 0\">\n\t\t\t<tr>\n\t\t\t\t<th :class=\"$style.emptyCell\"></th>\n\t\t\t\t<th :class=\"$style.tableRightMargin\"></th>\n\t\t\t</tr>\n\t\t\t<tr\n\t\t\t\tv-for=\"(row, index1) in tableData.data\"\n\t\t\t\t:key=\"index1\"\n\t\t\t\t:class=\"{ [$style.hoveringRow]: isHoveringRow(index1) }\"\n\t\t\t>\n\t\t\t\t<td\n\t\t\t\t\t:data-row=\"index1\"\n\t\t\t\t\t:data-col=\"0\"\n\t\t\t\t\t@mouseenter=\"onMouseEnterCell\"\n\t\t\t\t\t@mouseleave=\"onMouseLeaveCell\"\n\t\t\t\t>\n\t\t\t\t\t<n8n-info-tip>{{ $locale.baseText('runData.emptyItemHint') }}</n8n-info-tip>\n\t\t\t\t</td>\n\t\t\t\t<td :class=\"$style.tableRightMargin\"></td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<table :class=\"$style.table\" v-else>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th v-for=\"(column, i) in tableData.columns || []\" :key=\"column\">\n\t\t\t\t\t\t<n8n-tooltip placement=\"bottom-start\" :disabled=\"!mappingEnabled\" :open-delay=\"1000\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<img src=\"/static/data-mapping-gif.gif\" />\n\t\t\t\t\t\t\t\t\t{{ $locale.baseText('dataMapping.dragColumnToFieldHint') }}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<draggable\n\t\t\t\t\t\t\t\ttype=\"mapping\"\n\t\t\t\t\t\t\t\t:data=\"getExpression(column)\"\n\t\t\t\t\t\t\t\t:disabled=\"!mappingEnabled\"\n\t\t\t\t\t\t\t\t@dragstart=\"onDragStart\"\n\t\t\t\t\t\t\t\t@dragend=\"(column) => onDragEnd(column, 'column')\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<template #preview=\"{ canDrop }\">\n\t\t\t\t\t\t\t\t\t<MappingPill :html=\"shorten(column, 16, 2)\" :can-drop=\"canDrop\" />\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<template #default=\"{ isDragging }\">\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t:class=\"{\n\t\t\t\t\t\t\t\t\t\t\t[$style.header]: true,\n\t\t\t\t\t\t\t\t\t\t\t[$style.draggableHeader]: mappingEnabled,\n\t\t\t\t\t\t\t\t\t\t\t[$style.activeHeader]:\n\t\t\t\t\t\t\t\t\t\t\t\t(i === activeColumn || forceShowGrip) && mappingEnabled,\n\t\t\t\t\t\t\t\t\t\t\t[$style.draggingHeader]: isDragging,\n\t\t\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span>{{ column || '&nbsp;' }}</span>\n\t\t\t\t\t\t\t\t\t\t<div :class=\"$style.dragButton\">\n\t\t\t\t\t\t\t\t\t\t\t<font-awesome-icon icon=\"grip-vertical\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</draggable>\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</th>\n\t\t\t\t\t<th v-if=\"columnLimitExceeded\" :class=\"$style.header\">\n\t\t\t\t\t\t<n8n-tooltip placement=\"bottom-end\">\n\t\t\t\t\t\t\t<template #content>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<i18n path=\"dataMapping.tableView.tableColumnsExceeded.tooltip\">\n\t\t\t\t\t\t\t\t\t\t<template #columnLimit>{{ columnLimit }}</template>\n\t\t\t\t\t\t\t\t\t\t<template #link>\n\t\t\t\t\t\t\t\t\t\t\t<a @click=\"switchToJsonView\">{{\n\t\t\t\t\t\t\t\t\t\t\t\t$locale.baseText('dataMapping.tableView.tableColumnsExceeded.tooltip.link')\n\t\t\t\t\t\t\t\t\t\t\t}}</a>\n\t\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t</i18n>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<font-awesome-icon\n\t\t\t\t\t\t\t\t\t:class=\"$style['warningTooltip']\"\n\t\t\t\t\t\t\t\t\ticon=\"exclamation-triangle\"\n\t\t\t\t\t\t\t\t></font-awesome-icon>\n\t\t\t\t\t\t\t\t{{ $locale.baseText('dataMapping.tableView.tableColumnsExceeded') }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</n8n-tooltip>\n\t\t\t\t\t</th>\n\t\t\t\t\t<th :class=\"$style.tableRightMargin\"></th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<draggable\n\t\t\t\ttag=\"tbody\"\n\t\t\t\ttype=\"mapping\"\n\t\t\t\ttargetDataKey=\"mappable\"\n\t\t\t\t:disabled=\"!mappingEnabled\"\n\t\t\t\t@dragstart=\"onCellDragStart\"\n\t\t\t\t@dragend=\"onCellDragEnd\"\n\t\t\t\tref=\"draggable\"\n\t\t\t>\n\t\t\t\t<template #preview=\"{ canDrop, el }\">\n\t\t\t\t\t<MappingPill\n\t\t\t\t\t\t:html=\"shorten(getPathNameFromTarget(el) || '', 16, 2)\"\n\t\t\t\t\t\t:can-drop=\"canDrop\"\n\t\t\t\t\t/>\n\t\t\t\t</template>\n\t\t\t\t<template>\n\t\t\t\t\t<tr\n\t\t\t\t\t\tv-for=\"(row, index1) in tableData.data\"\n\t\t\t\t\t\t:key=\"index1\"\n\t\t\t\t\t\t:class=\"{ [$style.hoveringRow]: isHoveringRow(index1) }\"\n\t\t\t\t\t\t:data-test-id=\"isHoveringRow(index1) ? 'hovering-item' : undefined\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tv-for=\"(data, index2) in row\"\n\t\t\t\t\t\t\t:key=\"index2\"\n\t\t\t\t\t\t\t:data-row=\"index1\"\n\t\t\t\t\t\t\t:data-col=\"index2\"\n\t\t\t\t\t\t\t@mouseenter=\"onMouseEnterCell\"\n\t\t\t\t\t\t\t@mouseleave=\"onMouseLeaveCell\"\n\t\t\t\t\t\t\t:class=\"hasJsonInColumn(index2) ? $style.minColWidth : $style.limitColWidth\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tv-if=\"isSimple(data)\"\n\t\t\t\t\t\t\t\t:class=\"{ [$style.value]: true, [$style.empty]: isEmpty(data) }\"\n\t\t\t\t\t\t\t\tclass=\"ph-no-capture\"\n\t\t\t\t\t\t\t\t>{{ getValueToRender(data) }}</span\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<n8n-tree :nodeClass=\"$style.nodeClass\" v-else :value=\"data\">\n\t\t\t\t\t\t\t\t<template #label=\"{ label, path }\">\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t@mouseenter=\"() => onMouseEnterKey(path, index2)\"\n\t\t\t\t\t\t\t\t\t\t@mouseleave=\"onMouseLeaveKey\"\n\t\t\t\t\t\t\t\t\t\t:class=\"{\n\t\t\t\t\t\t\t\t\t\t\t[$style.hoveringKey]: mappingEnabled && isHovering(path, index2),\n\t\t\t\t\t\t\t\t\t\t\t[$style.draggingKey]: isDraggingKey(path, index2),\n\t\t\t\t\t\t\t\t\t\t\t[$style.dataKey]: true,\n\t\t\t\t\t\t\t\t\t\t\t[$style.mappable]: mappingEnabled,\n\t\t\t\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t\t\t\t\tdata-target=\"mappable\"\n\t\t\t\t\t\t\t\t\t\t:data-name=\"getCellPathName(path, index2)\"\n\t\t\t\t\t\t\t\t\t\t:data-value=\"getCellExpression(path, index2)\"\n\t\t\t\t\t\t\t\t\t\t:data-depth=\"path.length\"\n\t\t\t\t\t\t\t\t\t\t>{{ label || $locale.baseText('runData.unnamedField') }}</span\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t<template #value=\"{ value }\">\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t:class=\"{ [$style.nestedValue]: true, [$style.empty]: isEmpty(value) }\"\n\t\t\t\t\t\t\t\t\t\tclass=\"ph-no-capture\"\n\t\t\t\t\t\t\t\t\t\t>{{ getValueToRender(value) }}</span\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</n8n-tree>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td v-if=\"columnLimitExceeded\"></td>\n\t\t\t\t\t\t<td :class=\"$style.tableRightMargin\"></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</template>\n\t\t\t</draggable>\n\t\t</table>\n\t</div>\n</template>\n\n<script lang=\"ts\">\n/* eslint-disable prefer-spread */\nimport type { INodeUi, ITableData, NDVState } from '@/Interface';\nimport { getPairedItemId } from '@/utils';\nimport type { PropType } from 'vue';\nimport mixins from 'vue-typed-mixins';\nimport type { GenericValue, IDataObject, INodeExecutionData } from 'n8n-workflow';\nimport Draggable from './Draggable.vue';\nimport { shorten } from '@/utils';\nimport { externalHooks } from '@/mixins/externalHooks';\nimport { mapStores } from 'pinia';\nimport { useWorkflowsStore } from '@/stores/workflows.store';\nimport { useNDVStore } from '@/stores/ndv.store';\nimport MappingPill from './MappingPill.vue';\nimport { getMappedExpression } from '@/utils/mappingUtils';\n\nconst MAX_COLUMNS_LIMIT = 40;\n\ntype DraggableRef = InstanceType<typeof Draggable>;\n\nexport default mixins(externalHooks).extend({\n\tname: 'run-data-table',\n\tcomponents: { Draggable, MappingPill },\n\tprops: {\n\t\tnode: {\n\t\t\ttype: Object as PropType<INodeUi>,\n\t\t},\n\t\tinputData: {\n\t\t\ttype: Array as PropType<INodeExecutionData[]>,\n\t\t},\n\t\tmappingEnabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\t\tdistanceFromActive: {\n\t\t\ttype: Number,\n\t\t},\n\t\trunIndex: {\n\t\t\ttype: Number,\n\t\t},\n\t\toutputIndex: {\n\t\t\ttype: Number,\n\t\t},\n\t\ttotalRuns: {\n\t\t\ttype: Number,\n\t\t},\n\t\tpageOffset: {\n\t\t\ttype: Number,\n\t\t},\n\t\thasDefaultHoverState: {\n\t\t\ttype: Boolean,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tactiveColumn: -1,\n\t\t\tforceShowGrip: false,\n\t\t\tdraggedColumn: false,\n\t\t\tdraggingPath: null as null | string,\n\t\t\thoveringPath: null as null | string,\n\t\t\tmappingHintVisible: false,\n\t\t\tactiveRow: null as number | null,\n\t\t\tcolumnLimit: MAX_COLUMNS_LIMIT,\n\t\t\tcolumnLimitExceeded: false,\n\t\t};\n\t},\n\tmounted() {\n\t\tif (this.tableData && this.tableData.columns && this.$refs.draggable) {\n\t\t\tconst tbody = (this.$refs.draggable as DraggableRef).$refs.wrapper;\n\t\t\tif (tbody) {\n\t\t\t\tthis.$emit('mounted', {\n\t\t\t\t\tavgRowHeight: tbody.offsetHeight / this.tableData.data.length,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapStores(useNDVStore, useWorkflowsStore),\n\t\thoveringItem(): NDVState['hoveringItem'] {\n\t\t\treturn this.ndvStore.hoveringItem;\n\t\t},\n\t\tpairedItemMappings(): { [itemId: string]: Set<string> } {\n\t\t\treturn this.workflowsStore.workflowExecutionPairedItemMappings;\n\t\t},\n\t\ttableData(): ITableData {\n\t\t\treturn this.convertToTable(this.inputData);\n\t\t},\n\t\tfocusedMappableInput(): string {\n\t\t\treturn this.ndvStore.focusedMappableInput;\n\t\t},\n\t},\n\tmethods: {\n\t\tshorten,\n\t\tisHoveringRow(row: number): boolean {\n\t\t\tif (row === this.activeRow) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst itemIndex = this.pageOffset + row;\n\t\t\tif (\n\t\t\t\titemIndex === 0 &&\n\t\t\t\t!this.hoveringItem &&\n\t\t\t\tthis.hasDefaultHoverState &&\n\t\t\t\tthis.distanceFromActive === 1\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst itemNodeId = getPairedItemId(\n\t\t\t\tthis.node.name,\n\t\t\t\tthis.runIndex || 0,\n\t\t\t\tthis.outputIndex || 0,\n\t\t\t\titemIndex,\n\t\t\t);\n\t\t\tif (!this.hoveringItem || !this.pairedItemMappings[itemNodeId]) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst hoveringItemId = getPairedItemId(\n\t\t\t\tthis.hoveringItem.nodeName,\n\t\t\t\tthis.hoveringItem.runIndex,\n\t\t\t\tthis.hoveringItem.outputIndex,\n\t\t\t\tthis.hoveringItem.itemIndex,\n\t\t\t);\n\t\t\treturn this.pairedItemMappings[itemNodeId].has(hoveringItemId);\n\t\t},\n\t\tonMouseEnterCell(e: MouseEvent) {\n\t\t\tconst target = e.target;\n\t\t\tif (target && this.mappingEnabled) {\n\t\t\t\tconst col = (target as HTMLElement).dataset.col;\n\t\t\t\tif (col && !isNaN(parseInt(col, 10))) {\n\t\t\t\t\tthis.activeColumn = parseInt(col, 10);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (target) {\n\t\t\t\tconst row = (target as HTMLElement).dataset.row;\n\t\t\t\tif (row && !isNaN(parseInt(row, 10))) {\n\t\t\t\t\tthis.activeRow = parseInt(row, 10);\n\t\t\t\t\tthis.$emit('activeRowChanged', this.pageOffset + this.activeRow);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonMouseLeaveCell() {\n\t\t\tthis.activeColumn = -1;\n\t\t\tthis.activeRow = null;\n\t\t\tthis.$emit('activeRowChanged', null);\n\t\t},\n\t\tonMouseEnterKey(path: string[], colIndex: number) {\n\t\t\tthis.hoveringPath = this.getCellExpression(path, colIndex);\n\t\t},\n\t\tonMouseLeaveKey() {\n\t\t\tthis.hoveringPath = null;\n\t\t},\n\t\tisHovering(path: string[], colIndex: number) {\n\t\t\tconst expr = this.getCellExpression(path, colIndex);\n\n\t\t\treturn this.hoveringPath === expr;\n\t\t},\n\t\tgetExpression(column: string) {\n\t\t\tif (!this.node) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn getMappedExpression({\n\t\t\t\tnodeName: this.node.name,\n\t\t\t\tdistanceFromActive: this.distanceFromActive,\n\t\t\t\tpath: [column],\n\t\t\t});\n\t\t},\n\t\tgetPathNameFromTarget(el: HTMLElement) {\n\t\t\tif (!el) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn el.dataset.name;\n\t\t},\n\t\tgetCellPathName(path: Array<string | number>, colIndex: number) {\n\t\t\tconst lastKey = path[path.length - 1];\n\t\t\tif (typeof lastKey === 'string') {\n\t\t\t\treturn lastKey;\n\t\t\t}\n\t\t\tif (path.length > 1) {\n\t\t\t\tconst prevKey = path[path.length - 2];\n\t\t\t\treturn `${prevKey}[${lastKey}]`;\n\t\t\t}\n\t\t\tconst column = this.tableData.columns[colIndex];\n\t\t\treturn `${column}[${lastKey}]`;\n\t\t},\n\t\tgetCellExpression(path: Array<string | number>, colIndex: number) {\n\t\t\tif (!this.node) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tconst column = this.tableData.columns[colIndex];\n\t\t\treturn getMappedExpression({\n\t\t\t\tnodeName: this.node.name,\n\t\t\t\tdistanceFromActive: this.distanceFromActive,\n\t\t\t\tpath: [column, ...path],\n\t\t\t});\n\t\t},\n\t\tisEmpty(value: unknown): boolean {\n\t\t\treturn (\n\t\t\t\tvalue === '' ||\n\t\t\t\t(Array.isArray(value) && value.length === 0) ||\n\t\t\t\t(typeof value === 'object' && value !== null && Object.keys(value).length === 0) ||\n\t\t\t\tvalue === null ||\n\t\t\t\tvalue === undefined\n\t\t\t);\n\t\t},\n\t\tgetValueToRender(value: unknown) {\n\t\t\tif (value === '') {\n\t\t\t\treturn this.$locale.baseText('runData.emptyString');\n\t\t\t}\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn value.replaceAll('\\n', '\\\\n');\n\t\t\t}\n\t\t\tif (Array.isArray(value) && value.length === 0) {\n\t\t\t\treturn this.$locale.baseText('runData.emptyArray');\n\t\t\t}\n\t\t\tif (typeof value === 'object' && value !== null && Object.keys(value).length === 0) {\n\t\t\t\treturn this.$locale.baseText('runData.emptyObject');\n\t\t\t}\n\t\t\tif (value === null || value === undefined) {\n\t\t\t\treturn `[${value}]`;\n\t\t\t}\n\t\t\treturn value;\n\t\t},\n\t\tonDragStart() {\n\t\t\tthis.draggedColumn = true;\n\t\t\tthis.ndvStore.resetMappingTelemetry();\n\t\t},\n\t\tonCellDragStart(el: HTMLElement) {\n\t\t\tif (el && el.dataset.value) {\n\t\t\t\tthis.draggingPath = el.dataset.value;\n\t\t\t}\n\n\t\t\tthis.onDragStart();\n\t\t},\n\t\tonCellDragEnd(el: HTMLElement) {\n\t\t\tthis.draggingPath = null;\n\n\t\t\tthis.onDragEnd(el.dataset.name || '', 'tree', el.dataset.depth || '0');\n\t\t},\n\t\tisDraggingKey(path: Array<string | number>, colIndex: number) {\n\t\t\tif (!this.draggingPath) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn this.draggingPath === this.getCellExpression(path, colIndex);\n\t\t},\n\t\tonDragEnd(column: string, src: string, depth = '0') {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst mappingTelemetry = this.ndvStore.mappingTelemetry;\n\t\t\t\tconst telemetryPayload = {\n\t\t\t\t\tsrc_node_type: this.node.type,\n\t\t\t\t\tsrc_field_name: column,\n\t\t\t\t\tsrc_nodes_back: this.distanceFromActive,\n\t\t\t\t\tsrc_run_index: this.runIndex,\n\t\t\t\t\tsrc_runs_total: this.totalRuns,\n\t\t\t\t\tsrc_field_nest_level: parseInt(depth, 10),\n\t\t\t\t\tsrc_view: 'table',\n\t\t\t\t\tsrc_element: src,\n\t\t\t\t\tsuccess: false,\n\t\t\t\t\t...mappingTelemetry,\n\t\t\t\t};\n\n\t\t\t\tvoid this.$externalHooks().run('runDataTable.onDragEnd', telemetryPayload);\n\n\t\t\t\tthis.$telemetry.track('User dragged data for mapping', telemetryPayload);\n\t\t\t}, 1000); // ensure dest data gets set if drop\n\t\t},\n\t\tisSimple(data: unknown): boolean {\n\t\t\treturn (\n\t\t\t\ttypeof data !== 'object' ||\n\t\t\t\tdata === null ||\n\t\t\t\t(Array.isArray(data) && data.length === 0) ||\n\t\t\t\t(typeof data === 'object' && Object.keys(data).length === 0)\n\t\t\t);\n\t\t},\n\t\thasJsonInColumn(colIndex: number): boolean {\n\t\t\treturn this.tableData.hasJson[this.tableData.columns[colIndex]];\n\t\t},\n\t\tconvertToTable(inputData: INodeExecutionData[]): ITableData {\n\t\t\tconst tableData: GenericValue[][] = [];\n\t\t\tconst tableColumns: string[] = [];\n\t\t\tlet leftEntryColumns: string[], entryRows: GenericValue[];\n\t\t\t// Go over all entries\n\t\t\tlet entry: IDataObject;\n\t\t\tconst hasJson: { [key: string]: boolean } = {};\n\t\t\tinputData.forEach((data) => {\n\t\t\t\tif (!data.hasOwnProperty('json')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tentry = data.json;\n\n\t\t\t\t// Go over all keys of entry\n\t\t\t\tentryRows = [];\n\t\t\t\tconst entryColumns = Object.keys(entry || {});\n\n\t\t\t\tif (entryColumns.length > MAX_COLUMNS_LIMIT) {\n\t\t\t\t\tthis.columnLimitExceeded = true;\n\t\t\t\t\tleftEntryColumns = entryColumns.slice(0, MAX_COLUMNS_LIMIT);\n\t\t\t\t} else {\n\t\t\t\t\tleftEntryColumns = entryColumns;\n\t\t\t\t}\n\n\t\t\t\t// Go over all the already existing column-keys\n\t\t\t\ttableColumns.forEach((key) => {\n\t\t\t\t\tif (entry.hasOwnProperty(key)) {\n\t\t\t\t\t\t// Entry does have key so add its value\n\t\t\t\t\t\tentryRows.push(entry[key]);\n\t\t\t\t\t\t// Remove key so that we know that it got added\n\t\t\t\t\t\tleftEntryColumns.splice(leftEntryColumns.indexOf(key), 1);\n\n\t\t\t\t\t\thasJson[key] =\n\t\t\t\t\t\t\thasJson[key] ||\n\t\t\t\t\t\t\t(typeof entry[key] === 'object' && Object.keys(entry[key] || {}).length > 0) ||\n\t\t\t\t\t\t\tfalse;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Entry does not have key so add undefined\n\t\t\t\t\t\tentryRows.push(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Go over all the columns the entry has but did not exist yet\n\t\t\t\tleftEntryColumns.forEach((key) => {\n\t\t\t\t\t// Add the key for all runs in the future\n\t\t\t\t\ttableColumns.push(key);\n\t\t\t\t\t// Add the value\n\t\t\t\t\tentryRows.push(entry[key]);\n\t\t\t\t\thasJson[key] =\n\t\t\t\t\t\thasJson[key] ||\n\t\t\t\t\t\t(typeof entry[key] === 'object' && Object.keys(entry[key] || {}).length > 0) ||\n\t\t\t\t\t\tfalse;\n\t\t\t\t});\n\n\t\t\t\t// Add the data of the entry\n\t\t\t\ttableData.push(entryRows);\n\t\t\t});\n\n\t\t\t// Make sure that all entry-rows have the same length\n\t\t\ttableData.forEach((entryRows) => {\n\t\t\t\tif (tableColumns.length > entryRows.length) {\n\t\t\t\t\t// Has fewer entries so add the missing ones\n\t\t\t\t\tentryRows.push(...new Array(tableColumns.length - entryRows.length));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\thasJson,\n\t\t\t\tcolumns: tableColumns,\n\t\t\t\tdata: tableData,\n\t\t\t};\n\t\t},\n\t\tswitchToJsonView() {\n\t\t\tthis.$emit('displayModeChange', 'json');\n\t\t},\n\t},\n\twatch: {\n\t\tfocusedMappableInput(curr: boolean) {\n\t\t\tsetTimeout(\n\t\t\t\t() => {\n\t\t\t\t\tthis.forceShowGrip = !!this.focusedMappableInput;\n\t\t\t\t},\n\t\t\t\tcurr ? 300 : 150,\n\t\t\t);\n\t\t},\n\t},\n});\n</script>\n\n<style lang=\"scss\" module>\n.dataDisplay {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tpadding-left: var(--spacing-s);\n\tright: 0;\n\toverflow-y: auto;\n\tline-height: 1.5;\n\tword-break: normal;\n\theight: 100%;\n\tpadding-bottom: var(--spacing-3xl);\n}\n\n.table {\n\tborder-collapse: separate;\n\ttext-align: left;\n\twidth: calc(100%);\n\tfont-size: var(--font-size-s);\n\n\tth {\n\t\tbackground-color: var(--color-background-base);\n\t\tborder-top: var(--border-base);\n\t\tborder-bottom: var(--border-base);\n\t\tborder-left: var(--border-base);\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tcolor: var(--color-text-dark);\n\t\tz-index: 1;\n\t}\n\n\ttd {\n\t\tvertical-align: top;\n\t\tpadding: var(--spacing-2xs) var(--spacing-2xs) var(--spacing-2xs) var(--spacing-3xs);\n\t\tborder-bottom: var(--border-base);\n\t\tborder-left: var(--border-base);\n\t\toverflow-wrap: break-word;\n\t\twhite-space: pre-wrap;\n\t}\n\n\ttd:first-child,\n\ttd:nth-last-child(2) {\n\t\tposition: relative;\n\t\tz-index: 0;\n\n\t\t&:after {\n\t\t\t// add border without shifting content\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\theight: 100%;\n\t\t\twidth: 2px;\n\t\t\ttop: 0;\n\t\t}\n\t}\n\n\ttd:nth-last-child(2):after {\n\t\tright: -1px;\n\t}\n\n\ttd:first-child:after {\n\t\tleft: -1px;\n\t}\n\n\tth:last-child,\n\ttd:last-child {\n\t\tborder-right: var(--border-base);\n\t}\n}\n\n.nodeClass {\n\tmargin-bottom: var(--spacing-5xs);\n}\n\n.emptyCell {\n\theight: 32px;\n}\n\n.header {\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: var(--spacing-2xs);\n\n\tspan {\n\t\twhite-space: nowrap;\n\t\ttext-overflow: ellipsis;\n\t\toverflow: hidden;\n\t\tflex-grow: 1;\n\t}\n}\n\n.draggableHeader {\n\t&:hover {\n\t\tcursor: grab;\n\t\tbackground-color: var(--color-foreground-base);\n\n\t\t.dragButton {\n\t\t\topacity: 1;\n\t\t}\n\t}\n}\n\n.draggingHeader {\n\tbackground-color: var(--color-primary-tint-2);\n}\n\n.activeHeader {\n\t.dragButton {\n\t\topacity: 1;\n\t}\n}\n\n.dragButton {\n\topacity: 0;\n\tmargin-left: var(--spacing-2xs);\n}\n\n.dataKey {\n\tcolor: var(--color-text-dark);\n\tline-height: 1.7;\n\tfont-weight: var(--font-weight-bold);\n\tborder-radius: var(--border-radius-base);\n\tpadding: 0 var(--spacing-5xs) 0 var(--spacing-5xs);\n\tmargin-right: var(--spacing-5xs);\n}\n\n.value {\n\tline-height: var(--font-line-height-regular);\n}\n\n.nestedValue {\n\tcomposes: value;\n\tmargin-left: var(--spacing-4xs);\n}\n\n.mappable {\n\tcursor: grab;\n}\n\n.empty {\n\tcolor: var(--color-danger);\n}\n\n.limitColWidth {\n\tmax-width: 300px;\n}\n\n.minColWidth {\n\tmin-width: 240px;\n}\n\n.hoveringKey {\n\tbackground-color: var(--color-foreground-base);\n}\n\n.draggingKey {\n\tbackground-color: var(--color-primary-tint-2);\n}\n\n.tableRightMargin {\n\t// becomes necessary with large tables\n\tbackground-color: var(--color-background-base) !important;\n\twidth: var(--spacing-s);\n\tborder-right: none !important;\n\tborder-top: none !important;\n\tborder-bottom: none !important;\n}\n\n.hoveringRow {\n\ttd:first-child:after,\n\ttd:nth-last-child(2):after {\n\t\tbackground-color: var(--color-secondary);\n\t}\n}\n\n.warningTooltip {\n\tcolor: var(--color-warning);\n}\n</style>\n","export default \"__VITE_PUBLIC_ASSET__2cfdf016__\""],"names":["MAX_COLUMNS_LIMIT","_sfc_main","mixins","externalHooks","Draggable","MappingPill","tbody","mapStores","useNDVStore","useWorkflowsStore","shorten","row","itemIndex","itemNodeId","getPairedItemId","hoveringItemId","target","col","path","colIndex","expr","column","getMappedExpression","el","lastKey","value","src","depth","mappingTelemetry","telemetryPayload","data","inputData","tableData","tableColumns","leftEntryColumns","entryRows","entry","hasJson","entryColumns","key","curr","__$_require_74eec20c__"],"mappings":"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"}