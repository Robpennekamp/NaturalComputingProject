import type express from 'express';
import type { IExecuteResponsePromiseData, INode, IRunExecutionData, IWebhookData, IWorkflowExecuteAdditionalData, Workflow, WorkflowExecuteMode } from 'n8n-workflow';
import type { IResponseCallbackData, IWorkflowDb } from './Interfaces';
export declare const WEBHOOK_METHODS: string[];
export declare function getWorkflowWebhooks(workflow: Workflow, additionalData: IWorkflowExecuteAdditionalData, destinationNode?: string, ignoreRestartWebhooks?: boolean): IWebhookData[];
export declare function decodeWebhookResponse(response: IExecuteResponsePromiseData): IExecuteResponsePromiseData;
export declare function encodeWebhookResponse(response: IExecuteResponsePromiseData): IExecuteResponsePromiseData;
export declare function executeWebhook(workflow: Workflow, webhookData: IWebhookData, workflowData: IWorkflowDb, workflowStartNode: INode, executionMode: WorkflowExecuteMode, sessionId: string | undefined, runExecutionData: IRunExecutionData | undefined, executionId: string | undefined, req: express.Request, res: express.Response, responseCallback: (error: Error | null, data: IResponseCallbackData) => void, destinationNode?: string): Promise<string | undefined>;
export declare function getWebhookBaseUrl(): string;
