import type { UserManagementMailer } from '../UserManagement/email';
import { Response } from 'express';
import type { ILogger } from 'n8n-workflow';
import type { Config } from '../config';
import { PasswordResetRequest } from '../requests';
import type { IDatabaseCollections, IExternalHooksClass, IInternalHooksClass } from '../Interfaces';
export declare class PasswordResetController {
    private readonly config;
    private readonly logger;
    private readonly externalHooks;
    private readonly internalHooks;
    private readonly mailer;
    private readonly userRepository;
    constructor({ config, logger, externalHooks, internalHooks, mailer, repositories, }: {
        config: Config;
        logger: ILogger;
        externalHooks: IExternalHooksClass;
        internalHooks: IInternalHooksClass;
        mailer: UserManagementMailer;
        repositories: Pick<IDatabaseCollections, 'User'>;
    });
    forgotPassword(req: PasswordResetRequest.Email): Promise<void>;
    resolvePasswordToken(req: PasswordResetRequest.Credentials): Promise<void>;
    changePassword(req: PasswordResetRequest.NewPassword, res: Response): Promise<void>;
}
