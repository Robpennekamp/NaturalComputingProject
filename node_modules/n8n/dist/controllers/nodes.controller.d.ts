import { Request, Response, NextFunction } from 'express';
import { NodeRequest } from '../requests';
import type { InstalledPackages } from '../databases/entities/InstalledPackages';
import { LoadNodesAndCredentials } from '../LoadNodesAndCredentials';
import { InternalHooks } from '../InternalHooks';
import { Push } from '../push';
import { Config } from '../config';
export declare class NodesController {
    private config;
    private loadNodesAndCredentials;
    private push;
    private internalHooks;
    constructor(config: Config, loadNodesAndCredentials: LoadNodesAndCredentials, push: Push, internalHooks: InternalHooks);
    checkIfCommunityNodesEnabled(req: Request, res: Response, next: NextFunction): void;
    installPackage(req: NodeRequest.Post): Promise<InstalledPackages>;
    getInstalledPackages(): Promise<import("n8n-workflow").PublicInstalledPackage[]>;
    uninstallPackage(req: NodeRequest.Delete): Promise<void>;
    updatePackage(req: NodeRequest.Update): Promise<InstalledPackages>;
}
