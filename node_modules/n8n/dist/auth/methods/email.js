"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleEmailLogin = void 0;
const Db = __importStar(require("../../Db"));
const UserManagementHelper_1 = require("../../UserManagement/UserManagementHelper");
const ResponseHelper = __importStar(require("../../ResponseHelper"));
const typedi_1 = require("typedi");
const InternalHooks_1 = require("../../InternalHooks");
const handleEmailLogin = async (email, password) => {
    var _a;
    const user = await Db.collections.User.findOne({
        where: { email },
        relations: ['globalRole', 'authIdentities'],
    });
    if ((user === null || user === void 0 ? void 0 : user.password) && (await (0, UserManagementHelper_1.compareHash)(password, user.password))) {
        return user;
    }
    const ldapIdentity = (_a = user === null || user === void 0 ? void 0 : user.authIdentities) === null || _a === void 0 ? void 0 : _a.find((i) => i.providerType === 'ldap');
    if (user && ldapIdentity) {
        void typedi_1.Container.get(InternalHooks_1.InternalHooks).userLoginFailedDueToLdapDisabled({
            user_id: user.id,
        });
        throw new ResponseHelper.AuthError('Reset your password to gain access to the instance.');
    }
    return undefined;
};
exports.handleEmailLogin = handleEmailLogin;
//# sourceMappingURL=email.js.map