import type PCancelable from 'p-cancelable';
import type { INodeTypes, IRun } from 'n8n-workflow';
import type { Job, JobQueue, JobResponse } from '../Queue';
import { BaseCommand } from './BaseCommand';
export declare class Worker extends BaseCommand {
    static description: string;
    static examples: string[];
    static flags: {
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        concurrency: import("@oclif/parser/lib/flags").IOptionFlag<number>;
    };
    static runningJobs: {
        [key: string]: PCancelable<IRun>;
    };
    static jobQueue: JobQueue;
    stopProcess(): Promise<void>;
    runJob(job: Job, nodeTypes: INodeTypes): Promise<JobResponse>;
    init(): Promise<void>;
    run(): Promise<void>;
    catch(error: Error): Promise<void>;
}
