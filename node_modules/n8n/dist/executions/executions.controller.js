"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.executionsController = void 0;
const express_1 = __importDefault(require("express"));
const n8n_workflow_1 = require("n8n-workflow");
const ResponseHelper = __importStar(require("../ResponseHelper"));
const Logger_1 = require("../Logger");
const executions_controller_ee_1 = require("./executions.controller.ee");
const executions_service_1 = require("./executions.service");
exports.executionsController = express_1.default.Router();
exports.executionsController.use((req, res, next) => {
    try {
        n8n_workflow_1.LoggerProxy.getInstance();
    }
    catch (error) {
        n8n_workflow_1.LoggerProxy.init((0, Logger_1.getLogger)());
    }
    next();
});
exports.executionsController.use('/', executions_controller_ee_1.EEExecutionsController);
exports.executionsController.get('/', ResponseHelper.send(async (req) => {
    return executions_service_1.ExecutionsService.getExecutionsList(req);
}));
exports.executionsController.get('/:id(\\d+)', ResponseHelper.send(async (req) => {
    return executions_service_1.ExecutionsService.getExecution(req);
}));
exports.executionsController.post('/:id/retry', ResponseHelper.send(async (req) => {
    return executions_service_1.ExecutionsService.retryExecution(req);
}));
exports.executionsController.post('/delete', ResponseHelper.send(async (req) => {
    await executions_service_1.ExecutionsService.deleteExecutions(req);
}));
//# sourceMappingURL=executions.controller.js.map