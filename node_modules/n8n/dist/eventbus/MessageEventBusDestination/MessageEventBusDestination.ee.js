"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageEventBusDestination = void 0;
const uuid_1 = require("uuid");
const n8n_workflow_1 = require("n8n-workflow");
const Db = __importStar(require("../../Db"));
class MessageEventBusDestination {
    constructor(eventBusInstance, options) {
        var _a, _b, _c, _d, _e;
        this.credentials = {};
        this.eventBusInstance = eventBusInstance;
        this.id = !options.id || options.id.length !== 36 ? (0, uuid_1.v4)() : options.id;
        this.__type = (_a = options.__type) !== null && _a !== void 0 ? _a : "$$AbstractMessageEventBusDestination";
        this.label = (_b = options.label) !== null && _b !== void 0 ? _b : 'Log Destination';
        this.enabled = (_c = options.enabled) !== null && _c !== void 0 ? _c : false;
        this.subscribedEvents = (_d = options.subscribedEvents) !== null && _d !== void 0 ? _d : [];
        this.anonymizeAuditMessages = (_e = options.anonymizeAuditMessages) !== null && _e !== void 0 ? _e : false;
        if (options.credentials)
            this.credentials = options.credentials;
        n8n_workflow_1.LoggerProxy.debug(`${this.__type}(${this.id}) event destination constructed`);
    }
    startListening() {
        if (this.enabled) {
            this.eventBusInstance.on(this.getId(), async (msg, confirmCallback) => {
                await this.receiveFromEventBus({ msg, confirmCallback });
            });
            n8n_workflow_1.LoggerProxy.debug(`${this.id} listener started`);
        }
    }
    stopListening() {
        this.eventBusInstance.removeAllListeners(this.getId());
    }
    enable() {
        this.enabled = true;
        this.startListening();
    }
    disable() {
        this.enabled = false;
        this.stopListening();
    }
    getId() {
        return this.id;
    }
    hasSubscribedToEvent(msg) {
        if (!this.enabled)
            return false;
        for (const eventName of this.subscribedEvents) {
            if (eventName === '*' || msg.eventName.startsWith(eventName)) {
                return true;
            }
        }
        return false;
    }
    async saveToDb() {
        const data = {
            id: this.getId(),
            destination: this.serialize(),
        };
        const dbResult = await Db.collections.EventDestinations.upsert(data, {
            skipUpdateIfNoValuesChanged: true,
            conflictPaths: ['id'],
        });
        return dbResult;
    }
    async deleteFromDb() {
        return MessageEventBusDestination.deleteFromDb(this.getId());
    }
    static async deleteFromDb(id) {
        const dbResult = await Db.collections.EventDestinations.delete({ id });
        return dbResult;
    }
    serialize() {
        return {
            __type: this.__type,
            id: this.getId(),
            label: this.label,
            enabled: this.enabled,
            subscribedEvents: this.subscribedEvents,
            anonymizeAuditMessages: this.anonymizeAuditMessages,
        };
    }
    toString() {
        return JSON.stringify(this.serialize());
    }
    close() {
        this.stopListening();
    }
}
exports.MessageEventBusDestination = MessageEventBusDestination;
//# sourceMappingURL=MessageEventBusDestination.ee.js.map