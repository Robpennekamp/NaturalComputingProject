import type express from 'express';
import type { WorkflowRequest } from '../../../types';
declare const _default: {
    createWorkflow: (((req: import("../../../types").AuthenticatedRequest, res: express.Response<any, Record<string, any>>, next: express.NextFunction) => void | express.Response<any, Record<string, any>>) | ((req: WorkflowRequest.Create, res: express.Response) => Promise<express.Response>))[];
    deleteWorkflow: (((req: import("../../../types").AuthenticatedRequest, res: express.Response<any, Record<string, any>>, next: express.NextFunction) => void | express.Response<any, Record<string, any>>) | ((req: WorkflowRequest.Get, res: express.Response) => Promise<express.Response>))[];
    getWorkflow: (((req: import("../../../types").AuthenticatedRequest, res: express.Response<any, Record<string, any>>, next: express.NextFunction) => void | express.Response<any, Record<string, any>>) | ((req: WorkflowRequest.Get, res: express.Response) => Promise<express.Response>))[];
    getWorkflows: (((req: import("../../../types").PaginatedRequest, res: express.Response<any, Record<string, any>>, next: express.NextFunction) => void | express.Response<any, Record<string, any>>) | ((req: WorkflowRequest.GetAll, res: express.Response) => Promise<express.Response>))[];
    updateWorkflow: (((req: import("../../../types").AuthenticatedRequest, res: express.Response<any, Record<string, any>>, next: express.NextFunction) => void | express.Response<any, Record<string, any>>) | ((req: WorkflowRequest.Update, res: express.Response) => Promise<express.Response>))[];
    activateWorkflow: (((req: import("../../../types").AuthenticatedRequest, res: express.Response<any, Record<string, any>>, next: express.NextFunction) => void | express.Response<any, Record<string, any>>) | ((req: WorkflowRequest.Activate, res: express.Response) => Promise<express.Response>))[];
    deactivateWorkflow: (((req: import("../../../types").AuthenticatedRequest, res: express.Response<any, Record<string, any>>, next: express.NextFunction) => void | express.Response<any, Record<string, any>>) | ((req: WorkflowRequest.Activate, res: express.Response) => Promise<express.Response>))[];
};
export = _default;
