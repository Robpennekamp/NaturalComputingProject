"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Role = void 0;
const typeorm_1 = require("typeorm");
const class_validator_1 = require("class-validator");
const AbstractEntity_1 = require("./AbstractEntity");
const transformers_1 = require("../utils/transformers");
let Role = class Role extends AbstractEntity_1.AbstractEntity {
};
__decorate([
    (0, typeorm_1.PrimaryColumn)({ transformer: transformers_1.idStringifier }),
    __metadata("design:type", String)
], Role.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)({ length: 32 }),
    (0, class_validator_1.IsString)({ message: 'Role name must be of type string.' }),
    (0, class_validator_1.Length)(1, 32, { message: 'Role name must be 1 to 32 characters long.' }),
    __metadata("design:type", String)
], Role.prototype, "name", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    __metadata("design:type", String)
], Role.prototype, "scope", void 0);
__decorate([
    (0, typeorm_1.OneToMany)('User', 'globalRole'),
    __metadata("design:type", Array)
], Role.prototype, "globalForUsers", void 0);
__decorate([
    (0, typeorm_1.OneToMany)('SharedWorkflow', 'role'),
    __metadata("design:type", Array)
], Role.prototype, "sharedWorkflows", void 0);
__decorate([
    (0, typeorm_1.OneToMany)('SharedCredentials', 'role'),
    __metadata("design:type", Array)
], Role.prototype, "sharedCredentials", void 0);
Role = __decorate([
    (0, typeorm_1.Entity)(),
    (0, typeorm_1.Unique)(['scope', 'name'])
], Role);
exports.Role = Role;
//# sourceMappingURL=Role.js.map