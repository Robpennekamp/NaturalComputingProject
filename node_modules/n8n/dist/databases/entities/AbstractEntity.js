"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbstractEntity = exports.datetimeColumnType = exports.jsonColumnType = void 0;
const typeorm_1 = require("typeorm");
const class_validator_1 = require("class-validator");
const config_1 = __importDefault(require("../../config"));
const dbType = config_1.default.getEnv('database.type');
const timestampSyntax = {
    sqlite: "STRFTIME('%Y-%m-%d %H:%M:%f', 'NOW')",
    postgresdb: 'CURRENT_TIMESTAMP(3)',
    mysqldb: 'CURRENT_TIMESTAMP(3)',
    mariadb: 'CURRENT_TIMESTAMP(3)',
}[dbType];
exports.jsonColumnType = dbType === 'sqlite' ? 'simple-json' : 'json';
exports.datetimeColumnType = dbType === 'postgresdb' ? 'timestamptz' : 'datetime';
class AbstractEntity {
    setUpdateDate() {
        this.updatedAt = new Date();
    }
}
__decorate([
    (0, typeorm_1.CreateDateColumn)({
        precision: 3,
        default: () => timestampSyntax,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", Date)
], AbstractEntity.prototype, "createdAt", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)({
        precision: 3,
        default: () => timestampSyntax,
        onUpdate: timestampSyntax,
    }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsDate)(),
    __metadata("design:type", Date)
], AbstractEntity.prototype, "updatedAt", void 0);
__decorate([
    (0, typeorm_1.BeforeUpdate)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], AbstractEntity.prototype, "setUpdateDate", null);
exports.AbstractEntity = AbstractEntity;
//# sourceMappingURL=AbstractEntity.js.map