"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddNodeIds1658932090381 = void 0;
const uuid_1 = require("uuid");
const migrationHelpers_1 = require("../../utils/migrationHelpers");
class AddNodeIds1658932090381 {
    async up({ queryRunner, tablePrefix }) {
        const workflowsQuery = `
			SELECT id, nodes
			FROM ${tablePrefix}workflow_entity
		`;
        await (0, migrationHelpers_1.runInBatches)(queryRunner, workflowsQuery, (workflows) => {
            workflows.forEach(async (workflow) => {
                const nodes = workflow.nodes;
                nodes.forEach((node) => {
                    if (!node.id) {
                        node.id = (0, uuid_1.v4)();
                    }
                });
                const [updateQuery, updateParams] = queryRunner.connection.driver.escapeQueryWithParameters(`
							UPDATE ${tablePrefix}workflow_entity
							SET nodes = :nodes
							WHERE id = '${workflow.id}'
						`, { nodes: JSON.stringify(nodes) }, {});
                await queryRunner.query(updateQuery, updateParams);
            });
        });
    }
    async down({ queryRunner, tablePrefix }) {
        const workflowsQuery = `
			SELECT id, nodes
			FROM ${tablePrefix}workflow_entity
		`;
        await (0, migrationHelpers_1.runInBatches)(queryRunner, workflowsQuery, (workflows) => {
            workflows.forEach(async (workflow) => {
                const nodes = workflow.nodes;
                nodes.forEach((node) => delete node.id);
                const [updateQuery, updateParams] = queryRunner.connection.driver.escapeQueryWithParameters(`UPDATE ${tablePrefix}workflow_entity
						SET nodes = :nodes
						WHERE id = '${workflow.id}'`, { nodes: JSON.stringify(nodes) }, {});
                await queryRunner.query(updateQuery, updateParams);
            });
        });
    }
}
exports.AddNodeIds1658932090381 = AddNodeIds1658932090381;
//# sourceMappingURL=1658932090381-AddNodeIds.js.map