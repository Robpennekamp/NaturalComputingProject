import type { PublicInstalledPackage } from 'n8n-workflow';
import type { InstalledPackages } from '../databases/entities/InstalledPackages';
import type { CommunityPackages } from '../Interfaces';
export declare const parseNpmPackageName: (rawString?: string) => CommunityPackages.ParsedPackageName;
export declare const sanitizeNpmPackageName: (rawString?: string) => CommunityPackages.ParsedPackageName;
export declare const executeCommand: (command: string, options?: {
    doNotHandleError?: boolean;
}) => Promise<string>;
export declare function matchPackagesWithUpdates(packages: InstalledPackages[], updates?: CommunityPackages.AvailableUpdates): PublicInstalledPackage[];
export declare function matchMissingPackages(installedPackages: PublicInstalledPackage[], missingPackages: string): PublicInstalledPackage[];
export declare function checkNpmPackageStatus(packageName: string): Promise<CommunityPackages.PackageStatusCheck>;
export declare function hasPackageLoaded(packageName: string): boolean;
export declare function removePackageFromMissingList(packageName: string): void;
export declare const isClientError: (error: Error) => boolean;
export declare function isNpmError(error: unknown): error is {
    code: number;
    stdout: string;
};
