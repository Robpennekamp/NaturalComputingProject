"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostHogClient = void 0;
const typedi_1 = require("typedi");
const config_1 = __importDefault(require("../config"));
let PostHogClient = class PostHogClient {
    async init(instanceId) {
        this.instanceId = instanceId;
        const enabled = config_1.default.getEnv('diagnostics.enabled');
        if (!enabled) {
            return;
        }
        const { PostHog } = await Promise.resolve().then(() => __importStar(require('posthog-node')));
        this.postHog = new PostHog(config_1.default.getEnv('diagnostics.config.posthog.apiKey'), {
            host: config_1.default.getEnv('diagnostics.config.posthog.apiHost'),
        });
        const logLevel = config_1.default.getEnv('logs.level');
        if (logLevel === 'debug') {
            this.postHog.debug(true);
        }
    }
    async stop() {
        if (this.postHog) {
            return this.postHog.shutdown();
        }
    }
    track(payload) {
        var _a;
        (_a = this.postHog) === null || _a === void 0 ? void 0 : _a.capture({
            distinctId: payload.userId,
            sendFeatureFlags: true,
            ...payload,
        });
    }
    async getFeatureFlags(user) {
        if (!this.postHog)
            return {};
        const fullId = [this.instanceId, user.id].join('#');
        return this.postHog.getAllFlags(fullId, {
            personProperties: {
                created_at_timestamp: user.createdAt.getTime().toString(),
            },
        });
    }
};
PostHogClient = __decorate([
    (0, typedi_1.Service)()
], PostHogClient);
exports.PostHogClient = PostHogClient;
//# sourceMappingURL=index.js.map