import type { ICredentialTypes, IN8nUISettings } from 'n8n-workflow';
import { ActiveExecutions } from './ActiveExecutions';
import { LoadNodesAndCredentials } from './LoadNodesAndCredentials';
import { NodeTypes } from './NodeTypes';
import { WaitTracker } from './WaitTracker';
import { Push } from './push';
import { AbstractServer } from './AbstractServer';
import { PostHogClient } from './posthog';
export declare class Server extends AbstractServer {
    endpointPresetCredentials: string;
    waitTracker: WaitTracker;
    activeExecutionsInstance: ActiveExecutions;
    frontendSettings: IN8nUISettings;
    presetCredentialsLoaded: boolean;
    loadNodesAndCredentials: LoadNodesAndCredentials;
    nodeTypes: NodeTypes;
    credentialTypes: ICredentialTypes;
    postHog: PostHogClient;
    push: Push;
    constructor();
    start(): Promise<void>;
    getSettingsForFrontend(): IN8nUISettings;
    private registerControllers;
    configure(): Promise<void>;
    protected setupPushServer(): void;
}
