"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.reportFilesystemRisk = void 0;
const utils_1 = require("../../audit/utils");
const constants_1 = require("../../audit/constants");
function reportFilesystemRisk(workflows) {
    const fsInteractionNodeTypes = (0, utils_1.getNodeTypes)(workflows, (node) => constants_1.FILESYSTEM_INTERACTION_NODE_TYPES.has(node.type));
    if (fsInteractionNodeTypes.length === 0)
        return null;
    const report = {
        risk: constants_1.FILESYSTEM_REPORT.RISK,
        sections: [],
    };
    const sentenceStart = ({ length }) => length > 1 ? 'These nodes read from and write to' : 'This node reads from and writes to';
    if (fsInteractionNodeTypes.length > 0) {
        report.sections.push({
            title: constants_1.FILESYSTEM_REPORT.SECTIONS.FILESYSTEM_INTERACTION_NODES,
            description: [
                sentenceStart(fsInteractionNodeTypes),
                'any accessible file in the host filesystem. Sensitive file content may be manipulated through a node operation.',
            ].join(' '),
            recommendation: 'Consider protecting any sensitive files in the host filesystem, or refactoring the workflow so that it does not require host filesystem interaction.',
            location: fsInteractionNodeTypes,
        });
    }
    return report;
}
exports.reportFilesystemRisk = reportFilesystemRisk;
//# sourceMappingURL=filesystem.risk.js.map