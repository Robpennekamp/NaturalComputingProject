"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNodeTranslationPath = void 0;
const path_1 = require("path");
const promises_1 = require("fs/promises");
const ALLOWED_VERSIONED_DIRNAME_LENGTH = [2, 3];
function isVersionedDirname(dirent) {
    if (!dirent.isDirectory())
        return false;
    return (ALLOWED_VERSIONED_DIRNAME_LENGTH.includes(dirent.name.length) &&
        dirent.name.toLowerCase().startsWith('v'));
}
async function getMaxVersion(from) {
    const entries = await (0, promises_1.readdir)(from, { withFileTypes: true });
    const dirnames = entries.reduce((acc, cur) => {
        if (isVersionedDirname(cur))
            acc.push(cur.name);
        return acc;
    }, []);
    if (!dirnames.length)
        return null;
    return Math.max(...dirnames.map((d) => parseInt(d.charAt(1), 10)));
}
async function getNodeTranslationPath({ nodeSourcePath, longNodeType, locale, }) {
    const nodeDir = (0, path_1.dirname)(nodeSourcePath);
    const maxVersion = await getMaxVersion(nodeDir);
    const nodeType = longNodeType.replace('n8n-nodes-base.', '');
    return maxVersion
        ? (0, path_1.join)(nodeDir, `v${maxVersion}`, 'translations', locale, `${nodeType}.json`)
        : (0, path_1.join)(nodeDir, 'translations', locale, `${nodeType}.json`);
}
exports.getNodeTranslationPath = getNodeTranslationPath;
//# sourceMappingURL=TranslationHelpers.js.map