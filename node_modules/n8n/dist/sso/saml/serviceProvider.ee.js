"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getServiceProviderInstance = exports.getServiceProviderConfigTestReturnUrl = exports.getServiceProviderReturnUrl = exports.getServiceProviderEntityId = void 0;
const UserManagementHelper_1 = require("../../UserManagement/UserManagementHelper");
const samlify_1 = require("samlify");
const constants_1 = require("./constants");
let serviceProviderInstance;
function getServiceProviderEntityId() {
    return (0, UserManagementHelper_1.getInstanceBaseUrl)() + constants_1.SamlUrls.restMetadata;
}
exports.getServiceProviderEntityId = getServiceProviderEntityId;
function getServiceProviderReturnUrl() {
    return (0, UserManagementHelper_1.getInstanceBaseUrl)() + constants_1.SamlUrls.restAcs;
}
exports.getServiceProviderReturnUrl = getServiceProviderReturnUrl;
function getServiceProviderConfigTestReturnUrl() {
    return (0, UserManagementHelper_1.getInstanceBaseUrl)() + constants_1.SamlUrls.configTestReturn;
}
exports.getServiceProviderConfigTestReturnUrl = getServiceProviderConfigTestReturnUrl;
function getServiceProviderInstance(prefs) {
    if (serviceProviderInstance === undefined) {
        serviceProviderInstance = (0, samlify_1.ServiceProvider)({
            entityID: getServiceProviderEntityId(),
            authnRequestsSigned: prefs.authnRequestsSigned,
            wantAssertionsSigned: prefs.wantAssertionsSigned,
            wantMessageSigned: prefs.wantMessageSigned,
            signatureConfig: prefs.signatureConfig,
            relayState: prefs.relayState,
            nameIDFormat: ['urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress'],
            assertionConsumerService: [
                {
                    isDefault: prefs.acsBinding === 'post',
                    Binding: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST',
                    Location: getServiceProviderReturnUrl(),
                },
                {
                    isDefault: prefs.acsBinding === 'redirect',
                    Binding: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-REDIRECT',
                    Location: getServiceProviderReturnUrl(),
                },
            ],
        });
    }
    return serviceProviderInstance;
}
exports.getServiceProviderInstance = getServiceProviderInstance;
//# sourceMappingURL=serviceProvider.ee.js.map