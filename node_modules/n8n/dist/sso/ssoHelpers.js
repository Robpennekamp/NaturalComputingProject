"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.doRedirectUsersFromLoginToSsoFlow = exports.isSsoJustInTimeProvisioningEnabled = exports.isEmailCurrentAuthenticationMethod = exports.isLdapCurrentAuthenticationMethod = exports.isSamlCurrentAuthenticationMethod = exports.getCurrentAuthenticationMethod = exports.setCurrentAuthenticationMethod = void 0;
const config_1 = __importDefault(require("../config"));
const Db = __importStar(require("../Db"));
async function setCurrentAuthenticationMethod(authenticationMethod) {
    config_1.default.set('userManagement.authenticationMethod', authenticationMethod);
    await Db.collections.Settings.save({
        key: 'userManagement.authenticationMethod',
        value: authenticationMethod,
        loadOnStartup: true,
    });
}
exports.setCurrentAuthenticationMethod = setCurrentAuthenticationMethod;
function getCurrentAuthenticationMethod() {
    return config_1.default.getEnv('userManagement.authenticationMethod');
}
exports.getCurrentAuthenticationMethod = getCurrentAuthenticationMethod;
function isSamlCurrentAuthenticationMethod() {
    return getCurrentAuthenticationMethod() === 'saml';
}
exports.isSamlCurrentAuthenticationMethod = isSamlCurrentAuthenticationMethod;
function isLdapCurrentAuthenticationMethod() {
    return getCurrentAuthenticationMethod() === 'ldap';
}
exports.isLdapCurrentAuthenticationMethod = isLdapCurrentAuthenticationMethod;
function isEmailCurrentAuthenticationMethod() {
    return getCurrentAuthenticationMethod() === 'email';
}
exports.isEmailCurrentAuthenticationMethod = isEmailCurrentAuthenticationMethod;
function isSsoJustInTimeProvisioningEnabled() {
    return config_1.default.getEnv('sso.justInTimeProvisioning');
}
exports.isSsoJustInTimeProvisioningEnabled = isSsoJustInTimeProvisioningEnabled;
function doRedirectUsersFromLoginToSsoFlow() {
    return config_1.default.getEnv('sso.redirectLoginToSso');
}
exports.doRedirectUsersFromLoginToSsoFlow = doRedirectUsersFromLoginToSsoFlow;
//# sourceMappingURL=ssoHelpers.js.map