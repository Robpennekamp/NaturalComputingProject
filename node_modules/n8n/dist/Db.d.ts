import type { DataSourceOptions as ConnectionOptions, EntityManager } from 'typeorm';
import { DataSource as Connection } from 'typeorm';
import type { IDatabaseCollections } from './Interfaces';
import type { DatabaseType } from './databases/types';
export declare const collections: IDatabaseCollections;
export declare const getConnection: () => Connection;
type ConnectionState = {
    connected: boolean;
    migrated: boolean;
};
export declare const connectionState: ConnectionState;
export declare function transaction<T>(fn: (entityManager: EntityManager) => Promise<T>): Promise<T>;
export declare function getConnectionOptions(dbType: DatabaseType): ConnectionOptions;
export declare function init(testConnectionOptions?: ConnectionOptions): Promise<void>;
export declare function migrate(): Promise<void>;
export declare const close: () => Promise<void>;
export {};
