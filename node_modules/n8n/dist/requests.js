"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserSettingsUpdatePayload = exports.UserUpdatePayload = void 0;
const class_validator_1 = require("class-validator");
const customValidators_1 = require("./databases/utils/customValidators");
class UserUpdatePayload {
}
__decorate([
    (0, class_validator_1.IsEmail)(),
    __metadata("design:type", String)
], UserUpdatePayload.prototype, "email", void 0);
__decorate([
    (0, customValidators_1.NoXss)(),
    (0, class_validator_1.IsString)({ message: 'First name must be of type string.' }),
    (0, class_validator_1.Length)(1, 32, { message: 'First name must be $constraint1 to $constraint2 characters long.' }),
    __metadata("design:type", String)
], UserUpdatePayload.prototype, "firstName", void 0);
__decorate([
    (0, customValidators_1.NoXss)(),
    (0, class_validator_1.IsString)({ message: 'Last name must be of type string.' }),
    (0, class_validator_1.Length)(1, 32, { message: 'Last name must be $constraint1 to $constraint2 characters long.' }),
    __metadata("design:type", String)
], UserUpdatePayload.prototype, "lastName", void 0);
exports.UserUpdatePayload = UserUpdatePayload;
class UserSettingsUpdatePayload {
}
__decorate([
    (0, class_validator_1.IsBoolean)({ message: 'showUserActivationSurvey should be a boolean' }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Boolean)
], UserSettingsUpdatePayload.prototype, "showUserActivationSurvey", void 0);
__decorate([
    (0, class_validator_1.IsBoolean)({ message: 'userActivated should be a boolean' }),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Boolean)
], UserSettingsUpdatePayload.prototype, "userActivated", void 0);
exports.UserSettingsUpdatePayload = UserSettingsUpdatePayload;
//# sourceMappingURL=requests.js.map