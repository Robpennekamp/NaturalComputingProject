"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.variablesController = void 0;
const express_1 = __importDefault(require("express"));
const n8n_workflow_1 = require("n8n-workflow");
const Logger_1 = require("../../Logger");
const ResponseHelper = __importStar(require("../../ResponseHelper"));
const variables_service_1 = require("./variables.service");
const variables_controller_ee_1 = require("./variables.controller.ee");
exports.variablesController = express_1.default.Router();
exports.variablesController.use('/', variables_controller_ee_1.EEVariablesController);
exports.variablesController.use((req, res, next) => {
    try {
        n8n_workflow_1.LoggerProxy.getInstance();
    }
    catch (error) {
        n8n_workflow_1.LoggerProxy.init((0, Logger_1.getLogger)());
    }
    next();
});
exports.variablesController.use(variables_controller_ee_1.EEVariablesController);
exports.variablesController.get('/', ResponseHelper.send(async () => {
    return variables_service_1.VariablesService.getAll();
}));
exports.variablesController.post('/', ResponseHelper.send(async () => {
    throw new ResponseHelper.BadRequestError('No variables license found');
}));
exports.variablesController.get('/:id(\\d+)', ResponseHelper.send(async (req) => {
    const id = parseInt(req.params.id);
    if (isNaN(id)) {
        throw new ResponseHelper.BadRequestError('Invalid variable id ' + req.params.id);
    }
    const variable = await variables_service_1.VariablesService.get(id);
    if (variable === null) {
        throw new ResponseHelper.NotFoundError(`Variable with id ${req.params.id} not found`);
    }
    return variable;
}));
exports.variablesController.patch('/:id(\\d+)', ResponseHelper.send(async () => {
    throw new ResponseHelper.BadRequestError('No variables license found');
}));
exports.variablesController.delete('/:id(\\d+)', ResponseHelper.send(async (req) => {
    const id = parseInt(req.params.id);
    if (isNaN(id)) {
        throw new ResponseHelper.BadRequestError('Invalid variable id ' + req.params.id);
    }
    if (req.user.globalRole.name !== 'owner') {
        n8n_workflow_1.LoggerProxy.info('Attempt to delete a variable blocked due to lack of permissions', {
            id,
            userId: req.user.id,
        });
        throw new ResponseHelper.AuthError('Unauthorized');
    }
    await variables_service_1.VariablesService.delete(id);
    return true;
}));
//# sourceMappingURL=variables.controller.js.map