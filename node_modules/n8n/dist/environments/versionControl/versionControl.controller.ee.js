"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VersionControlController = void 0;
const decorators_1 = require("../../decorators");
const versionControlEnabledMiddleware_1 = require("./middleware/versionControlEnabledMiddleware");
const versionControl_service_ee_1 = require("./versionControl.service.ee");
let VersionControlController = class VersionControlController {
    constructor(versionControlService) {
        this.versionControlService = versionControlService;
    }
    async getPreferences() {
        return this.versionControlService.versionControlPreferences;
    }
    async setPreferences(req) {
        const sanitizedPreferences = {
            ...req.body,
            privateKey: undefined,
            publicKey: undefined,
        };
        await this.versionControlService.validateVersionControlPreferences(sanitizedPreferences);
        return this.versionControlService.setPreferences(sanitizedPreferences);
    }
    async generateKeyPair() {
        return this.versionControlService.generateAndSaveKeyPair();
    }
};
__decorate([
    (0, decorators_1.Authorized)('any'),
    (0, decorators_1.Get)('/preferences', { middlewares: [versionControlEnabledMiddleware_1.versionControlLicensedMiddleware] }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], VersionControlController.prototype, "getPreferences", null);
__decorate([
    (0, decorators_1.Authorized)(['global', 'owner']),
    (0, decorators_1.Post)('/preferences', { middlewares: [versionControlEnabledMiddleware_1.versionControlLicensedMiddleware] }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], VersionControlController.prototype, "setPreferences", null);
__decorate([
    (0, decorators_1.Authorized)(['global', 'owner']),
    (0, decorators_1.Get)('/generateKeyPair', { middlewares: [versionControlEnabledMiddleware_1.versionControlLicensedMiddleware] }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], VersionControlController.prototype, "generateKeyPair", null);
VersionControlController = __decorate([
    (0, decorators_1.RestController)('/versionControl'),
    __metadata("design:paramtypes", [versionControl_service_ee_1.VersionControlService])
], VersionControlController);
exports.VersionControlController = VersionControlController;
//# sourceMappingURL=versionControl.controller.ee.js.map