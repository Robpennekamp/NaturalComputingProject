import type { n8n } from 'n8n-core';
export declare const inProduction: boolean;
export declare const inDevelopment: boolean;
export declare const inTest: boolean;
export declare const inE2ETests: boolean;
export declare const CUSTOM_API_CALL_NAME = "Custom API Call";
export declare const CUSTOM_API_CALL_KEY = "__CUSTOM_API_CALL__";
export declare const CLI_DIR: string;
export declare const TEMPLATES_DIR: string;
export declare const NODES_BASE_DIR: string;
export declare const GENERATED_STATIC_DIR: string;
export declare const EDITOR_UI_DIST_DIR: string;
export declare function getN8nPackageJson(): n8n.PackageJson;
export declare const START_NODES: string[];
export declare const N8N_VERSION: string;
export declare const IS_V1_RELEASE: boolean;
export declare const NODE_PACKAGE_PREFIX = "n8n-nodes-";
export declare const STARTER_TEMPLATE_NAME: string;
export declare const RESPONSE_ERROR_MESSAGES: {
    NO_CREDENTIAL: string;
    NO_NODE: string;
    NO_ENCRYPTION_KEY: string;
    PACKAGE_NAME_NOT_PROVIDED: string;
    PACKAGE_NAME_NOT_VALID: string;
    PACKAGE_NOT_INSTALLED: string;
    PACKAGE_FAILED_TO_INSTALL: string;
    PACKAGE_NOT_FOUND: string;
    PACKAGE_VERSION_NOT_FOUND: string;
    PACKAGE_DOES_NOT_CONTAIN_NODES: string;
    PACKAGE_LOADING_FAILED: string;
    DISK_IS_FULL: string;
};
export declare const AUTH_COOKIE_NAME = "n8n-auth";
export declare const NPM_COMMAND_TOKENS: {
    NPM_PACKAGE_NOT_FOUND_ERROR: string;
    NPM_PACKAGE_VERSION_NOT_FOUND_ERROR: string;
    NPM_NO_VERSION_AVAILABLE: string;
    NPM_DISK_NO_SPACE: string;
    NPM_DISK_INSUFFICIENT_SPACE: string;
};
export declare const NPM_PACKAGE_STATUS_GOOD = "OK";
export declare const UNKNOWN_FAILURE_REASON = "Unknown failure reason";
export declare const WORKFLOW_REACTIVATE_INITIAL_TIMEOUT = 1000;
export declare const WORKFLOW_REACTIVATE_MAX_TIMEOUT: number;
export declare const SETTINGS_LICENSE_CERT_KEY = "license.cert";
export declare const enum LICENSE_FEATURES {
    SHARING = "feat:sharing",
    LDAP = "feat:ldap",
    SAML = "feat:saml",
    LOG_STREAMING = "feat:logStreaming",
    ADVANCED_EXECUTION_FILTERS = "feat:advancedExecutionFilters",
    VARIABLES = "feat:variables",
    VERSION_CONTROL = "feat:versionControl"
}
export declare const enum LICENSE_QUOTAS {
    TRIGGER_LIMIT = "quota:activeWorkflows",
    VARIABLES_LIMIT = "quota:maxVariables"
}
export declare const CREDENTIAL_BLANKING_VALUE = "__n8n_BLANK_VALUE_e5362baf-c777-4d57-a609-6eaf1f9e87f6";
