"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.MethodDescriptor = void 0;
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
/**
 * @typedef MethodDescriptor
 * @param {MethodDescriptorParams} params
 *   @param {boolean} params.allowResourceHostOverride
 *   @param {Function} params.parameterEncoder
 *   @param {String} params.authAttr - auth attribute name. Default: 'auth'
 *   @param {boolean} params.binary
 *   @param {String} params.bodyAttr - body attribute name. Default: 'body'
 *   @param {Headers} params.headers
 *   @param {String} params.headersAttr - headers attribute name. Default: 'headers'
 *   @param {String} params.host
 *   @param {String} params.hostAttr - host attribute name. Default: 'host'
 *   @param {String} params.method
 *   @param {Middleware[]} params.middleware
 *   @param {Middleware[]} params.middlewares - alias for middleware
 *   @param {RequestParams} params.params
 *   @param {String|Function} params.path
 *   @param {String} params.pathAttr. Default: 'path'
 *   @param {Object} params.queryParamAlias
 *   @param {Number} params.timeoutAttr - timeout attribute name. Default: 'timeout'
 */
var MethodDescriptor = /*#__PURE__*/_createClass(function MethodDescriptor(params) {
  _classCallCheck(this, MethodDescriptor);
  _defineProperty(this, "allowResourceHostOverride", void 0);
  _defineProperty(this, "parameterEncoder", void 0);
  _defineProperty(this, "authAttr", void 0);
  _defineProperty(this, "binary", void 0);
  _defineProperty(this, "bodyAttr", void 0);
  _defineProperty(this, "headers", void 0);
  _defineProperty(this, "headersAttr", void 0);
  _defineProperty(this, "host", void 0);
  _defineProperty(this, "hostAttr", void 0);
  _defineProperty(this, "method", void 0);
  _defineProperty(this, "middleware", void 0);
  _defineProperty(this, "params", void 0);
  _defineProperty(this, "path", void 0);
  _defineProperty(this, "pathAttr", void 0);
  _defineProperty(this, "queryParamAlias", void 0);
  _defineProperty(this, "timeoutAttr", void 0);
  this.allowResourceHostOverride = params.allowResourceHostOverride || false;
  this.parameterEncoder = params.parameterEncoder || encodeURIComponent;
  this.binary = params.binary || false;
  this.headers = params.headers;
  this.host = params.host;
  this.method = params.method || 'get';
  this.params = params.params;
  this.path = params.path;
  this.queryParamAlias = params.queryParamAlias || {};
  this.authAttr = params.authAttr || 'auth';
  this.bodyAttr = params.bodyAttr || 'body';
  this.headersAttr = params.headersAttr || 'headers';
  this.hostAttr = params.hostAttr || 'host';
  this.pathAttr = params.pathAttr || 'path';
  this.timeoutAttr = params.timeoutAttr || 'timeout';
  var resourceMiddleware = params.middleware || params.middlewares || [];
  this.middleware = resourceMiddleware;
});
exports.MethodDescriptor = MethodDescriptor;
var _default = MethodDescriptor;
exports["default"] = _default;