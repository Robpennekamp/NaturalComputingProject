"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.requestFactory = void 0;
var _request = require("../request");
var _methodDescriptor = require("../method-descriptor");
var _excluded = ["method", "host", "path", "auth", "body", "headers", "params", "timeout", "context"];
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
/**
 * Create a request to use in tests
 * @returns Request
 */
var requestFactory = function requestFactory() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _ref$method = _ref.method,
    method = _ref$method === void 0 ? 'GET' : _ref$method,
    _ref$host = _ref.host,
    host = _ref$host === void 0 ? 'http://example.org' : _ref$host,
    _ref$path = _ref.path,
    path = _ref$path === void 0 ? '/path' : _ref$path,
    auth = _ref.auth,
    body = _ref.body,
    headers = _ref.headers,
    params = _ref.params,
    timeout = _ref.timeout,
    context = _ref.context,
    rest = _objectWithoutProperties(_ref, _excluded);
  var methodDescriptor = new _methodDescriptor.MethodDescriptor({
    method: method,
    host: host,
    path: path
  });
  return new _request.Request(methodDescriptor, _objectSpread({
    auth: auth,
    body: body,
    headers: headers,
    params: params,
    timeout: timeout
  }, rest), context);
};
exports.requestFactory = requestFactory;