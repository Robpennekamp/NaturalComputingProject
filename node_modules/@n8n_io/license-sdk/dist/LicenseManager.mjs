import m from"crypto-js";import{machineId as I}from"node-machine-id";import T from"node-rsa";import{X509Certificate as C}from"crypto";import{fetch as y}from"undici";async function u(g,t,e={}){let r=new AbortController,n=setTimeout(()=>{r.abort()},e.timeoutInMs??3e4);try{let i=await y(g,{method:"post",body:JSON.stringify(t),headers:{"Content-Type":"application/json"},signal:r.signal}),s=await i.json();return{status:i.status,data:s}}catch(i){throw i.message="Connection Error",i}finally{clearTimeout(n)}}var w=class{constructor(t){this.isInitializationCompleted=!1;this.config=t,this.config.logger?this.logger=this.config.logger:this.logger={error(){console.log("ERROR:",...arguments)},warn(){console.log("WARN:",...arguments)},info(){console.log("INFO:",...arguments)},debug(){console.log("DEBUG:",...arguments)}},this.x509IssuerCert=new C(`-----BEGIN CERTIFICATE-----
MIIFDDCCAvQCCQCWGBewlWbp0DANBgkqhkiG9w0BAQsFADBIMQswCQYDVQQGEwJE
RTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQHDAZCZXJsaW4xFzAVBgNVBAMMDmxp
Y2Vuc2UubjhuLmlvMB4XDTIyMDYyNDA0MDkzM1oXDTQ5MTEwOTA0MDkzM1owSDEL
MAkGA1UEBhMCREUxDzANBgNVBAgMBkJlcmxpbjEPMA0GA1UEBwwGQmVybGluMRcw
FQYDVQQDDA5saWNlbnNlLm44bi5pbzCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCC
AgoCggIBANK6Uj5CSyPaa2rf/bwH/AqzzINeWg4n94pECv4p8tsjy0+ZscodNn7Q
IvYW/6IUpax8fZvHCSqu0L7fsgLkw0+HDLlsln+ryI/3h1ElVZm67BfqOvhSfPj+
btxcP8EtS+6hbf74sqPEBFD0wikKhIPGdtBolp7rLXfTGs+5eMqSA5q4W1V+HUUU
zgaCdchzlHGTdIICNpbRozGeFTIIx1MPzMie+4zIs6i680efx2KJVZWsa2WuCSED
+b0gSRTgoKQ3B7JjxJKfzHdOdM6JxhkCjrJIkJCrZL7wFypn+wMHsVFrsw/80WkS
dwBj/RqCPzKcRwnxs0WNLhkyT/XCMS/1pNzPymdFADu2tEZjhFsa5ziIhdoQz8po
Efheyg3mOZDWyu6oyHCLH9lUlsNjV9zZ6RICgvHZvHPmPqOLPomy4Qymq2osuH+S
28rwEy0W3DCEfuS3dZHrSQfohGC9EAyyFAIPSGhTJSYJl0oNBZjpRM+jAm9ER7PM
K70/7g6z8uIgKa8/SD/Pezd/aWzxH/tOokAF5X5o5TzSOwVzqOJzY06EZC7CJnhs
sigAJTy1trZJBcZuWnKY5FqrK3QzjsQ9sWM0tRocfNOYmD21mubNo+RmMMo3kvYL
JoBfap/cuP6kx3OiRzBJ4luTEa6nRIYy+EjcPaN3+9L5iEZ9/NABAgMBAAEwDQYJ
KoZIhvcNAQELBQADggIBAIUpJ0Rh6C92cJqy6iehS8c77r1prj62gr6Acdy5QGh8
ax30ANDbPtkezVIIBk+0JjLkMxr3mwqCRsPgMshPcxhZwEafmZrWPPGRVsOfukB3
Gp10cIv1YmZ7AFY4i/izj5184+A+GjxrJBULQG1JfX4c7KW06Kaps85AaX/Tp0fl
/hZ6oUe48aSSTuAW38hWZ5jCpBqfFyQ15ablJZt0fB8NkXEdFUcUEt/OHJfqF5fP
Nt5PWC1AuBxzSbzjwabOy/M4r8m5CzCeXSIjqbcsAq52myMoxvNrjKRtucQ7CjqK
LR6WdhMf+NLvyTI+evXMoXpDzlevkCpz17uDiDt9XrmvLSf3Ff8mdTRwzVmOmHfc
Ruz5v7WBR4cpBR/sC+WxOw9heLMHgYhPyRUM4voo55EcJGusXr/iavblBAnI0GUw
uMNs3MjEmfbaBV1K0GKG5UToF9UmUxxVmTcRUZrAQX+yBkRezDTpOQuRnB58BDQP
A62lcgZlikzJw3lHue33qAudyUrUmjfHGll7GFQNeLO42jPMeM4NJiNIrBZ7j0uD
4slHdDi/44PHcKchvde/5k7ZJMi6OC1Vu+bOnKvzhnWQIOkHFQ55m13oslV2ozZT
/oqhn/8/LeV0ooZuYnBeRkRTveniUeho2OFe5xZvWSSfuBrbHt9+zBg+5MWPUTIJ
-----END CERTIFICATE-----`),this.config.autoRenewEnabled=this.config.autoRenewEnabled??!0,this.config.renewOnInit=this.config.renewOnInit??!1,this.config.autoRenewOffset=this.config.autoRenewOffset??60*60*72,this.config.server=this.config.server??"https://license.n8n.io/v1"}log(t,e){this.logger[e](`[license] ${t}`)}isInitialized(){return this.isInitializationCompleted}async initialize(){this.isInitialized()||(this.deviceFingerprint=await this.computeDeviceFingerprint(),this.log(`initializing for deviceFingerprint ${this.deviceFingerprint}`,"debug"),await this.initCert(),this.checkUpcomingEntitlementChangesCron=setInterval(()=>this.setTimerForNextEntitlementChange(),1e3*60*15),this.config.autoRenewEnabled&&(this.config.renewOnInit&&await this.renewalCron({force:!0}),this.renewalIntervalPointer=setInterval(()=>this.renewalCron({force:!1}),1e3*60*15)),this.isInitializationCompleted=!0)}reset(){this.config.autoRenewEnabled&&clearInterval(this.renewalIntervalPointer),this.checkUpcomingEntitlementChangesCron&&clearInterval(this.checkUpcomingEntitlementChangesCron),this.entitlementChangeTimeoutPointer&&clearTimeout(this.entitlementChangeTimeoutPointer),this.licenseCert=void 0,this.deviceFingerprint=void 0,this.isInitializationCompleted=!1}async computeDeviceFingerprint(){return this.config.deviceFingerprint&&typeof this.config.deviceFingerprint=="function"?await this.config.deviceFingerprint():await I()}async activate(t){if(!this.isInitialized())throw new Error("activation failed because SDK was not yet initialized");let e={reservationId:t,tenantId:this.config.tenantId,productIdentifier:this.config.productIdentifier,deviceFingerprint:this.deviceFingerprint};this.hasCert()&&(e.consumerId=this.licenseCert.consumerId,e.renewalToken=this.licenseCert.renewalToken);let r;try{r=await u(`${this.config.server}/activate`,e,{timeoutInMs:1e4})}catch(n){throw this.log("license activation failed: "+n.message,"warn"),new Error(n.message)}if(r.status==200){if(!r.data.hasOwnProperty("licenseKey")||!r.data.hasOwnProperty("x509"))throw this.log("unexpected server response","warn"),new Error("unexpected server response");let n=this.stringifyCertContainer({licenseKey:r.data.licenseKey,x509:r.data.x509});await this.config.saveCertStr(n),await this.initCert(),this.log("license successfully activated","info")}else{let n=`license activation failed: ${r.data.message??"unknown reason"}`,i=new Error(n);throw r.data.errorId&&(i.errorId=r.data.errorId),this.log(n,"warn"),i}}async renew(){if(!this.hasCert())throw new Error("renewal failed because current cert is not initialized");if(this.licenseCert.isEphemeral)return;if(this.isTerminated())throw new Error("renewal failed because current cert was terminated");let t;try{t=await u(`${this.config.server}/renew`,{consumerId:this.licenseCert.consumerId,tenantId:this.config.tenantId,deviceFingerprint:this.deviceFingerprint,renewalToken:this.licenseCert.renewalToken},{timeoutInMs:1e4})}catch(r){throw this.log("license renewal failed: "+r.message,"warn"),new Error(r.message)}let e=t.data;if(t.status==200){if(!e.hasOwnProperty("licenseKey")||!e.hasOwnProperty("x509"))throw this.log("license renewal failed: unexpected server response","warn"),new Error("unexpected server response");let r=this.stringifyCertContainer({licenseKey:e.licenseKey,x509:e.x509});await this.config.saveCertStr(r),this.log("license successfully renewed","debug"),await this.initCert()}else{let r=`license renewal failed: ${e.message??"unknown reason"}`,n=new Error(r);throw e.errorId&&(n.errorId=e.errorId),this.log(r,"warn"),n}}hasCert(){return!!this.licenseCert}isTerminated(){if(!this.hasCert())throw new Error("Cert is not initialized");let t=new Date;return this.licenseCert.terminatesAt<t}getExpiryDate(){if(!this.hasCert())throw new Error("Cert is not initialized");return this.licenseCert.expiresAt}getTerminationDate(){if(!this.hasCert())throw new Error("Cert is not initialized");return this.licenseCert.terminatesAt}isValid(t=!0){let e=i=>{t&&this.log(i,"debug")};if(!this.hasCert())return e("cert is invalid because it is undefined"),!1;let r=this.licenseCert,n=new Date;return r.expiresAt<n?(e("cert is invalid because it has expired"),!1):r.terminatesAt<n?(e("cert is invalid because it was terminated"),!1):r.createdAt.getTime()-3e5>n.getTime()?(e("cert is invalid because system clock is out of sync"),!1):r.deviceLock&&this.deviceFingerprint!==r.deviceFingerprint?(e("cert is invalid because device fingerprint does not match"),!1):this.config.tenantId!==r.tenantId?(e("cert is invalid because tenant ID does not match"),!1):!0}hasFeatureEnabled(t,e=!0){return!!this.getFeatureValue(t,e)}hasFeatureDefined(t,e=!0){return this.getFeatureValue(t,e)!==void 0}hasQuotaLeft(t,e){let r=this.getFeatureValue(t);if(r===void 0)return!1;if(typeof r!="number")throw new Error(`${t} cannot be used as quota as it is not numeric`);return r===-1?!0:Math.ceil(e)<Math.ceil(r)}getFeatureValue(t,e=!0){if(!this.hasCert()||e&&!this.isValid())return;let r=this.getFeatures();if(!!r.hasOwnProperty(t))return r[t]}updateCurrentFeatures(){if(!this.hasCert())return;let t=new Date;(this.licenseCert.expiresAt<t||this.licenseCert.terminatesAt<t)&&(this.currentFeatures={}),this.currentFeatures=this.licenseCert.entitlements.filter(e=>e.validFrom<=t&&e.validTo>t).sort((e,r)=>e.validFrom.getTime()-r.validFrom.getTime()).reduce((e,r)=>({...e,...r.features,...r.featureOverrides}),{})}getFeatures(){return this.hasCert()?this.currentFeatures??{}:{}}getCurrentEntitlements(){if(!this.hasCert())return[];let t=new Date;return this.licenseCert.entitlements.filter(e=>e.validFrom<=t&&e.validTo>t)}getManagementJwt(){return this.licenseCert?this.licenseCert.managementJwt:""}isRenewalDue(){if(!this.licenseCert||this.licenseCert.isEphemeral)return!1;let t=new Date().getTime(),e=1e3*60*15,r=1e3*60*20,n=this.licenseCert.expiresAt.getTime(),i=this.licenseCert.issuedAt.getTime(),s=this.licenseCert.terminatesAt.getTime(),a=t>n-this.config.autoRenewOffset*1e3&&t<s,o=this.getCurrentEntitlements().find(l=>t>=l.validTo.getTime()-e&&t<=l.validTo.getTime())!==void 0&&i<t-r;return a||o}toString(){var t,e,r,n,i,s,a,o,l,h,d,f,p;return`## CONSUMER CONFIG ##
tenantId: ${this.config.tenantId??"<n/a>"}
productIdentifier: ${this.config.productIdentifier??"<n/a>"}
deviceFingerprint: ${this.deviceFingerprint??"<n/a>"}
--
## LICENSE CERT ##
version: ${((t=this.licenseCert)==null?void 0:t.version)??"<n/a>"}
tenantId: ${((e=this.licenseCert)==null?void 0:e.tenantId)??"<n/a>"} ${((r=this.licenseCert)==null?void 0:r.tenantId)!==this.config.tenantId?"(!)":""}
consumerId: ${((n=this.licenseCert)==null?void 0:n.consumerId)??"<n/a>"}
deviceFingerprint: ${((i=this.licenseCert)==null?void 0:i.deviceFingerprint)??"<n/a>"} ${((s=this.licenseCert)==null?void 0:s.deviceFingerprint)!==this.deviceFingerprint?"(!)":""}
createdAt: ${((a=this.licenseCert)==null?void 0:a.createdAt)??"<n/a>"}
issuedAt: ${((o=this.licenseCert)==null?void 0:o.issuedAt)??"<n/a>"}
expiresAt: ${((l=this.licenseCert)==null?void 0:l.expiresAt)??"<n/a>"}
terminatesAt: ${((h=this.licenseCert)==null?void 0:h.terminatesAt)??"<n/a>"}
isEphemeral: ${((d=this.licenseCert)==null?void 0:d.isEphemeral)??"<n/a>"}
isValid: ${this.isValid(!1)}
isRenewalDue: ${this.isRenewalDue()}
entitlements: ${((f=this.licenseCert)==null?void 0:f.entitlements.length)??0}
`+((p=this.licenseCert)==null?void 0:p.entitlements.map((c,v)=>`--
## ENTITLEMENT ${v+1} ##
id: ${c.id}
productId: ${c.productId}
validFrom: ${c.validFrom}
validTo: ${c.validTo}
features: ${JSON.stringify(c.features)}
featureOverrides: ${JSON.stringify(c.featureOverrides)}
`).join(""))}triggerOnFeatureChangeCallback(){this.config.onFeatureChange&&this.config.onFeatureChange(this.currentFeatures??{})}setTimerForNextEntitlementChange(){if(!this.hasCert())return;let t=new Date().getTime(),e=new Set;e.add(this.licenseCert.expiresAt.getTime()-t),e.add(this.licenseCert.terminatesAt.getTime()-t);let r=[...this.licenseCert.entitlements.reduce((i,s)=>(i.add(s.validFrom.getTime()-t),i.add(s.validTo.getTime()-t),i),e)].filter(i=>i>=0&&i<=15*60*1e3).sort((i,s)=>i-s);if(r.length===0)return;let n=r[0];clearTimeout(this.entitlementChangeTimeoutPointer),this.entitlementChangeTimeoutPointer=setTimeout(()=>{this.updateCurrentFeatures(),this.triggerOnFeatureChangeCallback(),this.setTimerForNextEntitlementChange()},n+1e3)}async renewalCron({force:t}){if(t||this.isRenewalDue()){this.log("attempting license renewal","debug");try{await this.renew()}catch{}}}async initCert(){try{let t=await this.config.loadCertStr();if(!t)return;if(t.length<50)throw new Error("cert string is undefined or too short");let{x509:e,licenseKey:r}=this.parseLicenseCertContainerStr(t);if(this.x509Cert=new C(e),!this.x509Cert.checkIssued(this.getIssuerCert()))throw new Error("cert was not issued by an approved issuer");let i=this.x509Cert.publicKey.export({format:"pem",type:"pkcs1"});this.key=new T(i),this.licenseCert=this.parseLicenseKeyStr(r),this.updateCurrentFeatures(),this.triggerOnFeatureChangeCallback(),this.setTimerForNextEntitlementChange()}catch(t){this.log(`cert could not be initialized. ${t instanceof Error?t.message:""}`,"error")}}stringifyCertContainer(t){let e=JSON.stringify(t);return Buffer.from(e).toString("base64")}parseLicenseCertContainerStr(t){let e=Buffer.from(t,"base64").toString("ascii"),r=JSON.parse(e);if(!r.hasOwnProperty("licenseKey")||!r.hasOwnProperty("x509"))throw new Error("license cert container could not be parsed");return r}parseLicenseKeyStr(t){let e=this.validateLicenseKey(t),r={...e};return r.createdAt=new Date(e.createdAt),r.issuedAt=new Date(e.issuedAt),r.expiresAt=new Date(e.expiresAt),r.terminatesAt=new Date(e.terminatesAt),r.entitlements=r.entitlements.map(n=>(n.validFrom=new Date(n.validFrom),n.validTo=new Date(n.validTo),n)),r}validateLicenseKey(t){t=t.replace(/(\r\n|\n|\r)/gm,"");let e=t.match(/^-----BEGIN LICENSE KEY-----(?<encryptedSymmetricKey>.+\|\|)(?<encryptedData>.+)\|\|(?<signature>.+)-----END LICENSE KEY-----$/);if(!e)throw new Error("license key could not be parsed");let r=e.groups.encryptedSymmetricKey,n=e.groups.encryptedData,i=e.groups.signature,s,a;try{s=this.key.decryptPublic(r,"utf8")}catch{throw new Error("Invalid data: Could not extract symmetric key")}try{a=m.AES.decrypt(n,s).toString(m.enc.Utf8)}catch{throw new Error("Invalid Data: Could not decrypt data with key found")}if(this.key.verify(Buffer.from(a),i,"utf8","base64"))return JSON.parse(a);throw new Error("License Key signature invalid")}getIssuerCert(){return this.x509IssuerCert}};export{w as LicenseManager};
//# sourceMappingURL=LicenseManager.mjs.map